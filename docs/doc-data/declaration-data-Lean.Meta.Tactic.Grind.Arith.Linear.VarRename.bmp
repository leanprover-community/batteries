{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/VarRename.html#Lean.Grind.Linarith.Expr.collectVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Linarith</span>.<span class=\"name\">Expr</span>.<span class=\"name\">collectVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarCollector\">Meta.Grind.VarCollector</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/VarRename.html#Lean.Grind.Linarith.Expr.collectVars","kind":"def","line":33,"name":"Lean.Grind.Linarith.Expr.collectVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Linear/VarRename.lean#L33-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/VarRename.html#Lean.Grind.Linarith.Poly.collectVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Linarith</span>.<span class=\"name\">Poly</span>.<span class=\"name\">collectVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarCollector\">Meta.Grind.VarCollector</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/VarRename.html#Lean.Grind.Linarith.Poly.collectVars","kind":"def","line":28,"name":"Lean.Grind.Linarith.Poly.collectVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Linear/VarRename.lean#L28-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/VarRename.html#Lean.Grind.Linarith.Expr.renameVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Linarith</span>.<span class=\"name\">Expr</span>.<span class=\"name\">renameVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarRename\">Meta.Grind.VarRename</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/VarRename.html#Lean.Grind.Linarith.Expr.renameVars","kind":"def","line":18,"name":"Lean.Grind.Linarith.Expr.renameVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Linear/VarRename.lean#L18-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/VarRename.html#Lean.Grind.Linarith.Poly.renameVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Linarith</span>.<span class=\"name\">Poly</span>.<span class=\"name\">renameVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarRename\">Meta.Grind.VarRename</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/VarRename.html#Lean.Grind.Linarith.Poly.renameVars","kind":"def","line":13,"name":"Lean.Grind.Linarith.Poly.renameVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Linear/VarRename.lean#L13-L16"}}],"imports":["Init.Grind.Ordered.Linarith","Lean.Meta.Tactic.Grind.VarRename"],"instances":[],"name":"Lean.Meta.Tactic.Grind.Arith.Linear.VarRename"}