{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.pullInstances\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">pullInstances</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/PassManager.html#Lean.Compiler.LCNF.Pass\">Pass</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.pullInstances","kind":"def","line":124,"name":"Lean.Compiler.LCNF.pullInstances","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L124-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.Decl.pullInstances\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Decl</span>.<span class=\"name\">pullInstances</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.Decl.pullInstances","kind":"def","line":110,"name":"Lean.Compiler.LCNF.Decl.pullInstances","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L110-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.Decl.pullLetDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Decl</span>.<span class=\"name\">pullLetDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isCandidateFn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">LetDecl</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarIdSet\">FVarIdSet</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.Decl.pullLetDecls","kind":"def","line":103,"name":"Lean.Compiler.LCNF.Decl.pullLetDecls","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L103-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">PullM</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM\">PullM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isCandidateFn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">LetDecl</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarIdSet\">FVarIdSet</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM.run","kind":"def","line":96,"name":"Lean.Compiler.LCNF.PullLetDecls.PullM.run","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L96-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.pullDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">pullDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">code</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM\">PullM</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.pullDecls","kind":"opaque","line":71,"name":"Lean.Compiler.LCNF.PullLetDecls.pullDecls","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L71-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.pullAlt\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">pullAlt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">alt</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Alt</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM\">PullM</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Alt</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.pullAlt","kind":"opaque","line":66,"name":"Lean.Compiler.LCNF.PullLetDecls.pullAlt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L66-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.shouldPull\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">shouldPull</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">LetDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM\">PullM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.shouldPull","kind":"def","line":58,"name":"Lean.Compiler.LCNF.PullLetDecls.shouldPull","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L58-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.attachToPull\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">attachToPull</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM\">PullM</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.attachToPull","kind":"def","line":54,"name":"Lean.Compiler.LCNF.PullLetDecls.attachToPull","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L54-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.withCheckpoint\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">withCheckpoint</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM\">PullM</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM\">PullM</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.withCheckpoint","kind":"def","line":35,"name":"Lean.Compiler.LCNF.PullLetDecls.withCheckpoint","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L35-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.withNewScope\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">withNewScope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM\">PullM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM\">PullM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.withNewScope","kind":"def","line":32,"name":"Lean.Compiler.LCNF.PullLetDecls.withNewScope","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L32-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.withParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">withParams</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM\">PullM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM\">PullM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.withParams","kind":"def","line":29,"name":"Lean.Compiler.LCNF.PullLetDecls.withParams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L29-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.withFVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">withFVar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM\">PullM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM\">PullM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.withFVar","kind":"def","line":26,"name":"Lean.Compiler.LCNF.PullLetDecls.withFVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L26-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">PullM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.PullM","kind":"def","line":24,"name":"Lean.Compiler.LCNF.PullLetDecls.PullM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.State.toPull\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">State</span>.<span class=\"name\">toPull</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">LetDecl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.State.toPull","kind":"def","line":22,"name":"Lean.Compiler.LCNF.PullLetDecls.State.toPull","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toPull</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">LetDecl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.State.mk","kind":"ctor","line":21,"name":"Lean.Compiler.LCNF.PullLetDecls.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.State","kind":"structure","line":21,"name":"Lean.Compiler.LCNF.PullLetDecls.State","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L21-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.Context.included\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">Context</span>.<span class=\"name\">included</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.FVarIdSet\">FVarIdSet</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.Context.included","kind":"def","line":19,"name":"Lean.Compiler.LCNF.PullLetDecls.Context.included","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.Context.isCandidateFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">Context</span>.<span class=\"name\">isCandidateFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">LetDecl</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarIdSet\">FVarIdSet</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.Context.isCandidateFn","kind":"def","line":18,"name":"Lean.Compiler.LCNF.PullLetDecls.Context.isCandidateFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isCandidateFn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">LetDecl</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarIdSet\">FVarIdSet</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">included</span> : <a href=\"./Lean/Expr.html#Lean.FVarIdSet\">FVarIdSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.Context\">Context</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.Context.mk","kind":"ctor","line":17,"name":"Lean.Compiler.LCNF.PullLetDecls.Context.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">PullLetDecls</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/PullLetDecls.html#Lean.Compiler.LCNF.PullLetDecls.Context","kind":"structure","line":17,"name":"Lean.Compiler.LCNF.PullLetDecls.Context","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/PullLetDecls.lean#L17-L19"}}],"imports":["Lean.Compiler.LCNF.DependsOn","Lean.Compiler.LCNF.PassManager"],"instances":[],"name":"Lean.Compiler.LCNF.PullLetDecls"}