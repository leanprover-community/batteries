{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/ValidDate.html#Std.Time.ValidDate.ofOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">ValidDate</span>.<span class=\"name\">ofOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ordinal</span> : <span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Day.Ordinal.OfYear</a> <span class=\"fn\">leap</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/ValidDate.html#Std.Time.ValidDate\">ValidDate</a> <span class=\"fn\">leap</span></span></div></div>","info":{"doc":"Transforms a `Day.Ordinal.OfYear` into a tuple of a `Month` and a `Day`.\n","docLink":"./Std/Time/Date/ValidDate.html#Std.Time.ValidDate.ofOrdinal","kind":"def","line":59,"name":"Std.Time.ValidDate.ofOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/ValidDate.lean#L59-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/ValidDate.html#Std.Time.ValidDate.dayOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">ValidDate</span>.<span class=\"name\">dayOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ordinal</span> : <span class=\"fn\"><a href=\"./Std/Time/Date/ValidDate.html#Std.Time.ValidDate\">ValidDate</a> <span class=\"fn\">leap</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Day.Ordinal.OfYear</a> <span class=\"fn\">leap</span></span></div></div>","info":{"doc":"Transforms a tuple of a `Month` and a `Day` into a `Day.Ordinal.OfYear`.\n","docLink":"./Std/Time/Date/ValidDate.html#Std.Time.ValidDate.dayOfYear","kind":"def","line":48,"name":"Std.Time.ValidDate.dayOfYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/ValidDate.lean#L48-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/ValidDate.html#Std.Time.instLawfulEqOrdValidDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instLawfulEqOrdValidDate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/ValidDate.html#Std.Time.ValidDate\">ValidDate</a> <span class=\"fn\">leap</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/ValidDate.html#Std.Time.instLawfulEqOrdValidDate","kind":"instance","line":43,"name":"Std.Time.instLawfulEqOrdValidDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/ValidDate.lean#L43-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/ValidDate.html#Std.Time.instTransOrdValidDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instTransOrdValidDate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/ValidDate.html#Std.Time.ValidDate\">ValidDate</a> <span class=\"fn\">leap</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/ValidDate.html#Std.Time.instTransOrdValidDate","kind":"instance","line":40,"name":"Std.Time.instTransOrdValidDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/ValidDate.lean#L40-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/ValidDate.html#Std.Time.instOrientedOrdValidDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instOrientedOrdValidDate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.OrientedOrd\">OrientedOrd</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/ValidDate.html#Std.Time.ValidDate\">ValidDate</a> <span class=\"fn\">leap</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/ValidDate.html#Std.Time.instOrientedOrdValidDate","kind":"instance","line":37,"name":"Std.Time.instOrientedOrdValidDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/ValidDate.lean#L37-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/ValidDate.html#Std.Time.instOrdValidDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instOrdValidDate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/ValidDate.html#Std.Time.ValidDate\">ValidDate</a> <span class=\"fn\">leap</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/ValidDate.html#Std.Time.instOrdValidDate","kind":"instance","line":34,"name":"Std.Time.instOrdValidDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/ValidDate.lean#L34-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/ValidDate.html#Std.Time.instDecidableEqValidDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instDecidableEqValidDate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/ValidDate.html#Std.Time.ValidDate\">ValidDate</a> <span class=\"fn\">leap</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/ValidDate.html#Std.Time.instDecidableEqValidDate","kind":"instance","line":32,"name":"Std.Time.instDecidableEqValidDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/ValidDate.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/ValidDate.html#Std.Time.instInhabitedValidDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instInhabitedValidDate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/ValidDate.html#Std.Time.ValidDate\">ValidDate</a> <span class=\"fn\">l</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/ValidDate.html#Std.Time.instInhabitedValidDate","kind":"instance","line":27,"name":"Std.Time.instInhabitedValidDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/ValidDate.lean#L27-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/ValidDate.html#Std.Time.ValidDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">ValidDate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents a valid date for a given year, considering whether it is a leap year. Example: `(2, 29)`\nis valid only if `leap` is `true`.\n","docLink":"./Std/Time/Date/ValidDate.html#Std.Time.ValidDate","kind":"def","line":21,"name":"Std.Time.ValidDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/ValidDate.lean#L21-L25"}}],"imports":["Std.Time.Date.Unit.Month","Std.Time.Date.Unit.Month"],"instances":[{"className":"Inhabited","name":"Std.Time.instInhabitedValidDate","typeNames":["Std.Time.ValidDate"]},{"className":"Decidable","name":"Std.Time.instDecidableEqValidDate","typeNames":["Eq"]},{"className":"Ord","name":"Std.Time.instOrdValidDate","typeNames":["Std.Time.ValidDate"]},{"className":"Std.OrientedCmp","name":"Std.Time.instOrientedOrdValidDate","typeNames":["Std.Time.ValidDate"]},{"className":"Std.TransCmp","name":"Std.Time.instTransOrdValidDate","typeNames":["Std.Time.ValidDate"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.instLawfulEqOrdValidDate","typeNames":["Std.Time.ValidDate"]}],"name":"Std.Time.Date.ValidDate"}