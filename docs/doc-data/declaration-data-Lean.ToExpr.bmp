{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprPreresolved\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprPreresolved</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#Lean.Syntax.Preresolved\">Syntax.Preresolved</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprPreresolved","kind":"instance","line":254,"name":"Lean.instToExprPreresolved","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L254-L258"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprFVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprFVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprFVarId","kind":"instance","line":250,"name":"Lean.instToExprFVarId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L250-L252"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprLiteral\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprLiteral</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Lean/Expr.html#Lean.Literal\">Literal</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprLiteral","kind":"instance","line":244,"name":"Lean.instToExprLiteral","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L244-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprProdOfToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprProdOfToLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprProdOfToLevel","kind":"instance","line":237,"name":"Lean.instToExprProdOfToLevel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L237-L242"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprArrayOfToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprArrayOfToLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprArrayOfToLevel","kind":"instance","line":232,"name":"Lean.instToExprArrayOfToLevel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L232-L235"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprListOfToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprListOfToLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprListOfToLevel","kind":"instance","line":225,"name":"Lean.instToExprListOfToLevel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L225-L230"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprOptionOfToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprOptionOfToLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprOptionOfToLevel","kind":"instance","line":214,"name":"Lean.instToExprOptionOfToLevel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L214-L219"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprName\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprName","kind":"instance","line":210,"name":"Lean.instToExprName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L210-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprFilePath\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprFilePath","kind":"instance","line":183,"name":"Lean.instToExprFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L183-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUnit\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUnit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprUnit","kind":"instance","line":179,"name":"Lean.instToExprUnit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L179-L181"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprString\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprString","kind":"instance","line":175,"name":"Lean.instToExprString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L175-L177"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprChar\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprChar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprChar","kind":"instance","line":171,"name":"Lean.instToExprChar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L171-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprBool\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprBool</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprBool","kind":"instance","line":167,"name":"Lean.instToExprBool","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L167-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprISize.mkNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprISize</span>.<span class=\"name\">mkNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprISize.mkNat","kind":"def","line":162,"name":"Lean.instToExprISize.mkNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L162-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprISize\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprISize","kind":"instance","line":154,"name":"Lean.instToExprISize","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L154-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt64.mkNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt64</span>.<span class=\"name\">mkNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprInt64.mkNat","kind":"def","line":149,"name":"Lean.instToExprInt64.mkNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L149-L152"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt64\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprInt64","kind":"instance","line":141,"name":"Lean.instToExprInt64","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L141-L152"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt32.mkNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt32</span>.<span class=\"name\">mkNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprInt32.mkNat","kind":"def","line":136,"name":"Lean.instToExprInt32.mkNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L136-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt32\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprInt32","kind":"instance","line":128,"name":"Lean.instToExprInt32","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L128-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt16.mkNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt16</span>.<span class=\"name\">mkNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprInt16.mkNat","kind":"def","line":123,"name":"Lean.instToExprInt16.mkNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L123-L126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt16\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprInt16","kind":"instance","line":115,"name":"Lean.instToExprInt16","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L115-L126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt8.mkNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt8</span>.<span class=\"name\">mkNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprInt8.mkNat","kind":"def","line":110,"name":"Lean.instToExprInt8.mkNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L110-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt8\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprInt8","kind":"instance","line":102,"name":"Lean.instToExprInt8","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L102-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUSize\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprUSize","kind":"instance","line":95,"name":"Lean.instToExprUSize","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L95-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUInt64\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprUInt64","kind":"instance","line":88,"name":"Lean.instToExprUInt64","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L88-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUInt32\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprUInt32","kind":"instance","line":81,"name":"Lean.instToExprUInt32","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L81-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUInt16\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprUInt16","kind":"instance","line":74,"name":"Lean.instToExprUInt16","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L74-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUInt8\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprUInt8","kind":"instance","line":67,"name":"Lean.instToExprUInt8","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L67-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprBitVec\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprBitVec","kind":"instance","line":62,"name":"Lean.instToExprBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L62-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprFin\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprFin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprFin","kind":"instance","line":54,"name":"Lean.instToExprFin","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L54-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt.mkNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt</span>.<span class=\"name\">mkNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprInt.mkNat","kind":"def","line":49,"name":"Lean.instToExprInt.mkNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L49-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprInt","kind":"instance","line":41,"name":"Lean.instToExprInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L41-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.instToExprNat","kind":"instance","line":37,"name":"Lean.instToExprNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L37-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.ToExpr.toTypeExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">ToExpr</span>.<span class=\"name\">toTypeExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"Expression representing the type `α` ","docLink":"./Lean/ToExpr.html#Lean.ToExpr.toTypeExpr","kind":"def","line":33,"name":"Lean.ToExpr.toTypeExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.ToExpr.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">ToExpr</span>.<span class=\"name\">toExpr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"Convert a value `a : α` into an expression that denotes `a` ","docLink":"./Lean/ToExpr.html#Lean.ToExpr.toExpr","kind":"def","line":31,"name":"Lean.ToExpr.toExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.ToExpr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ToExpr</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toExpr</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toTypeExpr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ToExpr.html#Lean.ToExpr.mk","kind":"ctor","line":29,"name":"Lean.ToExpr.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.ToExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">ToExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"We use the `ToExpr` type class to convert values of type `α` into\nexpressions that denote these values in Lean.\n\nExamples:\n```\ntoExpr true = .const ``Bool.true []\n\ntoTypeExpr Bool = .const ``Bool []\n```\n\nSee also `ToLevel` for representing universe levels as `Level` expressions.\n","docLink":"./Lean/ToExpr.html#Lean.ToExpr","kind":"class","line":16,"name":"Lean.ToExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToExpr.lean#L16-L33"}}],"imports":["Lean.ToLevel"],"instances":[{"className":"Lean.ToExpr","name":"Lean.instToExprNat","typeNames":["Nat"]},{"className":"Lean.ToExpr","name":"Lean.instToExprInt","typeNames":["Int"]},{"className":"Lean.ToExpr","name":"Lean.instToExprFin","typeNames":["Fin"]},{"className":"Lean.ToExpr","name":"Lean.instToExprBitVec","typeNames":["BitVec"]},{"className":"Lean.ToExpr","name":"Lean.instToExprUInt8","typeNames":["UInt8"]},{"className":"Lean.ToExpr","name":"Lean.instToExprUInt16","typeNames":["UInt16"]},{"className":"Lean.ToExpr","name":"Lean.instToExprUInt32","typeNames":["UInt32"]},{"className":"Lean.ToExpr","name":"Lean.instToExprUInt64","typeNames":["UInt64"]},{"className":"Lean.ToExpr","name":"Lean.instToExprUSize","typeNames":["USize"]},{"className":"Lean.ToExpr","name":"Lean.instToExprInt8","typeNames":["Int8"]},{"className":"Lean.ToExpr","name":"Lean.instToExprInt16","typeNames":["Int16"]},{"className":"Lean.ToExpr","name":"Lean.instToExprInt32","typeNames":["Int32"]},{"className":"Lean.ToExpr","name":"Lean.instToExprInt64","typeNames":["Int64"]},{"className":"Lean.ToExpr","name":"Lean.instToExprISize","typeNames":["ISize"]},{"className":"Lean.ToExpr","name":"Lean.instToExprBool","typeNames":["Bool"]},{"className":"Lean.ToExpr","name":"Lean.instToExprChar","typeNames":["Char"]},{"className":"Lean.ToExpr","name":"Lean.instToExprString","typeNames":["String"]},{"className":"Lean.ToExpr","name":"Lean.instToExprUnit","typeNames":["Unit"]},{"className":"Lean.ToExpr","name":"Lean.instToExprFilePath","typeNames":["System.FilePath"]},{"className":"Lean.ToExpr","name":"Lean.instToExprName","typeNames":["Lean.Name"]},{"className":"Lean.ToExpr","name":"Lean.instToExprOptionOfToLevel","typeNames":["Option"]},{"className":"Lean.ToExpr","name":"Lean.instToExprListOfToLevel","typeNames":["List"]},{"className":"Lean.ToExpr","name":"Lean.instToExprArrayOfToLevel","typeNames":["Array"]},{"className":"Lean.ToExpr","name":"Lean.instToExprProdOfToLevel","typeNames":["Prod"]},{"className":"Lean.ToExpr","name":"Lean.instToExprLiteral","typeNames":["Lean.Literal"]},{"className":"Lean.ToExpr","name":"Lean.instToExprFVarId","typeNames":["Lean.FVarId"]},{"className":"Lean.ToExpr","name":"Lean.instToExprPreresolved","typeNames":["Lean.Syntax.Preresolved"]}],"name":"Lean.ToExpr"}