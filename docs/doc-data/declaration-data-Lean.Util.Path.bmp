{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.findSysroot\"><span class=\"name\">Lean</span>.<span class=\"name\">findSysroot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lean</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;lean&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>","info":{"doc":"Find the system root of the given `lean` command\nby calling `lean --print-prefix` and returning the path it prints.\nDefaults to trying the `lean` in `PATH`.\nIf set, the `LEAN_SYSROOT` environment variable takes precedence.\nNote that the called `lean` binary might not be part of the system root,\ne.g. in the case of `elan`'s proxy binary.\nUsers internal to Lean should use `Lean.getBuildDir` instead.\n","docLink":"./Lean/Util/Path.html#Lean.findSysroot","kind":"def","line":165,"name":"Lean.findSysroot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L165-L181"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.searchModuleNameOfFileName\"><span class=\"name\">Lean</span>.<span class=\"name\">searchModuleNameOfFileName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fname</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rootDirs</span> : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">SearchPath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/Path.html#Lean.searchModuleNameOfFileName","kind":"def","line":156,"name":"Lean.searchModuleNameOfFileName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L156-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.moduleNameOfFileName\"><span class=\"name\">Lean</span>.<span class=\"name\">moduleNameOfFileName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fname</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rootDir</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"Infer module name of source file name. ","docLink":"./Lean/Util/Path.html#Lean.moduleNameOfFileName","kind":"def","line":139,"name":"Lean.moduleNameOfFileName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L139-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.getSrcSearchPath\"><span class=\"name\">Lean</span>.<span class=\"name\">getSrcSearchPath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">SearchPath</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/Path.html#Lean.getSrcSearchPath","kind":"def","line":131,"name":"Lean.getSrcSearchPath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L131-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.findLean\"><span class=\"name\">Lean</span>.<span class=\"name\">findLean</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sp</span> : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">SearchPath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>","info":{"doc":"Find the `.lean` source of a module in a `LEAN_SRC_PATH` search path. ","docLink":"./Lean/Util/Path.html#Lean.findLean","kind":"def","line":121,"name":"Lean.findLean","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L121-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.findOLean\"><span class=\"name\">Lean</span>.<span class=\"name\">findOLean</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>","info":{"doc":"Find the compiled `.olean` of a module in the `LEAN_PATH` search path. ","docLink":"./Lean/Util/Path.html#Lean.findOLean","kind":"def","line":110,"name":"Lean.findOLean","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L110-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.initSearchPath\"><span class=\"name\">Lean</span>.<span class=\"name\">initSearchPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leanSysroot</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sp</span> : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">SearchPath</a> := <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">âˆ…</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Initialize Lean's search path given Lean's system root and an initial search path.\nThe system root can be obtained via `getBuildDir` (for internal use) or\n`findSysroot` (for external users). ","docLink":"./Lean/Util/Path.html#Lean.initSearchPath","kind":"def","line":98,"name":"Lean.initSearchPath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L98-L104"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.addSearchPathFromEnv\"><span class=\"name\">Lean</span>.<span class=\"name\">addSearchPathFromEnv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sp</span> : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">SearchPath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">SearchPath</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/Path.html#Lean.addSearchPathFromEnv","kind":"def","line":92,"name":"Lean.addSearchPathFromEnv","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L92-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.getBuiltinSearchPath\"><span class=\"name\">Lean</span>.<span class=\"name\">getBuiltinSearchPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leanSysroot</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">SearchPath</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/Path.html#Lean.getBuiltinSearchPath","kind":"def","line":89,"name":"Lean.getBuiltinSearchPath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L89-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.getLibDir\"><span class=\"name\">Lean</span>.<span class=\"name\">getLibDir</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leanSysroot</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/Path.html#Lean.getLibDir","kind":"def","line":82,"name":"Lean.getLibDir","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L82-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.getBuildDir\"><span class=\"name\">Lean</span>.<span class=\"name\">getBuildDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/Path.html#Lean.getBuildDir","kind":"def","line":79,"name":"Lean.getBuildDir","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L79-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.searchPathRef\"><span class=\"name\">Lean</span>.<span class=\"name\">searchPathRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">SearchPath</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/Path.html#Lean.searchPathRef","kind":"opaque","line":77,"name":"Lean.searchPathRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L77-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.SearchPath.findAllWithExt\"><span class=\"name\">Lean</span>.<span class=\"name\">SearchPath</span>.<span class=\"name\">findAllWithExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sp</span> : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">SearchPath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/Path.html#Lean.SearchPath.findAllWithExt","kind":"def","line":68,"name":"Lean.SearchPath.findAllWithExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L68-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.SearchPath.findModuleWithExt\"><span class=\"name\">Lean</span>.<span class=\"name\">SearchPath</span>.<span class=\"name\">findModuleWithExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sp</span> : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">SearchPath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>","info":{"doc":"Like `findWithExt`, but ensures the returned path exists. ","docLink":"./Lean/Util/Path.html#Lean.SearchPath.findModuleWithExt","kind":"def","line":61,"name":"Lean.SearchPath.findModuleWithExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L61-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.SearchPath.findWithExt\"><span class=\"name\">Lean</span>.<span class=\"name\">SearchPath</span>.<span class=\"name\">findWithExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sp</span> : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">SearchPath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>","info":{"doc":"If the package of `mod` can be found in `sp`, return the path with extension\n`ext` (`lean` or `olean`) corresponding to `mod`. Otherwise, return `none`. Does\nnot check whether the returned path exists. ","docLink":"./Lean/Util/Path.html#Lean.SearchPath.findWithExt","kind":"def","line":52,"name":"Lean.SearchPath.findWithExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L52-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.SearchPath\"><span class=\"name\">Lean</span>.<span class=\"name\">SearchPath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A `.olean' search path. ","docLink":"./Lean/Util/Path.html#Lean.SearchPath","kind":"def","line":47,"name":"Lean.SearchPath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L47-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.modToFilePath\"><span class=\"name\">Lean</span>.<span class=\"name\">modToFilePath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">base</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/Path.html#Lean.modToFilePath","kind":"def","line":39,"name":"Lean.modToFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L39-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.realPathNormalized\"><span class=\"name\">Lean</span>.<span class=\"name\">realPathNormalized</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/Path.html#Lean.realPathNormalized","kind":"def","line":36,"name":"Lean.realPathNormalized","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L36-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Path.html#Lean.forEachModuleInDir\"><span class=\"name\">Lean</span>.<span class=\"name\">forEachModuleInDir</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> â†’ <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dir</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> â†’ <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>","info":{"doc":"Executes `f` with the corresponding module name for each `.lean` file contained in `dir`.\n\nFor example, if `dir` contains `A/B/C.lean`, `f` is called with `A.B.C`.\n","docLink":"./Lean/Util/Path.html#Lean.forEachModuleInDir","kind":"opaque","line":22,"name":"Lean.forEachModuleInDir","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Path.lean#L22-L34"}}],"imports":["Init.System.IO","Init.Data.ToString.Name"],"instances":[],"name":"Lean.Util.Path"}