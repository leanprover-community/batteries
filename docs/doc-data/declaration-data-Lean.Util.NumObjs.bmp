{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/NumObjs.html#Lean.Expr.numObjs\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">numObjs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"Returns the number of allocated `Expr` objects in the given expression `e`.\n\nThis operation is performed in `IO` because the result depends on the memory representation of the object.\n\nNote: Use this function primarily for diagnosing performance issues.\n","docLink":"./Lean/Util/NumObjs.html#Lean.Expr.numObjs","kind":"def","line":41,"name":"Lean.Expr.numObjs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/NumObjs.lean#L41-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.main\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">NumObjs</span>.<span class=\"name\">main</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.main","kind":"def","line":35,"name":"Lean.Expr.NumObjs.main","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/NumObjs.lean#L35-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.visit\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">NumObjs</span>.<span class=\"name\">visit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.visit","kind":"def","line":23,"name":"Lean.Expr.NumObjs.visit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/NumObjs.lean#L23-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">NumObjs</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.M","kind":"def","line":21,"name":"Lean.Expr.NumObjs.M","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/NumObjs.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.State.counter\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">NumObjs</span>.<span class=\"name\">State</span>.<span class=\"name\">counter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.State.counter","kind":"def","line":19,"name":"Lean.Expr.NumObjs.State.counter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/NumObjs.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.State.visited\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">NumObjs</span>.<span class=\"name\">State</span>.<span class=\"name\">visited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/PtrSet.html#Lean.PtrSet\">PtrSet</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.State.visited","kind":"def","line":18,"name":"Lean.Expr.NumObjs.State.visited","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/NumObjs.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">NumObjs</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">visited</span> : <span class=\"fn\"><a href=\"./Lean/Util/PtrSet.html#Lean.PtrSet\">PtrSet</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">counter</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.State.mk","kind":"ctor","line":17,"name":"Lean.Expr.NumObjs.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/NumObjs.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">NumObjs</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/NumObjs.html#Lean.Expr.NumObjs.State","kind":"structure","line":17,"name":"Lean.Expr.NumObjs.State","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/NumObjs.lean#L17-L19"}}],"imports":["Lean.Expr","Lean.Util.PtrSet"],"instances":[],"name":"Lean.Util.NumObjs"}