{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.aliasLR\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Alias</span>.<span class=\"name\">aliasLR</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The command `alias name := target` creates a synonym of `target` with the given name.\n\nThe command `alias ⟨fwd, rev⟩ := target` creates synonyms for the forward and reverse directions\nof an iff theorem. Use `_` if only one direction is required.\n\nThese commands accept all modifiers and attributes that `def` and `theorem` do.\n","docLink":"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.aliasLR","kind":"def","line":175,"name":"Batteries.Tactic.Alias.aliasLR","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Alias.lean#L175-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.mkIffMpApp\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Alias</span>.<span class=\"name\">mkIffMpApp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mp</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty </span><span class=\"fn\">prf</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>","info":{"doc":"Given a possibly forall-quantified iff expression `prf`, produce a value for one\nof the implication directions (determined by `mp`).\n","docLink":"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.mkIffMpApp","kind":"def","line":138,"name":"Batteries.Tactic.Alias.mkIffMpApp","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Alias.lean#L138-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.alias\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Alias</span>.<span class=\"name\">alias</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The command `alias name := target` creates a synonym of `target` with the given name.\n\nThe command `alias ⟨fwd, rev⟩ := target` creates synonyms for the forward and reverse directions\nof an iff theorem. Use `_` if only one direction is required.\n\nThese commands accept all modifiers and attributes that `def` and `theorem` do.\n","docLink":"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.alias","kind":"def","line":79,"name":"Batteries.Tactic.Alias.alias","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Alias.lean#L79-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.setDeprecatedTarget\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Alias</span>.<span class=\"name\">setDeprecatedTarget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">target</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Attributes.html#Lean.Elab.Attribute\">Lean.Elab.Attribute</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Attributes.html#Lean.Elab.Attribute\">Lean.Elab.Attribute</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Updates the `deprecated` declaration to point to `target` if no target is provided. ","docLink":"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.setDeprecatedTarget","kind":"def","line":66,"name":"Batteries.Tactic.Alias.setDeprecatedTarget","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Alias.lean#L66-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.setAliasInfo\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Alias</span>.<span class=\"name\">setAliasInfo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo\">AliasInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Set the alias info for a new declaration ","docLink":"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.setAliasInfo","kind":"def","line":62,"name":"Batteries.Tactic.Alias.setAliasInfo","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Alias.lean#L62-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.getAliasInfo\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Alias</span>.<span class=\"name\">getAliasInfo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo\">AliasInfo</a>)</span></span></div></div>","info":{"doc":"Get the alias information for a name ","docLink":"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.getAliasInfo","kind":"def","line":58,"name":"Batteries.Tactic.Alias.getAliasInfo","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Alias.lean#L58-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.aliasExt\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Alias</span>.<span class=\"name\">aliasExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension\">Lean.SimpleScopedEnvExtension</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo\">AliasInfo</a>) <span class=\"fn\">(<a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">Lean.NameMap</a> <a href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo\">AliasInfo</a>)</span></span></div></div>","info":{"doc":"Environment extension for registering aliases ","docLink":"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.aliasExt","kind":"opaque","line":51,"name":"Batteries.Tactic.Alias.aliasExt","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Alias.lean#L51-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo.toString\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Alias</span>.<span class=\"name\">AliasInfo</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo\">AliasInfo</a> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"The docstring for an alias. ","docLink":"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo.toString","kind":"def","line":44,"name":"Batteries.Tactic.Alias.AliasInfo.toString","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Alias.lean#L44-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo.name\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Alias</span>.<span class=\"name\">AliasInfo</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo\">AliasInfo</a> → <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span></div></div>","info":{"doc":"The name underlying an alias target ","docLink":"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo.name","kind":"def","line":38,"name":"Batteries.Tactic.Alias.AliasInfo.name","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Alias.lean#L38-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.instInhabitedAliasInfo.default\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Alias</span>.<span class=\"name\">instInhabitedAliasInfo</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo\">AliasInfo</a></div></div>","info":{"doc":"","docLink":"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.instInhabitedAliasInfo.default","kind":"def","line":36,"name":"Batteries.Tactic.Alias.instInhabitedAliasInfo.default","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Alias.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.instInhabitedAliasInfo\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Alias</span>.<span class=\"name\">instInhabitedAliasInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo\">AliasInfo</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.instInhabitedAliasInfo","kind":"instance","line":36,"name":"Batteries.Tactic.Alias.instInhabitedAliasInfo","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Alias.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo.reverse\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Alias</span>.<span class=\"name\">AliasInfo</span>.<span class=\"name\">reverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo\">AliasInfo</a></div></div>","info":{"doc":"Reverse direction of an iff alias ","docLink":"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo.reverse","kind":"ctor","line":34,"name":"Batteries.Tactic.Alias.AliasInfo.reverse","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Alias.lean#L34-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo.forward\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Alias</span>.<span class=\"name\">AliasInfo</span>.<span class=\"name\">forward</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo\">AliasInfo</a></div></div>","info":{"doc":"Forward direction of an iff alias ","docLink":"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo.forward","kind":"ctor","line":32,"name":"Batteries.Tactic.Alias.AliasInfo.forward","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Alias.lean#L32-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo.plain\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Alias</span>.<span class=\"name\">AliasInfo</span>.<span class=\"name\">plain</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo\">AliasInfo</a></div></div>","info":{"doc":"Plain alias ","docLink":"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo.plain","kind":"ctor","line":30,"name":"Batteries.Tactic.Alias.AliasInfo.plain","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Alias.lean#L30-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Alias</span>.<span class=\"name\">AliasInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"An alias can be in one of three forms ","docLink":"./Batteries/Tactic/Alias.html#Batteries.Tactic.Alias.AliasInfo","kind":"inductive","line":28,"name":"Batteries.Tactic.Alias.AliasInfo","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Alias.lean#L28-L36"}}],"imports":["Init","Lean.Elab.Command","Lean.Elab.DeclarationRange","Lean.Compiler.NoncomputableAttr","Lean.DocString","Batteries.CodeAction.Deprecated"],"instances":[{"className":"Inhabited","name":"Batteries.Tactic.Alias.instInhabitedAliasInfo","typeNames":["Batteries.Tactic.Alias.AliasInfo"]}],"name":"Batteries.Tactic.Alias"}