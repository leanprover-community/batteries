{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.openAbstractMVarsResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">openAbstractMVarsResult</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.AbstractMVarsResult\">AbstractMVarsResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.openAbstractMVarsResult","kind":"def","line":147,"name":"Lean.Meta.openAbstractMVarsResult","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L147-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.abstractMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">abstractMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">levels</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.AbstractMVarsResult\">AbstractMVarsResult</a></span></div></div>","info":{"doc":"Abstract (current depth) metavariables occurring in `e`.\nThe result contains\n- An array of universe level parameters that replaced universe metavariables occurring in `e`.\n- The metavariables that have been abstracted.\n- And an expression of the form `fun (m_1 : A_1) ... (m_k : A_k) => e'`, where\n  `k` equal to the number of (expr) metavariables abstracted, and `e'` is `e` after we\n  replace the metavariables.\n\nExample: given `f.{?u} ?m1` where `?m1 : ?m2 Nat`, `?m2 : Type -> Type`. This function returns\n`{ levels := #[u], size := 2, expr := (fun (m2 : Type -> Type) (m1 : m2 Nat) => f.{u} m1) }`\n\nThis API can be used to \"transport\" to a different metavariable context.\nGiven a new metavariable context, we replace the `AbstractMVarsResult.levels` with\nnew fresh universe metavariables, and instantiate the `(m_i : A_i)` in the lambda-expression\nwith new fresh metavariables.\n\nIf `levels := false`, then level metavariables are not abstracted.\n\nApplication: we use this method to cache the results of type class resolution.\n\nApplication: tactic `MVarId.abstractMVars`\n","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.abstractMVars","kind":"def","line":115,"name":"Lean.Meta.abstractMVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L115-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.abstractExprMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">abstractExprMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.M\">M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"Abstracts metavariables in `e`. Assumes `instantiateMVars` has been applied to `e`.\n","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.abstractExprMVars","kind":"opaque","line":70,"name":"Lean.Meta.AbstractMVars.abstractExprMVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L70-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.mkFreshFVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">mkFreshFVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.M\">M</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.mkFreshFVarId","kind":"def","line":41,"name":"Lean.Meta.AbstractMVars.mkFreshFVarId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L41-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.mkFreshId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">mkFreshId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.M\">M</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.mkFreshId","kind":"def","line":35,"name":"Lean.Meta.AbstractMVars.mkFreshId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L35-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.instMonadMCtxM\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">instMonadMCtxM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/MetavarContext.html#Lean.MonadMCtx\">MonadMCtx</a> <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.M\">M</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.instMonadMCtxM","kind":"instance","line":30,"name":"Lean.Meta.AbstractMVars.instMonadMCtxM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L30-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.M","kind":"def","line":28,"name":"Lean.Meta.AbstractMVars.M","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.abstractLevels\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">abstractLevels</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.abstractLevels","kind":"def","line":26,"name":"Lean.Meta.AbstractMVars.State.abstractLevels","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.emap\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">emap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.emap","kind":"def","line":25,"name":"Lean.Meta.AbstractMVars.State.emap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.lmap\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">lmap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Level.html#Lean.LMVarId\">LMVarId</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.lmap","kind":"def","line":24,"name":"Lean.Meta.AbstractMVars.State.lmap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.mvars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">mvars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.mvars","kind":"def","line":23,"name":"Lean.Meta.AbstractMVars.State.mvars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.fvars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">fvars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.fvars","kind":"def","line":22,"name":"Lean.Meta.AbstractMVars.State.fvars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.paramNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">paramNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.paramNames","kind":"def","line":21,"name":"Lean.Meta.AbstractMVars.State.paramNames","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.nextParamIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">nextParamIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.nextParamIdx","kind":"def","line":20,"name":"Lean.Meta.AbstractMVars.State.nextParamIdx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.mctx\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">mctx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">MetavarContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.mctx","kind":"def","line":19,"name":"Lean.Meta.AbstractMVars.State.mctx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.lctx\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">lctx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">LocalContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.lctx","kind":"def","line":18,"name":"Lean.Meta.AbstractMVars.State.lctx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.ngen\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">ngen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/MetaTypes.html#Lean.NameGenerator\">NameGenerator</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.ngen","kind":"def","line":17,"name":"Lean.Meta.AbstractMVars.State.ngen","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ngen</span> : <a href=\"./Init/MetaTypes.html#Lean.NameGenerator\">NameGenerator</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mctx</span> : <a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">MetavarContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nextParamIdx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">paramNames</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvars </span><span class=\"fn\">mvars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lmap</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Level.html#Lean.LMVarId\">LMVarId</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">emap</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">abstractLevels</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.mk","kind":"ctor","line":16,"name":"Lean.Meta.AbstractMVars.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L16-L16"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State","kind":"structure","line":16,"name":"Lean.Meta.AbstractMVars.State","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/AbstractMVars.lean#L16-L26"}}],"imports":["Lean.Meta.Basic"],"instances":[{"className":"Lean.MonadMCtx","name":"Lean.Meta.AbstractMVars.instMonadMCtxM","typeNames":["Lean.Meta.AbstractMVars.M"]}],"name":"Lean.Meta.AbstractMVars"}