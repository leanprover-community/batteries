{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInstHint.html#Lean.Elab.Term.StructInst.mkMissingFieldsHint\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">mkMissingFieldsHint</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fields</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></span></div></div>","info":{"doc":"Creates a hint message for the \"fields missing\" error that fills in the missing fields, adapting to\nthe structure instance notation style of the current syntax. Note that if the syntax is malformed or\nsynthetic, this function returns an empty message instead.\n","docLink":"./Lean/Elab/StructInstHint.html#Lean.Elab.Term.StructInst.mkMissingFieldsHint","kind":"def","line":52,"name":"Lean.Elab.Term.StructInst.mkMissingFieldsHint","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/StructInstHint.lean#L52-L173"}}],"imports":["Lean.Meta.Hint"],"instances":[],"name":"Lean.Elab.StructInstHint"}