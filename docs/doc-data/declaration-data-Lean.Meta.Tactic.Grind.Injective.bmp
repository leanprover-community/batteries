{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.resetInjectiveTheoremsExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">resetInjectiveTheoremsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.resetInjectiveTheoremsExt","kind":"def","line":104,"name":"Lean.Meta.Grind.resetInjectiveTheoremsExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L104-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.getInjectiveTheorems\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">getInjectiveTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorems\">InjectiveTheorems</a></span></div></div>","info":{"doc":"Returns the injective theorems registered in the environment. ","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.getInjectiveTheorems","kind":"def","line":100,"name":"Lean.Meta.Grind.getInjectiveTheorems","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L100-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.isInjectiveTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">isInjectiveTheorem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Returns `true` if `declName` has been tagged as an injective theorem using `[grind]`. ","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.isInjectiveTheorem","kind":"def","line":96,"name":"Lean.Meta.Grind.isInjectiveTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L96-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.eraseInjectiveAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">eraseInjectiveAttr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.eraseInjectiveAttr","kind":"def","line":91,"name":"Lean.Meta.Grind.eraseInjectiveAttr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L91-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.addInjectiveAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">addInjectiveAttr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrKind</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">AttributeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.addInjectiveAttr","kind":"def","line":88,"name":"Lean.Meta.Grind.addInjectiveAttr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L88-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.mkInjectiveTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">mkInjectiveTheorem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem\">InjectiveTheorem</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.mkInjectiveTheorem","kind":"def","line":77,"name":"Lean.Meta.Grind.mkInjectiveTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L77-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorems\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">InjectiveTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Set of Injective theorems. ","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorems","kind":"def","line":33,"name":"Lean.Meta.Grind.InjectiveTheorems","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L33-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.instTheoremLikeInjectiveTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instTheoremLikeInjectiveTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Theorems.html#Lean.Meta.Grind.TheoremLike\">TheoremLike</a> <a href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem\">InjectiveTheorem</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.instTheoremLikeInjectiveTheorem","kind":"instance","line":26,"name":"Lean.Meta.Grind.instTheoremLikeInjectiveTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L26-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.instInhabitedInjectiveTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instInhabitedInjectiveTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem\">InjectiveTheorem</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.instInhabitedInjectiveTheorem","kind":"instance","line":24,"name":"Lean.Meta.Grind.instInhabitedInjectiveTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.instInhabitedInjectiveTheorem.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instInhabitedInjectiveTheorem</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem\">InjectiveTheorem</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.instInhabitedInjectiveTheorem.default","kind":"def","line":24,"name":"Lean.Meta.Grind.instInhabitedInjectiveTheorem.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem.origin\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">InjectiveTheorem</span>.<span class=\"name\">origin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem\">InjectiveTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Theorems.html#Lean.Meta.Grind.Origin\">Origin</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem.origin","kind":"def","line":23,"name":"Lean.Meta.Grind.InjectiveTheorem.origin","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem.symbols\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">InjectiveTheorem</span>.<span class=\"name\">symbols</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem\">InjectiveTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></span></div></div>","info":{"doc":"Contains all symbols used in the term `f` at the theorem's conclusion: `Function.Injective f`. ","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem.symbols","kind":"def","line":22,"name":"Lean.Meta.Grind.InjectiveTheorem.symbols","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem.proof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">InjectiveTheorem</span>.<span class=\"name\">proof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem\">InjectiveTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem.proof","kind":"def","line":20,"name":"Lean.Meta.Grind.InjectiveTheorem.proof","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem.levelParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">InjectiveTheorem</span>.<span class=\"name\">levelParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem\">InjectiveTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem.levelParams","kind":"def","line":19,"name":"Lean.Meta.Grind.InjectiveTheorem.levelParams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">InjectiveTheorem</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">levelParams</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">proof</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">symbols</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">origin</span> : <a href=\"./Lean/Meta/Tactic/Grind/Theorems.html#Lean.Meta.Grind.Origin\">Origin</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem\">InjectiveTheorem</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem.mk","kind":"ctor","line":18,"name":"Lean.Meta.Grind.InjectiveTheorem.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">InjectiveTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A theorem marked with `@[grind inj]` ","docLink":"./Lean/Meta/Tactic/Grind/Injective.html#Lean.Meta.Grind.InjectiveTheorem","kind":"structure","line":17,"name":"Lean.Meta.Grind.InjectiveTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injective.lean#L17-L24"}}],"imports":["Lean.Meta.Tactic.Grind.EMatchTheorem","Lean.Meta.FunInfo"],"instances":[{"className":"Inhabited","name":"Lean.Meta.Grind.instInhabitedInjectiveTheorem","typeNames":["Lean.Meta.Grind.InjectiveTheorem"]},{"className":"Lean.Meta.Grind.TheoremLike","name":"Lean.Meta.Grind.instTheoremLikeInjectiveTheorem","typeNames":["Lean.Meta.Grind.InjectiveTheorem"]}],"name":"Lean.Meta.Tactic.Grind.Injective"}