{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.SearchPath.toString\"><span class=\"name\">System</span>.<span class=\"name\">SearchPath</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.SearchPath\">SearchPath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"Joins a list of paths into a suitable value for the current platform's `$PATH` (or `%PATH%`)\nenvironment variable.\n","docLink":"./Init/System/FilePath.html#System.SearchPath.toString","kind":"def","line":277,"name":"System.SearchPath.toString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L277-L282"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.SearchPath.parse\"><span class=\"name\">System</span>.<span class=\"name\">SearchPath</span>.<span class=\"name\">parse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.SearchPath\">SearchPath</a></div></div>","info":{"doc":"Separates the entries in the `$PATH` (or `%PATH%`) environment variable by the current\nplatform-dependent separator character.\n","docLink":"./Init/System/FilePath.html#System.SearchPath.parse","kind":"def","line":270,"name":"System.SearchPath.parse","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L270-L275"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.SearchPath.separator\"><span class=\"name\">System</span>.<span class=\"name\">SearchPath</span>.<span class=\"name\">separator</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Char\">Char</a></div></div>","info":{"doc":"The character that is used to separate the entries in the `$PATH` (or `%PATH%`) environment variable.\n\nThis value is platform dependent.\n","docLink":"./Init/System/FilePath.html#System.SearchPath.separator","kind":"def","line":262,"name":"System.SearchPath.separator","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L262-L268"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.SearchPath\"><span class=\"name\">System</span>.<span class=\"name\">SearchPath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Init/System/FilePath.html#System.SearchPath","kind":"def","line":258,"name":"System.SearchPath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L258-L258"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.instCoeStringFilePath\"><span class=\"name\">System</span>.<span class=\"name\">instCoeStringFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Init/System/FilePath.html#System.instCoeStringFilePath","kind":"instance","line":255,"name":"System.instCoeStringFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L255-L256"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.mkFilePath\"><span class=\"name\">System</span>.<span class=\"name\">mkFilePath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></div></div>","info":{"doc":"Constructs a path from a list of file names by interspersing them with the current platform's path\nseparator.\n","docLink":"./Init/System/FilePath.html#System.mkFilePath","kind":"def","line":248,"name":"System.mkFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L248-L253"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.components\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">components</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Splits a path into a list of individual file names at the platform-specific path separator.\n","docLink":"./Init/System/FilePath.html#System.FilePath.components","kind":"def","line":240,"name":"System.FilePath.components","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L240-L244"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.withExtension\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">withExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></div></div>","info":{"doc":"Replaces the current extension in a path `p` with `ext`, adding it if there is no extension. If the\npath has multiple file extensions, only the last one is replaced. If the path has no filename, or if\n`ext` is the empty string, then the filename is returned unmodified.\n\n`ext` should not have a leading `.`, as this function adds one.\n\nExamples:\n* `(\"files/picture.jpeg\" : System.FilePath).withExtension \"jpg\" = ⟨\"files/picture.jpg\"⟩`\n* `(\"files/\" : System.FilePath).withExtension \"zip\" = ⟨\"files/\"⟩`\n* `(\"files\" : System.FilePath).withExtension \"zip\" = ⟨\"files.zip\"⟩`\n* `(\"files/archive.tar.gz\" : System.FilePath).withExtension \"xz\" = ⟨\"files.tar.xz\"⟩`\n","docLink":"./Init/System/FilePath.html#System.FilePath.withExtension","kind":"def","line":222,"name":"System.FilePath.withExtension","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L222-L238"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.addExtension\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">addExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></div></div>","info":{"doc":"Appends the extension `ext` to a path `p`.\n\n`ext` should not have leading `.`, as this function adds one. If `ext` is the empty string, no\n`.` is added.\n\nUnlike `System.FilePath.withExtension`, this does not remove any existing extension.\n","docLink":"./Init/System/FilePath.html#System.FilePath.addExtension","kind":"def","line":209,"name":"System.FilePath.addExtension","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L209-L220"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.withFileName\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">withFileName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fname</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></div></div>","info":{"doc":"Replaces the file name at the end of the path `p` with `fname`, placing `fname` in the parent\ndirectory of `p`.\n\nIf `p` has no parent directory, then `fname` is returned unmodified.\n","docLink":"./Init/System/FilePath.html#System.FilePath.withFileName","kind":"def","line":198,"name":"System.FilePath.withFileName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L198-L207"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.extension\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">extension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Extracts the extension part of `p.fileName`.\n\nIf the filename contains multiple extensions, then only the last one is extracted. Returns `none` if\nthere is no file name at the end of the path.\n\nExamples:\n * `(\"app.exe\" : System.FilePath).extension = some \"exe\"`\n * `(\"file.tar.gz\" : System.FilePath).extension = some \"gz\"`\n * `(\"files/\" : System.FilePath).extension = none`\n * `(\"files/picture.jpg\" : System.FilePath).extension = some \"jpg\"`\n","docLink":"./Init/System/FilePath.html#System.FilePath.extension","kind":"def","line":179,"name":"System.FilePath.extension","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L179-L196"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.fileStem\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">fileStem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Extracts the stem (non-extension) part of `p.fileName`.\n\nIf the filename contains multiple extensions, then only the last one is removed. Returns `none` if\nthere is no file name at the end of the path.\n\nExamples:\n * `(\"app.exe\" : System.FilePath).fileStem = some \"app\"`\n * `(\"file.tar.gz\" : System.FilePath).fileStem = some \"file.tar\"`\n * `(\"files/\" : System.FilePath).fileStem = none`\n * `(\"files/picture.jpg\" : System.FilePath).fileStem = some \"picture\"`\n","docLink":"./Init/System/FilePath.html#System.FilePath.fileStem","kind":"def","line":160,"name":"System.FilePath.fileStem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L160-L177"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.fileName\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">fileName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Extracts the last element of a path if it is a file or directory name.\n\nReturns `none ` if the last entry is a special name (such as `.` or `..`) or if the path is the root\ndirectory.\n","docLink":"./Init/System/FilePath.html#System.FilePath.fileName","kind":"def","line":148,"name":"System.FilePath.fileName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L148-L158"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.parent\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">parent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></span></div></div>","info":{"doc":"Returns the parent directory of a path, if there is one.\n\nIf the path is that of the root directory or the root of a drive letter, `none` is returned.\nOtherwise, the path's parent directory is returned.\n","docLink":"./Init/System/FilePath.html#System.FilePath.parent","kind":"def","line":125,"name":"System.FilePath.parent","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L125-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.instHDivString\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">instHDivString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HDiv\">HDiv</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Init/System/FilePath.html#System.FilePath.instHDivString","kind":"instance","line":119,"name":"System.FilePath.instHDivString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L119-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.instDiv\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">instDiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Init/System/FilePath.html#System.FilePath.instDiv","kind":"instance","line":116,"name":"System.FilePath.instDiv","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L116-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.join\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">join</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">sub</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></div></div>","info":{"doc":"Appends two paths, taking absolute paths into account. This operation is also accessible via the `/`\noperator.\n\nIf `sub` is an absolute path, then `p` is discarded and `sub` is returned. If `sub` is a relative\npath, then it is attached to `p` with the platform-specific path separator.\n","docLink":"./Init/System/FilePath.html#System.FilePath.join","kind":"def","line":103,"name":"System.FilePath.join","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L103-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.isRelative\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">isRelative</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"A relative path is one that depends on the current working directory for interpretation. Relative\npaths do not start with the root directory or a drive letter.\n","docLink":"./Init/System/FilePath.html#System.FilePath.isRelative","kind":"def","line":96,"name":"System.FilePath.isRelative","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L96-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.isAbsolute\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">isAbsolute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"An absolute path starts at the root directory or a drive letter. Accessing files through an absolute\npath does not depend on the current working directory.\n","docLink":"./Init/System/FilePath.html#System.FilePath.isAbsolute","kind":"def","line":89,"name":"System.FilePath.isAbsolute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L89-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.normalize\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">normalize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></div></div>","info":{"doc":"Normalizes a path, returning an equivalent path that may better follow platform conventions.\n\nIn particular:\n* On Windows, drive letters are made uppercase.\n* On platforms that support multiple path separators (that is, where\n  `System.FilePath.pathSeparators` has length greater than one), alternative path separators are\n  replaced with the preferred path separator.\n\nThere is no guarantee that two equivalent paths normalize to the same path.\n","docLink":"./Init/System/FilePath.html#System.FilePath.normalize","kind":"def","line":65,"name":"System.FilePath.normalize","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L65-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.exeExtension\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">exeExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"The file extension expected for executable binaries on the current platform, or `\"\"` if there is no\nsuch extension.\n","docLink":"./Init/System/FilePath.html#System.FilePath.exeExtension","kind":"def","line":58,"name":"System.FilePath.exeExtension","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L58-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.extSeparator\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">extSeparator</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Char\">Char</a></div></div>","info":{"doc":"The character that separates file extensions from file names.\n","docLink":"./Init/System/FilePath.html#System.FilePath.extSeparator","kind":"def","line":53,"name":"System.FilePath.extSeparator","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L53-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.pathSeparators\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">pathSeparators</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>","info":{"doc":"The list of all path separator characters supported on the current platform.\n\nOn platforms that support multiple separators, `System.FilePath.pathSeparator` is the “ideal” one\nexpected by users on the platform.\n","docLink":"./Init/System/FilePath.html#System.FilePath.pathSeparators","kind":"def","line":44,"name":"System.FilePath.pathSeparators","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L44-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.pathSeparator\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">pathSeparator</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Char\">Char</a></div></div>","info":{"doc":"The character that separates directories.\n\nOn platforms that support multiple separators, `System.FilePath.pathSeparator` is the “ideal” one expected by users\non the platform. `System.FilePath.pathSeparators` lists all supported separators.\n","docLink":"./Init/System/FilePath.html#System.FilePath.pathSeparator","kind":"def","line":35,"name":"System.FilePath.pathSeparator","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L35-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.instToStringFilePath\"><span class=\"name\">System</span>.<span class=\"name\">instToStringFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Init/System/FilePath.html#System.instToStringFilePath","kind":"instance","line":30,"name":"System.instToStringFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L30-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.instReprFilePath\"><span class=\"name\">System</span>.<span class=\"name\">instReprFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Init/System/FilePath.html#System.instReprFilePath","kind":"instance","line":27,"name":"System.instReprFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L27-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.instHashableFilePath\"><span class=\"name\">System</span>.<span class=\"name\">instHashableFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Init/System/FilePath.html#System.instHashableFilePath","kind":"instance","line":25,"name":"System.instHashableFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.instHashableFilePath.hash\"><span class=\"name\">System</span>.<span class=\"name\">instHashableFilePath</span>.<span class=\"name\">hash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a> → <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/System/FilePath.html#System.instHashableFilePath.hash","kind":"def","line":25,"name":"System.instHashableFilePath.hash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.instDecidableEqFilePath.decEq\"><span class=\"name\">System</span>.<span class=\"name\">instDecidableEqFilePath</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Init/System/FilePath.html#System.instDecidableEqFilePath.decEq","kind":"def","line":25,"name":"System.instDecidableEqFilePath.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.instDecidableEqFilePath\"><span class=\"name\">System</span>.<span class=\"name\">instDecidableEqFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Init/System/FilePath.html#System.instDecidableEqFilePath","kind":"instance","line":25,"name":"System.instDecidableEqFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.instInhabitedFilePath.default\"><span class=\"name\">System</span>.<span class=\"name\">instInhabitedFilePath</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></div></div>","info":{"doc":"","docLink":"./Init/System/FilePath.html#System.instInhabitedFilePath.default","kind":"def","line":25,"name":"System.instInhabitedFilePath.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.instInhabitedFilePath\"><span class=\"name\">System</span>.<span class=\"name\">instInhabitedFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Init/System/FilePath.html#System.instInhabitedFilePath","kind":"instance","line":25,"name":"System.instInhabitedFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.toString\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"The string representation of the path. ","docLink":"./Init/System/FilePath.html#System.FilePath.toString","kind":"def","line":24,"name":"System.FilePath.toString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath.mk\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toString</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">FilePath</a></div></div>","info":{"doc":"","docLink":"./Init/System/FilePath.html#System.FilePath.mk","kind":"ctor","line":22,"name":"System.FilePath.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/FilePath.html#System.FilePath\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A path on the file system.\n\nPaths consist of a sequence of directories followed by the name of a file or directory. They are\ndelimited by a platform-dependent separator character (see `System.FilePath.pathSeparator`).\n","docLink":"./Init/System/FilePath.html#System.FilePath","kind":"structure","line":16,"name":"System.FilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/System/FilePath.lean#L16-L25"}}],"imports":["Init.Data.String.Basic"],"instances":[{"className":"Inhabited","name":"System.instInhabitedFilePath","typeNames":["System.FilePath"]},{"className":"Decidable","name":"System.instDecidableEqFilePath","typeNames":["Eq"]},{"className":"Hashable","name":"System.instHashableFilePath","typeNames":["System.FilePath"]},{"className":"Repr","name":"System.instReprFilePath","typeNames":["System.FilePath"]},{"className":"ToString","name":"System.instToStringFilePath","typeNames":["System.FilePath"]},{"className":"Div","name":"System.FilePath.instDiv","typeNames":["System.FilePath"]},{"className":"HDiv","name":"System.FilePath.instHDivString","typeNames":["System.FilePath","String","System.FilePath"]},{"className":"Coe","name":"System.instCoeStringFilePath","typeNames":["String","System.FilePath"]}],"name":"Init.System.FilePath"}