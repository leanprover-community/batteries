{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.runWith\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">runWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lean</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">test</span> : <span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.runWith","kind":"def","line":343,"name":"Lean.Lsp.Ipc.runWith","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L343-L348"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.expandModuleHierarchyImportedBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">expandModuleHierarchyImportedBy</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">requestNo</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">uri</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">DocumentUri</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy\">ModuleHierarchy</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.expandModuleHierarchyImportedBy","kind":"def","line":300,"name":"Lean.Lsp.Ipc.expandModuleHierarchyImportedBy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L300-L341"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.expandModuleHierarchyImports\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">expandModuleHierarchyImports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">requestNo</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">uri</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">DocumentUri</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy\">ModuleHierarchy</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.expandModuleHierarchyImports","kind":"def","line":257,"name":"Lean.Lsp.Ipc.expandModuleHierarchyImports","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L257-L298"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instToJsonModuleHierarchy.toJson\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">instToJsonModuleHierarchy</span>.<span class=\"name\">toJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy\">ModuleHierarchy</a> → <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instToJsonModuleHierarchy.toJson","kind":"opaque","line":255,"name":"Lean.Lsp.Ipc.instToJsonModuleHierarchy.toJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L255-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instToJsonModuleHierarchy\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">instToJsonModuleHierarchy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy\">ModuleHierarchy</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instToJsonModuleHierarchy","kind":"instance","line":255,"name":"Lean.Lsp.Ipc.instToJsonModuleHierarchy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L255-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instFromJsonModuleHierarchy\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">instFromJsonModuleHierarchy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy\">ModuleHierarchy</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instFromJsonModuleHierarchy","kind":"instance","line":255,"name":"Lean.Lsp.Ipc.instFromJsonModuleHierarchy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L255-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instFromJsonModuleHierarchy.fromJson\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">instFromJsonModuleHierarchy</span>.<span class=\"name\">fromJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy\">ModuleHierarchy</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instFromJsonModuleHierarchy.fromJson","kind":"opaque","line":255,"name":"Lean.Lsp.Ipc.instFromJsonModuleHierarchy.fromJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L255-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy.children\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">ModuleHierarchy</span>.<span class=\"name\">children</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy\">ModuleHierarchy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy\">ModuleHierarchy</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy.children","kind":"def","line":254,"name":"Lean.Lsp.Ipc.ModuleHierarchy.children","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L254-L254"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy.item\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">ModuleHierarchy</span>.<span class=\"name\">item</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy\">ModuleHierarchy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Extra.html#Lean.Lsp.LeanImport\">LeanImport</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy.item","kind":"def","line":253,"name":"Lean.Lsp.Ipc.ModuleHierarchy.item","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L253-L253"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">ModuleHierarchy</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">item</span> : <a href=\"./Lean/Data/Lsp/Extra.html#Lean.Lsp.LeanImport\">LeanImport</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">children</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy\">ModuleHierarchy</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy\">ModuleHierarchy</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy.mk","kind":"ctor","line":252,"name":"Lean.Lsp.Ipc.ModuleHierarchy.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L252-L252"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">ModuleHierarchy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ModuleHierarchy","kind":"structure","line":252,"name":"Lean.Lsp.Ipc.ModuleHierarchy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L252-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.expandOutgoingCallHierarchy\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">expandOutgoingCallHierarchy</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">requestNo</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">uri</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">DocumentUri</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Position\">Position</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy\">CallHierarchy</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.expandOutgoingCallHierarchy","kind":"def","line":210,"name":"Lean.Lsp.Ipc.expandOutgoingCallHierarchy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L210-L250"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.expandIncomingCallHierarchy\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">expandIncomingCallHierarchy</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">requestNo</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">uri</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">DocumentUri</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Position\">Position</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy\">CallHierarchy</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.expandIncomingCallHierarchy","kind":"def","line":168,"name":"Lean.Lsp.Ipc.expandIncomingCallHierarchy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L168-L208"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instToJsonCallHierarchy\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">instToJsonCallHierarchy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy\">CallHierarchy</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instToJsonCallHierarchy","kind":"instance","line":166,"name":"Lean.Lsp.Ipc.instToJsonCallHierarchy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L166-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instToJsonCallHierarchy.toJson\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">instToJsonCallHierarchy</span>.<span class=\"name\">toJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy\">CallHierarchy</a> → <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instToJsonCallHierarchy.toJson","kind":"opaque","line":166,"name":"Lean.Lsp.Ipc.instToJsonCallHierarchy.toJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L166-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instFromJsonCallHierarchy\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">instFromJsonCallHierarchy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy\">CallHierarchy</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instFromJsonCallHierarchy","kind":"instance","line":166,"name":"Lean.Lsp.Ipc.instFromJsonCallHierarchy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L166-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instFromJsonCallHierarchy.fromJson\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">instFromJsonCallHierarchy</span>.<span class=\"name\">fromJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy\">CallHierarchy</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.instFromJsonCallHierarchy.fromJson","kind":"opaque","line":166,"name":"Lean.Lsp.Ipc.instFromJsonCallHierarchy.fromJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L166-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy.children\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">CallHierarchy</span>.<span class=\"name\">children</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy\">CallHierarchy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy\">CallHierarchy</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy.children","kind":"def","line":165,"name":"Lean.Lsp.Ipc.CallHierarchy.children","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L165-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy.fromRanges\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">CallHierarchy</span>.<span class=\"name\">fromRanges</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy\">CallHierarchy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Range\">Range</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy.fromRanges","kind":"def","line":164,"name":"Lean.Lsp.Ipc.CallHierarchy.fromRanges","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L164-L164"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy.item\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">CallHierarchy</span>.<span class=\"name\">item</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy\">CallHierarchy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.CallHierarchyItem\">CallHierarchyItem</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy.item","kind":"def","line":163,"name":"Lean.Lsp.Ipc.CallHierarchy.item","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L163-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">CallHierarchy</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">item</span> : <a href=\"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.CallHierarchyItem\">CallHierarchyItem</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fromRanges</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Range\">Range</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">children</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy\">CallHierarchy</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy\">CallHierarchy</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy.mk","kind":"ctor","line":162,"name":"Lean.Lsp.Ipc.CallHierarchy.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L162-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">CallHierarchy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.CallHierarchy","kind":"structure","line":162,"name":"Lean.Lsp.Ipc.CallHierarchy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L162-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.waitForMessage\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">waitForMessage</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Waits for a diagnostic notification with a specific message to be emitted. Discards all received\nmessages, so should not be combined with `collectDiagnostics`.\n","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.waitForMessage","kind":"def","line":144,"name":"Lean.Lsp.Ipc.waitForMessage","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L144-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.waitForILeans\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">waitForILeans</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">waitForILeansId</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">JsonRpc.RequestID</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">target</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">DocumentUri</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">version</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.waitForILeans","kind":"def","line":131,"name":"Lean.Lsp.Ipc.waitForILeans","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L131-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.collectDiagnostics\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">collectDiagnostics</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">waitForDiagnosticsId</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">JsonRpc.RequestID</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">target</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">DocumentUri</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">version</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\">JsonRpc.Notification</a> <a href=\"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.PublishDiagnosticsParams\">PublishDiagnosticsParams</a>)</span>)</span></span></div></div>","info":{"doc":"Waits for the worker to emit all diagnostic notifications for the current document version and\nreturns the last notification, if any.\n\nWe used to return all notifications but with debouncing in the server, this would not be\ndeterministic anymore as what messages are dropped depends on wall-clock timing.\n ","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.collectDiagnostics","kind":"def","line":104,"name":"Lean.Lsp.Ipc.collectDiagnostics","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L104-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.normalizePublishDiagnosticsParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">normalizePublishDiagnosticsParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.PublishDiagnosticsParams\">PublishDiagnosticsParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.PublishDiagnosticsParams\">PublishDiagnosticsParams</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.normalizePublishDiagnosticsParams","kind":"def","line":93,"name":"Lean.Lsp.Ipc.normalizePublishDiagnosticsParams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L93-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.waitForExit\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">waitForExit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.waitForExit","kind":"def","line":90,"name":"Lean.Lsp.Ipc.waitForExit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L90-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.readResponseAs\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">readResponseAs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expectedID</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">JsonRpc.RequestID</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response\">JsonRpc.Response</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Reads response, discarding notifications and server-to-client requests in between.\nThis function is meant purely for testing where we use `collectDiagnostics` explicitly\nif we do care about such notifications.\n","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.readResponseAs","kind":"opaque","line":70,"name":"Lean.Lsp.Ipc.readResponseAs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L70-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.readRequestAs\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">readRequestAs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expectedMethod</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\">JsonRpc.Request</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.readRequestAs","kind":"def","line":67,"name":"Lean.Lsp.Ipc.readRequestAs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L67-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.readMessage\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">readMessage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">JsonRpc.Message</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.readMessage","kind":"def","line":64,"name":"Lean.Lsp.Ipc.readMessage","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L64-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.shutdown\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">shutdown</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">requestNo</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.shutdown","kind":"def","line":47,"name":"Lean.Lsp.Ipc.shutdown","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L47-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.writeNotification\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">writeNotification</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\">JsonRpc.Notification</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.writeNotification","kind":"def","line":44,"name":"Lean.Lsp.Ipc.writeNotification","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L44-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.writeRequest\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">writeRequest</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\">JsonRpc.Request</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.writeRequest","kind":"def","line":41,"name":"Lean.Lsp.Ipc.writeRequest","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L41-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.stdout\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">stdout</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.stdout","kind":"def","line":38,"name":"Lean.Lsp.Ipc.stdout","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L38-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.stdin\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">stdin</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\">IpcM</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.stdin","kind":"def","line":35,"name":"Lean.Lsp.Ipc.stdin","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L35-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">IpcM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM","kind":"def","line":31,"name":"Lean.Lsp.Ipc.IpcM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ipcStdioConfig\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">Ipc</span>.<span class=\"name\">ipcStdioConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ipcStdioConfig","kind":"def","line":26,"name":"Lean.Lsp.Ipc.ipcStdioConfig","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Lsp/Ipc.lean#L26-L29"}}],"imports":["Lean.Data.Lsp.Communication","Lean.Data.Lsp.Diagnostics","Lean.Data.Lsp.Extra","Init.Data.List.Sort.Basic","Lean.Data.Lsp.LanguageFeatures"],"instances":[{"className":"Lean.FromJson","name":"Lean.Lsp.Ipc.instFromJsonCallHierarchy","typeNames":["Lean.Lsp.Ipc.CallHierarchy"]},{"className":"Lean.ToJson","name":"Lean.Lsp.Ipc.instToJsonCallHierarchy","typeNames":["Lean.Lsp.Ipc.CallHierarchy"]},{"className":"Lean.FromJson","name":"Lean.Lsp.Ipc.instFromJsonModuleHierarchy","typeNames":["Lean.Lsp.Ipc.ModuleHierarchy"]},{"className":"Lean.ToJson","name":"Lean.Lsp.Ipc.instToJsonModuleHierarchy","typeNames":["Lean.Lsp.Ipc.ModuleHierarchy"]}],"name":"Lean.Data.Lsp.Ipc"}