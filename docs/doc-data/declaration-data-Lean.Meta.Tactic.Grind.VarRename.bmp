{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.mkVarRename\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">mkVarRename</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">new2old</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.Var\">Var</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarRename\">VarRename</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.mkVarRename","kind":"def","line":40,"name":"Lean.Meta.Grind.mkVarRename","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/VarRename.lean#L40-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.instCoeFunVarRenameForallVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCoeFunVarRenameForallVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeFun\">CoeFun</a> <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarRename\">VarRename</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarRename\">VarRename</a>) =&gt; <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.Var\">Var</a> → <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.Var\">Var</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.instCoeFunVarRenameForallVar","kind":"instance","line":37,"name":"Lean.Meta.Grind.instCoeFunVarRenameForallVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/VarRename.lean#L37-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarRename.map\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">VarRename</span>.<span class=\"name\">map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarRename\">VarRename</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.Var\">Var</a> <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.Var\">Var</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarRename.map","kind":"def","line":35,"name":"Lean.Meta.Grind.VarRename.map","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/VarRename.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarRename.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">VarRename</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.Var\">Var</a> <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.Var\">Var</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarRename\">VarRename</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarRename.mk","kind":"ctor","line":34,"name":"Lean.Meta.Grind.VarRename.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/VarRename.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarRename\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">VarRename</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarRename","kind":"structure","line":34,"name":"Lean.Meta.Grind.VarRename","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/VarRename.lean#L34-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.FoundVars.toArray\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">FoundVars</span>.<span class=\"name\">toArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.FoundVars\">FoundVars</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.Var\">Var</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.FoundVars.toArray","kind":"def","line":31,"name":"Lean.Meta.Grind.FoundVars.toArray","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/VarRename.lean#L31-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.collectMapVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">collectMapVars</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Expr</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">Expr</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarCollector\">VarCollector</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarCollector\">VarCollector</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.collectMapVars","kind":"def","line":25,"name":"Lean.Meta.Grind.collectMapVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/VarRename.lean#L25-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.instAndThenVarCollector\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instAndThenVarCollector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#AndThen\">AndThen</a> <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarCollector\">VarCollector</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.instAndThenVarCollector","kind":"instance","line":22,"name":"Lean.Meta.Grind.instAndThenVarCollector","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/VarRename.lean#L22-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.collectVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">collectVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarCollector\">VarCollector</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.collectVar","kind":"def","line":20,"name":"Lean.Meta.Grind.collectVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/VarRename.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarCollector\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">VarCollector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.VarCollector","kind":"def","line":18,"name":"Lean.Meta.Grind.VarCollector","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/VarRename.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.FoundVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">FoundVars</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.FoundVars","kind":"def","line":16,"name":"Lean.Meta.Grind.FoundVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/VarRename.lean#L16-L16"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.Var\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Var</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/VarRename.html#Lean.Meta.Grind.Var","kind":"def","line":15,"name":"Lean.Meta.Grind.Var","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/VarRename.lean#L15-L15"}}],"imports":["Init.Data.Array.QSort","Std.Data.HashSet","Init.Data.Hashable"],"instances":[{"className":"AndThen","name":"Lean.Meta.Grind.instAndThenVarCollector","typeNames":["Lean.Meta.Grind.VarCollector"]},{"className":"CoeFun","name":"Lean.Meta.Grind.instCoeFunVarRenameForallVar","typeNames":["Lean.Meta.Grind.VarRename"]}],"name":"Lean.Meta.Tactic.Grind.VarRename"}