{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.instToStringStats\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">instToStringStats</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats\">Stats</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.instToStringStats","kind":"instance","line":367,"name":"Lean.PersistentHashMap.instToStringStats","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L367-L367"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats.toString\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">Stats</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats\">Stats</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats.toString","kind":"def","line":364,"name":"Lean.PersistentHashMap.Stats.toString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L364-L365"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.stats\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">stats</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats\">Stats</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.stats","kind":"def","line":361,"name":"Lean.PersistentHashMap.stats","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L361-L362"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.collectStats\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">collectStats</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats\">Stats</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats\">Stats</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.collectStats","kind":"opaque","line":343,"name":"Lean.PersistentHashMap.collectStats","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L343-L359"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats.maxDepth\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">Stats</span>.<span class=\"name\">maxDepth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats\">Stats</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats.maxDepth","kind":"def","line":341,"name":"Lean.PersistentHashMap.Stats.maxDepth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L341-L341"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats.numCollisions\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">Stats</span>.<span class=\"name\">numCollisions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats\">Stats</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats.numCollisions","kind":"def","line":340,"name":"Lean.PersistentHashMap.Stats.numCollisions","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L340-L340"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats.numNull\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">Stats</span>.<span class=\"name\">numNull</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats\">Stats</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats.numNull","kind":"def","line":339,"name":"Lean.PersistentHashMap.Stats.numNull","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L339-L339"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats.numNodes\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">Stats</span>.<span class=\"name\">numNodes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats\">Stats</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats.numNodes","kind":"def","line":338,"name":"Lean.PersistentHashMap.Stats.numNodes","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L338-L338"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">Stats</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numNodes </span><span class=\"fn\">numNull </span><span class=\"fn\">numCollisions </span><span class=\"fn\">maxDepth</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats\">Stats</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats.mk","kind":"ctor","line":337,"name":"Lean.PersistentHashMap.Stats.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L337-L337"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">Stats</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Stats","kind":"structure","line":337,"name":"Lean.PersistentHashMap.Stats","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L337-L341"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.toArray\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">toArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.toArray","kind":"def","line":334,"name":"Lean.PersistentHashMap.toArray","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L334-L335"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.toList\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">toList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.toList","kind":"def","line":331,"name":"Lean.PersistentHashMap.toList","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L331-L332"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.map\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pm</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.map","kind":"def","line":328,"name":"Lean.PersistentHashMap.map","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L328-L329"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mapM\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">mapM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pm</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mapM","kind":"def","line":324,"name":"Lean.PersistentHashMap.mapM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L324-L326"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mapMAux\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">mapMAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mapMAux","kind":"opaque","line":312,"name":"Lean.PersistentHashMap.mapMAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L312-L322"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.instForInProd\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">instForInProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> w → <a href=\"./foundational_types.html\">Type</a> w'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#ForIn\">ForIn</a> <span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.instForInProd","kind":"instance","line":307,"name":"Lean.PersistentHashMap.instForInProd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L307-L308"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.forIn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">forIn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> w → <a href=\"./foundational_types.html\">Type</a> w'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Core.html#ForInStep\">ForInStep</a> <span class=\"fn\">σ</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.forIn","kind":"def","line":297,"name":"Lean.PersistentHashMap.forIn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L297-L305"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.foldl\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">foldl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">σ</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.foldl","kind":"def","line":294,"name":"Lean.PersistentHashMap.foldl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L294-L295"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.forM\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">forM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> w → <a href=\"./foundational_types.html\">Type</a> w'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.forM","kind":"def","line":291,"name":"Lean.PersistentHashMap.forM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L291-L292"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.foldlM\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">foldlM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> w → <a href=\"./foundational_types.html\">Type</a> w'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">σ</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.foldlM","kind":"def","line":288,"name":"Lean.PersistentHashMap.foldlM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L288-L289"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.foldlMAux\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">foldlMAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> w → <a href=\"./foundational_types.html\">Type</a> w'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">σ</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">σ</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.foldlMAux","kind":"opaque","line":270,"name":"Lean.PersistentHashMap.foldlMAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L270-L286"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.erase\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">erase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.erase","kind":"def","line":261,"name":"Lean.PersistentHashMap.erase","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L261-L264"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.eraseAux\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">eraseAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#USize\">USize</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.eraseAux","kind":"opaque","line":236,"name":"Lean.PersistentHashMap.eraseAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L236-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.isUnaryNode\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">isUnaryNode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.isUnaryNode","kind":"def","line":226,"name":"Lean.PersistentHashMap.isUnaryNode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L226-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.isUnaryEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">isUnaryEntries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry\">Entry</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.isUnaryEntries","kind":"opaque","line":215,"name":"Lean.PersistentHashMap.isUnaryEntries","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L215-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">contains</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.contains","kind":"def","line":212,"name":"Lean.PersistentHashMap.contains","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L212-L213"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.containsAux\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">containsAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#USize\">USize</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.containsAux","kind":"opaque","line":203,"name":"Lean.PersistentHashMap.containsAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L203-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.containsAtAux\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">containsAtAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">keys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">heq</span> : <span class=\"fn\"><span class=\"fn\">keys</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">vals</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.containsAtAux","kind":"opaque","line":196,"name":"Lean.PersistentHashMap.containsAtAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L196-L201"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.findEntry?\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">findEntry?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.findEntry?","kind":"def","line":193,"name":"Lean.PersistentHashMap.findEntry?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L193-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.findEntryAux\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">findEntryAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#USize\">USize</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.findEntryAux","kind":"opaque","line":184,"name":"Lean.PersistentHashMap.findEntryAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L184-L191"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.findEntryAtAux\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">findEntryAtAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">keys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">heq</span> : <span class=\"fn\"><span class=\"fn\">keys</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">vals</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.findEntryAtAux","kind":"opaque","line":176,"name":"Lean.PersistentHashMap.findEntryAtAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L176-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.find!\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">find!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">β</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.find!","kind":"def","line":171,"name":"Lean.PersistentHashMap.find!","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L171-L174"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.findD\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">findD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₀</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">β</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.findD","kind":"def","line":168,"name":"Lean.PersistentHashMap.findD","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L168-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.instGetElemOptionTrue\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">instGetElemOptionTrue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/GetElem.html#GetElem\">GetElem</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span> <span class=\"fn\">α</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>) (<span class=\"fn\">x_1</span> : <span class=\"fn\">α</span>) =&gt; <a href=\"./Init/Prelude.html#True\">True</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.instGetElemOptionTrue","kind":"instance","line":165,"name":"Lean.PersistentHashMap.instGetElemOptionTrue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L165-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.find?\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">find?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.find?","kind":"def","line":162,"name":"Lean.PersistentHashMap.find?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L162-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.findAux\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">findAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#USize\">USize</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.findAux","kind":"opaque","line":153,"name":"Lean.PersistentHashMap.findAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L153-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.findAtAux\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">findAtAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">keys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">heq</span> : <span class=\"fn\"><span class=\"fn\">keys</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">vals</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.findAtAux","kind":"opaque","line":145,"name":"Lean.PersistentHashMap.findAtAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L145-L151"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.insert","kind":"def","line":142,"name":"Lean.PersistentHashMap.insert","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L142-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.insertAux\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">insertAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#USize\">USize</a> → <a href=\"./Init/Prelude.html#USize\">USize</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.insertAux","kind":"opaque","line":114,"name":"Lean.PersistentHashMap.insertAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L114-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mkCollisionNode\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">mkCollisionNode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k₁</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v₁</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k₂</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v₂</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mkCollisionNode","kind":"def","line":107,"name":"Lean.PersistentHashMap.mkCollisionNode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L107-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.getCollisionNodeSize\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">getCollisionNodeSize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.CollisionNode\">CollisionNode</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.getCollisionNodeSize","kind":"def","line":103,"name":"Lean.PersistentHashMap.getCollisionNodeSize","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L103-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.insertAtCollisionNode\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">insertAtCollisionNode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.CollisionNode\">CollisionNode</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.CollisionNode\">CollisionNode</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.insertAtCollisionNode","kind":"def","line":100,"name":"Lean.PersistentHashMap.insertAtCollisionNode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L100-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.insertAtCollisionNodeAux\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">insertAtCollisionNodeAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.CollisionNode\">CollisionNode</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.CollisionNode\">CollisionNode</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.insertAtCollisionNodeAux","kind":"opaque","line":88,"name":"Lean.PersistentHashMap.insertAtCollisionNodeAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L88-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.EntriesNode\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">EntriesNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max 0 u_2 u_1)</div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.EntriesNode","kind":"def","line":79,"name":"Lean.PersistentHashMap.EntriesNode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.IsEntriesNode.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">IsEntriesNode</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">entries</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry\">Entry</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.IsEntriesNode\">IsEntriesNode</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node.entries\">Node.entries</a> <span class=\"fn\">entries</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.IsEntriesNode.mk","kind":"ctor","line":77,"name":"Lean.PersistentHashMap.IsEntriesNode.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L77-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.IsEntriesNode\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">IsEntriesNode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.IsEntriesNode","kind":"inductive","line":76,"name":"Lean.PersistentHashMap.IsEntriesNode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L76-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.CollisionNode\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">CollisionNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max 0 u_2 u_1)</div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.CollisionNode","kind":"def","line":74,"name":"Lean.PersistentHashMap.CollisionNode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L74-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.IsCollisionNode.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">IsCollisionNode</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">keys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">keys</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">vals</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.IsCollisionNode\">IsCollisionNode</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node.collision\">Node.collision</a> <span class=\"fn\">keys</span> <span class=\"fn\">vals</span> <span class=\"fn\">h</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.IsCollisionNode.mk","kind":"ctor","line":72,"name":"Lean.PersistentHashMap.IsCollisionNode.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L72-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.IsCollisionNode\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">IsCollisionNode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.IsCollisionNode","kind":"inductive","line":71,"name":"Lean.PersistentHashMap.IsCollisionNode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L71-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mod2Shift\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">mod2Shift</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">shift</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mod2Shift","kind":"def","line":69,"name":"Lean.PersistentHashMap.mod2Shift","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.div2Shift\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">div2Shift</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">shift</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.div2Shift","kind":"def","line":68,"name":"Lean.PersistentHashMap.div2Shift","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mul2Shift\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">mul2Shift</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">shift</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mul2Shift","kind":"def","line":67,"name":"Lean.PersistentHashMap.mul2Shift","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L67-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mkEmptyEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">mkEmptyEntries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mkEmptyEntries","kind":"def","line":64,"name":"Lean.PersistentHashMap.mkEmptyEntries","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L64-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.instInhabited\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.instInhabited","kind":"instance","line":62,"name":"Lean.PersistentHashMap.instInhabited","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.isEmpty\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.isEmpty","kind":"def","line":59,"name":"Lean.PersistentHashMap.isEmpty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L59-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.empty","kind":"def","line":57,"name":"Lean.PersistentHashMap.empty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\"><span class=\"name\">Lean</span>.<span class=\"name\">PHashMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v)</div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PHashMap","kind":"def","line":53,"name":"Lean.PHashMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.root\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.root","kind":"def","line":51,"name":"Lean.PersistentHashMap.root","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">root</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mk","kind":"ctor","line":50,"name":"Lean.PersistentHashMap.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v)</div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap","kind":"structure","line":50,"name":"Lean.PersistentHashMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L50-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mkEmptyEntriesArray\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">mkEmptyEntriesArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry\">Entry</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.mkEmptyEntriesArray","kind":"def","line":45,"name":"Lean.PersistentHashMap.mkEmptyEntriesArray","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L45-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.maxCollisions\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">maxCollisions</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.maxCollisions","kind":"def","line":43,"name":"Lean.PersistentHashMap.maxCollisions","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.maxDepth\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">maxDepth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.maxDepth","kind":"def","line":42,"name":"Lean.PersistentHashMap.maxDepth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.branching\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">branching</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.branching","kind":"def","line":41,"name":"Lean.PersistentHashMap.branching","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.shift\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">shift</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.shift","kind":"def","line":40,"name":"Lean.PersistentHashMap.shift","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.instInhabitedNode\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">instInhabitedNode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.instInhabitedNode","kind":"instance","line":38,"name":"Lean.PersistentHashMap.instInhabitedNode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node.isEmpty\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">Node</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node.isEmpty","kind":"opaque","line":31,"name":"Lean.PersistentHashMap.Node.isEmpty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L31-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node.collision\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">Node</span>.<span class=\"name\">collision</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ks</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">ks</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">vs</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node.collision","kind":"ctor","line":29,"name":"Lean.PersistentHashMap.Node.collision","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node.entries\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">Node</span>.<span class=\"name\">entries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">es</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry\">Entry</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\">Node</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node.entries","kind":"ctor","line":28,"name":"Lean.PersistentHashMap.Node.entries","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">Node</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v)</div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Node","kind":"inductive","line":27,"name":"Lean.PersistentHashMap.Node","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L27-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.instInhabitedEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">instInhabitedEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry\">Entry</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.instInhabitedEntry","kind":"instance","line":25,"name":"Lean.PersistentHashMap.instInhabitedEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry.null\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">Entry</span>.<span class=\"name\">null</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry\">Entry</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry.null","kind":"ctor","line":23,"name":"Lean.PersistentHashMap.Entry.null","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">Entry</span>.<span class=\"name\">ref</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">node</span> : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry\">Entry</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry.ref","kind":"ctor","line":22,"name":"Lean.PersistentHashMap.Entry.ref","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry.entry\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">Entry</span>.<span class=\"name\">entry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">key</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry\">Entry</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry.entry","kind":"ctor","line":21,"name":"Lean.PersistentHashMap.Entry.entry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentHashMap</span>.<span class=\"name\">Entry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max u v) w)</div></div>","info":{"doc":"","docLink":"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap.Entry","kind":"inductive","line":20,"name":"Lean.PersistentHashMap.Entry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/PersistentHashMap.lean#L20-L23"}}],"imports":["Init.Data.Array.BasicAux","Init.Data.UInt.Basic","Init.Data.String.Basic"],"instances":[{"className":"Inhabited","name":"Lean.PersistentHashMap.instInhabitedEntry","typeNames":["Lean.PersistentHashMap.Entry"]},{"className":"Inhabited","name":"Lean.PersistentHashMap.instInhabitedNode","typeNames":["Lean.PersistentHashMap.Node"]},{"className":"Inhabited","name":"Lean.PersistentHashMap.instInhabited","typeNames":["Lean.PersistentHashMap"]},{"className":"GetElem","name":"Lean.PersistentHashMap.instGetElemOptionTrue","typeNames":["Lean.PersistentHashMap","Option"]},{"className":"ForIn","name":"Lean.PersistentHashMap.instForInProd","typeNames":["Lean.PersistentHashMap","Prod"]},{"className":"ToString","name":"Lean.PersistentHashMap.instToStringStats","typeNames":["Lean.PersistentHashMap.Stats"]}],"name":"Lean.Data.PersistentHashMap"}