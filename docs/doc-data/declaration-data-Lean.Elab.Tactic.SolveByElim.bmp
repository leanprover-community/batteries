{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.evalSolveByElim\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">SolveByElim</span>.<span class=\"name\">evalSolveByElim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Tactic</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.evalSolveByElim","kind":"def","line":101,"name":"Lean.Elab.Tactic.SolveByElim.evalSolveByElim","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/SolveByElim.lean#L101-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.evalApplyRules\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">SolveByElim</span>.<span class=\"name\">evalApplyRules</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Tactic</a></div></div>","info":{"doc":"Elaborator for apply_rules.\n\nSee `Lean.MVarId.applyRules` for a `MetaM` level analogue of this tactic.\n","docLink":"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.evalApplyRules","kind":"def","line":85,"name":"Lean.Elab.Tactic.SolveByElim.evalApplyRules","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/SolveByElim.lean#L85-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.evalApplyAssumption\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">SolveByElim</span>.<span class=\"name\">evalApplyAssumption</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Tactic</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.evalApplyAssumption","kind":"def","line":72,"name":"Lean.Elab.Tactic.SolveByElim.evalApplyAssumption","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/SolveByElim.lean#L72-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.processSyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">SolveByElim</span>.<span class=\"name\">processSyntax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cfg</span> : <a href=\"./Lean/Meta/Tactic/SolveByElim.html#Lean.Meta.SolveByElim.SolveByElimConfig\">Meta.SolveByElim.SolveByElimConfig</a> := <a href=\"./Lean/Meta/Tactic/SolveByElim.html#Lean.Meta.SolveByElim.SolveByElimConfig.mk\">{</a> <a href=\"./Lean/Meta/Tactic/SolveByElim.html#Lean.Meta.SolveByElim.SolveByElimConfig.mk\">}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">only </span><span class=\"fn\">star</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">add </span><span class=\"fn\">remove</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">use</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Ident\">Ident</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span></div></div>","info":{"doc":"Wrapper for `solveByElim` that processes a list of `Term`s\nthat specify the lemmas to use. ","docLink":"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.processSyntax","kind":"def","line":63,"name":"Lean.Elab.Tactic.SolveByElim.processSyntax","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/SolveByElim.lean#L63-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.parseUsing\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">SolveByElim</span>.<span class=\"name\">parseUsing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.SolveByElim.using_</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Ident\">Ident</a></span></div></div>","info":{"doc":"Parse the `using ...` argument for `solve_by_elim`. ","docLink":"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.parseUsing","kind":"def","line":55,"name":"Lean.Elab.Tactic.SolveByElim.parseUsing","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/SolveByElim.lean#L55-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.parseArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">SolveByElim</span>.<span class=\"name\">parseArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.SolveByElim.args</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a></span></div></div>","info":{"doc":"Parse the lemma argument of a call to `solve_by_elim`.\nThe first component should be true if `*` appears at least once.\nThe second component should contain each term `t`in the arguments.\nThe third component should contain `t` for each `-t` in the arguments.\n","docLink":"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.parseArgs","kind":"def","line":32,"name":"Lean.Elab.Tactic.SolveByElim.parseArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/SolveByElim.lean#L32-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.elabApplyRulesConfig\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">SolveByElim</span>.<span class=\"name\">elabApplyRulesConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">TacticM</a> <a href=\"./Lean/Meta/Tactic/SolveByElim.html#Lean.Meta.SolveByElim.ApplyRulesConfig\">Meta.SolveByElim.ApplyRulesConfig</a></span></span></div></div>","info":{"doc":"Allow elaboration of `ApplyRulesConfig` arguments to tactics.\n","docLink":"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.elabApplyRulesConfig","kind":"def","line":27,"name":"Lean.Elab.Tactic.SolveByElim.elabApplyRulesConfig","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/SolveByElim.lean#L27-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.elabConfig\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">SolveByElim</span>.<span class=\"name\">elabConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">TacticM</a> <a href=\"./Lean/Meta/Tactic/SolveByElim.html#Lean.Meta.SolveByElim.SolveByElimConfig\">Meta.SolveByElim.SolveByElimConfig</a></span></span></div></div>","info":{"doc":"Allow elaboration of `Config` arguments to tactics.\n","docLink":"./Lean/Elab/Tactic/SolveByElim.html#Lean.Elab.Tactic.SolveByElim.elabConfig","kind":"def","line":22,"name":"Lean.Elab.Tactic.SolveByElim.elabConfig","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/SolveByElim.lean#L22-L25"}}],"imports":["Lean.Meta.Tactic.SolveByElim","Lean.Elab.Tactic.Config"],"instances":[],"name":"Lean.Elab.Tactic.SolveByElim"}