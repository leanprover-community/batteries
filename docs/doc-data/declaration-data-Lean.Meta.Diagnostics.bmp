{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.reportDiag\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">reportDiag</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Logs diagnostics and resets the counters ","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.reportDiag","kind":"def","line":85,"name":"Lean.Meta.reportDiag","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L85-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.appendSection\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">appendSection</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cls</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">header</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary\">DiagSummary</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">resultSummary</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></span></div></div>","info":{"doc":"We use below that this returns `m` unchanged if `s.isEmpty`\n","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.appendSection","kind":"def","line":75,"name":"Lean.Meta.appendSection","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L75-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.mkDiagSynthPendingFailure\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">mkDiagSynthPendingFailure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">failures</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">PHashMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary\">DiagSummary</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.mkDiagSynthPendingFailure","kind":"def","line":66,"name":"Lean.Meta.mkDiagSynthPendingFailure","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L66-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.mkDiagSummaryForUsedInstances\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">mkDiagSummaryForUsedInstances</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary\">DiagSummary</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.mkDiagSummaryForUsedInstances","kind":"def","line":63,"name":"Lean.Meta.mkDiagSummaryForUsedInstances","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L63-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.mkDiagSummaryForUnfoldedReducible\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">mkDiagSummaryForUnfoldedReducible</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">counters</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">PHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary\">DiagSummary</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.mkDiagSummaryForUnfoldedReducible","kind":"def","line":58,"name":"Lean.Meta.mkDiagSummaryForUnfoldedReducible","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L58-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.mkDiagSummaryForUnfolded\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">mkDiagSummaryForUnfolded</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">counters</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">PHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">instances</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary\">DiagSummary</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.mkDiagSummaryForUnfolded","kind":"def","line":52,"name":"Lean.Meta.mkDiagSummaryForUnfolded","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L52-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.mkDiagSummary\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">mkDiagSummary</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cls</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">counters</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">PHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> â†’ <a href=\"./Init/Prelude.html#Bool\">Bool</a></span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>) =&gt; <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary\">DiagSummary</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.mkDiagSummary","kind":"def","line":41,"name":"Lean.Meta.mkDiagSummary","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L41-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary.isEmpty\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiagSummary</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary\">DiagSummary</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary.isEmpty","kind":"def","line":38,"name":"Lean.Meta.DiagSummary.isEmpty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L38-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.instInhabitedDiagSummary.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedDiagSummary</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary\">DiagSummary</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.instInhabitedDiagSummary.default","kind":"def","line":36,"name":"Lean.Meta.instInhabitedDiagSummary.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.instInhabitedDiagSummary\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedDiagSummary</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary\">DiagSummary</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.instInhabitedDiagSummary","kind":"instance","line":36,"name":"Lean.Meta.instInhabitedDiagSummary","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary.max\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiagSummary</span>.<span class=\"name\">max</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary\">DiagSummary</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary.max","kind":"def","line":35,"name":"Lean.Meta.DiagSummary.max","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary.data\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiagSummary</span>.<span class=\"name\">data</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary\">DiagSummary</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary.data","kind":"def","line":34,"name":"Lean.Meta.DiagSummary.data","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiagSummary</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">max</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary\">DiagSummary</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary.mk","kind":"ctor","line":33,"name":"Lean.Meta.DiagSummary.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiagSummary</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.DiagSummary","kind":"structure","line":33,"name":"Lean.Meta.DiagSummary","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L33-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.subCounters\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">subCounters</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">Î±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">Î±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newCounters </span><span class=\"fn\">oldCounters</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">PHashMap</a> <span class=\"fn\">Î±</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">PHashMap</a> <span class=\"fn\">Î±</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.subCounters","kind":"def","line":24,"name":"Lean.Meta.subCounters","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L24-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Diagnostics.html#Lean.Meta.collectAboveThreshold\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">collectAboveThreshold</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">Î±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">Î±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">counters</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">PHashMap</a> <span class=\"fn\">Î±</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">threshold</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">Î±</span> â†’ <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lt</span> : <span class=\"fn\"><span class=\"fn\">Î±</span> â†’ <span class=\"fn\">Î±</span> â†’ <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\">Î±</span> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Diagnostics.html#Lean.Meta.collectAboveThreshold","kind":"def","line":16,"name":"Lean.Meta.collectAboveThreshold","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Diagnostics.lean#L16-L22"}}],"imports":["Lean.Meta.Basic","Lean.PrettyPrinter"],"instances":[{"className":"Inhabited","name":"Lean.Meta.instInhabitedDiagSummary","typeNames":["Lean.Meta.DiagSummary"]}],"name":"Lean.Meta.Diagnostics"}