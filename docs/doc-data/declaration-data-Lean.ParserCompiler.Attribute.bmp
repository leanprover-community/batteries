{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.runDeclFor\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">runDeclFor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserDecl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.runDeclFor","kind":"def","line":51,"name":"Lean.ParserCompiler.CombinatorAttribute.runDeclFor","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler/Attribute.lean#L51-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.setDeclFor\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">setDeclFor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserDecl </span><span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.setDeclFor","kind":"def","line":48,"name":"Lean.ParserCompiler.CombinatorAttribute.setDeclFor","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler/Attribute.lean#L48-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.getDeclFor?\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">getDeclFor?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserDecl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.getDeclFor?","kind":"def","line":45,"name":"Lean.ParserCompiler.CombinatorAttribute.getDeclFor?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler/Attribute.lean#L45-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.registerCombinatorAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">registerCombinatorAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">descr</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.registerCombinatorAttribute","kind":"def","line":23,"name":"Lean.ParserCompiler.registerCombinatorAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler/Attribute.lean#L23-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.instInhabitedCombinatorAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">instInhabitedCombinatorAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.instInhabitedCombinatorAttribute","kind":"instance","line":20,"name":"Lean.ParserCompiler.instInhabitedCombinatorAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler/Attribute.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.instInhabitedCombinatorAttribute.default\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">instInhabitedCombinatorAttribute</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.instInhabitedCombinatorAttribute.default","kind":"def","line":20,"name":"Lean.ParserCompiler.instInhabitedCombinatorAttribute.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler/Attribute.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">ext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/EnvExtension.html#Lean.SimplePersistentEnvExtension\">SimplePersistentEnvExtension</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>) <span class=\"fn\">(<a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">NameMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.ext","kind":"def","line":19,"name":"Lean.ParserCompiler.CombinatorAttribute.ext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler/Attribute.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.impl\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">impl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.impl","kind":"def","line":18,"name":"Lean.ParserCompiler.CombinatorAttribute.impl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler/Attribute.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">impl</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/EnvExtension.html#Lean.SimplePersistentEnvExtension\">SimplePersistentEnvExtension</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>) <span class=\"fn\">(<a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">NameMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.mk","kind":"ctor","line":17,"name":"Lean.ParserCompiler.CombinatorAttribute.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler/Attribute.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute","kind":"structure","line":17,"name":"Lean.ParserCompiler.CombinatorAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler/Attribute.lean#L17-L20"}}],"imports":["Lean.Compiler.InitAttr","Lean.ExtraModUses"],"instances":[{"className":"Inhabited","name":"Lean.ParserCompiler.instInhabitedCombinatorAttribute","typeNames":["Lean.ParserCompiler.CombinatorAttribute"]}],"name":"Lean.ParserCompiler.Attribute"}