{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.throwInvalidUsrModifier\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">throwInvalidUsrModifier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.throwInvalidUsrModifier","kind":"def","line":61,"name":"Lean.Meta.Grind.throwInvalidUsrModifier","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Attr.lean#L61-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.getAttrKindFromOpt\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">getAttrKindFromOpt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind\">AttrKind</a></span></div></div>","info":{"doc":"Return theorem kind for `stx` of the form `(Attr.grindMod)?` ","docLink":"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.getAttrKindFromOpt","kind":"def","line":54,"name":"Lean.Meta.Grind.getAttrKindFromOpt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Attr.lean#L54-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.getAttrKindCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">getAttrKindCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind\">AttrKind</a></span></div></div>","info":{"doc":"Return theorem kind for `stx` of the form `Attr.grindThmMod` ","docLink":"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.getAttrKindCore","kind":"def","line":25,"name":"Lean.Meta.Grind.getAttrKindCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Attr.lean#L25-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind.inj\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AttrKind</span>.<span class=\"name\">inj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind\">AttrKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind.inj","kind":"ctor","line":23,"name":"Lean.Meta.Grind.AttrKind.inj","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Attr.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind.symbol\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AttrKind</span>.<span class=\"name\">symbol</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind\">AttrKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind.symbol","kind":"ctor","line":22,"name":"Lean.Meta.Grind.AttrKind.symbol","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Attr.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AttrKind</span>.<span class=\"name\">ext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind\">AttrKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind.ext","kind":"ctor","line":21,"name":"Lean.Meta.Grind.AttrKind.ext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Attr.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind.infer\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AttrKind</span>.<span class=\"name\">infer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind\">AttrKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind.infer","kind":"ctor","line":20,"name":"Lean.Meta.Grind.AttrKind.infer","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Attr.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind.intro\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AttrKind</span>.<span class=\"name\">intro</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind\">AttrKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind.intro","kind":"ctor","line":19,"name":"Lean.Meta.Grind.AttrKind.intro","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Attr.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind.cases\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AttrKind</span>.<span class=\"name\">cases</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eager</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind\">AttrKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind.cases","kind":"ctor","line":18,"name":"Lean.Meta.Grind.AttrKind.cases","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Attr.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind.ematch\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AttrKind</span>.<span class=\"name\">ematch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Lean/Meta/Tactic/Grind/EMatchTheorem.html#Lean.Meta.Grind.EMatchTheoremKind\">EMatchTheoremKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind\">AttrKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind.ematch","kind":"ctor","line":17,"name":"Lean.Meta.Grind.AttrKind.ematch","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Attr.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AttrKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Attr.html#Lean.Meta.Grind.AttrKind","kind":"inductive","line":16,"name":"Lean.Meta.Grind.AttrKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Attr.lean#L16-L23"}}],"imports":["Lean.Meta.Tactic.Grind.Injective","Lean.Meta.Tactic.Grind.Cases","Lean.Meta.Tactic.Grind.ExtAttr","Lean.ExtraModUses"],"instances":[],"name":"Lean.Meta.Tactic.Grind.Attr"}