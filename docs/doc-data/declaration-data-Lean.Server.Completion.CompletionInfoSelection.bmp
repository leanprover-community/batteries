{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Completion/CompletionInfoSelection.html#Lean.Server.Completion.findPrioritizedCompletionPartitionsAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Completion</span>.<span class=\"name\">findPrioritizedCompletionPartitionsAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fileMap</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hoverPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cmdStx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">infoTree</span> : <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Elab.InfoTree</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Lean/Server/Completion/CompletionUtils.html#Lean.Server.Completion.ContextualizedCompletionInfo\">ContextualizedCompletionInfo</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>))</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Finds all `CompletionInfo`s (both from the `InfoTree` and synthetic ones), prioritizes them,\narranges them in partitions of `CompletionInfo`s with the same priority and sorts these partitions\nso that `CompletionInfo`s with the highest priority come first.\nThe returned `CompletionInfo`s are also tagged with their index in `findCompletionInfosAt` so that\nwhen resolving a `CompletionItem`, we can reconstruct which `CompletionInfo` it was created from.\n\nIn general, the `InfoTree` may contain multiple different `CompletionInfo`s covering `hoverPos`,\nand so we need to decide which of these `CompletionInfo`s we want to use to show completions to the\nuser. We choose priorities by the following rules:\n- Synthetic completions have the lowest priority since they are only intended as a backup.\n- Non-identifier completions have the highest priority since they tend to be much more helpful than\n  identifier completions when available since there are typically way too many of the latter.\n- Within the three groups [non-id completions, id completions, synthetic completions],\n  `CompletionInfo`s with a smaller range are considered to be better.\n","docLink":"./Lean/Server/Completion/CompletionInfoSelection.html#Lean.Server.Completion.findPrioritizedCompletionPartitionsAt","kind":"def","line":124,"name":"Lean.Server.Completion.findPrioritizedCompletionPartitionsAt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Completion/CompletionInfoSelection.lean#L124-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Completion/CompletionInfoSelection.html#Lean.Server.Completion.findCompletionInfosAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Completion</span>.<span class=\"name\">findCompletionInfosAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fileMap</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hoverPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cmdStx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">infoTree</span> : <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Elab.InfoTree</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/Completion/CompletionUtils.html#Lean.Server.Completion.ContextualizedCompletionInfo\">ContextualizedCompletionInfo</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/Completion/CompletionInfoSelection.html#Lean.Server.Completion.findCompletionInfosAt","kind":"def","line":50,"name":"Lean.Server.Completion.findCompletionInfosAt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Completion/CompletionInfoSelection.lean#L50-L96"}}],"imports":["Lean.Server.Completion.SyntheticCompletion"],"instances":[],"name":"Lean.Server.Completion.CompletionInfoSelection"}