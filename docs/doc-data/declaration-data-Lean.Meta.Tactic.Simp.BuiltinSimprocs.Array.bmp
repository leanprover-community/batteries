{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Array.html#Array.reduceGetElem!\"><span class=\"name\">Array</span>.<span class=\"name\">reduceGetElem!</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"Simplification procedure for `#[...][n]!` for `n` a `Nat` literal. ","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Array.html#Array.reduceGetElem!","kind":"def","line":31,"name":"Array.reduceGetElem!","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Array.lean#L31-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Array.html#Array.reduceGetElem?\"><span class=\"name\">Array</span>.<span class=\"name\">reduceGetElem?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"Simplification procedure for `#[...][n]?` for `n` a `Nat` literal. ","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Array.html#Array.reduceGetElem?","kind":"def","line":23,"name":"Array.reduceGetElem?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Array.lean#L23-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Array.html#Array.reduceGetElem\"><span class=\"name\">Array</span>.<span class=\"name\">reduceGetElem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"Simplification procedure for `#[...][n]` for `n` a `Nat` literal. ","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Array.html#Array.reduceGetElem","kind":"def","line":16,"name":"Array.reduceGetElem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Array.lean#L16-L21"}}],"imports":["Lean.Meta.Tactic.Simp.BuiltinSimprocs.Nat"],"instances":[],"name":"Lean.Meta.Tactic.Simp.BuiltinSimprocs.Array"}