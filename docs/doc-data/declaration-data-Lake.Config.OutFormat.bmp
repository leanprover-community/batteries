{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.ppModuleHeader\"><span class=\"name\">Lake</span>.<span class=\"name\">ppModuleHeader</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">header</span> : <a href=\"./Lean/Setup.html#Lean.ModuleHeader\">Lean.ModuleHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.ppModuleHeader","kind":"def","line":84,"name":"Lake.ppModuleHeader","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L84-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.ppImport\"><span class=\"name\">Lake</span>.<span class=\"name\">ppImport</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">imp</span> : <a href=\"./Lean/Setup.html#Lean.Import\">Lean.Import</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isModule</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.ppImport","kind":"def","line":72,"name":"Lake.ppImport","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L72-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.formatQuery\"><span class=\"name\">Lake</span>.<span class=\"name\">formatQuery</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.FormatQuery\">FormatQuery</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fmt</span> : <a href=\"./Lake/Config/OutFormat.html#Lake.OutFormat\">OutFormat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"Format function that uses `QueryText` and `QueryJson` to produce output. ","docLink":"./Lake/Config/OutFormat.html#Lake.formatQuery","kind":"def","line":66,"name":"Lake.formatQuery","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L66-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.nullFormat\"><span class=\"name\">Lake</span>.<span class=\"name\">nullFormat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fmt</span> : <a href=\"./Lake/Config/OutFormat.html#Lake.OutFormat\">OutFormat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Format function that produces \"null\" output. ","docLink":"./Lake/Config/OutFormat.html#Lake.nullFormat","kind":"def","line":60,"name":"Lake.nullFormat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L60-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.instFormatQueryOfQueryTextOfQueryJson\"><span class=\"name\">Lake</span>.<span class=\"name\">instFormatQueryOfQueryTextOfQueryJson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryText\">QueryText</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryJson\">QueryJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.FormatQuery\">FormatQuery</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.instFormatQueryOfQueryTextOfQueryJson","kind":"instance","line":58,"name":"Lake.instFormatQueryOfQueryTextOfQueryJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.FormatQuery.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">FormatQuery</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toQueryText</span> : <span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryText\">QueryText</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toQueryJson</span> : <span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryJson\">QueryJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.FormatQuery\">FormatQuery</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.FormatQuery.mk","kind":"ctor","line":56,"name":"Lake.FormatQuery.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.FormatQuery.toQueryJson\"><span class=\"name\">Lake</span>.<span class=\"name\">FormatQuery</span>.<span class=\"name\">toQueryJson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.FormatQuery\">FormatQuery</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryJson\">QueryJson</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.FormatQuery.toQueryJson","kind":"def","line":56,"name":"Lake.FormatQuery.toQueryJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.FormatQuery.toQueryText\"><span class=\"name\">Lake</span>.<span class=\"name\">FormatQuery</span>.<span class=\"name\">toQueryText</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.FormatQuery\">FormatQuery</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryText\">QueryText</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.FormatQuery.toQueryText","kind":"def","line":56,"name":"Lake.FormatQuery.toQueryText","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.FormatQuery\"><span class=\"name\">Lake</span>.<span class=\"name\">FormatQuery</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryText\">Lake.QueryText</a> <span class=\"fn\">α</span></span>, <span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryJson\">Lake.QueryJson</a> <span class=\"fn\">α</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"Class used to format target output for `lake query`. ","docLink":"./Lake/Config/OutFormat.html#Lake.FormatQuery","kind":"class","line":55,"name":"Lake.FormatQuery","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L55-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.instQueryJsonUnit\"><span class=\"name\">Lake</span>.<span class=\"name\">instQueryJsonUnit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryJson\">QueryJson</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.instQueryJsonUnit","kind":"instance","line":53,"name":"Lake.instQueryJsonUnit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.instQueryJsonOfToJson\"><span class=\"name\">Lake</span>.<span class=\"name\">instQueryJsonOfToJson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">Lean.ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryJson\">QueryJson</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.instQueryJsonOfToJson","kind":"instance","line":52,"name":"Lake.instQueryJsonOfToJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.instQueryJson\"><span class=\"name\">Lake</span>.<span class=\"name\">instQueryJson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryJson\">QueryJson</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.instQueryJson","kind":"instance","line":51,"name":"Lake.instQueryJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.QueryJson.queryJson\"><span class=\"name\">Lake</span>.<span class=\"name\">QueryJson</span>.<span class=\"name\">queryJson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryJson\">QueryJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a></span></div></div>","info":{"doc":"Format target output as JSON (e.g., for `lake query -J`). ","docLink":"./Lake/Config/OutFormat.html#Lake.QueryJson.queryJson","kind":"def","line":47,"name":"Lake.QueryJson.queryJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.QueryJson.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">QueryJson</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">queryJson</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryJson\">QueryJson</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.QueryJson.mk","kind":"ctor","line":45,"name":"Lake.QueryJson.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.QueryJson\"><span class=\"name\">Lake</span>.<span class=\"name\">QueryJson</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"Class used to format target output as JSON for `lake query -J`. ","docLink":"./Lake/Config/OutFormat.html#Lake.QueryJson","kind":"class","line":44,"name":"Lake.QueryJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L44-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.instQueryTextUnit\"><span class=\"name\">Lake</span>.<span class=\"name\">instQueryTextUnit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryText\">QueryText</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.instQueryTextUnit","kind":"instance","line":40,"name":"Lake.instQueryTextUnit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.instQueryTextOfToText\"><span class=\"name\">Lake</span>.<span class=\"name\">instQueryTextOfToText</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.ToText\">ToText</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryText\">QueryText</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.instQueryTextOfToText","kind":"instance","line":39,"name":"Lake.instQueryTextOfToText","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.instQueryText\"><span class=\"name\">Lake</span>.<span class=\"name\">instQueryText</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryText\">QueryText</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.instQueryText","kind":"instance","line":38,"name":"Lake.instQueryText","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.QueryText.queryText\"><span class=\"name\">Lake</span>.<span class=\"name\">QueryText</span>.<span class=\"name\">queryText</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryText\">QueryText</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Format target output as text (e.g., for `lake query`). ","docLink":"./Lake/Config/OutFormat.html#Lake.QueryText.queryText","kind":"def","line":34,"name":"Lake.QueryText.queryText","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.QueryText.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">QueryText</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">queryText</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.QueryText\">QueryText</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.QueryText.mk","kind":"ctor","line":32,"name":"Lake.QueryText.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.QueryText\"><span class=\"name\">Lake</span>.<span class=\"name\">QueryText</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"Class used to format target output as text for `lake query`. ","docLink":"./Lake/Config/OutFormat.html#Lake.QueryText","kind":"class","line":31,"name":"Lake.QueryText","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L31-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.instToTextArray\"><span class=\"name\">Lake</span>.<span class=\"name\">instToTextArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.ToText\">ToText</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.ToText\">ToText</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.instToTextArray","kind":"instance","line":29,"name":"Lake.instToTextArray","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.instToTextList\"><span class=\"name\">Lake</span>.<span class=\"name\">instToTextList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.ToText\">ToText</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.ToText\">ToText</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.instToTextList","kind":"instance","line":28,"name":"Lake.instToTextList","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.instToTextJson\"><span class=\"name\">Lake</span>.<span class=\"name\">instToTextJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.ToText\">ToText</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.instToTextJson","kind":"instance","line":27,"name":"Lake.instToTextJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.instToTextOfToString\"><span class=\"name\">Lake</span>.<span class=\"name\">instToTextOfToString</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.ToText\">ToText</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.instToTextOfToString","kind":"instance","line":25,"name":"Lake.instToTextOfToString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.ToText.toText\"><span class=\"name\">Lake</span>.<span class=\"name\">ToText</span>.<span class=\"name\">toText</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.ToText\">ToText</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.ToText.toText","kind":"def","line":21,"name":"Lake.ToText.toText","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.ToText.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">ToText</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toText</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/OutFormat.html#Lake.ToText\">ToText</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.ToText.mk","kind":"ctor","line":20,"name":"Lake.ToText.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.ToText\"><span class=\"name\">Lake</span>.<span class=\"name\">ToText</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"","docLink":"./Lake/Config/OutFormat.html#Lake.ToText","kind":"class","line":20,"name":"Lake.ToText","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L20-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.OutFormat.json\"><span class=\"name\">Lake</span>.<span class=\"name\">OutFormat</span>.<span class=\"name\">json</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/OutFormat.html#Lake.OutFormat\">OutFormat</a></div></div>","info":{"doc":"Format target output as JSON. ","docLink":"./Lake/Config/OutFormat.html#Lake.OutFormat.json","kind":"ctor","line":18,"name":"Lake.OutFormat.json","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.OutFormat.text\"><span class=\"name\">Lake</span>.<span class=\"name\">OutFormat</span>.<span class=\"name\">text</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/OutFormat.html#Lake.OutFormat\">OutFormat</a></div></div>","info":{"doc":"Format target output as text. ","docLink":"./Lake/Config/OutFormat.html#Lake.OutFormat.text","kind":"ctor","line":17,"name":"Lake.OutFormat.text","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/OutFormat.html#Lake.OutFormat\"><span class=\"name\">Lake</span>.<span class=\"name\">OutFormat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Target output formats supported by the Lake CLI (e.g., `lake query`). ","docLink":"./Lake/Config/OutFormat.html#Lake.OutFormat","kind":"inductive","line":15,"name":"Lake.OutFormat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/OutFormat.lean#L15-L18"}}],"imports":["Lean.Setup"],"instances":[{"className":"Lake.ToText","name":"Lake.instToTextOfToString","typeNames":[]},{"className":"Lake.ToText","name":"Lake.instToTextJson","typeNames":["Lean.Json"]},{"className":"Lake.ToText","name":"Lake.instToTextList","typeNames":["List"]},{"className":"Lake.ToText","name":"Lake.instToTextArray","typeNames":["Array"]},{"className":"Lake.QueryText","name":"Lake.instQueryText","typeNames":[]},{"className":"Lake.QueryText","name":"Lake.instQueryTextOfToText","typeNames":[]},{"className":"Lake.QueryText","name":"Lake.instQueryTextUnit","typeNames":["Unit"]},{"className":"Lake.QueryJson","name":"Lake.instQueryJson","typeNames":[]},{"className":"Lake.QueryJson","name":"Lake.instQueryJsonOfToJson","typeNames":[]},{"className":"Lake.QueryJson","name":"Lake.instQueryJsonUnit","typeNames":["Unit"]},{"className":"Lake.FormatQuery","name":"Lake.instFormatQueryOfQueryTextOfQueryJson","typeNames":[]}],"name":"Lake.Config.OutFormat"}