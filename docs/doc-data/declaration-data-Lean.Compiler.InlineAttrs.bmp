{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasAlwaysInlineAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasAlwaysInlineAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasAlwaysInlineAttribute","kind":"def","line":107,"name":"Lean.Compiler.hasAlwaysInlineAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L107-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasMacroInlineAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasMacroInlineAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasMacroInlineAttribute","kind":"def","line":104,"name":"Lean.Compiler.hasMacroInlineAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L104-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasNoInlineAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasNoInlineAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasNoInlineAttribute","kind":"def","line":101,"name":"Lean.Compiler.hasNoInlineAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L101-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasInlineIfReduceAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasInlineIfReduceAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasInlineIfReduceAttribute","kind":"def","line":98,"name":"Lean.Compiler.hasInlineIfReduceAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L98-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasInlineAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasInlineAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasInlineAttribute","kind":"def","line":95,"name":"Lean.Compiler.hasInlineAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L95-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.getInlineAttribute?\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">getInlineAttribute?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.getInlineAttribute?","kind":"def","line":87,"name":"Lean.Compiler.getInlineAttribute?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L87-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.setInlineAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">setInlineAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.setInlineAttribute","kind":"def","line":84,"name":"Lean.Compiler.setInlineAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L84-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.inlineAttrs\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">inlineAttrs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">EnumAttributes</a> <a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></span></div></div>","info":{"doc":"Changes the inlining behavior. This attribute comes in several variants:\n- `@[inline]`: marks the definition to be inlined when it is appropriate.\n- `@[inline_if_reduce]`: marks the definition to be inlined if an application of it after inlining\n  and applying reduction isn't a `match` expression. This attribute can be used for inlining\n  structurally recursive functions.\n- `@[noinline]`: marks the definition to never be inlined.\n- `@[always_inline]`: marks the definition to always be inlined.\n- `@[macro_inline]`: marks the definition to always be inlined at the beginning of compilation.\n  This makes it possible to define functions that evaluate some of their parameters lazily.\n  Example:\n  ```\n  @[macro_inline]\n  def test (x y : Nat) : Nat :=\n    if x = 42 then x else y\n\n  #eval test 42 (2^1000000000000) -- doesn't compute 2^1000000000000\n  ```\n  Only non-recursive functions may be marked `@[macro_inline]`.\n","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.inlineAttrs","kind":"opaque","line":46,"name":"Lean.Compiler.inlineAttrs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L46-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instHashableInlineAttributeKind.hash\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instHashableInlineAttributeKind</span>.<span class=\"name\">hash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a> → <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instHashableInlineAttributeKind.hash","kind":"def","line":18,"name":"Lean.Compiler.instHashableInlineAttributeKind.hash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instHashableInlineAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instHashableInlineAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instHashableInlineAttributeKind","kind":"instance","line":18,"name":"Lean.Compiler.instHashableInlineAttributeKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instBEqInlineAttributeKind.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instBEqInlineAttributeKind</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a> → <a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instBEqInlineAttributeKind.beq","kind":"def","line":18,"name":"Lean.Compiler.instBEqInlineAttributeKind.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instBEqInlineAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instBEqInlineAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instBEqInlineAttributeKind","kind":"instance","line":18,"name":"Lean.Compiler.instBEqInlineAttributeKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instInhabitedInlineAttributeKind.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instInhabitedInlineAttributeKind</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instInhabitedInlineAttributeKind.default","kind":"def","line":18,"name":"Lean.Compiler.instInhabitedInlineAttributeKind.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instInhabitedInlineAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instInhabitedInlineAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instInhabitedInlineAttributeKind","kind":"instance","line":18,"name":"Lean.Compiler.instInhabitedInlineAttributeKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.alwaysInline\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">InlineAttributeKind</span>.<span class=\"name\">alwaysInline</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.alwaysInline","kind":"ctor","line":17,"name":"Lean.Compiler.InlineAttributeKind.alwaysInline","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.inlineIfReduce\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">InlineAttributeKind</span>.<span class=\"name\">inlineIfReduce</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.inlineIfReduce","kind":"ctor","line":17,"name":"Lean.Compiler.InlineAttributeKind.inlineIfReduce","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.macroInline\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">InlineAttributeKind</span>.<span class=\"name\">macroInline</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.macroInline","kind":"ctor","line":17,"name":"Lean.Compiler.InlineAttributeKind.macroInline","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.noinline\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">InlineAttributeKind</span>.<span class=\"name\">noinline</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.noinline","kind":"ctor","line":17,"name":"Lean.Compiler.InlineAttributeKind.noinline","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.inline\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">InlineAttributeKind</span>.<span class=\"name\">inline</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.inline","kind":"ctor","line":17,"name":"Lean.Compiler.InlineAttributeKind.inline","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">InlineAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind","kind":"inductive","line":16,"name":"Lean.Compiler.InlineAttributeKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/InlineAttrs.lean#L16-L18"}}],"imports":["Lean.Attributes"],"instances":[{"className":"Inhabited","name":"Lean.Compiler.instInhabitedInlineAttributeKind","typeNames":["Lean.Compiler.InlineAttributeKind"]},{"className":"BEq","name":"Lean.Compiler.instBEqInlineAttributeKind","typeNames":["Lean.Compiler.InlineAttributeKind"]},{"className":"Hashable","name":"Lean.Compiler.instHashableInlineAttributeKind","typeNames":["Lean.Compiler.InlineAttributeKind"]}],"name":"Lean.Compiler.InlineAttrs"}