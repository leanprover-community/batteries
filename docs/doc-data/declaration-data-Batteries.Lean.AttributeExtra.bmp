{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra.setParam\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeExtra</span>.<span class=\"name\">setParam</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <span class=\"fn\"><a href=\"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra\">ParametricAttributeExtra</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">param</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></span></div></div>","info":{"doc":"Applies attribute `attr` to declaration `decl`, given a value for the parameter. ","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra.setParam","kind":"def","line":107,"name":"Lean.ParametricAttributeExtra.setParam","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L107-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra.getParam?\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeExtra</span>.<span class=\"name\">getParam?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <span class=\"fn\"><a href=\"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra\">ParametricAttributeExtra</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Gets the parameter of attribute `attr` associated to declaration `decl`,\nor `none` if `decl` is not tagged.\n","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra.getParam?","kind":"def","line":99,"name":"Lean.ParametricAttributeExtra.getParam?","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L99-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.registerParametricAttributeExtra\"><span class=\"name\">Lean</span>.<span class=\"name\">registerParametricAttributeExtra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">impl</span> : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl\">ParametricAttributeImpl</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extra</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra\">ParametricAttributeExtra</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Registers a new parametric attribute. The `extra` field is a list of definitions from other modules\nwhich will be \"pre-tagged\" and are not subject to the usual restriction on tagging in the same\nfile as the declaration.\n","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.registerParametricAttributeExtra","kind":"def","line":87,"name":"Lean.registerParametricAttributeExtra","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L87-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.instInhabitedParametricAttributeExtra.default\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedParametricAttributeExtra</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra\">ParametricAttributeExtra</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.instInhabitedParametricAttributeExtra.default","kind":"def","line":85,"name":"Lean.instInhabitedParametricAttributeExtra.default","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.instInhabitedParametricAttributeExtra\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedParametricAttributeExtra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra\">ParametricAttributeExtra</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.instInhabitedParametricAttributeExtra","kind":"instance","line":85,"name":"Lean.instInhabitedParametricAttributeExtra","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra.base\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeExtra</span>.<span class=\"name\">base</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra\">ParametricAttributeExtra</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"A list of pre-tagged declarations with their values. ","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra.base","kind":"def","line":84,"name":"Lean.ParametricAttributeExtra.base","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L84-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra.attr\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeExtra</span>.<span class=\"name\">attr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra\">ParametricAttributeExtra</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">ParametricAttribute</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"The underlying `ParametricAttribute`. ","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra.attr","kind":"def","line":82,"name":"Lean.ParametricAttributeExtra.attr","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L82-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeExtra</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">ParametricAttribute</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">base</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra\">ParametricAttributeExtra</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra.mk","kind":"ctor","line":80,"name":"Lean.ParametricAttributeExtra.mk","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L80-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeExtra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`ParametricAttributeExtra` works around a limitation of `ParametricAttribute`, which is that\ndefinitions must be tagged in the same file that declares the definition.\nThis works well for definitions in lean core, but for attributes declared outside the core\nthis is problematic because we may want to tag declarations created before the attribute\nwas defined.\n\nTo resolve this, we allow a one-time exception to the rule that attributes must be applied\nin the same file as the declaration: During the declaration of the attribute itself,\nwe can tag arbitrary other definitions, but once the attribute is declared we must tag things\nin the same file as normal.\n","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.ParametricAttributeExtra","kind":"structure","line":68,"name":"Lean.ParametricAttributeExtra","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L68-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra.getDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttributeExtra</span>.<span class=\"name\">getDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <a href=\"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra\">TagAttributeExtra</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"Get the list of declarations tagged with the tag attribute `attr`. ","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra.getDecls","kind":"def","line":61,"name":"Lean.TagAttributeExtra.getDecls","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L61-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra.hasTag\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttributeExtra</span>.<span class=\"name\">hasTag</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <a href=\"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra\">TagAttributeExtra</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Does declaration `decl` have the tag `attr`? ","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra.hasTag","kind":"def","line":54,"name":"Lean.TagAttributeExtra.hasTag","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L54-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.registerTagAttributeExtra\"><span class=\"name\">Lean</span>.<span class=\"name\">registerTagAttributeExtra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">descr</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extra</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">validate</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Init/Prelude.html#Unit.unit\">(</a><a href=\"./Init/Prelude.html#Unit.unit\">)</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra\">TagAttributeExtra</a></span></div></div>","info":{"doc":"Registers a new tag attribute. The `extra` field is a list of definitions from other modules\nwhich will be \"pre-tagged\" and are not subject to the usual restriction on tagging in the same\nfile as the declaration.\n\nNote: The `extra` fields bypass the `validate` function -\nwe assume the builtins are also pre-validated.\n","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.registerTagAttributeExtra","kind":"def","line":38,"name":"Lean.registerTagAttributeExtra","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L38-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.instInhabitedTagAttributeExtra.default\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedTagAttributeExtra</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra\">TagAttributeExtra</a></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.instInhabitedTagAttributeExtra.default","kind":"def","line":36,"name":"Lean.instInhabitedTagAttributeExtra.default","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.instInhabitedTagAttributeExtra\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedTagAttributeExtra</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra\">TagAttributeExtra</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.instInhabitedTagAttributeExtra","kind":"instance","line":36,"name":"Lean.instInhabitedTagAttributeExtra","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra.base\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttributeExtra</span>.<span class=\"name\">base</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra\">TagAttributeExtra</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameHashSet\">NameHashSet</a></div></div>","info":{"doc":"A list of \"base\" declarations which have been pre-tagged. ","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra.base","kind":"def","line":35,"name":"Lean.TagAttributeExtra.base","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttributeExtra</span>.<span class=\"name\">ext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra\">TagAttributeExtra</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">PersistentEnvExtension</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameSet\">NameSet</a></span></div></div>","info":{"doc":"The environment extension for the attribute. ","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra.ext","kind":"def","line":33,"name":"Lean.TagAttributeExtra.ext","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttributeExtra</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">PersistentEnvExtension</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameSet\">NameSet</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">base</span> : <a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameHashSet\">NameHashSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra\">TagAttributeExtra</a></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra.mk","kind":"ctor","line":31,"name":"Lean.TagAttributeExtra.mk","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttributeExtra</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`TagAttributeExtra` works around a limitation of `TagAttribute`, which is that definitions\nmust be tagged in the same file that declares the definition.\nThis works well for definitions in lean core, but for attributes declared outside the core\nthis is problematic because we may want to tag declarations created before the attribute\nwas defined.\n\nTo resolve this, we allow a one-time exception to the rule that attributes must be applied\nin the same file as the declaration: During the declaration of the attribute itself,\nwe can tag arbitrary other definitions, but once the attribute is declared we must tag things\nin the same file as normal.\n","docLink":"./Batteries/Lean/AttributeExtra.html#Lean.TagAttributeExtra","kind":"structure","line":19,"name":"Lean.TagAttributeExtra","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/AttributeExtra.lean#L19-L36"}}],"imports":["Init","Batteries.Lean.TagAttribute","Std.Data.HashMap.Basic"],"instances":[{"className":"Inhabited","name":"Lean.instInhabitedTagAttributeExtra","typeNames":["Lean.TagAttributeExtra"]},{"className":"Inhabited","name":"Lean.instInhabitedParametricAttributeExtra","typeNames":["Lean.ParametricAttributeExtra"]}],"name":"Batteries.Lean.AttributeExtra"}