{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.isIdempotent\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">isIdempotent</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.isIdempotent","kind":"def","line":178,"name":"Lean.Meta.Grind.AC.isIdempotent","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L178-L179"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.hasNeutral\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">hasNeutral</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.hasNeutral","kind":"def","line":175,"name":"Lean.Meta.Grind.AC.hasNeutral","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L175-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.isCommutative\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">isCommutative</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.isCommutative","kind":"def","line":172,"name":"Lean.Meta.Grind.AC.isCommutative","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L172-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.isOp?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">isOp?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>))</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.isOp?","kind":"def","line":167,"name":"Lean.Meta.Grind.AC.isOp?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L167-L170"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.getOpId?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">getOpId?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.getOpId?","kind":"def","line":120,"name":"Lean.Meta.Grind.AC.getOpId?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L120-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.mkVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">mkVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <a href=\"./Init/Grind/AC.html#Lean.Grind.AC.Var\">Grind.AC.Var</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.mkVar","kind":"def","line":107,"name":"Lean.Meta.Grind.AC.mkVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L107-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.addTermOpId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">addTermOpId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.addTermOpId","kind":"def","line":103,"name":"Lean.Meta.Grind.AC.addTermOpId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L103-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.getTermOpIds\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">getTermOpIds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.getTermOpIds","kind":"def","line":84,"name":"Lean.Meta.Grind.AC.getTermOpIds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L84-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.getOp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">getOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.getOp","kind":"def","line":63,"name":"Lean.Meta.Grind.AC.getOp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L63-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.modifyStruct\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">modifyStruct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Types.html#Lean.Meta.Grind.AC.Struct\">Struct</a> → <a href=\"./Lean/Meta/Tactic/Grind/AC/Types.html#Lean.Meta.Grind.AC.Struct\">Struct</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.modifyStruct","kind":"def","line":59,"name":"Lean.Meta.Grind.AC.modifyStruct","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L59-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.instMonadGetStructACM\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">instMonadGetStructACM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.MonadGetStruct\">MonadGetStruct</a> <a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.instMonadGetStructACM","kind":"instance","line":56,"name":"Lean.Meta.Grind.AC.instMonadGetStructACM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L56-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM.getStruct\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">ACM</span>.<span class=\"name\">getStruct</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <a href=\"./Lean/Meta/Tactic/Grind/AC/Types.html#Lean.Meta.Grind.AC.Struct\">Struct</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM.getStruct","kind":"def","line":48,"name":"Lean.Meta.Grind.AC.ACM.getStruct","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L48-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.getOpId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">getOpId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.getOpId","kind":"def","line":45,"name":"Lean.Meta.Grind.AC.getOpId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L45-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">ACM</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opId</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM.run","kind":"def","line":42,"name":"Lean.Meta.Grind.AC.ACM.run","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L42-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">ACM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM","kind":"def","line":40,"name":"Lean.Meta.Grind.AC.ACM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.instMonadGetStructOfMonadLift\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">instMonadGetStructOfMonadLift</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.MonadGetStruct\">MonadGetStruct</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.MonadGetStruct\">MonadGetStruct</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.instMonadGetStructOfMonadLift","kind":"instance","line":36,"name":"Lean.Meta.Grind.AC.instMonadGetStructOfMonadLift","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L36-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.MonadGetStruct.getStruct\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">MonadGetStruct</span>.<span class=\"name\">getStruct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.MonadGetStruct\">MonadGetStruct</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Meta/Tactic/Grind/AC/Types.html#Lean.Meta.Grind.AC.Struct\">Struct</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.MonadGetStruct.getStruct","kind":"def","line":32,"name":"Lean.Meta.Grind.AC.MonadGetStruct.getStruct","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.MonadGetStruct.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">MonadGetStruct</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">getStruct</span> : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Meta/Tactic/Grind/AC/Types.html#Lean.Meta.Grind.AC.Struct\">Struct</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.MonadGetStruct\">MonadGetStruct</a> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.MonadGetStruct.mk","kind":"ctor","line":31,"name":"Lean.Meta.Grind.AC.MonadGetStruct.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.MonadGetStruct\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">MonadGetStruct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.MonadGetStruct","kind":"class","line":31,"name":"Lean.Meta.Grind.AC.MonadGetStruct","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L31-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM.Context.opId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">ACM</span>.<span class=\"name\">Context</span>.<span class=\"name\">opId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM.Context.opId","kind":"def","line":29,"name":"Lean.Meta.Grind.AC.ACM.Context.opId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">ACM</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opId</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM.Context\">Context</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM.Context.mk","kind":"ctor","line":28,"name":"Lean.Meta.Grind.AC.ACM.Context.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">ACM</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM.Context","kind":"structure","line":28,"name":"Lean.Meta.Grind.AC.ACM.Context","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L28-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.incSteps\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">incSteps</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.incSteps","kind":"def","line":25,"name":"Lean.Meta.Grind.AC.incSteps","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L25-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.checkMaxSteps\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">checkMaxSteps</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.checkMaxSteps","kind":"def","line":22,"name":"Lean.Meta.Grind.AC.checkMaxSteps","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L22-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.modify'\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">modify'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Types.html#Lean.Meta.Grind.AC.State\">State</a> → <a href=\"./Lean/Meta/Tactic/Grind/AC/Types.html#Lean.Meta.Grind.AC.State\">State</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.modify'","kind":"def","line":19,"name":"Lean.Meta.Grind.AC.modify'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L19-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.get'\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">get'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Lean/Meta/Tactic/Grind/AC/Types.html#Lean.Meta.Grind.AC.State\">State</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.get'","kind":"def","line":16,"name":"Lean.Meta.Grind.AC.get'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Util.lean#L16-L17"}}],"imports":["Lean.Meta.Tactic.Grind.AC.Types","Lean.Meta.Tactic.Grind.ProveEq","Lean.Meta.Tactic.Grind.Arith.CommRing.RingId","Lean.Meta.Tactic.Grind.Simp"],"instances":[{"className":"Lean.Meta.Grind.AC.MonadGetStruct","name":"Lean.Meta.Grind.AC.instMonadGetStructOfMonadLift","typeNames":[]},{"className":"Lean.Meta.Grind.AC.MonadGetStruct","name":"Lean.Meta.Grind.AC.instMonadGetStructACM","typeNames":["Lean.Meta.Grind.AC.ACM"]}],"name":"Lean.Meta.Tactic.Grind.AC.Util"}