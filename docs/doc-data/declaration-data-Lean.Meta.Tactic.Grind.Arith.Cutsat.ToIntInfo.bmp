{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo.he\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntTermInfo</span>.<span class=\"name\">he</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo\">ToIntTermInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo.he","kind":"def","line":139,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo.he","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L139-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo.α\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntTermInfo</span>.<span class=\"name\">α</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo\">ToIntTermInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo.α","kind":"def","line":138,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo.α","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L138-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo.eToInt\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntTermInfo</span>.<span class=\"name\">eToInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo\">ToIntTermInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo.eToInt","kind":"def","line":137,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo.eToInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L137-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntTermInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eToInt </span><span class=\"fn\">α </span><span class=\"fn\">he</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo\">ToIntTermInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo.mk","kind":"ctor","line":136,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L136-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntTermInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"For each term `e` of type `α` which implements the `ToInt α i` class,\nwe store its corresponding `Int` term `eToInt`, a proof `he : toInt e = eToInt`,\nand the type `α`.\n","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo","kind":"structure","line":131,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntTermInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L131-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedToIntInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">instInhabitedToIntInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedToIntInfo","kind":"instance","line":129,"name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedToIntInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L129-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedToIntInfo.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">instInhabitedToIntInfo</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedToIntInfo.default","kind":"def","line":129,"name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedToIntInfo.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L129-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofNatThm?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">ofNatThm?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofNatThm?","kind":"def","line":128,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofNatThm?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L128-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.zeroThm?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">zeroThm?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.zeroThm?","kind":"def","line":127,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.zeroThm?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L127-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.powThm?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">powThm?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.powThm?","kind":"def","line":126,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.powThm?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L126-L126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.modThm?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">modThm?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.modThm?","kind":"def","line":125,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.modThm?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L125-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.divThm?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">divThm?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.divThm?","kind":"def","line":124,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.divThm?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L124-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.negThm?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">negThm?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.negThm?","kind":"def","line":123,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.negThm?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L123-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.subThm?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">subThm?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.subThm?","kind":"def","line":122,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.subThm?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L122-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.mulThms?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">mulThms?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms\">ToIntThms</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.mulThms?","kind":"def","line":121,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.mulThms?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L121-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.addThms?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">addThms?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms\">ToIntThms</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.addThms?","kind":"def","line":120,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.addThms?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L120-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofNotLT?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">ofNotLT?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofNotLT?","kind":"def","line":119,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofNotLT?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L119-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofLT?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">ofLT?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofLT?","kind":"def","line":118,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofLT?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L118-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofNotLE?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">ofNotLE?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofNotLE?","kind":"def","line":117,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofNotLE?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L117-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofLE?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">ofLE?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofLE?","kind":"def","line":116,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofLE?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L116-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.upperThm?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">upperThm?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.upperThm?","kind":"def","line":114,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.upperThm?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L114-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.lowerThm?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">lowerThm?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.lowerThm?","kind":"def","line":113,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.lowerThm?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L113-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofDiseq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">ofDiseq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofDiseq","kind":"def","line":112,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofDiseq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L112-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">ofEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofEq","kind":"def","line":111,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L111-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofWrap0?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">ofWrap0?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofWrap0?","kind":"def","line":110,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.ofWrap0?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L110-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.wrap\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">wrap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.wrap","kind":"def","line":108,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.wrap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L108-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.toInt\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">toInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.toInt","kind":"def","line":107,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.toInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L107-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.range\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">range</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval\">SymbolicIntInterval</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.range","kind":"def","line":106,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.range","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L106-L106"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.rangeExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">rangeExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.rangeExpr","kind":"def","line":105,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.rangeExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L105-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.toIntInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">toIntInst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.toIntInst","kind":"def","line":104,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.toIntInst","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L104-L104"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.u\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">u</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Level.html#Lean.Level\">Level</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.u","kind":"def","line":103,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.u","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L103-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.type\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.type","kind":"def","line":102,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.type","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L102-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.id\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.id","kind":"def","line":101,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.id","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L101-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Lean/Level.html#Lean.Level\">Level</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toIntInst </span><span class=\"fn\">rangeExpr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">range</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval\">SymbolicIntInterval</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toInt </span><span class=\"fn\">wrap</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ofWrap0?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ofEq </span><span class=\"fn\">ofDiseq</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lowerThm? </span><span class=\"fn\">upperThm?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ofLE? </span><span class=\"fn\">ofNotLE? </span><span class=\"fn\">ofLT? </span><span class=\"fn\">ofNotLT?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addThms? </span><span class=\"fn\">mulThms?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms\">ToIntThms</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subThm? </span><span class=\"fn\">negThm? </span><span class=\"fn\">divThm? </span><span class=\"fn\">modThm? </span><span class=\"fn\">powThm? </span><span class=\"fn\">zeroThm? </span><span class=\"fn\">ofNatThm?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.mk","kind":"ctor","line":100,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L100-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo","kind":"structure","line":100,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L100-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.wrap\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">SymbolicIntInterval</span>.<span class=\"name\">wrap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval\">SymbolicIntInterval</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.wrap","kind":"def","line":82,"name":"Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.wrap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L82-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.hi?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">SymbolicIntInterval</span>.<span class=\"name\">hi?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval\">SymbolicIntInterval</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound\">SymbolicBound</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.hi?","kind":"def","line":77,"name":"Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.hi?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L77-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.lo?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">SymbolicIntInterval</span>.<span class=\"name\">lo?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval\">SymbolicIntInterval</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound\">SymbolicBound</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.lo?","kind":"def","line":72,"name":"Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.lo?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L72-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.isFinite\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">SymbolicIntInterval</span>.<span class=\"name\">isFinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval\">SymbolicIntInterval</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.isFinite","kind":"def","line":67,"name":"Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.isFinite","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L67-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedSymbolicIntInterval\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">instInhabitedSymbolicIntInterval</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval\">SymbolicIntInterval</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedSymbolicIntInterval","kind":"instance","line":65,"name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedSymbolicIntInterval","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedSymbolicIntInterval.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">instInhabitedSymbolicIntInterval</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval\">SymbolicIntInterval</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedSymbolicIntInterval.default","kind":"def","line":65,"name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedSymbolicIntInterval.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.ii\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">SymbolicIntInterval</span>.<span class=\"name\">ii</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval\">SymbolicIntInterval</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.ii","kind":"ctor","line":64,"name":"Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.ii","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.io\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">SymbolicIntInterval</span>.<span class=\"name\">io</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound\">SymbolicBound</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval\">SymbolicIntInterval</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.io","kind":"ctor","line":63,"name":"Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.io","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.ci\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">SymbolicIntInterval</span>.<span class=\"name\">ci</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lo</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound\">SymbolicBound</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval\">SymbolicIntInterval</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.ci","kind":"ctor","line":62,"name":"Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.ci","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.co\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">SymbolicIntInterval</span>.<span class=\"name\">co</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lo </span><span class=\"fn\">hi</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound\">SymbolicBound</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval\">SymbolicIntInterval</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.co","kind":"ctor","line":61,"name":"Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval.co","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">SymbolicIntInterval</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Similar to `IntInterval`, but with symbolic bounds. ","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval","kind":"inductive","line":59,"name":"Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L59-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound.isNumeral\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">SymbolicBound</span>.<span class=\"name\">isNumeral</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound\">SymbolicBound</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound.isNumeral","kind":"def","line":56,"name":"Lean.Meta.Grind.Arith.Cutsat.SymbolicBound.isNumeral","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L56-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedSymbolicBound\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">instInhabitedSymbolicBound</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound\">SymbolicBound</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedSymbolicBound","kind":"instance","line":54,"name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedSymbolicBound","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedSymbolicBound.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">instInhabitedSymbolicBound</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound\">SymbolicBound</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedSymbolicBound.default","kind":"def","line":54,"name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedSymbolicBound.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound.ival?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">SymbolicBound</span>.<span class=\"name\">ival?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound\">SymbolicBound</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound.ival?","kind":"def","line":53,"name":"Lean.Meta.Grind.Arith.Cutsat.SymbolicBound.ival?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound.val\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">SymbolicBound</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound\">SymbolicBound</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound.val","kind":"def","line":51,"name":"Lean.Meta.Grind.Arith.Cutsat.SymbolicBound.val","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">SymbolicBound</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ival?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound\">SymbolicBound</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound.mk","kind":"ctor","line":50,"name":"Lean.Meta.Grind.Arith.Cutsat.SymbolicBound.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">SymbolicBound</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.SymbolicBound","kind":"structure","line":50,"name":"Lean.Meta.Grind.Arith.Cutsat.SymbolicBound","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L50-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedToIntThms.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">instInhabitedToIntThms</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms\">ToIntThms</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedToIntThms.default","kind":"def","line":48,"name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedToIntThms.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedToIntThms\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">instInhabitedToIntThms</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms\">ToIntThms</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedToIntThms","kind":"instance","line":48,"name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedToIntThms","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms.c_wr?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntThms</span>.<span class=\"name\">c_wr?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms\">ToIntThms</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"Right `wrap` cancellation theorem of the form\n```\ntoInt a = a' → toInt b = i.wrap b' → toInt (a ⊞ b) = i.wrap (a' ⊞ b')\n```\n","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms.c_wr?","kind":"def","line":47,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntThms.c_wr?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms.c_wl?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntThms</span>.<span class=\"name\">c_wl?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms\">ToIntThms</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"Left `wrap` cancellation theorem of the form\n```\ntoInt a = i.wrap a' → toInt b = b' → toInt (a ⊞ b) = i.wrap (a' ⊞ b')\n```\n","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms.c_wl?","kind":"def","line":40,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntThms.c_wl?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms.c_ww?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntThms</span>.<span class=\"name\">c_ww?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms\">ToIntThms</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"Left-right `wrap` cancellation theorem of the form\n```\ntoInt a = i.wrap a' → toInt b = i.wrap b' → toInt (a ⊞ b) = i.wrap (a' ⊞ b')\n```\n","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms.c_ww?","kind":"def","line":33,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntThms.c_ww?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms.c?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntThms</span>.<span class=\"name\">c?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms\">ToIntThms</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"Basic theorem of the form\n```\ntoInt a = a' → toInt b = b' → toInt (a ⊞ b) = i.wrap (a' ⊞ b')`\n```\n","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms.c?","kind":"def","line":26,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntThms.c?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntThms</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c? </span><span class=\"fn\">c_ww? </span><span class=\"fn\">c_wl? </span><span class=\"fn\">c_wr?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms\">ToIntThms</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms.mk","kind":"ctor","line":19,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntThms.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntThms</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Theorems for operators that have support for `i.wrap` over `i.wrap` simplification.\nCurrently only addition and multiplication have `wrap` cancellation theorems\n","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntThms","kind":"structure","line":15,"name":"Lean.Meta.Grind.Arith.Cutsat.ToIntThms","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.lean#L15-L48"}}],"imports":["Lean.Meta.Tactic.Grind.Arith.Util","Init.Grind.ToInt"],"instances":[{"className":"Inhabited","name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedToIntThms","typeNames":["Lean.Meta.Grind.Arith.Cutsat.ToIntThms"]},{"className":"Inhabited","name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedSymbolicBound","typeNames":["Lean.Meta.Grind.Arith.Cutsat.SymbolicBound"]},{"className":"Inhabited","name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedSymbolicIntInterval","typeNames":["Lean.Meta.Grind.Arith.Cutsat.SymbolicIntInterval"]},{"className":"Inhabited","name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedToIntInfo","typeNames":["Lean.Meta.Grind.Arith.Cutsat.ToIntInfo"]}],"name":"Lean.Meta.Tactic.Grind.Arith.Cutsat.ToIntInfo"}