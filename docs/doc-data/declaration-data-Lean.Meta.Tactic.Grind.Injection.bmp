{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Injection.html#Lean.Meta.Grind.injection?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">injection?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span></div></div>","info":{"doc":"The `grind` tactic includes an auxiliary `injection?` tactic that is not intended for direct use by users.\nThis tactic is automatically applied when introducing non-dependent propositions.\nIt differs from the user-facing Lean `injection` tactic in the following ways:\n\n- It does not introduce new propositions. Instead, the `grind` tactic preprocessor is responsible for introducing them.\n- It assumes that `fvarId` is the latest local declaration in the current goal.\n- It does not handle cases where the constructors are different because the simplifier already reduces such equalities to `False`.\n- It does not have support for heterogeneous equality. Recall that the simplifier already reduces them to `Eq` if\n  the types are definitionally equal.\n","docLink":"./Lean/Meta/Tactic/Grind/Injection.html#Lean.Meta.Grind.injection?","kind":"def","line":15,"name":"Lean.Meta.Grind.injection?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Injection.lean#L15-L40"}}],"imports":["Lean.Meta.Basic","Lean.Meta.Tactic.Clear","Lean.Meta.AppBuilder"],"instances":[],"name":"Lean.Meta.Tactic.Grind.Injection"}