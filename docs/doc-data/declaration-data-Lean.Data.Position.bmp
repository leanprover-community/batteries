{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#String.toFileMap\"><span class=\"name\">String</span>.<span class=\"name\">toFileMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Position.html#Lean.FileMap\">Lean.FileMap</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#String.toFileMap","kind":"def","line":122,"name":"String.toFileMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L122-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.FileMap.lineStart\"><span class=\"name\">Lean</span>.<span class=\"name\">FileMap</span>.<span class=\"name\">lineStart</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">line</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></div></div>","info":{"doc":"Returns the position of the start of (1-based) line `line`.\nThis gives the same result as `map.ofPosition ⟨line, 0⟩`, but is more efficient.\n","docLink":"./Lean/Data/Position.html#Lean.FileMap.lineStart","kind":"def","line":110,"name":"Lean.FileMap.lineStart","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L110-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.FileMap.ofPosition\"><span class=\"name\">Lean</span>.<span class=\"name\">FileMap</span>.<span class=\"name\">ofPosition</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></div></div>","info":{"doc":"Convert a `Lean.Position` to a `String.Pos`. ","docLink":"./Lean/Data/Position.html#Lean.FileMap.ofPosition","kind":"def","line":99,"name":"Lean.FileMap.ofPosition","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L99-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.FileMap.toPosition\"><span class=\"name\">Lean</span>.<span class=\"name\">FileMap</span>.<span class=\"name\">toPosition</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fmap</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.FileMap.toPosition","kind":"def","line":74,"name":"Lean.FileMap.toPosition","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L74-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.FileMap.ofString\"><span class=\"name\">Lean</span>.<span class=\"name\">FileMap</span>.<span class=\"name\">ofString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.FileMap.ofString","kind":"def","line":64,"name":"Lean.FileMap.ofString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L64-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.FileMap.getLine\"><span class=\"name\">Lean</span>.<span class=\"name\">FileMap</span>.<span class=\"name\">getLine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fmap</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"The line numbers associated with the `positions` of the `FileMap`.\n`fmap.getLine i` is the iᵗʰ entry of `#[1, 2, …, n-1, n-1]`\nwhere `n` is the `size` of `positions`. ","docLink":"./Lean/Data/Position.html#Lean.FileMap.getLine","kind":"def","line":58,"name":"Lean.FileMap.getLine","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L58-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.FileMap.getLastLine\"><span class=\"name\">Lean</span>.<span class=\"name\">FileMap</span>.<span class=\"name\">getLastLine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fmap</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"The last line should always be `positions.size - 1`. ","docLink":"./Lean/Data/Position.html#Lean.FileMap.getLastLine","kind":"def","line":54,"name":"Lean.FileMap.getLastLine","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L54-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.MonadFileMap.getFileMap\"><span class=\"name\">Lean</span>.<span class=\"name\">MonadFileMap</span>.<span class=\"name\">getFileMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Data/Position.html#Lean.MonadFileMap\">MonadFileMap</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.MonadFileMap.getFileMap","kind":"def","line":48,"name":"Lean.MonadFileMap.getFileMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.MonadFileMap.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">MonadFileMap</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">getFileMap</span> : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Position.html#Lean.MonadFileMap\">MonadFileMap</a> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.MonadFileMap.mk","kind":"ctor","line":47,"name":"Lean.MonadFileMap.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.MonadFileMap\"><span class=\"name\">Lean</span>.<span class=\"name\">MonadFileMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.MonadFileMap","kind":"class","line":47,"name":"Lean.MonadFileMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L47-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.instInhabitedFileMap\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedFileMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.instInhabitedFileMap","kind":"instance","line":45,"name":"Lean.instInhabitedFileMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.instInhabitedFileMap.default\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedFileMap</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.instInhabitedFileMap.default","kind":"def","line":45,"name":"Lean.instInhabitedFileMap.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.FileMap.positions\"><span class=\"name\">Lean</span>.<span class=\"name\">FileMap</span>.<span class=\"name\">positions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></span></div></div>","info":{"doc":"The positions of newline characters.\nThe first entry is always `0` and the last always the index of the last character.\nIn particular, if the last character is a newline, that index will appear twice. ","docLink":"./Lean/Data/Position.html#Lean.FileMap.positions","kind":"def","line":44,"name":"Lean.FileMap.positions","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L44-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.FileMap.source\"><span class=\"name\">Lean</span>.<span class=\"name\">FileMap</span>.<span class=\"name\">source</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"The content of the file. ","docLink":"./Lean/Data/Position.html#Lean.FileMap.source","kind":"def","line":40,"name":"Lean.FileMap.source","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.FileMap.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">FileMap</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">source</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">positions</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.FileMap.mk","kind":"ctor","line":38,"name":"Lean.FileMap.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.FileMap\"><span class=\"name\">Lean</span>.<span class=\"name\">FileMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Content of a file together with precalculated positions of newlines. ","docLink":"./Lean/Data/Position.html#Lean.FileMap","kind":"structure","line":37,"name":"Lean.FileMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L37-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.Position.instToExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Position</span>.<span class=\"name\">instToExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.Position.instToExpr","kind":"instance","line":31,"name":"Lean.Position.instToExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L31-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.Position.instToString\"><span class=\"name\">Lean</span>.<span class=\"name\">Position</span>.<span class=\"name\">instToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.Position.instToString","kind":"instance","line":28,"name":"Lean.Position.instToString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L28-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.Position.instToFormat\"><span class=\"name\">Lean</span>.<span class=\"name\">Position</span>.<span class=\"name\">instToFormat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.Position.instToFormat","kind":"instance","line":25,"name":"Lean.Position.instToFormat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L25-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.Position.lt\"><span class=\"name\">Lean</span>.<span class=\"name\">Position</span>.<span class=\"name\">lt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a> → <a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.Position.lt","kind":"def","line":22,"name":"Lean.Position.lt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L22-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.instFromJsonPosition\"><span class=\"name\">Lean</span>.<span class=\"name\">instFromJsonPosition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.instFromJsonPosition","kind":"instance","line":19,"name":"Lean.instFromJsonPosition","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.instFromJsonPosition.fromJson\"><span class=\"name\">Lean</span>.<span class=\"name\">instFromJsonPosition</span>.<span class=\"name\">fromJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.instFromJsonPosition.fromJson","kind":"def","line":19,"name":"Lean.instFromJsonPosition.fromJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.instToJsonPosition.toJson\"><span class=\"name\">Lean</span>.<span class=\"name\">instToJsonPosition</span>.<span class=\"name\">toJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a> → <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.instToJsonPosition.toJson","kind":"def","line":19,"name":"Lean.instToJsonPosition.toJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.instToJsonPosition\"><span class=\"name\">Lean</span>.<span class=\"name\">instToJsonPosition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.instToJsonPosition","kind":"instance","line":19,"name":"Lean.instToJsonPosition","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.instReprPosition\"><span class=\"name\">Lean</span>.<span class=\"name\">instReprPosition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.instReprPosition","kind":"instance","line":19,"name":"Lean.instReprPosition","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.instReprPosition.repr\"><span class=\"name\">Lean</span>.<span class=\"name\">instReprPosition</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.instReprPosition.repr","kind":"def","line":19,"name":"Lean.instReprPosition.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.instDecidableEqPosition.decEq\"><span class=\"name\">Lean</span>.<span class=\"name\">instDecidableEqPosition</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.instDecidableEqPosition.decEq","kind":"def","line":19,"name":"Lean.instDecidableEqPosition.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.instDecidableEqPosition\"><span class=\"name\">Lean</span>.<span class=\"name\">instDecidableEqPosition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.instDecidableEqPosition","kind":"instance","line":19,"name":"Lean.instDecidableEqPosition","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.instInhabitedPosition.default\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedPosition</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.instInhabitedPosition.default","kind":"def","line":19,"name":"Lean.instInhabitedPosition.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.instInhabitedPosition\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedPosition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.instInhabitedPosition","kind":"instance","line":19,"name":"Lean.instInhabitedPosition","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.Position.column\"><span class=\"name\">Lean</span>.<span class=\"name\">Position</span>.<span class=\"name\">column</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.Position.column","kind":"def","line":18,"name":"Lean.Position.column","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.Position.line\"><span class=\"name\">Lean</span>.<span class=\"name\">Position</span>.<span class=\"name\">line</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.Position.line","kind":"def","line":17,"name":"Lean.Position.line","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.Position.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Position</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">line </span><span class=\"fn\">column</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.Position.mk","kind":"ctor","line":16,"name":"Lean.Position.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L16-L16"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Position.html#Lean.Position\"><span class=\"name\">Lean</span>.<span class=\"name\">Position</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/Position.html#Lean.Position","kind":"structure","line":16,"name":"Lean.Position","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/Position.lean#L16-L19"}}],"imports":["Lean.Data.Json.FromToJson.Basic","Lean.ToExpr"],"instances":[{"className":"Inhabited","name":"Lean.instInhabitedPosition","typeNames":["Lean.Position"]},{"className":"Decidable","name":"Lean.instDecidableEqPosition","typeNames":["Eq"]},{"className":"Repr","name":"Lean.instReprPosition","typeNames":["Lean.Position"]},{"className":"Lean.ToJson","name":"Lean.instToJsonPosition","typeNames":["Lean.Position"]},{"className":"Lean.FromJson","name":"Lean.instFromJsonPosition","typeNames":["Lean.Position"]},{"className":"Std.ToFormat","name":"Lean.Position.instToFormat","typeNames":["Lean.Position"]},{"className":"ToString","name":"Lean.Position.instToString","typeNames":["Lean.Position"]},{"className":"Lean.ToExpr","name":"Lean.Position.instToExpr","typeNames":["Lean.Position"]},{"className":"Inhabited","name":"Lean.instInhabitedFileMap","typeNames":["Lean.FileMap"]}],"name":"Lean.Data.Position"}