{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.setComputedFields\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">setComputedFields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">computedFields</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Sets the computed fields for a block of mutual inductives,\nadding the implementation via `implemented_by`.\n\nThe `computedFields` argument contains a pair\nfor every inductive in the mutual block,\nconsisting of the name of the inductive\nand the names of the associated computed fields.\n","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.setComputedFields","kind":"def","line":222,"name":"Lean.Elab.ComputedFields.setComputedFields","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L222-L250"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.mkComputedFieldOverrides\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">mkComputedFieldOverrides</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">compFields</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.mkComputedFieldOverrides","kind":"def","line":201,"name":"Lean.Elab.ComputedFields.mkComputedFieldOverrides","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L201-L220"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.overrideComputedFields\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">overrideComputedFields</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.overrideComputedFields","kind":"def","line":171,"name":"Lean.Elab.ComputedFields.overrideComputedFields","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L171-L199"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.overrideConstructors\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">overrideConstructors</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.overrideConstructors","kind":"def","line":149,"name":"Lean.Elab.ComputedFields.overrideConstructors","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L149-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.overrideCasesOn\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">overrideCasesOn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.overrideCasesOn","kind":"def","line":117,"name":"Lean.Elab.ComputedFields.overrideCasesOn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L117-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.mkImplType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">mkImplType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.mkImplType","kind":"def","line":106,"name":"Lean.Elab.ComputedFields.mkImplType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L106-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.validateComputedFields\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">validateComputedFields</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.validateComputedFields","kind":"def","line":97,"name":"Lean.Elab.ComputedFields.validateComputedFields","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L97-L104"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.getComputedFieldValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">getComputedFieldValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">computedField</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctorTerm</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.getComputedFieldValue","kind":"def","line":84,"name":"Lean.Elab.ComputedFields.getComputedFieldValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L84-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.M","kind":"def","line":81,"name":"Lean.Elab.ComputedFields.M","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L81-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.val\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">Context</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.val","kind":"def","line":79,"name":"Lean.Elab.ComputedFields.Context.val","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.indices\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">Context</span>.<span class=\"name\">indices</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.indices","kind":"def","line":78,"name":"Lean.Elab.ComputedFields.Context.indices","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L78-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.compFieldVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">Context</span>.<span class=\"name\">compFieldVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.compFieldVars","kind":"def","line":77,"name":"Lean.Elab.ComputedFields.Context.compFieldVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L77-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.compFields\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">Context</span>.<span class=\"name\">compFields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.compFields","kind":"def","line":76,"name":"Lean.Elab.ComputedFields.Context.compFields","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L76-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.params\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">Context</span>.<span class=\"name\">params</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.params","kind":"def","line":75,"name":"Lean.Elab.ComputedFields.Context.params","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L75-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.lparams\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">Context</span>.<span class=\"name\">lparams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.lparams","kind":"def","line":74,"name":"Lean.Elab.ComputedFields.Context.lparams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L74-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toInductiveVal</span> : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">InductiveVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lparams</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">compFields</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">compFieldVars </span><span class=\"fn\">indices</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context\">Context</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.mk","kind":"ctor","line":73,"name":"Lean.Elab.ComputedFields.Context.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L73-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context","kind":"structure","line":73,"name":"Lean.Elab.ComputedFields.Context","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L73-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.toInductiveVal\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">Context</span>.<span class=\"name\">toInductiveVal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Declaration.html#Lean.InductiveVal\">InductiveVal</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context.toInductiveVal","kind":"def","line":73,"name":"Lean.Elab.ComputedFields.Context.toInductiveVal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L73-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.isScalarField\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">isScalarField</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctor</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.isScalarField","kind":"def","line":70,"name":"Lean.Elab.ComputedFields.isScalarField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L70-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.mkUnsafeCastTo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">mkUnsafeCastTo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expectedType </span><span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.mkUnsafeCastTo","kind":"def","line":67,"name":"Lean.Elab.ComputedFields.mkUnsafeCastTo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L67-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.computedFieldAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ComputedFields</span>.<span class=\"name\">computedFieldAttr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.TagAttribute\">TagAttribute</a></div></div>","info":{"doc":"Marks a function as a computed field of an inductive.\n\nComputed fields are specified in the with-block of an inductive type declaration. They can be used\nto allow certain values to be computed only once at the time of construction and then later be\naccessed immediately.\n\nExample:\n```\ninductive NatList where\n  | nil\n  | cons : Nat → NatList → NatList\nwith\n  @[computed_field] sum : NatList → Nat\n  | .nil => 0\n  | .cons x l => x + l.sum\n  @[computed_field] length : NatList → Nat\n  | .nil => 0\n  | .cons _ l => l.length + 1\n```\n","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.computedFieldAttr","kind":"opaque","line":40,"name":"Lean.Elab.ComputedFields.computedFieldAttr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/ComputedFields.lean#L40-L65"}}],"imports":["Lean.Meta.Constructions.CasesOn","Lean.Compiler.ImplementedByAttr","Lean.Elab.PreDefinition.WF.Eqns"],"instances":[],"name":"Lean.Elab.ComputedFields"}