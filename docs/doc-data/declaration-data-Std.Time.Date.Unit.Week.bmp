{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></div></div>","info":{"doc":"Convert `Day.Offset` into `Week.Offset`.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofDays","kind":"def","line":206,"name":"Std.Time.Week.Offset.ofDays","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L206-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a></div></div>","info":{"doc":"Convert `Week.Offset` into `Day.Offset`.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toDays","kind":"def","line":199,"name":"Std.Time.Week.Offset.toDays","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L199-L204"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hours</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></div></div>","info":{"doc":"Convert `Hour.Offset` into `Week.Offset`.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofHours","kind":"def","line":192,"name":"Std.Time.Week.Offset.ofHours","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L192-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a></div></div>","info":{"doc":"Convert `Week.Offset` into `Hour.Offset`.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toHours","kind":"def","line":185,"name":"Std.Time.Week.Offset.toHours","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L185-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">minutes</span> : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></div></div>","info":{"doc":"Convert `Minute.Offset` into `Week.Offset`.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofMinutes","kind":"def","line":178,"name":"Std.Time.Week.Offset.ofMinutes","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L178-L183"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a></div></div>","info":{"doc":"Convert `Week.Offset` into `Minute.Offset`.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toMinutes","kind":"def","line":171,"name":"Std.Time.Week.Offset.toMinutes","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L171-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">secs</span> : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></div></div>","info":{"doc":"Convert `Second.Offset` into `Week.Offset`.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofSeconds","kind":"def","line":164,"name":"Std.Time.Week.Offset.ofSeconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L164-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a></div></div>","info":{"doc":"Convert `Week.Offset` into `Second.Offset`.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toSeconds","kind":"def","line":157,"name":"Std.Time.Week.Offset.toSeconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L157-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nanos</span> : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></div></div>","info":{"doc":"Convert `Nanosecond.Offset` into `Week.Offset`.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofNanoseconds","kind":"def","line":150,"name":"Std.Time.Week.Offset.ofNanoseconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L150-L155"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a></div></div>","info":{"doc":"Convert `Week.Offset` into `Nanosecond.Offset`.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toNanoseconds","kind":"def","line":143,"name":"Std.Time.Week.Offset.toNanoseconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L143-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">millis</span> : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></div></div>","info":{"doc":"Convert `Millisecond.Offset` into `Week.Offset`.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofMilliseconds","kind":"def","line":136,"name":"Std.Time.Week.Offset.ofMilliseconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L136-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a></div></div>","info":{"doc":"Convert `Week.Offset` into `Millisecond.Offset`.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toMilliseconds","kind":"def","line":129,"name":"Std.Time.Week.Offset.toMilliseconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L129-L134"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></div></div>","info":{"doc":"Creates an `Offset` from an integer.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofInt","kind":"def","line":122,"name":"Std.Time.Week.Offset.ofInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L122-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></div></div>","info":{"doc":"Creates an `Offset` from a natural number.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofNat","kind":"def","line":115,"name":"Std.Time.Week.Offset.ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L115-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.toOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toOffset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ordinal</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></div></div>","info":{"doc":"Converts an `Ordinal` to an `Offset`.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.toOffset","kind":"def","line":105,"name":"Std.Time.Week.Ordinal.toOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L105-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.ofFin\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">54</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Ordinal</a></div></div>","info":{"doc":"Creates an `Ordinal` from a `Fin`, ensuring the value is within bounds.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.ofFin","kind":"def","line":98,"name":"Std.Time.Week.Ordinal.ofFin","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L98-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">53</span> := by decide)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Ordinal</a></div></div>","info":{"doc":"Creates an `Ordinal` from a natural number, ensuring the value is within bounds.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.ofNat","kind":"def","line":91,"name":"Std.Time.Week.Ordinal.ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L91-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instLawfulEqOrdOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instLawfulEqOrdOfMonth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">OfMonth</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instLawfulEqOrdOfMonth","kind":"instance","line":89,"name":"Std.Time.Week.Ordinal.instLawfulEqOrdOfMonth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L89-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instTransOrdOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instTransOrdOfMonth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">OfMonth</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instTransOrdOfMonth","kind":"instance","line":87,"name":"Std.Time.Week.Ordinal.instTransOrdOfMonth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L87-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instOrdOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instOrdOfMonth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">OfMonth</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instOrdOfMonth","kind":"instance","line":85,"name":"Std.Time.Week.Ordinal.instOrdOfMonth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instInhabitedOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instInhabitedOfMonth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">OfMonth</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instInhabitedOfMonth","kind":"instance","line":82,"name":"Std.Time.Week.Ordinal.instInhabitedOfMonth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L82-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instOfNatOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instOfNatOfMonth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">OfMonth</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instOfNatOfMonth","kind":"instance","line":80,"name":"Std.Time.Week.Ordinal.instOfNatOfMonth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L80-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instDecidableEqOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instDecidableEqOfMonth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">OfMonth</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instDecidableEqOfMonth","kind":"instance","line":78,"name":"Std.Time.Week.Ordinal.instDecidableEqOfMonth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L78-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instReprOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instReprOfMonth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">OfMonth</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instReprOfMonth","kind":"instance","line":78,"name":"Std.Time.Week.Ordinal.instReprOfMonth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L78-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">OfMonth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`OfMonth` represents the number of weeks within a month. It ensures that the week is within the\ncorrect bounds—either 1 to 6, representing the possible weeks in a month.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth","kind":"def","line":73,"name":"Std.Time.Week.Ordinal.OfMonth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L73-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">53</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Ordinal</a></div></div>","info":{"doc":"Creates an `Ordinal` from an integer, ensuring the value is within bounds.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.ofInt","kind":"def","line":66,"name":"Std.Time.Week.Ordinal.ofInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L66-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instLawfulEqOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instLawfulEqOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instLawfulEqOrdOffset","kind":"instance","line":62,"name":"Std.Time.Week.instLawfulEqOrdOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instTransOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instTransOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instTransOrdOffset","kind":"instance","line":60,"name":"Std.Time.Week.instTransOrdOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOrdOffset","kind":"instance","line":58,"name":"Std.Time.Week.instOrdOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOfNatOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOfNatOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOfNatOffset","kind":"instance","line":56,"name":"Std.Time.Week.instOfNatOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableLtOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instDecidableLtOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableLtOffset","kind":"instance","line":53,"name":"Std.Time.Week.instDecidableLtOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L53-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableLeOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instDecidableLeOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableLeOffset","kind":"instance","line":50,"name":"Std.Time.Week.instDecidableLeOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L50-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instToStringOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instToStringOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instToStringOffset","kind":"instance","line":48,"name":"Std.Time.Week.instToStringOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instLTOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instLTOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instLTOffset","kind":"instance","line":48,"name":"Std.Time.Week.instLTOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instLEOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instLEOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instLEOffset","kind":"instance","line":48,"name":"Std.Time.Week.instLEOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instNegOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instNegOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instNegOffset","kind":"instance","line":48,"name":"Std.Time.Week.instNegOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instSubOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instSubOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instSubOffset","kind":"instance","line":48,"name":"Std.Time.Week.instSubOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instAddOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instAddOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instAddOffset","kind":"instance","line":48,"name":"Std.Time.Week.instAddOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instInhabitedOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instInhabitedOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instInhabitedOffset","kind":"instance","line":48,"name":"Std.Time.Week.instInhabitedOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableEqOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instDecidableEqOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableEqOffset","kind":"instance","line":48,"name":"Std.Time.Week.instDecidableEqOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instReprOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instReprOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instReprOffset","kind":"instance","line":48,"name":"Std.Time.Week.instReprOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`Offset` represents an offset in weeks.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset","kind":"def","line":44,"name":"Std.Time.Week.Offset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L44-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instLawfulEqOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instLawfulEqOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instLawfulEqOrdOrdinal","kind":"instance","line":42,"name":"Std.Time.Week.instLawfulEqOrdOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instTransOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instTransOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instTransOrdOrdinal","kind":"instance","line":40,"name":"Std.Time.Week.instTransOrdOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOrdOrdinal","kind":"instance","line":38,"name":"Std.Time.Week.instOrdOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instInhabitedOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instInhabitedOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instInhabitedOrdinal","kind":"instance","line":35,"name":"Std.Time.Week.instInhabitedOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L35-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableLtOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instDecidableLtOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableLtOrdinal","kind":"instance","line":32,"name":"Std.Time.Week.instDecidableLtOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L32-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableLeOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instDecidableLeOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableLeOrdinal","kind":"instance","line":29,"name":"Std.Time.Week.instDecidableLeOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L29-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOfNatOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOfNatOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Ordinal</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOfNatOrdinal","kind":"instance","line":26,"name":"Std.Time.Week.instOfNatOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L26-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instLTOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instLTOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instLTOrdinal","kind":"instance","line":24,"name":"Std.Time.Week.instLTOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instLEOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instLEOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instLEOrdinal","kind":"instance","line":24,"name":"Std.Time.Week.instLEOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableEqOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instDecidableEqOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableEqOrdinal","kind":"instance","line":24,"name":"Std.Time.Week.instDecidableEqOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instReprOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instReprOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instReprOrdinal","kind":"instance","line":24,"name":"Std.Time.Week.instReprOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`Ordinal` represents a bounded value for weeks, which ranges between 1 and 53.\n","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal","kind":"def","line":20,"name":"Std.Time.Week.Ordinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Week.lean#L20-L24"}}],"imports":["Std.Time.Date.Unit.Day"],"instances":[{"className":"Repr","name":"Std.Time.Week.instReprOrdinal","typeNames":["Std.Time.Week.Ordinal"]},{"className":"Decidable","name":"Std.Time.Week.instDecidableEqOrdinal","typeNames":["Eq"]},{"className":"LE","name":"Std.Time.Week.instLEOrdinal","typeNames":["Std.Time.Week.Ordinal"]},{"className":"LT","name":"Std.Time.Week.instLTOrdinal","typeNames":["Std.Time.Week.Ordinal"]},{"className":"OfNat","name":"Std.Time.Week.instOfNatOrdinal","typeNames":["Std.Time.Week.Ordinal"]},{"className":"Decidable","name":"Std.Time.Week.instDecidableLeOrdinal","typeNames":["LE.le"]},{"className":"Decidable","name":"Std.Time.Week.instDecidableLtOrdinal","typeNames":["LT.lt"]},{"className":"Inhabited","name":"Std.Time.Week.instInhabitedOrdinal","typeNames":["Std.Time.Week.Ordinal"]},{"className":"Ord","name":"Std.Time.Week.instOrdOrdinal","typeNames":["Std.Time.Week.Ordinal"]},{"className":"Std.TransCmp","name":"Std.Time.Week.instTransOrdOrdinal","typeNames":["Std.Time.Week.Ordinal"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.Week.instLawfulEqOrdOrdinal","typeNames":["Std.Time.Week.Ordinal"]},{"className":"Repr","name":"Std.Time.Week.instReprOffset","typeNames":["Std.Time.Week.Offset"]},{"className":"Decidable","name":"Std.Time.Week.instDecidableEqOffset","typeNames":["Eq"]},{"className":"Inhabited","name":"Std.Time.Week.instInhabitedOffset","typeNames":["Std.Time.Week.Offset"]},{"className":"Add","name":"Std.Time.Week.instAddOffset","typeNames":["Std.Time.Week.Offset"]},{"className":"Sub","name":"Std.Time.Week.instSubOffset","typeNames":["Std.Time.Week.Offset"]},{"className":"Neg","name":"Std.Time.Week.instNegOffset","typeNames":["Std.Time.Week.Offset"]},{"className":"LE","name":"Std.Time.Week.instLEOffset","typeNames":["Std.Time.Week.Offset"]},{"className":"LT","name":"Std.Time.Week.instLTOffset","typeNames":["Std.Time.Week.Offset"]},{"className":"ToString","name":"Std.Time.Week.instToStringOffset","typeNames":["Std.Time.Week.Offset"]},{"className":"Decidable","name":"Std.Time.Week.instDecidableLeOffset","typeNames":["LE.le"]},{"className":"Decidable","name":"Std.Time.Week.instDecidableLtOffset","typeNames":["LT.lt"]},{"className":"OfNat","name":"Std.Time.Week.instOfNatOffset","typeNames":["Std.Time.Week.Offset"]},{"className":"Ord","name":"Std.Time.Week.instOrdOffset","typeNames":["Std.Time.Week.Offset"]},{"className":"Std.TransCmp","name":"Std.Time.Week.instTransOrdOffset","typeNames":["Std.Time.Week.Offset"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.Week.instLawfulEqOrdOffset","typeNames":["Std.Time.Week.Offset"]},{"className":"Repr","name":"Std.Time.Week.Ordinal.instReprOfMonth","typeNames":["Std.Time.Week.Ordinal.OfMonth"]},{"className":"Decidable","name":"Std.Time.Week.Ordinal.instDecidableEqOfMonth","typeNames":["Eq"]},{"className":"OfNat","name":"Std.Time.Week.Ordinal.instOfNatOfMonth","typeNames":["Std.Time.Week.Ordinal.OfMonth"]},{"className":"Inhabited","name":"Std.Time.Week.Ordinal.instInhabitedOfMonth","typeNames":["Std.Time.Week.Ordinal.OfMonth"]},{"className":"Ord","name":"Std.Time.Week.Ordinal.instOrdOfMonth","typeNames":["Std.Time.Week.Ordinal.OfMonth"]},{"className":"Std.TransCmp","name":"Std.Time.Week.Ordinal.instTransOrdOfMonth","typeNames":["Std.Time.Week.Ordinal.OfMonth"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.Week.Ordinal.instLawfulEqOrdOfMonth","typeNames":["Std.Time.Week.Ordinal.OfMonth"]}],"name":"Std.Time.Date.Unit.Week"}