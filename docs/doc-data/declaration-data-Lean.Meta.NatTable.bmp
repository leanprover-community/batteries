{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/NatTable.html#mkNatLookupTable\"><span class=\"name\">mkNatLookupTable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">es</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>","info":{"doc":"Builds an expression of type `Nat â†’ $type` that returns the `es[i]`, using binary search.\nThe array must be non-empty.\n","docLink":"./Lean/Meta/NatTable.html#mkNatLookupTable","kind":"def","line":18,"name":"mkNatLookupTable","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/NatTable.lean#L18-L35"}}],"imports":["Lean.Meta.Basic","Lean.Meta.InferType"],"instances":[],"name":"Lean.Meta.NatTable"}