{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/MLList/Heartbeats.html#MLList.whileAtLeastHeartbeatsPercent\"><span class=\"name\">MLList</span>.<span class=\"name\">whileAtLeastHeartbeatsPercent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Batteries/Data/MLList/Basic.html#MLList\">MLList</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">percent</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">10</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/MLList/Basic.html#MLList\">MLList</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Take an initial segment of a monadic lazy list,\nstopping when there is less than `percent` of the remaining allowed heartbeats.\n\nIf `getMaxHeartbeats` returns `0`, then this passes through the original list unmodified.\n\nThe `initial` heartbeat counter is recorded when the first element of the list is requested.\nThen each time an element is requested from the wrapped list the heartbeat counter is checked, and\nif `current * 100 / initial < percent` then that element is returned,\nbut no further elements.\n","docLink":"./Batteries/Data/MLList/Heartbeats.html#MLList.whileAtLeastHeartbeatsPercent","kind":"def","line":20,"name":"MLList.whileAtLeastHeartbeatsPercent","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/MLList/Heartbeats.lean#L20-L37"}}],"imports":["Init","Batteries.Data.MLList.Basic","Lean.Util.Heartbeats"],"instances":[],"name":"Batteries.Data.MLList.Heartbeats"}