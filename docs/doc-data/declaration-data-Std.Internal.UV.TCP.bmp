{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.keepAlive\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">keepAlive</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">enable</span> : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">delay</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Enables TCP keep-alive for a socket. If delay is less than 1 then UV_EINVAL is returned.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.keepAlive","kind":"opaque","line":134,"name":"Std.Internal.UV.TCP.Socket.keepAlive","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L134-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.noDelay\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">noDelay</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Enables the Nagle algorithm for a TCP socket.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.noDelay","kind":"opaque","line":128,"name":"Std.Internal.UV.TCP.Socket.noDelay","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L128-L132"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.getSockName\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">getSockName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a></span></div></div>","info":{"doc":"Gets the local address of a bound TCP socket.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.getSockName","kind":"opaque","line":122,"name":"Std.Internal.UV.TCP.Socket.getSockName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L122-L126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.getPeerName\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">getPeerName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a></span></div></div>","info":{"doc":"Gets the remote address of a connected TCP socket.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.getPeerName","kind":"opaque","line":116,"name":"Std.Internal.UV.TCP.Socket.getPeerName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L116-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.shutdown\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">shutdown</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/System/Promise.html#IO.Promise\">IO.Promise</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a>)</span>)</span></span></div></div>","info":{"doc":"Shuts down an incoming connection on a listening TCP socket.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.shutdown","kind":"opaque","line":110,"name":"Std.Internal.UV.TCP.Socket.shutdown","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L110-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.cancelAccept\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">cancelAccept</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Cancels the accept request of a socket.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.cancelAccept","kind":"opaque","line":104,"name":"Std.Internal.UV.TCP.Socket.cancelAccept","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L104-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.tryAccept\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">tryAccept</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span>)</span></span></div></div>","info":{"doc":"Tries to accept an incoming connection on a listening TCP socket.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.tryAccept","kind":"opaque","line":98,"name":"Std.Internal.UV.TCP.Socket.tryAccept","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L98-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.accept\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">accept</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/System/Promise.html#IO.Promise\">IO.Promise</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span>)</span></span></div></div>","info":{"doc":"Accepts an incoming connection on a listening TCP socket.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.accept","kind":"opaque","line":92,"name":"Std.Internal.UV.TCP.Socket.accept","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L92-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.listen\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">listen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">backlog</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Starts listening for incoming connections on a TCP socket.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.listen","kind":"opaque","line":86,"name":"Std.Internal.UV.TCP.Socket.listen","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L86-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.bind\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">bind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Binds a TCP socket to a specific address.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.bind","kind":"opaque","line":80,"name":"Std.Internal.UV.TCP.Socket.bind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L80-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.cancelRecv\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">cancelRecv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Cancels a receive operation in the form of `recv?` or `waitReadable` if there is currently one\npending. This resolves their returned `IO.Promise` to `none`. This function is considered dangerous,\nas improper use can cause data loss, and is therefore not exposed to the top-level API.\n\nNote that this function is idempotent and as such can be called multiple times on the same socket\nwithout causing errors, in particular also without a receive running in the first place.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.cancelRecv","kind":"opaque","line":69,"name":"Std.Internal.UV.TCP.Socket.cancelRecv","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L69-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.waitReadable\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">waitReadable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/System/Promise.html#IO.Promise\">IO.Promise</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span>)</span></span></div></div>","info":{"doc":"Returns an `IO.Promise` that resolves to `true` once `socket` has data available for reading,\nor to `false` if `socket` is closed before that. Calling this function twice on the same `Socket`\nor in parallel with `recv?` is not supported.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.waitReadable","kind":"opaque","line":61,"name":"Std.Internal.UV.TCP.Socket.waitReadable","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L61-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.recv?\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">recv?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">size</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/System/Promise.html#IO.Promise\">IO.Promise</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#ByteArray\">ByteArray</a>)</span>)</span>)</span></span></div></div>","info":{"doc":"Receives data from a TCP socket with a maximum size of size bytes. The promise resolves when data is\navailable or an error occurs. If data is received, it’s wrapped in .some. If EOF is reached, the\nresult is .none, indicating no more data is available. Receiving data in parallel on the same\nsocket is not supported. Instead, we recommend binding multiple sockets to the same address.\nFurthermore calling this function in parallel with `waitReadable` is not supported.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.recv?","kind":"opaque","line":51,"name":"Std.Internal.UV.TCP.Socket.recv?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L51-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.send\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">send</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#ByteArray\">ByteArray</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/System/Promise.html#IO.Promise\">IO.Promise</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a>)</span>)</span></span></div></div>","info":{"doc":"Sends data through a TCP socket.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.send","kind":"opaque","line":45,"name":"Std.Internal.UV.TCP.Socket.send","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L45-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.connect\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">connect</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/System/Promise.html#IO.Promise\">IO.Promise</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a>)</span>)</span></span></div></div>","info":{"doc":"Connects a TCP socket to the specified address.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.connect","kind":"opaque","line":39,"name":"Std.Internal.UV.TCP.Socket.connect","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L39-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.new\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">new</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a></span></div></div>","info":{"doc":"Creates a new TCP socket.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket.new","kind":"opaque","line":33,"name":"Std.Internal.UV.TCP.Socket.new","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L33-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.instNonemptySocket\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">instNonemptySocket</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">Socket</a></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.instNonemptySocket","kind":"instance","line":29,"name":"Std.Internal.UV.TCP.instNonemptySocket","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents a TCP socket.\n","docLink":"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket","kind":"def","line":24,"name":"Std.Internal.UV.TCP.Socket","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/TCP.lean#L24-L27"}}],"imports":["Init.System.Promise","Init.Data.SInt","Std.Net"],"instances":[{"className":"Nonempty","name":"Std.Internal.UV.TCP.instNonemptySocket","typeNames":["Std.Internal.UV.TCP.Socket"]}],"name":"Std.Internal.UV.TCP"}