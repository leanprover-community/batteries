{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.evalSuggestPremises\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">evalSuggestPremises</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Elab.Tactic.Tactic</a></div></div>","info":{"doc":"","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.evalSuggestPremises","kind":"def","line":236,"name":"Lean.PremiseSelection.evalSuggestPremises","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L236-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.elabSetPremiseSelector\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">elabSetPremiseSelector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Elab.Command.CommandElab</a></div></div>","info":{"doc":"Specify a premise selection engine.\nNote that Lean does not ship a default premise selection engine,\nso this is only useful in conjunction with a downstream package which provides one.\n","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.elabSetPremiseSelector","kind":"def","line":223,"name":"Lean.PremiseSelection.elabSetPremiseSelector","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L223-L233"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.registerPremiseSelector\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">registerPremiseSelector</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">selector</span> : <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector\">Selector</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Set the current premise selector.","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.registerPremiseSelector","kind":"def","line":218,"name":"Lean.PremiseSelection.registerPremiseSelector","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L218-L220"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.select\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">select</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config\">Config</a> := <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config.mk\">{</a> <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config.mk\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion\">Suggestion</a>)</span></span></div></div>","info":{"doc":"Generate premise suggestions for the given metavariable, using the currently registered premise selector. ","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.select","kind":"def","line":201,"name":"Lean.PremiseSelection.select","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L201-L206"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.premiseSelectorExt\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">premiseSelectorExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">EnvExtension</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector\">Selector</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.premiseSelectorExt","kind":"opaque","line":198,"name":"Lean.PremiseSelection.premiseSelectorExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L198-L199"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.random\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">random</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">gen</span> : <a href=\"./Init/Data/Random.html#StdGen\">StdGen</a> := <a href=\"./Init/Data/Random.html#StdGen.mk\">{</a> <span class=\"fn\">s1</span> := <span class=\"fn\">37</span>, <span class=\"fn\">s2</span> := <span class=\"fn\">59</span> <a href=\"./Init/Data/Random.html#StdGen.mk\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector\">Selector</a></div></div>","info":{"doc":"A random premise selection algorithm, provided solely for testing purposes. ","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.random","kind":"def","line":184,"name":"Lean.PremiseSelection.random","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L184-L196"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector\">Selector</a></div></div>","info":{"doc":"The trivial premise selector, which returns no suggestions.\n","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.empty","kind":"def","line":179,"name":"Lean.PremiseSelection.empty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L179-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.isDeniedPremise\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">isDeniedPremise</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.isDeniedPremise","kind":"def","line":164,"name":"Lean.PremiseSelection.isDeniedPremise","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L164-L175"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.isDeniedModule\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">isDeniedModule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moduleName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.isDeniedModule","kind":"def","line":161,"name":"Lean.PremiseSelection.isDeniedModule","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L161-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.typePrefixDenyListExt\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">typePrefixDenyListExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/EnvExtension.html#Lean.SimplePersistentEnvExtension\">SimplePersistentEnvExtension</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>","info":{"doc":"A premise whose `type.getForallBody.getAppFn` is a constant that has one of these prefixes is not retrieved. ","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.typePrefixDenyListExt","kind":"opaque","line":154,"name":"Lean.PremiseSelection.typePrefixDenyListExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L154-L159"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.nameDenyListExt\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">nameDenyListExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/EnvExtension.html#Lean.SimplePersistentEnvExtension\">SimplePersistentEnvExtension</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>","info":{"doc":"A premise whose name has one of the following components is not retrieved. ","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.nameDenyListExt","kind":"opaque","line":147,"name":"Lean.PremiseSelection.nameDenyListExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L147-L152"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.moduleDenyListExt\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">moduleDenyListExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/EnvExtension.html#Lean.SimplePersistentEnvExtension\">SimplePersistentEnvExtension</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>","info":{"doc":"Premises from a module whose name has one of the following components are not retrieved. ","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.moduleDenyListExt","kind":"opaque","line":140,"name":"Lean.PremiseSelection.moduleDenyListExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L140-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector.combine\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Selector</span>.<span class=\"name\">combine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">selector₁ </span><span class=\"fn\">selector₂</span> : <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector\">Selector</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector\">Selector</a></div></div>","info":{"doc":"Combine two premise selectors, returning the best suggestions. ","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector.combine","kind":"def","line":116,"name":"Lean.PremiseSelection.Selector.combine","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L116-L134"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector.maxSuggestions\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Selector</span>.<span class=\"name\">maxSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">selector</span> : <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector\">Selector</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector\">Selector</a></div></div>","info":{"doc":"Wrapper for `Selector` that ensures\nthe `maxSuggestions` field in `Config` is respected, post-hoc.\n","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector.maxSuggestions","kind":"def","line":106,"name":"Lean.PremiseSelection.Selector.maxSuggestions","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L106-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector.postFilter\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Selector</span>.<span class=\"name\">postFilter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">selector</span> : <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector\">Selector</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector\">Selector</a></div></div>","info":{"doc":"Respect the `Config.filter` option by implementing it as a post-filter.\nIf a premise selection implementation does not natively handle the filter,\nit should be wrapped with this function.\n","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector.postFilter","kind":"def","line":97,"name":"Lean.PremiseSelection.Selector.postFilter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L97-L104"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.ppSelector\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">ppSelector</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">selector</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config\">Config</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion\">Suggestion</a>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion\">Suggestion</a>)</span></span></div></div>","info":{"doc":"Construct a `Selector` (which acts on an `MVarId`)\nfrom a function which takes the pretty printed goal.\n","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.ppSelector","kind":"def","line":87,"name":"Lean.PremiseSelection.ppSelector","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L87-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Selector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Selector","kind":"def","line":85,"name":"Lean.PremiseSelection.Selector","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config.maxSuggestions\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Config</span>.<span class=\"name\">maxSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config.maxSuggestions","kind":"def","line":82,"name":"Lean.PremiseSelection.Config.maxSuggestions","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L82-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config.hint\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Config</span>.<span class=\"name\">hint</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"An optional arbitrary \"hint\" to the premise selection algorithm.\nThere is no guarantee that the algorithm will make any use of the hint.\n\nPotential use cases include a natural language comment provided by the user\n(e.g. allowing use of the premise selector as a search engine)\nor including context from the current proof and/or file.\n\nWe may later split these use cases into separate fields if necessary.\n","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config.hint","kind":"def","line":80,"name":"Lean.PremiseSelection.Config.hint","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L80-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config.filter\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Config</span>.<span class=\"name\">filter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></div></div>","info":{"doc":"A filter on suggestions; only suggestions returning `true` should be returned.\n(It can be better to filter on the premise selection side, to ensure that enough suggestions are returned.)\n","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config.filter","kind":"def","line":69,"name":"Lean.PremiseSelection.Config.filter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config.caller\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Config</span>.<span class=\"name\">caller</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"The tactic that is calling the premise selection, e.g. `simp`, `grind`, or `aesop`.\nThis may be used to adjust the score of the suggestions\n","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config.caller","kind":"def","line":64,"name":"Lean.PremiseSelection.Config.caller","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config.maxSuggestions?\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Config</span>.<span class=\"name\">maxSuggestions?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"The maximum number of suggestions to return.\n","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config.maxSuggestions?","kind":"def","line":59,"name":"Lean.PremiseSelection.Config.maxSuggestions?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Config</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">maxSuggestions?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caller</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filter</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config\">Config</a></div></div>","info":{"doc":"","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config.mk","kind":"ctor","line":55,"name":"Lean.PremiseSelection.Config.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L55-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Config</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Config","kind":"structure","line":55,"name":"Lean.PremiseSelection.Config","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L55-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion.flag\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">flag</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion\">Suggestion</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Optional flag associated with the suggestion, e.g. \"←\" or \"=\",\nif the premise selection algorithm is aware of the tactic consuming the results,\nand wants to suggest modifiers for this suggestion.\nE.g. this supports calling `simp` in the reverse direction,\nor telling `grind` or `aesop` to use the theorem in a particular way.\n","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion.flag","kind":"def","line":53,"name":"Lean.PremiseSelection.Suggestion.flag","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion.score\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">score</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion\">Suggestion</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>","info":{"doc":"The score of the suggestion, as a probability that this suggestion should be used.\n","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion.score","kind":"def","line":45,"name":"Lean.PremiseSelection.Suggestion.score","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion.name\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion\">Suggestion</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion.name","kind":"def","line":41,"name":"Lean.PremiseSelection.Suggestion.name","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">score</span> : <a href=\"./Init/Data/Float.html#Float\">Float</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">flag</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion\">Suggestion</a></div></div>","info":{"doc":"","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion.mk","kind":"ctor","line":40,"name":"Lean.PremiseSelection.Suggestion.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Suggestion</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A `Suggestion` is essentially just an identifier and a confidence score that the identifier is relevant.\nIf the premise selection request included information about the intended use (e.g. in the simplifier, in `grind`, etc.)\nthe score may be adjusted for that application.\n\n","docLink":"./Lean/PremiseSelection/Basic.html#Lean.PremiseSelection.Suggestion","kind":"structure","line":34,"name":"Lean.PremiseSelection.Suggestion","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/PremiseSelection/Basic.lean#L34-L53"}}],"imports":["Lean.Elab.Command","Lean.Meta.Eval","Lean.Meta.CompletionName","Init.Data.Random"],"instances":[],"name":"Lean.PremiseSelection.Basic"}