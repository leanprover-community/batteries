{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.Decl.expandResetReuse\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Decl</span>.<span class=\"name\">expandResetReuse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></div></div>","info":{"doc":"(Try to) expand `reset` and `reuse` instructions. ","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.Decl.expandResetReuse","kind":"def","line":281,"name":"Lean.IR.Decl.expandResetReuse","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L281-L283"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.main\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">main</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.main","kind":"def","line":270,"name":"Lean.IR.ExpandResetReuse.main","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L270-L277"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.searchAndExpand\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">searchAndExpand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.searchAndExpand","kind":"opaque","line":254,"name":"Lean.IR.ExpandResetReuse.searchAndExpand","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L254-L268"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.expand\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">expand</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainFn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.expand","kind":"def","line":241,"name":"Lean.IR.ExpandResetReuse.expand","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L241-L252"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkFastPath\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">mkFastPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mask</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask\">Mask</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>","info":{"doc":"replace\n```\nx := reset y; b\n```\nwith\n```\nlet f_i_1 := proj[i_1] y;\n...\nlet f_i_k := proj[i_k] y;\nb'\n```\nwhere `i_j`s are the field indexes\nthat the code did not touch immediately before the reset.\nThat is `mask[j] == none`.\n`b'` is `b` where `y` `dec x` is replaced with `del y`,\nand `z := reuse x ctor_i ws; F` is replaced with\n`set x i ws[i]` operations, and we replace `z` with `x` in `F`\n","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkFastPath","kind":"def","line":216,"name":"Lean.IR.ExpandResetReuse.mkFastPath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L216-L238"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.reuseToSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">reuseToSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.reuseToSet","kind":"opaque","line":193,"name":"Lean.IR.ExpandResetReuse.reuseToSet","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L193-L214"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.removeSelfSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">removeSelfSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>","info":{"doc":"Remove unnecessary `set/uset/sset` operations ","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.removeSelfSet","kind":"opaque","line":172,"name":"Lean.IR.ExpandResetReuse.removeSelfSet","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L172-L191"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.isSelfSSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">isSelfSSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Given `sset x[n, i] := y`, return true iff `y := sproj[n, i] x` ","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.isSelfSSet","kind":"def","line":166,"name":"Lean.IR.ExpandResetReuse.isSelfSSet","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L166-L170"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.isSelfUSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">isSelfUSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Given `uset x[i] := y`, return true iff `y := uproj[i] x` ","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.isSelfUSet","kind":"def","line":160,"name":"Lean.IR.ExpandResetReuse.isSelfUSet","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L160-L164"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.isSelfSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">isSelfSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Given `set x[i] := y`, return true iff `y := proj[i] x` ","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.isSelfSet","kind":"def","line":151,"name":"Lean.IR.ExpandResetReuse.isSelfSet","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L151-L158"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.setFields\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">setFields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.setFields","kind":"def","line":148,"name":"Lean.IR.ExpandResetReuse.setFields","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L148-L149"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.releaseUnreadFields\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">releaseUnreadFields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mask</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask\">Mask</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.releaseUnreadFields","kind":"def","line":140,"name":"Lean.IR.ExpandResetReuse.releaseUnreadFields","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L140-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkFresh\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">mkFresh</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkFresh","kind":"def","line":137,"name":"Lean.IR.ExpandResetReuse.mkFresh","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L137-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M","kind":"def","line":136,"name":"Lean.IR.ExpandResetReuse.M","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L136-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkSlowPath\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">mkSlowPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mask</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask\">Mask</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></div></div>","info":{"doc":"replace\n```\nx := reset y; b\n```\nwith\n```\ninc z_1; ...; inc z_i; dec y; b'\n```\nwhere `z_i`'s are the variables in `mask`,\nand `b'` is `b` where we removed `dec x` and replaced `reuse x ctor_i ...` with `ctor_i ...`.\n","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkSlowPath","kind":"def","line":117,"name":"Lean.IR.ExpandResetReuse.mkSlowPath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L117-L134"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.reuseToCtor\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">reuseToCtor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>","info":{"doc":"Replace `reuse x ctor ...` with `ctor ...`, and remove `dec x` ","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.reuseToCtor","kind":"opaque","line":94,"name":"Lean.IR.ExpandResetReuse.reuseToCtor","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L94-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.eraseProjIncFor\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">eraseProjIncFor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask\">Mask</a></div></div>","info":{"doc":"Try to erase `inc` instructions on projections of `y` occurring in the tail of `bs`.\nReturn the updated `bs` and a bit mask specifying which `inc`s have been removed. ","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.eraseProjIncFor","kind":"def","line":89,"name":"Lean.IR.ExpandResetReuse.eraseProjIncFor","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L89-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.eraseProjIncForAux\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">eraseProjIncForAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mask</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask\">Mask</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">keep</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask\">Mask</a></div></div>","info":{"doc":"Auxiliary function for eraseProjIncFor ","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.eraseProjIncForAux","kind":"opaque","line":57,"name":"Lean.IR.ExpandResetReuse.eraseProjIncForAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L57-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">Mask</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask","kind":"def","line":55,"name":"Lean.IR.ExpandResetReuse.Mask","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L55-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.consumed\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">consumed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Return true iff `x` is consumed in all branches of the current block.\nHere consumption means the block contains a `dec x` or `reuse x ...`. ","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.consumed","kind":"opaque","line":44,"name":"Lean.IR.ExpandResetReuse.consumed","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L44-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context.projMap\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">Context</span>.<span class=\"name\">projMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.ProjMap\">ProjMap</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context.projMap","kind":"def","line":42,"name":"Lean.IR.ExpandResetReuse.Context.projMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">projMap</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.ProjMap\">ProjMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\">Context</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context.mk","kind":"ctor","line":41,"name":"Lean.IR.ExpandResetReuse.Context.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context","kind":"structure","line":41,"name":"Lean.IR.ExpandResetReuse.Context","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L41-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkProjMap\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">mkProjMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.ProjMap\">ProjMap</a></div></div>","info":{"doc":"Create a mapping from variables to projections.\nThis function assumes variable ids have been normalized ","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkProjMap","kind":"def","line":34,"name":"Lean.IR.ExpandResetReuse.mkProjMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L34-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.collectFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">CollectProjMap</span>.<span class=\"name\">collectFnBody</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.Collector\">Collector</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.collectFnBody","kind":"opaque","line":27,"name":"Lean.IR.ExpandResetReuse.CollectProjMap.collectFnBody","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L27-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.collectVDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">CollectProjMap</span>.<span class=\"name\">collectVDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.Collector\">Collector</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.collectVDecl","kind":"def","line":20,"name":"Lean.IR.ExpandResetReuse.CollectProjMap.collectVDecl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L20-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.Collector\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">CollectProjMap</span>.<span class=\"name\">Collector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.Collector","kind":"def","line":19,"name":"Lean.IR.ExpandResetReuse.CollectProjMap.Collector","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.ProjMap\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">ProjMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Mapping from variable to projections ","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.ProjMap","kind":"def","line":16,"name":"Lean.IR.ExpandResetReuse.ProjMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/ExpandResetReuse.lean#L16-L17"}}],"imports":["Lean.Compiler.IR.CompilerM","Lean.Compiler.IR.NormIds","Lean.Compiler.IR.FreeVars"],"instances":[],"name":"Lean.Compiler.IR.ExpandResetReuse"}