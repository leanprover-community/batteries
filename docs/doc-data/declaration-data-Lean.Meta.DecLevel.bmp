{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DecLevel.html#Lean.Meta.getDecLevel?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getDecLevel?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.getDecLevel?","kind":"def","line":76,"name":"Lean.Meta.getDecLevel?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/DecLevel.lean#L76-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DecLevel.html#Lean.Meta.getDecLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getDecLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span></div></div>","info":{"doc":"This method is useful for inferring universe level parameters for function that take arguments such as `{α : Type u}`.\nRecall that `Type u` is `Sort (u+1)` in Lean. Thus, given `α`, we must infer its universe level,\nand then decrement 1 to obtain `u`. ","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.getDecLevel","kind":"def","line":70,"name":"Lean.Meta.getDecLevel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/DecLevel.lean#L70-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DecLevel.html#Lean.Meta.decLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">decLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Lean/Level.html#Lean.Level\">Level</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.decLevel","kind":"def","line":65,"name":"Lean.Meta.decLevel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/DecLevel.lean#L65-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DecLevel.html#Lean.Meta.decLevel?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">decLevel?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Lean/Level.html#Lean.Level\">Level</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.decLevel?","kind":"def","line":57,"name":"Lean.Meta.decLevel?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/DecLevel.lean#L57-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext.canAssignMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DecLevelContext</span>.<span class=\"name\">canAssignMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext\">DecLevelContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"If `true`, then `decAux? ?m` returns a fresh metavariable `?n` s.t.\n`?m := ?n+1`.\n","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext.canAssignMVars","kind":"def","line":20,"name":"Lean.Meta.DecLevelContext.canAssignMVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/DecLevel.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DecLevelContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">canAssignMVars</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext\">DecLevelContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext.mk","kind":"ctor","line":15,"name":"Lean.Meta.DecLevelContext.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/DecLevel.lean#L15-L15"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DecLevelContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext","kind":"structure","line":15,"name":"Lean.Meta.DecLevelContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/DecLevel.lean#L15-L20"}}],"imports":["Lean.Meta.InferType"],"instances":[],"name":"Lean.Meta.DecLevel"}