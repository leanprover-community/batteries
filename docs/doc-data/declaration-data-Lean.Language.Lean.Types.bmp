{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.InitialSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">InitialSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Initial snapshot of the Lean language processor: a \"header parsed\" snapshot. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.InitialSnapshot","kind":"def","line":139,"name":"Lean.Language.Lean.InitialSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L139-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.processedResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">processedResult</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snap</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a>)</span></span></div></div>","info":{"doc":"Shortcut accessor to the final header state, if successful. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.processedResult","kind":"def","line":134,"name":"Lean.Language.Lean.HeaderParsedSnapshot.processedResult","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L134-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeHeaderParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot","kind":"instance","line":130,"name":"Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L130-L132"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.result?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">result?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">HeaderParsedState</a></span></div></div>","info":{"doc":"State after successful parsing. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.result?","kind":"def","line":127,"name":"Lean.Language.Lean.HeaderParsedSnapshot.result?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L127-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"Resulting syntax tree. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.stx","kind":"def","line":125,"name":"Lean.Language.Lean.HeaderParsedSnapshot.stx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L125-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.ictx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">ictx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a></div></div>","info":{"doc":"Parser input context supplied by the driver, stored here for incremental parsing. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.ictx","kind":"def","line":123,"name":"Lean.Language.Lean.HeaderParsedSnapshot.ictx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L123-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.metaSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">metaSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></span></div></div>","info":{"doc":"Holds produced diagnostics. Separate snapshot so that it can be tagged with the header syntax,\nwhich should not be done for this snapshot containing `firstCmdSnap`.\n","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.metaSnap","kind":"def","line":121,"name":"Lean.Language.Lean.HeaderParsedSnapshot.metaSnap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L121-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshot</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">metaSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ictx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">result?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">HeaderParsedState</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.mk","kind":"ctor","line":116,"name":"Lean.Language.Lean.HeaderParsedSnapshot.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L116-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.toSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">toSnapshot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.toSnapshot","kind":"def","line":116,"name":"Lean.Language.Lean.HeaderParsedSnapshot.toSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L116-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"State after the module header has been parsed. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot","kind":"structure","line":115,"name":"Lean.Language.Lean.HeaderParsedSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L115-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.processedSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span>.<span class=\"name\">processedSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">HeaderParsedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a></span></div></div>","info":{"doc":"Header processing task. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.processedSnap","kind":"def","line":113,"name":"Lean.Language.Lean.HeaderParsedState.processedSnap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L113-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.parserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span>.<span class=\"name\">parserState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">HeaderParsedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a></div></div>","info":{"doc":"Resulting parser state. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.parserState","kind":"def","line":111,"name":"Lean.Language.Lean.HeaderParsedState.parserState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L111-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserState</span> : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">processedSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">HeaderParsedState</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.mk","kind":"ctor","line":109,"name":"Lean.Language.Lean.HeaderParsedState.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L109-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"State after successfully parsing the module header. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState","kind":"structure","line":108,"name":"Lean.Language.Lean.HeaderParsedState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L108-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeHeaderProcessedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot","kind":"instance","line":104,"name":"Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L104-L106"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.result?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span>.<span class=\"name\">result?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a></span></div></div>","info":{"doc":"State after successful importing. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.result?","kind":"def","line":102,"name":"Lean.Language.Lean.HeaderProcessedSnapshot.result?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L102-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.metaSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span>.<span class=\"name\">metaSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></span></div></div>","info":{"doc":"Holds produced diagnostics and info tree. Separate snapshot so that it can be tagged with the\nheader syntax, which should not be done for this snapshot containing `firstCmdSnap`.\n","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.metaSnap","kind":"def","line":100,"name":"Lean.Language.Lean.HeaderProcessedSnapshot.metaSnap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L100-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshot</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">metaSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">result?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.mk","kind":"ctor","line":95,"name":"Lean.Language.Lean.HeaderProcessedSnapshot.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L95-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.toSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span>.<span class=\"name\">toSnapshot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.toSnapshot","kind":"def","line":95,"name":"Lean.Language.Lean.HeaderProcessedSnapshot.toSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L95-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"State after the module header has been processed including imports. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot","kind":"structure","line":94,"name":"Lean.Language.Lean.HeaderProcessedSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L94-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.firstCmdSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span>.<span class=\"name\">firstCmdSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a></span></div></div>","info":{"doc":"First command task (there is always at least a terminal command). ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.firstCmdSnap","kind":"def","line":92,"name":"Lean.Language.Lean.HeaderProcessedState.firstCmdSnap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L92-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.cmdState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span>.<span class=\"name\">cmdState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Elab.Command.State</a></div></div>","info":{"doc":"The resulting initial elaboration state. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.cmdState","kind":"def","line":90,"name":"Lean.Language.Lean.HeaderProcessedState.cmdState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L90-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cmdState</span> : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">firstCmdSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.mk","kind":"ctor","line":88,"name":"Lean.Language.Lean.HeaderProcessedState.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L88-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"State after successful importing. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState","kind":"structure","line":87,"name":"Lean.Language.Lean.HeaderProcessedState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L87-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandParsedSnapshot</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot.go","kind":"opaque","line":83,"name":"Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot.go","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L83-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot","kind":"instance","line":81,"name":"Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L81-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyCommandParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandParsedSnapshot","kind":"instance","line":80,"name":"Lean.Language.Lean.instNonemptyCommandParsedSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L80-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.nextCmdSnap?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">nextCmdSnap?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span></div></div>","info":{"doc":"Next command, unless this is a terminal command. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.nextCmdSnap?","kind":"def","line":79,"name":"Lean.Language.Lean.CommandParsedSnapshot.nextCmdSnap?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.elabSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">elabSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a></div></div>","info":{"doc":"State before the command is elaborated. This snapshot is always fulfilled immediately. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.elabSnap","kind":"def","line":77,"name":"Lean.Language.Lean.CommandParsedSnapshot.elabSnap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L77-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.parserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">parserState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a></div></div>","info":{"doc":"Resulting parser state. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.parserState","kind":"def","line":75,"name":"Lean.Language.Lean.CommandParsedSnapshot.parserState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L75-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"Syntax tree of the command. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.stx","kind":"def","line":73,"name":"Lean.Language.Lean.CommandParsedSnapshot.stx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L73-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshot</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserState</span> : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elabSnap</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nextCmdSnap?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.mk","kind":"ctor","line":71,"name":"Lean.Language.Lean.CommandParsedSnapshot.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L71-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.toSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">toSnapshot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.toSnapshot","kind":"def","line":71,"name":"Lean.Language.Lean.CommandParsedSnapshot.toSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L71-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"State after a command has been parsed. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot","kind":"structure","line":70,"name":"Lean.Language.Lean.CommandParsedSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L70-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandElaboratingSnapshot.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandElaboratingSnapshot</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandElaboratingSnapshot.go","kind":"def","line":64,"name":"Lean.Language.Lean.instToSnapshotTreeCommandElaboratingSnapshot.go","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L64-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandElaboratingSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandElaboratingSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandElaboratingSnapshot","kind":"instance","line":62,"name":"Lean.Language.Lean.instToSnapshotTreeCommandElaboratingSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L62-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandElaboratingSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyCommandElaboratingSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandElaboratingSnapshot","kind":"instance","line":61,"name":"Lean.Language.Lean.instNonemptyCommandElaboratingSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.reportSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandElaboratingSnapshot</span>.<span class=\"name\">reportSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span></div></div>","info":{"doc":"Additional, untyped snapshots used for reporting, not reuse. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.reportSnap","kind":"def","line":60,"name":"Lean.Language.Lean.CommandElaboratingSnapshot.reportSnap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.infoTreeSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandElaboratingSnapshot</span>.<span class=\"name\">infoTreeSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></span></div></div>","info":{"doc":"State after all elaborator tasks are finished. In particular, contains the complete info tree.\n","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.infoTreeSnap","kind":"def","line":58,"name":"Lean.Language.Lean.CommandElaboratingSnapshot.infoTreeSnap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.resultSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandElaboratingSnapshot</span>.<span class=\"name\">resultSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\">CommandResultSnapshot</a></span></div></div>","info":{"doc":"State after command elaborator has returned. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.resultSnap","kind":"def","line":54,"name":"Lean.Language.Lean.CommandElaboratingSnapshot.resultSnap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.elabSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandElaboratingSnapshot</span>.<span class=\"name\">elabSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">DynamicSnapshot</a></span></div></div>","info":{"doc":"Snapshot for incremental reporting and reuse during elaboration, type dependent on specific\nelaborator.\n ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.elabSnap","kind":"def","line":52,"name":"Lean.Language.Lean.CommandElaboratingSnapshot.elabSnap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandElaboratingSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshot</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elabSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">DynamicSnapshot</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">resultSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\">CommandResultSnapshot</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">infoTreeSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">reportSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.mk","kind":"ctor","line":47,"name":"Lean.Language.Lean.CommandElaboratingSnapshot.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.toSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandElaboratingSnapshot</span>.<span class=\"name\">toSnapshot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.toSnapshot","kind":"def","line":47,"name":"Lean.Language.Lean.CommandElaboratingSnapshot.toSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L47-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandElaboratingSnapshot</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"State before a command is elaborated. This is separate from `CommandParsedSnapshot` so that all\nsnapshots belonging to a command are grouped below a task with the command's syntax tree.\n","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot","kind":"structure","line":43,"name":"Lean.Language.Lean.CommandElaboratingSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L43-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandResultSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandResultSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\">CommandResultSnapshot</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandResultSnapshot","kind":"instance","line":40,"name":"Lean.Language.Lean.instToSnapshotTreeCommandResultSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L40-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandResultSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyCommandResultSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\">CommandResultSnapshot</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandResultSnapshot","kind":"instance","line":39,"name":"Lean.Language.Lean.instNonemptyCommandResultSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot.cmdState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandResultSnapshot</span>.<span class=\"name\">cmdState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\">CommandResultSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Elab.Command.State</a></div></div>","info":{"doc":"Resulting elaboration state. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot.cmdState","kind":"def","line":38,"name":"Lean.Language.Lean.CommandResultSnapshot.cmdState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandResultSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshot</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cmdState</span> : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\">CommandResultSnapshot</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot.mk","kind":"ctor","line":36,"name":"Lean.Language.Lean.CommandResultSnapshot.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot.toSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandResultSnapshot</span>.<span class=\"name\">toSnapshot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\">CommandResultSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot.toSnapshot","kind":"def","line":36,"name":"Lean.Language.Lean.CommandResultSnapshot.toSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L36-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandResultSnapshot</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Snapshot after command elaborator has returned. Also contains diagnostics from the elaborator's main\ntask. Asynchronous elaboration tasks may not yet be finished.\n","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot","kind":"structure","line":32,"name":"Lean.Language.Lean.CommandResultSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L32-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.pushOpt\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">pushOpt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Pushes `a?` into the array if it is `some`. ","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.pushOpt","kind":"def","line":24,"name":"Lean.Language.Lean.pushOpt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Lean/Types.lean#L24-L28"}}],"imports":["Lean.Elab.Command"],"instances":[{"className":"Nonempty","name":"Lean.Language.Lean.instNonemptyCommandResultSnapshot","typeNames":["Lean.Language.Lean.CommandResultSnapshot"]},{"className":"Lean.Language.ToSnapshotTree","name":"Lean.Language.Lean.instToSnapshotTreeCommandResultSnapshot","typeNames":["Lean.Language.Lean.CommandResultSnapshot"]},{"className":"Nonempty","name":"Lean.Language.Lean.instNonemptyCommandElaboratingSnapshot","typeNames":["Lean.Language.Lean.CommandElaboratingSnapshot"]},{"className":"Lean.Language.ToSnapshotTree","name":"Lean.Language.Lean.instToSnapshotTreeCommandElaboratingSnapshot","typeNames":["Lean.Language.Lean.CommandElaboratingSnapshot"]},{"className":"Nonempty","name":"Lean.Language.Lean.instNonemptyCommandParsedSnapshot","typeNames":["Lean.Language.Lean.CommandParsedSnapshot"]},{"className":"Lean.Language.ToSnapshotTree","name":"Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot","typeNames":["Lean.Language.Lean.CommandParsedSnapshot"]},{"className":"Lean.Language.ToSnapshotTree","name":"Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot","typeNames":["Lean.Language.Lean.HeaderProcessedSnapshot"]},{"className":"Lean.Language.ToSnapshotTree","name":"Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot","typeNames":["Lean.Language.Lean.HeaderParsedSnapshot"]}],"name":"Lean.Language.Lean.Types"}