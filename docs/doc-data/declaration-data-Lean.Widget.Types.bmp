{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Types.html#Lean.Widget.Module.javascriptHash\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">Module</span>.<span class=\"name\">javascriptHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Widget/Types.html#Lean.Widget.Module\">Module</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable.hash\">hash</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Lean/Widget/Types.html#Lean.Widget.Module.javascript\">javascript</a></span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>","info":{"doc":"The hash is cached to avoid recomputing it whenever the `Module` is used. ","docLink":"./Lean/Widget/Types.html#Lean.Widget.Module.javascriptHash","kind":"def","line":65,"name":"Lean.Widget.Module.javascriptHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Types.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Types.html#Lean.Widget.Module.javascript\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">Module</span>.<span class=\"name\">javascript</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Widget/Types.html#Lean.Widget.Module\">Module</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"A JS [module](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules)\nintended for use in user widgets.\n\nThe JS environment in which modules execute\nprovides a fixed set of libraries accessible via direct `import`,\nnotably [`@leanprover/infoview`](https://www.npmjs.com/package/@leanprover/infoview)\nand [`react`](https://www.npmjs.com/package/react).\n\nTo initialize this field from an external JS file,\nyou may use `include_str \"path\"/\"to\"/\"file.js\"`.\nHowever **beware** that this does not register a dependency with Lake,\nso your Lean module will not automatically be rebuilt\nwhen the `.js` file changes. ","docLink":"./Lean/Widget/Types.html#Lean.Widget.Module.javascript","kind":"def","line":63,"name":"Lean.Widget.Module.javascript","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Types.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Types.html#Lean.Widget.Module.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">Module</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">javascript</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">javascriptHash</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable.hash\">hash</a> <span class=\"fn\">javascript</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Widget/Types.html#Lean.Widget.Module\">Module</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/Types.html#Lean.Widget.Module.mk","kind":"ctor","line":49,"name":"Lean.Widget.Module.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Types.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Types.html#Lean.Widget.Module\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">Module</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A widget module is a unit of source code that can execute in the infoview.\n\nEvery module definition must either be annotated with `@[widget_module]`,\nor use a value of `javascript` identical to that of another definition\nannotated with `@[widget_module]`.\nThis makes it possible for the infoview to load the module.\n\nSee the [manual entry](https://lean-lang.org/examples/1900-1-1-widgets/)\nfor more information on how to use the widgets system. ","docLink":"./Lean/Widget/Types.html#Lean.Widget.Module","kind":"structure","line":40,"name":"Lean.Widget.Module","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Types.lean#L40-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Types.html#Lean.Widget.instRpcEncodableWidgetInstance\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">instRpcEncodableWidgetInstance</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Server.RpcEncodable</a> <a href=\"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance\">WidgetInstance</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Widget/Types.html#Lean.Widget.instRpcEncodableWidgetInstance","kind":"instance","line":38,"name":"Lean.Widget.instRpcEncodableWidgetInstance","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Types.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance.props\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">WidgetInstance</span>.<span class=\"name\">props</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance\">WidgetInstance</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">Server.RpcObjectStore</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span></div></div>","info":{"doc":"Arguments to be passed to the component's default exported function.\nMust be a JSON object.\n\nIn certain contexts\n(such as when rendering as a panel widget; see `Widget.savePanelWidgetInfo`),\nthe Lean infoview appends additional fields to this object.\n\nProps may contain RPC references,\nso must be stored as a `StateM` computation\nwith access to the RPC object store. ","docLink":"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance.props","kind":"def","line":37,"name":"Lean.Widget.WidgetInstance.props","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Types.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance.javascriptHash\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">WidgetInstance</span>.<span class=\"name\">javascriptHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance\">WidgetInstance</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>","info":{"doc":"Hash of the JS source of the widget module. ","docLink":"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance.javascriptHash","kind":"def","line":26,"name":"Lean.Widget.WidgetInstance.javascriptHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Types.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance.id\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">WidgetInstance</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance\">WidgetInstance</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"Name of the `@[widget_module]`. ","docLink":"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance.id","kind":"def","line":24,"name":"Lean.Widget.WidgetInstance.id","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Types.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">WidgetInstance</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">javascriptHash</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">props</span> : <span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">Server.RpcObjectStore</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance\">WidgetInstance</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance.mk","kind":"ctor","line":22,"name":"Lean.Widget.WidgetInstance.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Types.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">WidgetInstance</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"An instance of a widget component:\nthe identifier of a widget module and the hash of its JS source code\ntogether with props.\n\nSee the [manual entry](https://lean-lang.org/documentation/widgets/)\nfor more information about widgets. ","docLink":"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance","kind":"structure","line":16,"name":"Lean.Widget.WidgetInstance","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Types.lean#L16-L38"}}],"imports":["Lean.Server.Rpc.Basic"],"instances":[{"className":"Lean.Server.RpcEncodable","name":"Lean.Widget.instRpcEncodableWidgetInstance","typeNames":["Lean.Widget.WidgetInstance"]}],"name":"Lean.Widget.Types"}