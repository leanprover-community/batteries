{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.hasNospecializeAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasNospecializeAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.hasNospecializeAttribute","kind":"def","line":81,"name":"Lean.Compiler.hasNospecializeAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/Specialize.lean#L81-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.hasSpecializeAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasSpecializeAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.hasSpecializeAttribute","kind":"def","line":78,"name":"Lean.Compiler.hasSpecializeAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/Specialize.lean#L78-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.getSpecializationArgs?\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">getSpecializationArgs?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.getSpecializationArgs?","kind":"def","line":75,"name":"Lean.Compiler.getSpecializationArgs?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/Specialize.lean#L75-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.specializeAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">specializeAttr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">ParametricAttribute</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span></div></div>","info":{"doc":"Marks a definition to always be specialized during code generation.\n\nSpecialization is an optimization in the code generator for generating variants of a function that\nare specialized to specific parameter values. This is in particular useful for functions that take\nother functions as parameters: Usually when passing functions as parameters, a closure needs to be\nallocated that will then be called. Using `@[specialize]` prevents both of these operations by\nusing the provided function directly in the specialization of the inner function.\n\n`@[specialize]` can take additional arguments for the parameter names or indices (starting at 1) of\nthe parameters that should be specialized. By default, instance and function parameters are\nspecialized.\n","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.specializeAttr","kind":"opaque","line":52,"name":"Lean.Compiler.specializeAttr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/Specialize.lean#L52-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.nospecializeAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">nospecializeAttr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.TagAttribute\">TagAttribute</a></div></div>","info":{"doc":"Marks a definition to never be specialized during code generation.\n","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.nospecializeAttr","kind":"opaque","line":19,"name":"Lean.Compiler.nospecializeAttr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/Specialize.lean#L19-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.instBEqSpecializeAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instBEqSpecializeAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind\">SpecializeAttributeKind</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instBEqSpecializeAttributeKind","kind":"instance","line":17,"name":"Lean.Compiler.instBEqSpecializeAttributeKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/Specialize.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.instBEqSpecializeAttributeKind.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instBEqSpecializeAttributeKind</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind\">SpecializeAttributeKind</a> → <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind\">SpecializeAttributeKind</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instBEqSpecializeAttributeKind.beq","kind":"def","line":17,"name":"Lean.Compiler.instBEqSpecializeAttributeKind.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/Specialize.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecializeAttributeKind.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instInhabitedSpecializeAttributeKind</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind\">SpecializeAttributeKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecializeAttributeKind.default","kind":"def","line":17,"name":"Lean.Compiler.instInhabitedSpecializeAttributeKind.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/Specialize.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecializeAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instInhabitedSpecializeAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind\">SpecializeAttributeKind</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecializeAttributeKind","kind":"instance","line":17,"name":"Lean.Compiler.instInhabitedSpecializeAttributeKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/Specialize.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind.nospecialize\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecializeAttributeKind</span>.<span class=\"name\">nospecialize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind\">SpecializeAttributeKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind.nospecialize","kind":"ctor","line":16,"name":"Lean.Compiler.SpecializeAttributeKind.nospecialize","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/Specialize.lean#L16-L16"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind.specialize\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecializeAttributeKind</span>.<span class=\"name\">specialize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind\">SpecializeAttributeKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind.specialize","kind":"ctor","line":16,"name":"Lean.Compiler.SpecializeAttributeKind.specialize","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/Specialize.lean#L16-L16"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecializeAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind","kind":"inductive","line":15,"name":"Lean.Compiler.SpecializeAttributeKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/Specialize.lean#L15-L17"}}],"imports":["Lean.Meta.Basic"],"instances":[{"className":"Inhabited","name":"Lean.Compiler.instInhabitedSpecializeAttributeKind","typeNames":["Lean.Compiler.SpecializeAttributeKind"]},{"className":"BEq","name":"Lean.Compiler.instBEqSpecializeAttributeKind","typeNames":["Lean.Compiler.SpecializeAttributeKind"]}],"name":"Lean.Compiler.Specialize"}