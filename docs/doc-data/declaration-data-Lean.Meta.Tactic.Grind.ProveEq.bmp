{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/ProveEq.html#Lean.Meta.Grind.proveHEq?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">proveHEq?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"Similar to `proveEq?`, but for heterogeneous equality. ","docLink":"./Lean/Meta/Tactic/Grind/ProveEq.html#Lean.Meta.Grind.proveHEq?","kind":"def","line":217,"name":"Lean.Meta.Grind.proveHEq?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/ProveEq.lean#L217-L230"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/ProveEq.html#Lean.Meta.Grind.proveEq?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">proveEq?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">abstract</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"Try to construct a proof that `lhs = rhs` using the information in the\ngoal state. If `lhs` and `rhs` have not been internalized, this function\nwill internalize then, process propagated equalities, and then check\nwhether they are in the same equivalence class or not.\nThe goal state is not modified by this function.\nThis function mainly relies on congruence closure, and constraint\npropagation. It will not perform case analysis.\n","docLink":"./Lean/Meta/Tactic/Grind/ProveEq.html#Lean.Meta.Grind.proveEq?","kind":"def","line":169,"name":"Lean.Meta.Grind.proveEq?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/ProveEq.lean#L169-L215"}}],"imports":["Lean.Meta.Tactic.Grind.Types","Lean.Meta.Tactic.Grind.Simp"],"instances":[],"name":"Lean.Meta.Tactic.Grind.ProveEq"}