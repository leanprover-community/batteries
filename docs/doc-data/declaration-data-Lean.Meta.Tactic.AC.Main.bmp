{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.evalNf0\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">evalNf0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Elab.Tactic.Tactic</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.evalNf0","kind":"def","line":226,"name":"Lean.Meta.AC.evalNf0","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L226-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.acNfHypTactic\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">acNfHypTactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Elab.Tactic.TacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Implementation of the `ac_nf` tactic when operating on a hypothesis. ","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.acNfHypTactic","kind":"def","line":222,"name":"Lean.Meta.AC.acNfHypTactic","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L222-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.acNfTargetTactic\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">acNfTargetTactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Elab.Tactic.TacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Implementation of the `ac_nf` tactic when operating on the main goal. ","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.acNfTargetTactic","kind":"def","line":218,"name":"Lean.Meta.AC.acNfTargetTactic","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L218-L220"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.acNfHypMeta\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">acNfHypMeta</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.acNfHypMeta","kind":"def","line":208,"name":"Lean.Meta.AC.acNfHypMeta","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L208-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.acRflTactic\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">acRflTactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Elab.Tactic.Tactic</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.acRflTactic","kind":"def","line":204,"name":"Lean.Meta.AC.acRflTactic","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L204-L206"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.rewriteUnnormalizedRefl\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">rewriteUnnormalizedRefl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.rewriteUnnormalizedRefl","kind":"def","line":201,"name":"Lean.Meta.AC.rewriteUnnormalizedRefl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L201-L202"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.rewriteUnnormalized\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">rewriteUnnormalized</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.rewriteUnnormalized","kind":"def","line":192,"name":"Lean.Meta.AC.rewriteUnnormalized","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L192-L199"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.post\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">post</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">SimpM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Step\">Simp.Step</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.post","kind":"def","line":173,"name":"Lean.Meta.AC.post","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L173-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.buildNormProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">buildNormProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preContext</span> : <a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext\">PreContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">r</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.buildNormProof","kind":"def","line":116,"name":"Lean.Meta.AC.buildNormProof","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L116-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.abstractAtoms\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">abstractAtoms</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preContext</span> : <a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext\">PreContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">atoms</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span> â†’ <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"In order to prevent the kernel trying to reduce the atoms of the expression, we abstract the proof\nover them. But `ac_rfl` proofs are not completely abstract in the value of the atoms â€“ it recognizes\nneutral elements. So we have to abstract over these proofs as well.\n","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.abstractAtoms","kind":"def","line":91,"name":"Lean.Meta.AC.abstractAtoms","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L91-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.toACExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">toACExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op </span><span class=\"fn\">l </span><span class=\"fn\">r</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.ACExpr\">ACExpr</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.toACExpr","kind":"def","line":68,"name":"Lean.Meta.AC.toACExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L68-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.bin\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">bin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op </span><span class=\"fn\">l </span><span class=\"fn\">r</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.bin","kind":"def","line":65,"name":"Lean.Meta.AC.bin","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L65-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreExpr.var\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">PreExpr</span>.<span class=\"name\">var</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreExpr\">PreExpr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreExpr.var","kind":"ctor","line":63,"name":"Lean.Meta.AC.PreExpr.var","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreExpr.op\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">PreExpr</span>.<span class=\"name\">op</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreExpr\">PreExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreExpr\">PreExpr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreExpr.op","kind":"ctor","line":62,"name":"Lean.Meta.AC.PreExpr.op","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">PreExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreExpr","kind":"inductive","line":61,"name":"Lean.Meta.AC.PreExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L61-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.preContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">preContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext\">PreContext</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.preContext","kind":"def","line":50,"name":"Lean.Meta.AC.preContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L50-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.getInstance\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">getInstance</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cls</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exprs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.getInstance","kind":"def","line":40,"name":"Lean.Meta.AC.getInstance","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L40-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.instEvalInformationPreContextACExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">instEvalInformationPreContextACExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/AC.html#Lean.Data.AC.EvalInformation\">Data.AC.EvalInformation</a> <a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext\">PreContext</a> <a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.ACExpr\">ACExpr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.instEvalInformationPreContextACExpr","kind":"instance","line":35,"name":"Lean.Meta.AC.instEvalInformationPreContextACExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L35-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.instContextInformationProdPreContextArrayBool\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">instContextInformationProdPreContextArrayBool</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/AC.html#Lean.Data.AC.ContextInformation\">Data.AC.ContextInformation</a> (<a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext\">PreContext</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.instContextInformationProdPreContextArrayBool","kind":"instance","line":30,"name":"Lean.Meta.AC.instContextInformationProdPreContextArrayBool","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L30-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.instInhabitedPreContext.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">instInhabitedPreContext</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext\">PreContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.instInhabitedPreContext.default","kind":"def","line":28,"name":"Lean.Meta.AC.instInhabitedPreContext.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.instInhabitedPreContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">instInhabitedPreContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext\">PreContext</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.instInhabitedPreContext","kind":"instance","line":28,"name":"Lean.Meta.AC.instInhabitedPreContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext.idem\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">PreContext</span>.<span class=\"name\">idem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext\">PreContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext.idem","kind":"def","line":27,"name":"Lean.Meta.AC.PreContext.idem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext.comm\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">PreContext</span>.<span class=\"name\">comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext\">PreContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext.comm","kind":"def","line":26,"name":"Lean.Meta.AC.PreContext.comm","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext.assoc\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">PreContext</span>.<span class=\"name\">assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext\">PreContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext.assoc","kind":"def","line":25,"name":"Lean.Meta.AC.PreContext.assoc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext.op\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">PreContext</span>.<span class=\"name\">op</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext\">PreContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext.op","kind":"def","line":24,"name":"Lean.Meta.AC.PreContext.op","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext.id\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">PreContext</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext\">PreContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext.id","kind":"def","line":23,"name":"Lean.Meta.AC.PreContext.id","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">PreContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op </span><span class=\"fn\">assoc</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">comm </span><span class=\"fn\">idem</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext\">PreContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext.mk","kind":"ctor","line":22,"name":"Lean.Meta.AC.PreContext.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">PreContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext","kind":"structure","line":22,"name":"Lean.Meta.AC.PreContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L22-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.ACExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AC</span>.<span class=\"name\">ACExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.ACExpr","kind":"def","line":20,"name":"Lean.Meta.AC.ACExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/AC/Main.lean#L20-L20"}}],"imports":["Lean.Meta.Tactic.Refl","Lean.Meta.Tactic.Simp.Main","Lean.Elab.Tactic.Rewrite"],"instances":[{"className":"Inhabited","name":"Lean.Meta.AC.instInhabitedPreContext","typeNames":["Lean.Meta.AC.PreContext"]},{"className":"Lean.Data.AC.ContextInformation","name":"Lean.Meta.AC.instContextInformationProdPreContextArrayBool","typeNames":["Prod"]},{"className":"Lean.Data.AC.EvalInformation","name":"Lean.Meta.AC.instEvalInformationPreContextACExpr","typeNames":["Lean.Meta.AC.PreContext","Lean.Meta.AC.ACExpr"]}],"name":"Lean.Meta.Tactic.AC.Main"}