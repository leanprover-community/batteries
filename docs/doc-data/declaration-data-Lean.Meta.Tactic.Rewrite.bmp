{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Rewrite.html#Lean.MVarId.rewrite\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">rewrite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e </span><span class=\"fn\">heq</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">symm</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">config</span> : <a href=\"./Init/Meta/Defs.html#Lean.Meta.Rewrite.Config\">Meta.Rewrite.Config</a> := <a href=\"./Init/Meta/Defs.html#Lean.Meta.Rewrite.Config.mk\">{</a> <a href=\"./Init/Meta/Defs.html#Lean.Meta.Rewrite.Config.mk\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult\">Meta.RewriteResult</a></span></div></div>","info":{"doc":"Rewrite `e` using `heq` in the context of `mvarId`.\nReturns the result of the rewrite, the metavariable `mvarId` is not assigned.\n","docLink":"./Lean/Meta/Tactic/Rewrite.html#Lean.MVarId.rewrite","kind":"def","line":24,"name":"Lean.MVarId.rewrite","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Rewrite.lean#L24-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult.mvarIds\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">RewriteResult</span>.<span class=\"name\">mvarIds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult\">RewriteResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult.mvarIds","kind":"def","line":22,"name":"Lean.Meta.RewriteResult.mvarIds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Rewrite.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult.eqProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">RewriteResult</span>.<span class=\"name\">eqProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult\">RewriteResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult.eqProof","kind":"def","line":21,"name":"Lean.Meta.RewriteResult.eqProof","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Rewrite.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult.eNew\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">RewriteResult</span>.<span class=\"name\">eNew</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult\">RewriteResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult.eNew","kind":"def","line":20,"name":"Lean.Meta.RewriteResult.eNew","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Rewrite.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">RewriteResult</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eNew </span><span class=\"fn\">eqProof</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarIds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult\">RewriteResult</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult.mk","kind":"ctor","line":19,"name":"Lean.Meta.RewriteResult.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Rewrite.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">RewriteResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult","kind":"structure","line":19,"name":"Lean.Meta.RewriteResult","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Rewrite.lean#L19-L22"}}],"imports":["Lean.Meta.AppBuilder","Lean.Meta.MatchUtil","Lean.Meta.KAbstract","Lean.Meta.Tactic.Apply","Lean.Meta.BinderNameHint"],"instances":[],"name":"Lean.Meta.Tactic.Rewrite"}