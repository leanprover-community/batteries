{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.html#Lean.Grind.CommRing.Poly.spolM\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">spolM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/RingM.html#Lean.Meta.Grind.Arith.CommRing.RingM\">Meta.Grind.Arith.CommRing.RingM</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult\">SPolResult</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.html#Lean.Grind.CommRing.Poly.spolM","kind":"def","line":100,"name":"Lean.Grind.CommRing.Poly.spolM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.lean#L100-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.html#Lean.Grind.CommRing.Poly.combineM\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">combineM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/RingM.html#Lean.Meta.Grind.Arith.CommRing.RingM\">Meta.Grind.Arith.CommRing.RingM</a> <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.html#Lean.Grind.CommRing.Poly.combineM","kind":"def","line":97,"name":"Lean.Grind.CommRing.Poly.combineM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.lean#L97-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.html#Lean.Grind.CommRing.Poly.mulM\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mulM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/RingM.html#Lean.Meta.Grind.Arith.CommRing.RingM\">Meta.Grind.Arith.CommRing.RingM</a> <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.html#Lean.Grind.CommRing.Poly.mulM","kind":"def","line":94,"name":"Lean.Grind.CommRing.Poly.mulM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.lean#L94-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.html#Lean.Grind.CommRing.Poly.mulMonM\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mulMonM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/RingM.html#Lean.Meta.Grind.Arith.CommRing.RingM\">Meta.Grind.Arith.CommRing.RingM</a> <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.html#Lean.Grind.CommRing.Poly.mulMonM","kind":"def","line":91,"name":"Lean.Grind.CommRing.Poly.mulMonM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.lean#L91-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.html#Lean.Grind.CommRing.Poly.mulConstM\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mulConstM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/RingM.html#Lean.Meta.Grind.Arith.CommRing.RingM\">Meta.Grind.Arith.CommRing.RingM</a> <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.html#Lean.Grind.CommRing.Poly.mulConstM","kind":"def","line":88,"name":"Lean.Grind.CommRing.Poly.mulConstM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.lean#L88-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.html#Lean.Grind.CommRing.Expr.toPolyM\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toPolyM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.RingExpr\">Meta.Grind.Arith.CommRing.RingExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/RingM.html#Lean.Meta.Grind.Arith.CommRing.RingM\">Meta.Grind.Arith.CommRing.RingM</a> <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a></span></div></div>","info":{"doc":"Converts the given ring expression into a multivariate polynomial.\nIf the ring has a nonzero characteristic, it is used during normalization.\n","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.html#Lean.Grind.CommRing.Expr.toPolyM","kind":"def","line":81,"name":"Lean.Grind.CommRing.Expr.toPolyM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/SafePoly.lean#L81-L86"}}],"imports":["Lean.Meta.Tactic.Grind.Arith.CommRing.RingM","Lean.Meta.Tactic.Grind.Arith.CommRing.Poly"],"instances":[],"name":"Lean.Meta.Tactic.Grind.Arith.CommRing.SafePoly"}