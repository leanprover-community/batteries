{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.unsat_relabel_iff\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">unsat_relabel_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">CNF</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hw</span> : <span class=\"fn\">∀ {<span class=\"fn\">v1 </span><span class=\"fn\">v2</span> : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Mem\">Mem</a> <span class=\"fn\">v1</span> <span class=\"fn\">f</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Mem\">Mem</a> <span class=\"fn\">v2</span> <span class=\"fn\">f</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">v1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">v2</span></span> → <span class=\"fn\">v1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v2</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Unsat\">Unsat</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Unsat\">Unsat</a></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.unsat_relabel_iff","kind":"theorem","line":102,"name":"Std.Sat.CNF.unsat_relabel_iff","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L102-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.nonempty_or_impossible\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">nonempty_or_impossible</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">CNF</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Exists\">:</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.replicate\">List.replicate</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.nonempty_or_impossible","kind":"theorem","line":90,"name":"Std.Sat.CNF.nonempty_or_impossible","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L90-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.unsat_relabel\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">unsat_relabel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">CNF</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Unsat\">Unsat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Unsat\">Unsat</a></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.unsat_relabel","kind":"theorem","line":86,"name":"Std.Sat.CNF.unsat_relabel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L86-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.sat_relabel\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">sat_relabel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β✝</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r1</span> : <span class=\"fn\"><span class=\"fn\">β✝</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r2</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β✝</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">CNF</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Sat\">Sat</a> (<span class=\"fn\">r1</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">r2</span>) <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Sat\">Sat</a> <span class=\"fn\">r1</span> <span class=\"fn\">(<a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> <span class=\"fn\">r2</span> <span class=\"fn\">f</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.sat_relabel","kind":"theorem","line":83,"name":"Std.Sat.CNF.sat_relabel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L83-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_congr\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">relabel_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">CNF</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r1 </span><span class=\"fn\">r2</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hw</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Mem\">Mem</a> <span class=\"fn\">v</span> <span class=\"fn\">f</span></span> → <span class=\"fn\"><span class=\"fn\">r1</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r2</span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> <span class=\"fn\">r1</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> <span class=\"fn\">r2</span> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_congr","kind":"theorem","line":74,"name":"Std.Sat.CNF.relabel_congr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L74-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_id\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">relabel_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">CNF</a> <span class=\"fn\">α✝</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> <a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_id","kind":"theorem","line":72,"name":"Std.Sat.CNF.relabel_id","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L72-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_relabel\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">relabel_relabel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝¹</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r1</span> : <span class=\"fn\"><span class=\"fn\">α✝</span> → <span class=\"fn\">α✝¹</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝²</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r2</span> : <span class=\"fn\"><span class=\"fn\">α✝²</span> → <span class=\"fn\">α✝</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">CNF</a> <span class=\"fn\">α✝²</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> <span class=\"fn\">r1</span> <span class=\"fn\">(<a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> <span class=\"fn\">r2</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> (<span class=\"fn\">r1</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">r2</span>) <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_relabel","kind":"theorem","line":69,"name":"Std.Sat.CNF.relabel_relabel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L69-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_append\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">relabel_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝¹</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α✝</span> → <span class=\"fn\">α✝¹</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f1 </span><span class=\"fn\">f2</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">CNF</a> <span class=\"fn\">α✝</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> <span class=\"fn\">r</span> (<span class=\"fn\">f1</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">f2</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">f1</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">f2</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_append","kind":"theorem","line":66,"name":"Std.Sat.CNF.relabel_append","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L66-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.eval_relabel\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">eval_relabel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">CNF</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.eval\">eval</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.eval\">eval</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">r</span>) <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.eval_relabel","kind":"theorem","line":62,"name":"Std.Sat.CNF.eval_relabel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L62-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_cons\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">relabel_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause\">Clause</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause\">Clause</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> <span class=\"fn\">r</span> (<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">f</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">Clause.relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_cons","kind":"theorem","line":59,"name":"Std.Sat.CNF.relabel_cons","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L59-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_nil\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">relabel_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">relabel</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></div></div>","info":{"doc":"","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_nil","kind":"theorem","line":58,"name":"Std.Sat.CNF.relabel_nil","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">relabel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">CNF</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">CNF</a> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"Change the literal type in a `CNF` formula from `α` to `β` by using `r`.\n","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel","kind":"def","line":53,"name":"Std.Sat.CNF.relabel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L53-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel_relabel'\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">Clause</span>.<span class=\"name\">relabel_relabel'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝¹</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r1</span> : <span class=\"fn\"><span class=\"fn\">α✝</span> → <span class=\"fn\">α✝¹</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝²</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r2</span> : <span class=\"fn\"><span class=\"fn\">α✝²</span> → <span class=\"fn\">α✝</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">relabel</a> <span class=\"fn\">r1</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">relabel</a> <span class=\"fn\">r2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">relabel</a> (<span class=\"fn\">r1</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">r2</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel_relabel'","kind":"theorem","line":40,"name":"Std.Sat.CNF.Clause.relabel_relabel'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L40-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel_congr\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">Clause</span>.<span class=\"name\">relabel_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause\">Clause</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r1 </span><span class=\"fn\">r2</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hw</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause.Mem\">Mem</a> <span class=\"fn\">v</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><span class=\"fn\">r1</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r2</span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">relabel</a> <span class=\"fn\">r1</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">relabel</a> <span class=\"fn\">r2</span> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel_congr","kind":"theorem","line":31,"name":"Std.Sat.CNF.Clause.relabel_congr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L31-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel_id'\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">Clause</span>.<span class=\"name\">relabel_id'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">relabel</a> <a href=\"./Init/Prelude.html#id\">id</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#id\">id</a></div></div>","info":{"doc":"","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel_id'","kind":"theorem","line":29,"name":"Std.Sat.CNF.Clause.relabel_id'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.eval_relabel\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">Clause</span>.<span class=\"name\">eval_relabel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause\">Clause</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause.eval\">eval</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause.eval\">eval</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">r</span>) <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.eval_relabel","kind":"theorem","line":25,"name":"Std.Sat.CNF.Clause.eval_relabel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L25-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">Clause</span>.<span class=\"name\">relabel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause\">Clause</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause\">Clause</a> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"Change the literal type in a `Clause` from `α` to `β` by using `r`.\n","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel","kind":"def","line":20,"name":"Std.Sat.CNF.Clause.relabel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Relabel.lean#L20-L23"}}],"imports":["Std.Sat.CNF.Basic"],"instances":[],"name":"Std.Sat.CNF.Relabel"}