{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.Entrypoint.relabelNat_unsat_iff\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">Entrypoint</span>.<span class=\"name\">relabelNat_unsat_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">entry</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint\">Entrypoint</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">entry</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.Entrypoint.relabelNat\">relabelNat</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.Unsat\">Unsat</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">entry</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.Unsat\">Unsat</a></span></div></div>","info":{"doc":"`relabelNat` preserves unsatisfiablility.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.Entrypoint.relabelNat_unsat_iff","kind":"theorem","line":385,"name":"Std.Sat.AIG.Entrypoint.relabelNat_unsat_iff","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L385-L391"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.Entrypoint.relabelNat\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">Entrypoint</span>.<span class=\"name\">relabelNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">entry</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint\">Entrypoint</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint\">Entrypoint</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"Map an `Entrypoint` with arbitrary atom identifiers to one that uses `Nat` as atom identifiers.\nThis is useful for preparing an `AIG` for CNF translation if it doesn't already use `Nat`\nidentifiers.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.Entrypoint.relabelNat","kind":"def","line":374,"name":"Std.Sat.AIG.Entrypoint.relabelNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L374-L383"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.Entrypoint.relabelNat'\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">Entrypoint</span>.<span class=\"name\">relabelNat'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">entry</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint\">Entrypoint</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint\">Entrypoint</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.Entrypoint.relabelNat'","kind":"def","line":365,"name":"Std.Sat.AIG.Entrypoint.relabelNat'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L365-L372"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat_unsat_iff\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">relabelNat_unsat_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">invert</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hidx1</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat\">relabelNat</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hidx2</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat\">relabelNat</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.UnsatAt\">UnsatAt</a></span> <span class=\"fn\">idx</span> <span class=\"fn\">invert</span> <span class=\"fn\">hidx1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.UnsatAt\">UnsatAt</a></span> <span class=\"fn\">idx</span> <span class=\"fn\">invert</span> <span class=\"fn\">hidx2</span></span></div></div>","info":{"doc":"`relabelNat` preserves unsatisfiablility.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat_unsat_iff","kind":"theorem","line":354,"name":"Std.Sat.AIG.relabelNat_unsat_iff","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L354-L361"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat_unsat_iff_of_NonEmpty\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">relabelNat_unsat_iff_of_NonEmpty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">invert</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hidx1</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat\">relabelNat</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hidx2</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat\">relabelNat</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.UnsatAt\">UnsatAt</a></span> <span class=\"fn\">idx</span> <span class=\"fn\">invert</span> <span class=\"fn\">hidx1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.UnsatAt\">UnsatAt</a></span> <span class=\"fn\">idx</span> <span class=\"fn\">invert</span> <span class=\"fn\">hidx2</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat_unsat_iff_of_NonEmpty","kind":"theorem","line":332,"name":"Std.Sat.AIG.relabelNat_unsat_iff_of_NonEmpty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L332-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat_size_eq_size\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">relabelNat_size_eq_size</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat\">relabelNat</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat_size_eq_size","kind":"theorem","line":328,"name":"Std.Sat.AIG.relabelNat_size_eq_size","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L328-L330"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat'_fst_eq_relabelNat\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">relabelNat'_fst_eq_relabelNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat'\">relabelNat'</a></span>.<a href=\"./Init/Prelude.html#Prod.fst\">fst</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat\">relabelNat</a></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat'_fst_eq_relabelNat","kind":"theorem","line":324,"name":"Std.Sat.AIG.relabelNat'_fst_eq_relabelNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L324-L326"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">relabelNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"Map an `AIG` with arbitrary atom identifiers to one that uses `Nat` as atom identifiers. This is\nuseful for preparing an `AIG` for CNF translation if it doesn't already use `Nat` identifiers.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat","kind":"def","line":317,"name":"Std.Sat.AIG.relabelNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L317-L322"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat'\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">relabelNat'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat'","kind":"def","line":308,"name":"Std.Sat.AIG.relabelNat'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L308-L315"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG_find_some\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">ofAIG_find_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">aig</span> → <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Exists\">:</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG\">ofAIG</a> <span class=\"fn\">aig</span>)</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">a</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">n</span></span></span></div></div>","info":{"doc":"We will find a `Nat` for every atom in the `AIG` that the `ofAIG` map was built from.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG_find_some","kind":"theorem","line":292,"name":"Std.Sat.AIG.RelabelNat.State.ofAIG_find_some","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L292-L303"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG_find_unique\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">ofAIG_find_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">(<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG\">ofAIG</a> <span class=\"fn\">aig</span>)</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">a</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a'</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG\">ofAIG</a> <span class=\"fn\">aig</span>)</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">a'</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a'</span></span></div></div>","info":{"doc":"Assuming that we find a `Nat` for an atom in the `ofAIG` map, that `Nat` is unique in the map.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG_find_unique","kind":"theorem","line":283,"name":"Std.Sat.AIG.RelabelNat.State.ofAIG_find_unique","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L283-L290"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG.Inv2\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">ofAIG</span>.<span class=\"name\">Inv2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">State.Inv2</a> <span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG\">ofAIG</a> <span class=\"fn\">aig</span>)</span></span></div></div>","info":{"doc":"The map returned by `ofAIG` fulfills the `Inv2` property.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG.Inv2","kind":"theorem","line":276,"name":"Std.Sat.AIG.RelabelNat.State.ofAIG.Inv2","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L276-L281"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG.Inv1\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">ofAIG</span>.<span class=\"name\">Inv1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Exists\">:</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">State.Inv1</a> <span class=\"fn\">n</span> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG\">ofAIG</a> <span class=\"fn\">aig</span>)</span></span></div></div>","info":{"doc":"The map returned by `ofAIG` fulfills the `Inv1` property.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG.Inv1","kind":"theorem","line":268,"name":"Std.Sat.AIG.RelabelNat.State.ofAIG.Inv1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L268-L274"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">ofAIG</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"Obtain the atom mapping from α to `Nat` for a given `AIG`.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG","kind":"def","line":262,"name":"Std.Sat.AIG.RelabelNat.State.ofAIG","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L262-L266"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIGAux.go\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">ofAIGAux</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">state</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIGAux.go","kind":"def","line":248,"name":"Std.Sat.AIG.RelabelNat.State.ofAIGAux.go","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L248-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIGAux\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">ofAIGAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span></div></div>","info":{"doc":"Build up a `State` that has all atoms of an `AIG` inserted.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIGAux","kind":"def","line":242,"name":"Std.Sat.AIG.RelabelNat.State.ofAIGAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L242-L260"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.addGate\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">addGate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hidx</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">state</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Fanin\">Fanin</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.gate\">Decl.gate</a> <span class=\"fn\">lhs</span> <span class=\"fn\">rhs</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> (<span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>","info":{"doc":"Insert a `Decl.gate` into the `State` structure.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.addGate","kind":"def","line":229,"name":"Std.Sat.AIG.RelabelNat.State.addGate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L229-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.addFalse\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">addFalse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hidx</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">state</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.false\">Decl.false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> (<span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>","info":{"doc":"Insert a `Decl.false` into the `State` structure.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.addFalse","kind":"def","line":216,"name":"Std.Sat.AIG.RelabelNat.State.addFalse","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L216-L227"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.addAtom\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">addAtom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hidx</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">state</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.atom\">Decl.atom</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> (<span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>","info":{"doc":"Insert a `Decl.atom` into the `State` structure.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.addAtom","kind":"def","line":186,"name":"Std.Sat.AIG.RelabelNat.State.addAtom","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L186-L214"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.empty\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">0</span></span></div></div>","info":{"doc":"The basic initial state.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.empty","kind":"def","line":180,"name":"Std.Sat.AIG.RelabelNat.State.empty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L180-L184"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.inv2\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">inv2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.map\">map</a></span></span></div></div>","info":{"doc":"Proof that we inserted all atoms until `idx`.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.inv2","kind":"theorem","line":176,"name":"Std.Sat.AIG.RelabelNat.State.inv2","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L176-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.inv1\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">inv1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">Inv1</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.max\">max</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.map\">map</a></span></span></div></div>","info":{"doc":"Proof that we never reuse a number.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.inv1","kind":"theorem","line":172,"name":"Std.Sat.AIG.RelabelNat.State.inv1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L172-L172"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.map\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"The translation `HashMap`\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.map","kind":"def","line":168,"name":"Std.Sat.AIG.RelabelNat.State.map","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L168-L168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.max\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">max</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"The next number to use for identifying an atom.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.max","kind":"def","line":164,"name":"Std.Sat.AIG.RelabelNat.State.max","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L164-L164"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">max</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inv1</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">Inv1</a> <span class=\"fn\">max</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inv2</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.mk","kind":"ctor","line":160,"name":"Std.Sat.AIG.RelabelNat.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L160-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The invariant carrying state structure for building the `HashMap` that translates from arbitrary\natom identifiers to `Nat`.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State","kind":"structure","line":156,"name":"Std.Sat.AIG.RelabelNat.State","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L156-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.property\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span>.<span class=\"name\">property</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx </span><span class=\"fn\">upper</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hidx</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">upper</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">upper</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">heq</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.atom\">Decl.atom</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Exists\">:</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\">map</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">a</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"The key property provided by `Inv2`, if we have `Inv2` at a certain index, then all atoms below\nthat index have been inserted into the `HashMap`.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.property","kind":"theorem","line":105,"name":"Std.Sat.AIG.RelabelNat.State.Inv2.property","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L105-L152"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.upper_lt_size\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span>.<span class=\"name\">upper_lt_size</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">upper</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">upper</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">upper</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.upper_lt_size","kind":"theorem","line":101,"name":"Std.Sat.AIG.RelabelNat.State.Inv2.upper_lt_size","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L101-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.gate\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span>.<span class=\"name\">gate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Fanin\">Fanin</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlt</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hatom</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.gate\">Decl.gate</a> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> (<span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">map</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.gate","kind":"ctor","line":98,"name":"Std.Sat.AIG.RelabelNat.State.Inv2.gate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L98-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.false\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span>.<span class=\"name\">false</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlt</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hatom</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.false\">Decl.false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> (<span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">map</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.false","kind":"ctor","line":96,"name":"Std.Sat.AIG.RelabelNat.State.Inv2.false","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L96-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.oldAtom\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span>.<span class=\"name\">oldAtom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlt</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hatom</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.atom\">Decl.atom</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hmap</span> : <span class=\"fn\">map</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">a</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> (<span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">map</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.oldAtom","kind":"ctor","line":94,"name":"Std.Sat.AIG.RelabelNat.State.Inv2.oldAtom","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L94-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.newAtom\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span>.<span class=\"name\">newAtom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">val</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlt</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hatom</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.atom\">Decl.atom</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hmap</span> : <span class=\"fn\">map</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">a</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> (<span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">map</span>.<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap.insert\">insert</a></span> <span class=\"fn\">a</span> <span class=\"fn\">val</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.newAtom","kind":"ctor","line":92,"name":"Std.Sat.AIG.RelabelNat.State.Inv2.newAtom","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L92-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.empty\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span>.<span class=\"name\">empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.empty","kind":"ctor","line":91,"name":"Std.Sat.AIG.RelabelNat.State.Inv2.empty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L91-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> → <a href=\"./foundational_types.html\">Prop</a></span></span></div></div>","info":{"doc":"This invariant says that we have already visited and inserted all nodes up to a certain index.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2","kind":"inductive","line":87,"name":"Std.Sat.AIG.RelabelNat.State.Inv2","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L87-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.property\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv1</span>.<span class=\"name\">property</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">Inv1</a> <span class=\"fn\">n</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hfound1</span> : <span class=\"fn\">map</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">x</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hfound2</span> : <span class=\"fn\">map</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">y</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"If a HashMap fulfills `Inv1` it is in an injection.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.property","kind":"theorem","line":50,"name":"Std.Sat.AIG.RelabelNat.State.Inv1.property","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L50-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.lt_of_get?_eq_some\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv1</span>.<span class=\"name\">lt_of_get?_eq_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">Inv1</a> <span class=\"fn\">n</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">map</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">x</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">m</span></span> → <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.lt_of_get?_eq_some","kind":"theorem","line":31,"name":"Std.Sat.AIG.RelabelNat.State.Inv1.lt_of_get?_eq_some","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L31-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.insert\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv1</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">Inv1</a> <span class=\"fn\">n</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hfind</span> : <span class=\"fn\">map</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">x</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">Inv1</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">map</span>.<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap.insert\">insert</a></span> <span class=\"fn\">x</span> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.insert","kind":"ctor","line":29,"name":"Std.Sat.AIG.RelabelNat.State.Inv1.insert","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.empty\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv1</span>.<span class=\"name\">empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">Inv1</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>","info":{"doc":"","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.empty","kind":"ctor","line":28,"name":"Std.Sat.AIG.RelabelNat.State.Inv1.empty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> → <a href=\"./foundational_types.html\">Prop</a></span></span></div></div>","info":{"doc":"This invariant ensures that we only insert an atom at most once and with a monotonically increasing\nindex.\n","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1","kind":"inductive","line":23,"name":"Std.Sat.AIG.RelabelNat.State.Inv1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/AIG/RelabelNat.lean#L23-L29"}}],"imports":["Std.Sat.AIG.Relabel"],"instances":[],"name":"Std.Sat.AIG.RelabelNat"}