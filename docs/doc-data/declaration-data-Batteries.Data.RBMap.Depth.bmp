{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.WF.depth_bound\"><span class=\"name\">Batteries</span>.<span class=\"name\">RBNode</span>.<span class=\"name\">WF</span>.<span class=\"name\">depth_bound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">cmp</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./Init/Data/Ord/Basic.html#Ordering\">Ordering</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBNode\">RBNode</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBNode.WF\">WF</a> <span class=\"fn\">cmp</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depth\">depth</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBNode.size\">size</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Init/Data/Nat/Log2.html#Nat.log2\">log2</a></span></div></div>","info":{"doc":"A well formed tree has `t.depth ∈ O(log t.size)`, that is, it is well balanced.\nThis justifies the `O(log n)` bounds on most searching operations of `RBSet`.\n","docLink":"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.WF.depth_bound","kind":"theorem","line":84,"name":"Batteries.RBNode.WF.depth_bound","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/RBMap/Depth.lean#L84-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.Balanced.depth_bound\"><span class=\"name\">Batteries</span>.<span class=\"name\">RBNode</span>.<span class=\"name\">Balanced</span>.<span class=\"name\">depth_bound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBNode\">RBNode</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBColor\">RBColor</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBNode.Balanced\">Balanced</a></span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depth\">depth</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBNode.size\">size</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Init/Data/Nat/Log2.html#Nat.log2\">log2</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.Balanced.depth_bound","kind":"theorem","line":80,"name":"Batteries.RBNode.Balanced.depth_bound","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/RBMap/Depth.lean#L80-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.Balanced.le_size\"><span class=\"name\">Batteries</span>.<span class=\"name\">RBNode</span>.<span class=\"name\">Balanced</span>.<span class=\"name\">le_size</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBNode\">RBNode</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBColor\">RBColor</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBNode.Balanced\">Balanced</a></span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span> → <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthLB\">depthLB</a> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBNode.size\">size</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.Balanced.le_size","kind":"theorem","line":70,"name":"Batteries.RBNode.Balanced.le_size","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/RBMap/Depth.lean#L70-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.Balanced.depth_le\"><span class=\"name\">Batteries</span>.<span class=\"name\">RBNode</span>.<span class=\"name\">Balanced</span>.<span class=\"name\">depth_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBNode\">RBNode</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBColor\">RBColor</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBNode.Balanced\">Balanced</a></span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depth\">depth</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthUB\">depthUB</a> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.Balanced.depth_le","kind":"theorem","line":64,"name":"Batteries.RBNode.Balanced.depth_le","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/RBMap/Depth.lean#L64-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthUB_le_two_depthLB\"><span class=\"name\">Batteries</span>.<span class=\"name\">RBNode</span>.<span class=\"name\">depthUB_le_two_depthLB</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBColor\">RBColor</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthUB\">depthUB</a> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthLB\">depthLB</a> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthUB_le_two_depthLB","kind":"theorem","line":60,"name":"Batteries.RBNode.depthUB_le_two_depthLB","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/RBMap/Depth.lean#L60-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthUB_le\"><span class=\"name\">Batteries</span>.<span class=\"name\">RBNode</span>.<span class=\"name\">depthUB_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBColor\">RBColor</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthUB\">depthUB</a> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthUB_le","kind":"theorem","line":56,"name":"Batteries.RBNode.depthUB_le","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/RBMap/Depth.lean#L56-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthUB\"><span class=\"name\">Batteries</span>.<span class=\"name\">RBNode</span>.<span class=\"name\">depthUB</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBColor\">RBColor</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></span></div></div>","info":{"doc":"`depthUB c n` is the best upper bound on the depth of any balanced red-black tree\nwith root colored `c` and black-height `n`.\n","docLink":"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthUB","kind":"def","line":48,"name":"Batteries.RBNode.depthUB","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/RBMap/Depth.lean#L48-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthLB_le\"><span class=\"name\">Batteries</span>.<span class=\"name\">RBNode</span>.<span class=\"name\">depthLB_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBColor\">RBColor</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthLB\">depthLB</a> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthLB_le","kind":"theorem","line":44,"name":"Batteries.RBNode.depthLB_le","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/RBMap/Depth.lean#L44-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthLB\"><span class=\"name\">Batteries</span>.<span class=\"name\">RBNode</span>.<span class=\"name\">depthLB</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBColor\">RBColor</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></span></div></div>","info":{"doc":"`depthLB c n` is the best upper bound on the depth of any balanced red-black tree\nwith root colored `c` and black-height `n`.\n","docLink":"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depthLB","kind":"def","line":36,"name":"Batteries.RBNode.depthLB","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/RBMap/Depth.lean#L36-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.size_lt_depth\"><span class=\"name\">Batteries</span>.<span class=\"name\">RBNode</span>.<span class=\"name\">size_lt_depth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBNode\">RBNode</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBNode.size\">size</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depth\">depth</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.size_lt_depth","kind":"theorem","line":27,"name":"Batteries.RBNode.size_lt_depth","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/RBMap/Depth.lean#L27-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depth\"><span class=\"name\">Batteries</span>.<span class=\"name\">RBNode</span>.<span class=\"name\">depth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBNode\">RBNode</a> <span class=\"fn\">α</span></span> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"`O(n)`. `depth t` is the maximum number of nodes on any path to a leaf.\nIt is an upper bound on most tree operations.\n","docLink":"./Batteries/Data/RBMap/Depth.html#Batteries.RBNode.depth","kind":"def","line":19,"name":"Batteries.RBNode.depth","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/RBMap/Depth.lean#L19-L25"}}],"imports":["Init","Batteries.Data.RBMap.WF"],"instances":[],"name":"Batteries.Data.RBMap.Depth"}