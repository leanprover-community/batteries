{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Register.html#Lake.maybeRegisterJob\"><span class=\"name\">Lake</span>.<span class=\"name\">maybeRegisterJob</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">job</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Registers the produced job for the top-level build monitor\nif it is not already (i.e., it has an empty caption).\n","docLink":"./Lake/Build/Job/Register.html#Lake.maybeRegisterJob","kind":"def","line":75,"name":"Lake.maybeRegisterJob","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Register.lean#L75-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Register.html#Lake.withRegisterJob\"><span class=\"name\">Lake</span>.<span class=\"name\">withRegisterJob</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Data.html#Lake.OptDataKind\">OptDataKind</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">optional</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Registers the produced job for the top-level build monitor\n(e.g., the Lake CLI progress UI), assigning it `caption`.\n\nStray I/O, logs, and errors produced by `x` will be wrapped into the job.\n","docLink":"./Lake/Build/Job/Register.html#Lake.withRegisterJob","kind":"def","line":63,"name":"Lake.withRegisterJob","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Register.lean#L63-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Register.html#Lake.ensureJob\"><span class=\"name\">Lake</span>.<span class=\"name\">ensureJob</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Data.html#Lake.OptDataKind\">OptDataKind</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Wraps stray I/O, logs, and errors in `x` into the produced job.  ","docLink":"./Lake/Build/Job/Register.html#Lake.ensureJob","kind":"def","line":46,"name":"Lake.ensureJob","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Register.lean#L46-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Register.html#Lake.registerJob\"><span class=\"name\">Lake</span>.<span class=\"name\">registerJob</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a>)</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.MonadBuild\">MonadBuild</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">job</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">optional</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Registers the job for the top-level build monitor,\n(e.g., the Lake CLI progress UI), assigning it `caption`.\n","docLink":"./Lake/Build/Job/Register.html#Lake.registerJob","kind":"def","line":34,"name":"Lake.registerJob","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Register.lean#L34-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Register.html#Lake.Job.renew\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">renew</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Resets the job's state after a checkpoint (e.g., registering the job).\nPreserves information that downstream jobs want to depend on while resetting\njob-local information that should not be inherited by downstream jobs.\n","docLink":"./Lake/Build/Job/Register.html#Lake.Job.renew","kind":"def","line":23,"name":"Lake.Job.renew","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Register.lean#L23-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Register.html#Lake.JobState.renew\"><span class=\"name\">Lake</span>.<span class=\"name\">JobState</span>.<span class=\"name\">renew</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lake/Build/Job/Basic.html#Lake.JobState\">JobState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Job/Basic.html#Lake.JobState\">JobState</a></div></div>","info":{"doc":"Resets the job state after a checkpoint (e.g., registering the job).\nPreserves state that downstream jobs want to depend on while resetting\njob-local state that should not be inherited by downstream jobs.\n","docLink":"./Lake/Build/Job/Register.html#Lake.JobState.renew","kind":"def","line":15,"name":"Lake.JobState.renew","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Register.lean#L15-L21"}}],"imports":["Lake.Build.Fetch"],"instances":[],"name":"Lake.Build.Job.Register"}