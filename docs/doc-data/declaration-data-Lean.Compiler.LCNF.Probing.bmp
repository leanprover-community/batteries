{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.toPass\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">toPass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">probe</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">phase</span> : <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase\">Phase</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/PassManager.html#Lean.Compiler.LCNF.Pass\">Pass</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.toPass","kind":"def","line":198,"name":"Lean.Compiler.LCNF.Probe.toPass","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L198-L204"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.runGlobally\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">runGlobally</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">probe</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">phase</span> : <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase\">Phase</a> := <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase.base\">Phase.base</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.runGlobally","kind":"def","line":190,"name":"Lean.Compiler.LCNF.Probe.runGlobally","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L190-L196"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.runOnModule\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">runOnModule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moduleName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">probe</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">phase</span> : <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase\">Phase</a> := <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase.base\">Phase.base</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.runOnModule","kind":"def","line":183,"name":"Lean.Compiler.LCNF.Probe.runOnModule","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L183-L188"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.runOnDeclsNamed\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">runOnDeclsNamed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declNames</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">probe</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">phase</span> : <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase\">Phase</a> := <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase.base\">Phase.base</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.runOnDeclsNamed","kind":"def","line":175,"name":"Lean.Compiler.LCNF.Probe.runOnDeclsNamed","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L175-L181"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.head\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.head","kind":"def","line":172,"name":"Lean.Compiler.LCNF.Probe.head","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L172-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.tail\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">tail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.tail","kind":"def","line":169,"name":"Lean.Compiler.LCNF.Probe.tail","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L169-L170"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.sum\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">sum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.sum","kind":"def","line":166,"name":"Lean.Compiler.LCNF.Probe.sum","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L166-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.count\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">count</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.count","kind":"def","line":163,"name":"Lean.Compiler.LCNF.Probe.count","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L163-L164"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.toString\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">toString</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.toString","kind":"def","line":159,"name":"Lean.Compiler.LCNF.Probe.toString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L159-L161"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.declNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">declNames</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.declNames","kind":"def","line":155,"name":"Lean.Compiler.LCNF.Probe.declNames","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L155-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByUnreach\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">filterByUnreach</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByUnreach","kind":"def","line":145,"name":"Lean.Compiler.LCNF.Probe.filterByUnreach","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L145-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByReturn\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">filterByReturn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByReturn","kind":"def","line":135,"name":"Lean.Compiler.LCNF.Probe.filterByReturn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L135-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByJmp\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">filterByJmp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Arg</a></span> → <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByJmp","kind":"def","line":125,"name":"Lean.Compiler.LCNF.Probe.filterByJmp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L125-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByCases\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">filterByCases</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Cases\">Cases</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByCases","kind":"def","line":116,"name":"Lean.Compiler.LCNF.Probe.filterByCases","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L116-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByFunDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">filterByFunDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">FunDecl</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByFunDecl","kind":"def","line":107,"name":"Lean.Compiler.LCNF.Probe.filterByFunDecl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L107-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByJp\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">filterByJp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">FunDecl</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByJp","kind":"def","line":97,"name":"Lean.Compiler.LCNF.Probe.filterByJp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L97-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByFun\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">filterByFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">FunDecl</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByFun","kind":"def","line":88,"name":"Lean.Compiler.LCNF.Probe.filterByFun","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L88-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByLet\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">filterByLet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">LetDecl</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filterByLet","kind":"def","line":79,"name":"Lean.Compiler.LCNF.Probe.filterByLet","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L79-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.getJps\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">getJps</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">FunDecl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.getJps","kind":"def","line":64,"name":"Lean.Compiler.LCNF.Probe.getJps","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L64-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.getLetValues\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">getLetValues</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue\">LetValue</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.getLetValues","kind":"def","line":47,"name":"Lean.Compiler.LCNF.Probe.getLetValues","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L47-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.countUniqueSorted\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">countUniqueSorted</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <span class=\"fn\">α</span> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.countUniqueSorted","kind":"def","line":43,"name":"Lean.Compiler.LCNF.Probe.countUniqueSorted","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L43-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.countUnique\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">countUnique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <span class=\"fn\">α</span> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.countUnique","kind":"def","line":34,"name":"Lean.Compiler.LCNF.Probe.countUnique","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L34-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.sortedBySize\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">sortedBySize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a> (<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.sortedBySize","kind":"def","line":28,"name":"Lean.Compiler.LCNF.Probe.sortedBySize","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L28-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.sorted\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">sorted</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableLT\">DecidableLT</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.sorted","kind":"def","line":25,"name":"Lean.Compiler.LCNF.Probe.sorted","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L25-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filter\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">filter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.filter","kind":"def","line":22,"name":"Lean.Compiler.LCNF.Probe.filter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L22-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.map\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\">Probe</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe.map","kind":"def","line":19,"name":"Lean.Compiler.LCNF.Probe.map","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L19-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Probe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Probing.html#Lean.Compiler.LCNF.Probe","kind":"def","line":15,"name":"Lean.Compiler.LCNF.Probe","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Probing.lean#L15-L15"}}],"imports":["Lean.Compiler.LCNF.PhaseExt"],"instances":[],"name":"Lean.Compiler.LCNF.Probing"}