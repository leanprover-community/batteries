{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#instLawfulOrdUSize\"><span class=\"name\">instLawfulOrdUSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Classes/Order.html#Std.LawfulOrd\">Std.LawfulOrd</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#instLawfulOrdUSize","kind":"instance","line":82,"name":"instLawfulOrdUSize","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L82-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt32.toUSize_toNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUSize_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt32.toUSize_toNat","kind":"theorem","line":80,"name":"UInt32.toUSize_toNat","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L80-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#USize.toUInt64_toNat\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt64_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#USize.toUInt64_toNat","kind":"theorem","line":77,"name":"USize.toUInt64_toNat","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L77-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#USize.ext_iff\"><span class=\"name\">USize</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#USize.ext_iff","kind":"theorem","line":74,"name":"USize.ext_iff","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L74-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#USize.ext\"><span class=\"name\">USize</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> → <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#USize.ext","kind":"theorem","line":74,"name":"USize.ext","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L74-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#instLawfulOrdUInt64\"><span class=\"name\">instLawfulOrdUInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Classes/Order.html#Std.LawfulOrd\">Std.LawfulOrd</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#instLawfulOrdUInt64","kind":"instance","line":68,"name":"instLawfulOrdUInt64","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L68-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt64.toUInt32_toNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt32_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt64.toUInt32_toNat","kind":"theorem","line":66,"name":"UInt64.toUInt32_toNat","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L66-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt64.toUInt16_toNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt16_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt64.toUInt16_toNat","kind":"theorem","line":64,"name":"UInt64.toUInt16_toNat","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt64.toUInt8_toNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt8_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt64.toUInt8_toNat","kind":"theorem","line":62,"name":"UInt64.toUInt8_toNat","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt64.ext_iff\"><span class=\"name\">UInt64</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt64.ext_iff","kind":"theorem","line":59,"name":"UInt64.ext_iff","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt64.ext\"><span class=\"name\">UInt64</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> → <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt64.ext","kind":"theorem","line":59,"name":"UInt64.ext","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L59-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#instLawfulOrdUInt32\"><span class=\"name\">instLawfulOrdUInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Classes/Order.html#Std.LawfulOrd\">Std.LawfulOrd</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#instLawfulOrdUInt32","kind":"instance","line":53,"name":"instLawfulOrdUInt32","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L53-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt32.toUInt64_toNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt64_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt32.toUInt64_toNat","kind":"theorem","line":51,"name":"UInt32.toUInt64_toNat","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt32.toUInt16_toNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt16_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt32.toUInt16_toNat","kind":"theorem","line":49,"name":"UInt32.toUInt16_toNat","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt32.toUInt8_toNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt8_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt32.toUInt8_toNat","kind":"theorem","line":47,"name":"UInt32.toUInt8_toNat","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt32.ext_iff\"><span class=\"name\">UInt32</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt32.ext_iff","kind":"theorem","line":44,"name":"UInt32.ext_iff","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L44-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt32.ext\"><span class=\"name\">UInt32</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> → <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt32.ext","kind":"theorem","line":44,"name":"UInt32.ext","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L44-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#instLawfulOrdUInt16\"><span class=\"name\">instLawfulOrdUInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Classes/Order.html#Std.LawfulOrd\">Std.LawfulOrd</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#instLawfulOrdUInt16","kind":"instance","line":38,"name":"instLawfulOrdUInt16","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L38-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt16.toUInt64_toNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt64_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt16.toUInt64_toNat","kind":"theorem","line":36,"name":"UInt16.toUInt64_toNat","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt16.toUInt32_toNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt32_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt16.toUInt32_toNat","kind":"theorem","line":34,"name":"UInt16.toUInt32_toNat","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt16.toUInt8_toNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt8_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt16.toUInt8_toNat","kind":"theorem","line":32,"name":"UInt16.toUInt8_toNat","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt16.ext_iff\"><span class=\"name\">UInt16</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt16.ext_iff","kind":"theorem","line":29,"name":"UInt16.ext_iff","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt16.ext\"><span class=\"name\">UInt16</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> → <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt16.ext","kind":"theorem","line":29,"name":"UInt16.ext","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L29-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#instLawfulOrdUInt8\"><span class=\"name\">instLawfulOrdUInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Classes/Order.html#Std.LawfulOrd\">Std.LawfulOrd</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#instLawfulOrdUInt8","kind":"instance","line":23,"name":"instLawfulOrdUInt8","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L23-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt8.toUInt64_toNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt64_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt8.toUInt64_toNat","kind":"theorem","line":21,"name":"UInt8.toUInt64_toNat","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt8.toUInt32_toNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt32_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt8.toUInt32_toNat","kind":"theorem","line":19,"name":"UInt8.toUInt32_toNat","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt8.toUInt16_toNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt16_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt8.toUInt16_toNat","kind":"theorem","line":17,"name":"UInt8.toUInt16_toNat","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt8.ext_iff\"><span class=\"name\">UInt8</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt8.ext_iff","kind":"theorem","line":14,"name":"UInt8.ext_iff","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L14-L14"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UInt.html#UInt8.ext\"><span class=\"name\">UInt8</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> → <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UInt.html#UInt8.ext","kind":"theorem","line":14,"name":"UInt8.ext","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UInt.lean#L14-L15"}}],"imports":["Init","Batteries.Classes.Order"],"instances":[{"className":"Std.LawfulCmp","name":"instLawfulOrdUInt8","typeNames":["UInt8"]},{"className":"Std.LawfulCmp","name":"instLawfulOrdUInt16","typeNames":["UInt16"]},{"className":"Std.LawfulCmp","name":"instLawfulOrdUInt32","typeNames":["UInt32"]},{"className":"Std.LawfulCmp","name":"instLawfulOrdUInt64","typeNames":["UInt64"]},{"className":"Std.LawfulCmp","name":"instLawfulOrdUSize","typeNames":["USize"]}],"name":"Batteries.Data.UInt"}