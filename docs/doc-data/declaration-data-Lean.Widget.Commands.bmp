{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Commands.html#Lean.Widget.elabWidgetCmd\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">elabWidgetCmd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Elab.Command.CommandElab</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/Commands.html#Lean.Widget.elabWidgetCmd","kind":"def","line":108,"name":"Lean.Widget.elabWidgetCmd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Commands.lean#L108-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Commands.html#Lean.Widget.widgetCmd\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">widgetCmd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Use `#widget <widget>` to display a panel widget,\nand `#widget <widget> with <props>` to display it with the given props.\nUseful for debugging widgets.\n\nThe type of `<widget>` must implement `Widget.ToModule`,\nand the type of `<props>` must implement `Server.RpcEncodable`.\nIn particular, `<props> : Json` works. ","docLink":"./Lean/Widget/Commands.html#Lean.Widget.widgetCmd","kind":"def","line":98,"name":"Lean.Widget.widgetCmd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Commands.lean#L98-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Commands.html#Lean.Widget.elabShowPanelWidgetsCmd\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">elabShowPanelWidgetsCmd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Elab.Command.CommandElab</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/Commands.html#Lean.Widget.elabShowPanelWidgetsCmd","kind":"def","line":61,"name":"Lean.Widget.elabShowPanelWidgetsCmd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Commands.lean#L61-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Commands.html#Lean.Widget.showPanelWidgetsCmd\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">showPanelWidgetsCmd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Use `show_panel_widgets [<widget>]` to mark that `<widget>`\nshould always be displayed, including in downstream modules.\n\nThe type of `<widget>` must implement `Widget.ToModule`,\nand the type of `<props>` must implement `Server.RpcEncodable`.\nIn particular, `<props> : Json` works.\n\nUse `show_panel_widgets [<widget> with <props>]`\nto specify the `<props>` that the widget should be given\nas arguments.\n\nUse `show_panel_widgets [local <widget> (with <props>)?]` to mark it\nfor display in the current section, namespace, or file only.\n\nUse `show_panel_widgets [scoped <widget> (with <props>)?]` to mark it\nfor display only when the current namespace is open.\n\nUse `show_panel_widgets [-<widget>]` to temporarily hide a previously shown widget\nin the current section, namespace, or file.\nNote that persistent erasure is not possible, i.e.,\n`-<widget>` has no effect on downstream modules. ","docLink":"./Lean/Widget/Commands.html#Lean.Widget.showPanelWidgetsCmd","kind":"def","line":37,"name":"Lean.Widget.showPanelWidgetsCmd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Commands.lean#L37-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Commands.html#Lean.Widget.showWidgetSpec\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">showWidgetSpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/Commands.html#Lean.Widget.showWidgetSpec","kind":"def","line":36,"name":"Lean.Widget.showWidgetSpec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Commands.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Commands.html#Lean.Widget.eraseWidgetSpec\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">eraseWidgetSpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/Commands.html#Lean.Widget.eraseWidgetSpec","kind":"def","line":35,"name":"Lean.Widget.eraseWidgetSpec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Commands.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Commands.html#Lean.Widget.addWidgetSpec\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">addWidgetSpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/Commands.html#Lean.Widget.addWidgetSpec","kind":"def","line":34,"name":"Lean.Widget.addWidgetSpec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Commands.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Commands.html#Lean.Widget.elabWidgetInstanceSpec\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">elabWidgetInstanceSpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Widget.widgetInstanceSpec</span> â†’ <span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">Elab.TermElabM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Widget/Commands.html#Lean.Widget.elabWidgetInstanceSpec","kind":"def","line":27,"name":"Lean.Widget.elabWidgetInstanceSpec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Commands.lean#L27-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/Commands.html#Lean.Widget.widgetInstanceSpec\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">widgetInstanceSpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/Commands.html#Lean.Widget.widgetInstanceSpec","kind":"def","line":19,"name":"Lean.Widget.widgetInstanceSpec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/Commands.lean#L19-L19"}}],"imports":["Lean.Widget.UserWidget"],"instances":[],"name":"Lean.Widget.Commands"}