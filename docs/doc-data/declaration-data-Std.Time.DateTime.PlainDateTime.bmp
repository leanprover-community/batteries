{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainTime.atDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainTime</span>.<span class=\"name\">atDate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">time</span> : <a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Combines a `PlainTime` and `PlainDate` into a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainTime.atDate","kind":"def","line":599,"name":"Std.Time.PlainTime.atDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L599-L604"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDate.atTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">atTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a> → <span class=\"fn\"><a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a> → <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></span></div></div>","info":{"doc":"Combines a `PlainDate` and `PlainTime` into a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDate.atTime","kind":"def","line":589,"name":"Std.Time.PlainDate.atTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L589-L594"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddDuration\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddDuration</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Duration.html#Std.Time.Duration\">Duration</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddDuration","kind":"instance","line":583,"name":"Std.Time.PlainDateTime.instHAddDuration","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L583-L584"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_6\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_6</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_6","kind":"instance","line":580,"name":"Std.Time.PlainDateTime.instHSubOffset_6","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L580-L581"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_6\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_6</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_6","kind":"instance","line":577,"name":"Std.Time.PlainDateTime.instHAddOffset_6","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L577-L578"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_5\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_5</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_5","kind":"instance","line":574,"name":"Std.Time.PlainDateTime.instHSubOffset_5","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L574-L575"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_5\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_5</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_5","kind":"instance","line":571,"name":"Std.Time.PlainDateTime.instHAddOffset_5","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L571-L572"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_4\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_4</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_4","kind":"instance","line":568,"name":"Std.Time.PlainDateTime.instHSubOffset_4","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L568-L569"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_4\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_4</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_4","kind":"instance","line":565,"name":"Std.Time.PlainDateTime.instHAddOffset_4","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L565-L566"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_3\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_3</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_3","kind":"instance","line":562,"name":"Std.Time.PlainDateTime.instHSubOffset_3","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L562-L563"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_3\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_3</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_3","kind":"instance","line":559,"name":"Std.Time.PlainDateTime.instHAddOffset_3","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L559-L560"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_2\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_2","kind":"instance","line":556,"name":"Std.Time.PlainDateTime.instHSubOffset_2","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L556-L557"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_2\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_2","kind":"instance","line":553,"name":"Std.Time.PlainDateTime.instHAddOffset_2","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L553-L554"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_1","kind":"instance","line":550,"name":"Std.Time.PlainDateTime.instHSubOffset_1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L550-L551"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_1","kind":"instance","line":547,"name":"Std.Time.PlainDateTime.instHAddOffset_1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L547-L548"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset","kind":"instance","line":544,"name":"Std.Time.PlainDateTime.instHSubOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L544-L545"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset","kind":"instance","line":541,"name":"Std.Time.PlainDateTime.instHAddOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L541-L542"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.atDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">atDate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">time</span> : <a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Combines a `PlainTime` and `PlainDate` into a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.atDate","kind":"def","line":534,"name":"Std.Time.PlainDateTime.atDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L534-L539"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.atTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">atTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a> → <span class=\"fn\"><a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a> → <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></span></div></div>","info":{"doc":"Combines a `PlainDate` and `PlainTime` into a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.atTime","kind":"def","line":527,"name":"Std.Time.PlainDateTime.atTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L527-L532"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.quarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">quarter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">4</span></span></div></div>","info":{"doc":"Determines the quarter of the year for the given `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.quarter","kind":"def","line":520,"name":"Std.Time.PlainDateTime.quarter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L520-L525"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.dayOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">dayOfYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Day.Ordinal.OfYear</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">date</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.year\">year</a></span>.<a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.isLeap\">isLeap</a></span></span></div></div>","info":{"doc":"Transforms a tuple of a `PlainDateTime` into a `Day.Ordinal.OfYear`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.dayOfYear","kind":"def","line":513,"name":"Std.Time.PlainDateTime.dayOfYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L513-L518"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.alignedWeekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">alignedWeekOfMonth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">Week.Ordinal.OfMonth</a></div></div>","info":{"doc":"Determines the week of the month for the given `PlainDateTime`. The week of the month is calculated based\non the day of the month and the weekday. Each week starts on Monday because the entire library is\nbased on the Gregorian Calendar.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.alignedWeekOfMonth","kind":"def","line":504,"name":"Std.Time.PlainDateTime.alignedWeekOfMonth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L504-L511"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">weekOfMonth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">5</span></span></div></div>","info":{"doc":"Returns the unaligned week of the month for a `PlainDateTime` (day divided by 7, plus 1).\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekOfMonth","kind":"def","line":498,"name":"Std.Time.PlainDateTime.weekOfMonth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L498-L502"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">weekOfYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Week.Ordinal</a></div></div>","info":{"doc":"Determines the week of the year for the given `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekOfYear","kind":"def","line":491,"name":"Std.Time.PlainDateTime.weekOfYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L491-L496"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.inLeapYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">inLeapYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Checks if the `PlainDateTime` is in a leap year.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.inLeapYear","kind":"def","line":484,"name":"Std.Time.PlainDateTime.inLeapYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L484-L489"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.era\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">era</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Year.Era</a></div></div>","info":{"doc":"Determines the era of the given `PlainDateTime` based on its year.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.era","kind":"def","line":477,"name":"Std.Time.PlainDateTime.era","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L477-L482"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.nanosecond\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">nanosecond</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Ordinal\">Nanosecond.Ordinal</a></div></div>","info":{"doc":"Getter for the `Nanosecond.Ordinal` inside of a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.nanosecond","kind":"def","line":470,"name":"Std.Time.PlainDateTime.nanosecond","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L470-L475"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.second\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">second</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Ordinal\">Second.Ordinal</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></div></div>","info":{"doc":"Getter for the `Second` inside of a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.second","kind":"def","line":463,"name":"Std.Time.PlainDateTime.second","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L463-L468"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.millisecond\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">millisecond</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Ordinal\">Millisecond.Ordinal</a></div></div>","info":{"doc":"Getter for the `Millisecond` inside of a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.millisecond","kind":"def","line":456,"name":"Std.Time.PlainDateTime.millisecond","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L456-L461"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.minute\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">minute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Minute.Ordinal</a></div></div>","info":{"doc":"Getter for the `Minute` inside of a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.minute","kind":"def","line":449,"name":"Std.Time.PlainDateTime.minute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L449-L454"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.hour\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">hour</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Hour.Ordinal</a></div></div>","info":{"doc":"Getter for the `Hour` inside of a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.hour","kind":"def","line":442,"name":"Std.Time.PlainDateTime.hour","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L442-L447"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">weekday</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></div></div>","info":{"doc":"Getter for the `Weekday` inside of a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekday","kind":"def","line":435,"name":"Std.Time.PlainDateTime.weekday","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L435-L440"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.day\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">day</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a></div></div>","info":{"doc":"Getter for the `Day` inside of a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.day","kind":"def","line":428,"name":"Std.Time.PlainDateTime.day","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L428-L433"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.month\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">month</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a></div></div>","info":{"doc":"Getter for the `Month` inside of a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.month","kind":"def","line":421,"name":"Std.Time.PlainDateTime.month","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L421-L426"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.year\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">year</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a></div></div>","info":{"doc":"Getter for the `Year` inside of a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.year","kind":"def","line":414,"name":"Std.Time.PlainDateTime.year","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L414-L419"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">milliseconds</span> : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Subtracts a `Millisecond.Offset` from a `PlainDateTime`, adjusting the second, minute, hour, and date if the milliseconds underflow.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMilliseconds","kind":"def","line":407,"name":"Std.Time.PlainDateTime.subMilliseconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L407-L412"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">milliseconds</span> : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Adds a `Millisecond.Offset` to a `PlainDateTime`, adjusting the second, minute, hour, and date if the milliseconds overflow.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMilliseconds","kind":"def","line":400,"name":"Std.Time.PlainDateTime.addMilliseconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L400-L405"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">seconds</span> : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Subtracts a `Second.Offset` from a `PlainDateTime`, adjusting the minute, hour, and date if the seconds underflow.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subSeconds","kind":"def","line":393,"name":"Std.Time.PlainDateTime.subSeconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L393-L398"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">seconds</span> : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Adds a `Second.Offset` to a `PlainDateTime`, adjusting the minute, hour, and date if the seconds overflow.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addSeconds","kind":"def","line":386,"name":"Std.Time.PlainDateTime.addSeconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L386-L391"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">minutes</span> : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Subtracts a `Minute.Offset` from a `PlainDateTime`, adjusting the hour and date if the minutes underflow.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMinutes","kind":"def","line":379,"name":"Std.Time.PlainDateTime.subMinutes","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L379-L384"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">minutes</span> : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Adds a `Minute.Offset` to a `PlainDateTime`, adjusting the hour and date if the minutes overflow.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMinutes","kind":"def","line":372,"name":"Std.Time.PlainDateTime.addMinutes","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L372-L377"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hours</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Subtracts an `Hour.Offset` from a `PlainDateTime`, adjusting the date if the hour underflows.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subHours","kind":"def","line":365,"name":"Std.Time.PlainDateTime.subHours","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L365-L370"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hours</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Adds an `Hour.Offset` to a `PlainDateTime`, adjusting the date if the hour overflows.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addHours","kind":"def","line":358,"name":"Std.Time.PlainDateTime.addHours","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L358-L363"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nanos</span> : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Subtracts a `Nanosecond.Offset` from a `PlainDateTime`, adjusting the seconds, minutes, hours, and date if the nanoseconds underflow.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subNanoseconds","kind":"def","line":351,"name":"Std.Time.PlainDateTime.subNanoseconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L351-L356"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nanos</span> : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Adds a `Nanosecond.Offset` to a `PlainDateTime`, adjusting the seconds, minutes, hours, and date if the nanoseconds overflow.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addNanoseconds","kind":"def","line":344,"name":"Std.Time.PlainDateTime.addNanoseconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L344-L349"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subYearsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Subtracts a `Year.Offset` from a `PlainDateTime`, adjusting the day to the last valid day of the\nresulting month.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subYearsClip","kind":"def","line":336,"name":"Std.Time.PlainDateTime.subYearsClip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L336-L342"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subYearsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Subtracts a `Year.Offset` from a `PlainDateTime`, this function rolls over any excess days into the\nfollowing month.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subYearsRollOver","kind":"def","line":328,"name":"Std.Time.PlainDateTime.subYearsRollOver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L328-L334"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addYearsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Subtracts a `Month.Offset` from a `PlainDateTime`, rolling over excess days to the following month if\nneeded.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addYearsClip","kind":"def","line":320,"name":"Std.Time.PlainDateTime.addYearsClip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L320-L326"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addYearsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Adds a `Month.Offset` to a `PlainDateTime`, rolling over excess days to the following month if needed.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addYearsRollOver","kind":"def","line":313,"name":"Std.Time.PlainDateTime.addYearsRollOver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L313-L318"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subMonthsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Subtracts a `Month.Offset` from a `PlainDateTime`, adjusting the day to the last valid day of the\nresulting month.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMonthsRollOver","kind":"def","line":305,"name":"Std.Time.PlainDateTime.subMonthsRollOver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L305-L311"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addMonthsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Adds a `Month.Offset` to a `PlainDateTime`, rolling over excess days to the following month if needed.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMonthsRollOver","kind":"def","line":299,"name":"Std.Time.PlainDateTime.addMonthsRollOver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L299-L303"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subMonthsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Subtracts `Month.Offset` from a `PlainDateTime`, it clips the day to the last valid day of that month.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMonthsClip","kind":"def","line":292,"name":"Std.Time.PlainDateTime.subMonthsClip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L292-L297"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addMonthsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Adds a `Month.Offset` to a `PlainDateTime`, adjusting the day to the last valid day of the resulting\nmonth.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMonthsClip","kind":"def","line":285,"name":"Std.Time.PlainDateTime.addMonthsClip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L285-L290"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subWeeks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Subtracts a `Week.Offset` from a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subWeeks","kind":"def","line":278,"name":"Std.Time.PlainDateTime.subWeeks","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L278-L283"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addWeeks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Adds a `Week.Offset` to a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addWeeks","kind":"def","line":271,"name":"Std.Time.PlainDateTime.addWeeks","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L271-L276"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Subtracts a `Day.Offset` from a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subDays","kind":"def","line":264,"name":"Std.Time.PlainDateTime.subDays","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L264-L269"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Adds a `Day.Offset` to a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addDays","kind":"def","line":257,"name":"Std.Time.PlainDateTime.addDays","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L257-L262"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nano</span> : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Ordinal\">Nanosecond.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Creates a new `PlainDateTime` by adjusting the `nano` component of its `time` to the given value.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withNanoseconds","kind":"def","line":250,"name":"Std.Time.PlainDateTime.withNanoseconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L250-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">millis</span> : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Ordinal\">Millisecond.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Creates a new `PlainDateTime` by adjusting the milliseconds component inside the `nano` component of its `time` to the given value.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMilliseconds","kind":"def","line":243,"name":"Std.Time.PlainDateTime.withMilliseconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L243-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">second</span> : <span class=\"fn\"><a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Ordinal\">Second.Ordinal</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Creates a new `PlainDateTime` by adjusting the `second` component of its `time` to the given value.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withSeconds","kind":"def","line":236,"name":"Std.Time.PlainDateTime.withSeconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L236-L241"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">minute</span> : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Minute.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Creates a new `PlainDateTime` by adjusting the `minute` component of its `time` to the given value.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMinutes","kind":"def","line":229,"name":"Std.Time.PlainDateTime.withMinutes","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L229-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hour</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Hour.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Creates a new `PlainDateTime` by adjusting the `hour` component of its `time` to the given value.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withHours","kind":"def","line":222,"name":"Std.Time.PlainDateTime.withHours","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L222-L227"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withYearRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withYearRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Creates a new `PlainDateTime` by adjusting the year to the given `year` value. The month and day are rolled\nover to the next valid month and day if necessary.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withYearRollOver","kind":"def","line":214,"name":"Std.Time.PlainDateTime.withYearRollOver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L214-L220"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withYearClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withYearClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Creates a new `PlainDateTime` by adjusting the year to the given `year` value. The month and day\nremain unchanged, with any out-of-range days clipped to the nearest valid date.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withYearClip","kind":"def","line":206,"name":"Std.Time.PlainDateTime.withYearClip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L206-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMonthRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withMonthRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Creates a new `PlainDateTime` by adjusting the month to the given `month` value.\nThe day is rolled over to the next valid month if necessary.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMonthRollOver","kind":"def","line":198,"name":"Std.Time.PlainDateTime.withMonthRollOver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L198-L204"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMonthClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withMonthClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Creates a new `PlainDateTime` by adjusting the month to the given `month` value, with any\nout-of-range days clipped to the nearest valid date.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMonthClip","kind":"def","line":190,"name":"Std.Time.PlainDateTime.withMonthClip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L190-L196"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withDaysRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withDaysRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Creates a new `PlainDateTime` by adjusting the day of the month to the given `days` value, with any\nout-of-range days rolled over to the next month or year as needed.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withDaysRollOver","kind":"def","line":182,"name":"Std.Time.PlainDateTime.withDaysRollOver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L182-L188"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withDaysClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withDaysClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Creates a new `PlainDateTime` by adjusting the day of the month to the given `days` value, with any\nout-of-range days clipped to the nearest valid date.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withDaysClip","kind":"def","line":174,"name":"Std.Time.PlainDateTime.withDaysClip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L174-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withWeekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withWeekday</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">desiredWeekday</span> : <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Sets the `PlainDateTime` to the specified `desiredWeekday`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withWeekday","kind":"def","line":168,"name":"Std.Time.PlainDateTime.withWeekday","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L168-L172"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ofDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">ofDaysSinceUNIXEpoch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">time</span> : <a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Converts a `PlainDateTime` to the number of days since the UNIX epoch.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ofDaysSinceUNIXEpoch","kind":"def","line":161,"name":"Std.Time.PlainDateTime.ofDaysSinceUNIXEpoch","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L161-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.toDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">toDaysSinceUNIXEpoch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pdt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a></div></div>","info":{"doc":"Converts a `PlainDateTime` to the number of days since the UNIX epoch.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.toDaysSinceUNIXEpoch","kind":"def","line":154,"name":"Std.Time.PlainDateTime.toDaysSinceUNIXEpoch","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L154-L159"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ofTimestampAssumingUTC\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">ofTimestampAssumingUTC</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stamp</span> : <a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Timestamp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"Converts a `Timestamp` to a `PlainDateTime`.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ofTimestampAssumingUTC","kind":"def","line":62,"name":"Std.Time.PlainDateTime.ofTimestampAssumingUTC","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L62-L152"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.toTimestampAssumingUTC\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">toTimestampAssumingUTC</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Timestamp</a></div></div>","info":{"doc":"Converts a `PlainDateTime` to a `Timestamp`\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.toTimestampAssumingUTC","kind":"def","line":53,"name":"Std.Time.PlainDateTime.toTimestampAssumingUTC","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L53-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instLawfulEqOrdPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instLawfulEqOrdPlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instLawfulEqOrdPlainDateTime","kind":"instance","line":44,"name":"Std.Time.instLawfulEqOrdPlainDateTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L44-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instTransOrdPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instTransOrdPlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instTransOrdPlainDateTime","kind":"instance","line":42,"name":"Std.Time.instTransOrdPlainDateTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.compare_def\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">compare_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Ord/Basic.html#Ord.compare\">compare</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#compareLex\">compareLex</a> <span class=\"fn\">(<a href=\"./Init/Data/Ord/Basic.html#compareOn\">compareOn</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date\">date</a></span></span>)</span> <span class=\"fn\">(<a href=\"./Init/Data/Ord/Basic.html#compareOn\">compareOn</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time\">time</a></span></span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.compare_def","kind":"theorem","line":39,"name":"Std.Time.PlainDateTime.compare_def","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L39-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instOrdPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instOrdPlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instOrdPlainDateTime","kind":"instance","line":36,"name":"Std.Time.instOrdPlainDateTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L36-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instReprPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instReprPlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instReprPlainDateTime","kind":"instance","line":34,"name":"Std.Time.instReprPlainDateTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instReprPlainDateTime.repr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instReprPlainDateTime</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instReprPlainDateTime.repr","kind":"def","line":34,"name":"Std.Time.instReprPlainDateTime.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instDecidableEqPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instDecidableEqPlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instDecidableEqPlainDateTime","kind":"instance","line":34,"name":"Std.Time.instDecidableEqPlainDateTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instDecidableEqPlainDateTime.decEq\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instDecidableEqPlainDateTime</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instDecidableEqPlainDateTime.decEq","kind":"def","line":34,"name":"Std.Time.instDecidableEqPlainDateTime.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instInhabitedPlainDateTime.default\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instInhabitedPlainDateTime</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instInhabitedPlainDateTime.default","kind":"def","line":34,"name":"Std.Time.instInhabitedPlainDateTime.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instInhabitedPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instInhabitedPlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instInhabitedPlainDateTime","kind":"instance","line":34,"name":"Std.Time.instInhabitedPlainDateTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">time</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a></div></div>","info":{"doc":"The `Time` component of a `PlainTime`\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time","kind":"def","line":33,"name":"Std.Time.PlainDateTime.time","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">date</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"The `Date` component of a `PlainDate`\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date","kind":"def","line":28,"name":"Std.Time.PlainDateTime.date","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">time</span> : <a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.mk","kind":"ctor","line":23,"name":"Std.Time.PlainDateTime.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ext_iff\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date\">date</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date\">date</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time\">time</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time\">time</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ext_iff","kind":"theorem","line":22,"name":"Std.Time.PlainDateTime.ext_iff","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ext\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date\">date</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date\">date</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">time</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time\">time</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time\">time</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ext","kind":"theorem","line":22,"name":"Std.Time.PlainDateTime.ext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents a date and time with components for Year, Month, Day, Hour, Minute, Second, and Nanosecond.\n","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime","kind":"structure","line":19,"name":"Std.Time.PlainDateTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/DateTime/PlainDateTime.lean#L19-L34"}}],"imports":["Std.Time.DateTime.Timestamp"],"instances":[{"className":"Inhabited","name":"Std.Time.instInhabitedPlainDateTime","typeNames":["Std.Time.PlainDateTime"]},{"className":"Decidable","name":"Std.Time.instDecidableEqPlainDateTime","typeNames":["Eq"]},{"className":"Repr","name":"Std.Time.instReprPlainDateTime","typeNames":["Std.Time.PlainDateTime"]},{"className":"Ord","name":"Std.Time.instOrdPlainDateTime","typeNames":["Std.Time.PlainDateTime"]},{"className":"Std.TransCmp","name":"Std.Time.instTransOrdPlainDateTime","typeNames":["Std.Time.PlainDateTime"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.instLawfulEqOrdPlainDateTime","typeNames":["Std.Time.PlainDateTime"]},{"className":"HAdd","name":"Std.Time.PlainDateTime.instHAddOffset","typeNames":["Std.Time.PlainDateTime","Std.Time.Day.Offset","Std.Time.PlainDateTime"]},{"className":"HSub","name":"Std.Time.PlainDateTime.instHSubOffset","typeNames":["Std.Time.PlainDateTime","Std.Time.Day.Offset","Std.Time.PlainDateTime"]},{"className":"HAdd","name":"Std.Time.PlainDateTime.instHAddOffset_1","typeNames":["Std.Time.PlainDateTime","Std.Time.Week.Offset","Std.Time.PlainDateTime"]},{"className":"HSub","name":"Std.Time.PlainDateTime.instHSubOffset_1","typeNames":["Std.Time.PlainDateTime","Std.Time.Week.Offset","Std.Time.PlainDateTime"]},{"className":"HAdd","name":"Std.Time.PlainDateTime.instHAddOffset_2","typeNames":["Std.Time.PlainDateTime","Std.Time.Hour.Offset","Std.Time.PlainDateTime"]},{"className":"HSub","name":"Std.Time.PlainDateTime.instHSubOffset_2","typeNames":["Std.Time.PlainDateTime","Std.Time.Hour.Offset","Std.Time.PlainDateTime"]},{"className":"HAdd","name":"Std.Time.PlainDateTime.instHAddOffset_3","typeNames":["Std.Time.PlainDateTime","Std.Time.Minute.Offset","Std.Time.PlainDateTime"]},{"className":"HSub","name":"Std.Time.PlainDateTime.instHSubOffset_3","typeNames":["Std.Time.PlainDateTime","Std.Time.Minute.Offset","Std.Time.PlainDateTime"]},{"className":"HAdd","name":"Std.Time.PlainDateTime.instHAddOffset_4","typeNames":["Std.Time.PlainDateTime","Std.Time.Millisecond.Offset","Std.Time.PlainDateTime"]},{"className":"HSub","name":"Std.Time.PlainDateTime.instHSubOffset_4","typeNames":["Std.Time.PlainDateTime","Std.Time.Millisecond.Offset","Std.Time.PlainDateTime"]},{"className":"HAdd","name":"Std.Time.PlainDateTime.instHAddOffset_5","typeNames":["Std.Time.PlainDateTime","Std.Time.Second.Offset","Std.Time.PlainDateTime"]},{"className":"HSub","name":"Std.Time.PlainDateTime.instHSubOffset_5","typeNames":["Std.Time.PlainDateTime","Std.Time.Second.Offset","Std.Time.PlainDateTime"]},{"className":"HAdd","name":"Std.Time.PlainDateTime.instHAddOffset_6","typeNames":["Std.Time.PlainDateTime","Std.Time.Nanosecond.Offset","Std.Time.PlainDateTime"]},{"className":"HSub","name":"Std.Time.PlainDateTime.instHSubOffset_6","typeNames":["Std.Time.PlainDateTime","Std.Time.Nanosecond.Offset","Std.Time.PlainDateTime"]},{"className":"HAdd","name":"Std.Time.PlainDateTime.instHAddDuration","typeNames":["Std.Time.PlainDateTime","Std.Time.Duration","Std.Time.PlainDateTime"]}],"name":"Std.Time.DateTime.PlainDateTime"}