{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.Ring.OfSemiring.of_diseq\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Ring</span>.<span class=\"name\">OfSemiring</span>.<span class=\"name\">of_diseq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Module/Basic.html#Lean.Grind.AddRightCancel\">AddRightCancel</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">CommRing.Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Expr\">CommRing.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS\">CommRing.Expr.denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS\">CommRing.Expr.denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span> →\n  <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteSAsRing\">CommRing.Expr.denoteSAsRing</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteSAsRing\">CommRing.Expr.denoteSAsRing</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.Ring.OfSemiring.of_diseq","kind":"theorem","line":565,"name":"Lean.Grind.Ring.OfSemiring.of_diseq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L565-L570"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.Ring.OfSemiring.of_eq\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Ring</span>.<span class=\"name\">OfSemiring</span>.<span class=\"name\">of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">CommRing.Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Expr\">CommRing.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS\">CommRing.Expr.denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS\">CommRing.Expr.denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span> →\n  <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteSAsRing\">CommRing.Expr.denoteSAsRing</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteSAsRing\">CommRing.Expr.denoteSAsRing</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.Ring.OfSemiring.of_eq","kind":"theorem","line":560,"name":"Lean.Grind.Ring.OfSemiring.of_eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L560-L563"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.eq_normS_nc\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">eq_normS_nc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.eq_normS_nc_cert\">eq_normS_nc_cert</a> <span class=\"fn\">lhs</span> <span class=\"fn\">rhs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS\">Expr.denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS\">Expr.denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.eq_normS_nc","kind":"theorem","line":548,"name":"Lean.Grind.CommRing.eq_normS_nc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L548-L553"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.eq_normS_nc_cert\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">eq_normS_nc_cert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.eq_normS_nc_cert","kind":"def","line":545,"name":"Lean.Grind.CommRing.eq_normS_nc_cert","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L545-L546"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.eq_normS\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">eq_normS</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.eq_normS_cert\">eq_normS_cert</a> <span class=\"fn\">lhs</span> <span class=\"fn\">rhs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS\">Expr.denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS\">Expr.denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.eq_normS","kind":"theorem","line":538,"name":"Lean.Grind.CommRing.eq_normS","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L538-L543"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.eq_normS_cert\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">eq_normS_cert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.eq_normS_cert","kind":"def","line":535,"name":"Lean.Grind.CommRing.eq_normS_cert","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L535-L536"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS_toPolyS_nc\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denoteS_toPolyS_nc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">Poly.denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.toPolyS_nc\">toPolyS_nc</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS_toPolyS_nc","kind":"theorem","line":521,"name":"Lean.Grind.CommRing.Expr.denoteS_toPolyS_nc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L521-L533"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS_toPolyS\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denoteS_toPolyS</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">Poly.denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.toPolyS\">toPolyS</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS_toPolyS","kind":"theorem","line":507,"name":"Lean.Grind.CommRing.Expr.denoteS_toPolyS","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L507-L519"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.toPolyS_nc_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toPolyS_nc_NonnegCoeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Expr\">Expr</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.toPolyS_nc\">toPolyS_nc</a></span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.toPolyS_nc_NonnegCoeffs","kind":"theorem","line":493,"name":"Lean.Grind.CommRing.Expr.toPolyS_nc_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L493-L503"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.toPolyS_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toPolyS_NonnegCoeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Expr\">Expr</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.toPolyS\">toPolyS</a></span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.toPolyS_NonnegCoeffs","kind":"theorem","line":479,"name":"Lean.Grind.CommRing.Expr.toPolyS_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L479-L489"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_pow_nc\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_pow_nc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.pow_nc\">pow_nc</a></span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_pow_nc","kind":"theorem","line":468,"name":"Lean.Grind.CommRing.Poly.denoteS_pow_nc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L468-L477"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_pow\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.pow\">pow</a></span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_pow","kind":"theorem","line":457,"name":"Lean.Grind.CommRing.Poly.denoteS_pow","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L457-L466"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mul_nc\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_mul_nc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₂</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mul_nc\">mul_nc</a></span> <span class=\"fn\">p₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₂</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mul_nc","kind":"theorem","line":452,"name":"Lean.Grind.CommRing.Poly.denoteS_mul_nc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L452-L455"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mul_nc_go\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_mul_nc_go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂ </span><span class=\"fn\">acc</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> →\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₂</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">acc</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mul_nc.go\">mul_nc.go</a> <span class=\"fn\">p₂</span> <span class=\"fn\">p₁</span> <span class=\"fn\">acc</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">acc</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₂</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mul_nc_go","kind":"theorem","line":436,"name":"Lean.Grind.CommRing.Poly.denoteS_mul_nc_go","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L436-L450"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mul\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₂</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mul\">mul</a></span> <span class=\"fn\">p₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₂</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mul","kind":"theorem","line":431,"name":"Lean.Grind.CommRing.Poly.denoteS_mul","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L431-L434"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mul_go\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_mul_go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂ </span><span class=\"fn\">acc</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> →\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₂</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">acc</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mul.go\">mul.go</a> <span class=\"fn\">p₂</span> <span class=\"fn\">p₁</span> <span class=\"fn\">acc</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">acc</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₂</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mul_go","kind":"theorem","line":415,"name":"Lean.Grind.CommRing.Poly.denoteS_mul_go","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L415-L429"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.pow_nc_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">pow_nc_NonnegCoeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.pow_nc\">pow_nc</a></span> <span class=\"fn\">k</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.pow_nc_NonnegCoeffs","kind":"theorem","line":406,"name":"Lean.Grind.CommRing.Poly.pow_nc_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L406-L413"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.pow_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">pow_NonnegCoeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.pow\">pow</a></span> <span class=\"fn\">k</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.pow_NonnegCoeffs","kind":"theorem","line":400,"name":"Lean.Grind.CommRing.Poly.pow_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L400-L404"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mul_nc_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mul_nc_NonnegCoeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₂</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mul_nc\">mul_nc</a></span> <span class=\"fn\">p₂</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mul_nc_NonnegCoeffs","kind":"theorem","line":396,"name":"Lean.Grind.CommRing.Poly.mul_nc_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L396-L398"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mul_nc_go_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mul_nc_go_NonnegCoeffs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂ </span><span class=\"fn\">acc</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₂</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">acc</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mul_nc.go\">mul_nc.go</a> <span class=\"fn\">p₂</span> <span class=\"fn\">p₁</span> <span class=\"fn\">acc</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mul_nc_go_NonnegCoeffs","kind":"theorem","line":380,"name":"Lean.Grind.CommRing.Poly.mul_nc_go_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L380-L394"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mul_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mul_NonnegCoeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₂</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mul\">mul</a></span> <span class=\"fn\">p₂</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mul_NonnegCoeffs","kind":"theorem","line":376,"name":"Lean.Grind.CommRing.Poly.mul_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L376-L378"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mul_go_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mul_go_NonnegCoeffs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂ </span><span class=\"fn\">acc</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₂</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">acc</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mul.go\">mul.go</a> <span class=\"fn\">p₂</span> <span class=\"fn\">p₁</span> <span class=\"fn\">acc</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mul_go_NonnegCoeffs","kind":"theorem","line":360,"name":"Lean.Grind.CommRing.Poly.mul_go_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L360-L374"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.combine_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">combine_NonnegCoeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₂</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.combine\">combine</a></span> <span class=\"fn\">p₂</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.combine_NonnegCoeffs","kind":"theorem","line":339,"name":"Lean.Grind.CommRing.Poly.combine_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L339-L358"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.concat_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">concat_NonnegCoeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₂</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.concat\">concat</a></span> <span class=\"fn\">p₂</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.concat_NonnegCoeffs","kind":"theorem","line":334,"name":"Lean.Grind.CommRing.Poly.concat_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L334-L337"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mulMon_nc_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mulMon_nc_NonnegCoeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mulMon_nc\">mulMon_nc</a> <span class=\"fn\">k</span> <span class=\"fn\">m</span> <span class=\"fn\">p</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mulMon_nc_NonnegCoeffs","kind":"theorem","line":325,"name":"Lean.Grind.CommRing.Poly.mulMon_nc_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L325-L332"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mulMon_nc_go_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mulMon_nc_go_NonnegCoeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">acc</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">acc</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mulMon_nc.go\">mulMon_nc.go</a> <span class=\"fn\">k</span> <span class=\"fn\">m</span> <span class=\"fn\">p</span> <span class=\"fn\">acc</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mulMon_nc_go_NonnegCoeffs","kind":"theorem","line":310,"name":"Lean.Grind.CommRing.Poly.mulMon_nc_go_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L310-L323"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mulMon_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mulMon_NonnegCoeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mulMon\">mulMon</a> <span class=\"fn\">k</span> <span class=\"fn\">m</span> <span class=\"fn\">p</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mulMon_NonnegCoeffs","kind":"theorem","line":297,"name":"Lean.Grind.CommRing.Poly.mulMon_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L297-L308"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mulConst_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mulConst_NonnegCoeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mulConst\">mulConst</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.mulConst_NonnegCoeffs","kind":"theorem","line":284,"name":"Lean.Grind.CommRing.Poly.mulConst_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L284-L295"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mulMon_nc\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_mulMon_nc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mulMon_nc\">mulMon_nc</a> <span class=\"fn\">k</span> <span class=\"fn\">m</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Basic.html#Int.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon.denote\">Mon.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mulMon_nc","kind":"theorem","line":270,"name":"Lean.Grind.CommRing.Poly.denoteS_mulMon_nc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L270-L282"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.num_zero_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">num_zero_NonnegCoeffs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.num\">num</a> <span class=\"fn\">0</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.num_zero_NonnegCoeffs","kind":"theorem","line":267,"name":"Lean.Grind.CommRing.Poly.num_zero_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L267-L268"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mulMon_nc_go\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_mulMon_nc_go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">acc</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span> →\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">acc</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> →\n      <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mulMon_nc.go\">mulMon_nc.go</a> <span class=\"fn\">k</span> <span class=\"fn\">m</span> <span class=\"fn\">p</span> <span class=\"fn\">acc</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Basic.html#Int.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon.denote\">Mon.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">acc</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mulMon_nc_go","kind":"theorem","line":243,"name":"Lean.Grind.CommRing.Poly.denoteS_mulMon_nc_go","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L243-L265"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.insert_Nonneg\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">insert_Nonneg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.insert\">insert</a> <span class=\"fn\">k</span> <span class=\"fn\">m</span> <span class=\"fn\">p</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.insert_Nonneg","kind":"theorem","line":227,"name":"Lean.Grind.CommRing.Poly.insert_Nonneg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L227-L241"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.addConst_NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">addConst_NonnegCoeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.addConst\">addConst</a></span> <span class=\"fn\">k</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.addConst_NonnegCoeffs","kind":"theorem","line":220,"name":"Lean.Grind.CommRing.Poly.addConst_NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L220-L225"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mulMon\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_mulMon</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mulMon\">mulMon</a> <span class=\"fn\">k</span> <span class=\"fn\">m</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Basic.html#Int.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon.denote\">Mon.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mulMon","kind":"theorem","line":197,"name":"Lean.Grind.CommRing.Poly.denoteS_mulMon","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L197-L218"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_combine\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_combine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₂</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.combine\">combine</a></span> <span class=\"fn\">p₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₂</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_combine","kind":"theorem","line":164,"name":"Lean.Grind.CommRing.Poly.denoteS_combine","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L164-L195"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mulConst\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_mulConst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.mulConst\">mulConst</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Basic.html#Int.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_mulConst","kind":"theorem","line":150,"name":"Lean.Grind.CommRing.Poly.denoteS_mulConst","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L150-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_concat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_concat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₂</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.concat\">concat</a></span> <span class=\"fn\">p₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₂</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_concat","kind":"theorem","line":144,"name":"Lean.Grind.CommRing.Poly.denoteS_concat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L144-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_insert\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.insert\">insert</a> <span class=\"fn\">k</span> <span class=\"fn\">m</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Basic.html#Int.toNat\">toNat</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon.denote\">Mon.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_insert","kind":"theorem","line":117,"name":"Lean.Grind.CommRing.Poly.denoteS_insert","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L117-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_addConst\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_addConst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.addConst\">addConst</a></span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Basic.html#Int.toNat\">toNat</a></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_addConst","kind":"theorem","line":104,"name":"Lean.Grind.CommRing.Poly.denoteS_addConst","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L104-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_ofVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_ofVar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.ofVar\">ofVar</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Var.denote\">Var.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_ofVar","kind":"theorem","line":100,"name":"Lean.Grind.CommRing.Poly.denoteS_ofVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L100-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_ofMon\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS_ofMon</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.ofMon\">ofMon</a> <span class=\"fn\">m</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon.denote\">Mon.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS_ofMon","kind":"theorem","line":96,"name":"Lean.Grind.CommRing.Poly.denoteS_ofMon","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L96-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denoteS</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.denoteS","kind":"def","line":89,"name":"Lean.Grind.CommRing.Poly.denoteS","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L89-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.denoteSInt_eq\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">denoteSInt_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.denoteSInt\">denoteSInt</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Basic.html#Int.toNat\">toNat</a></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.denoteSInt_eq","kind":"theorem","line":81,"name":"Lean.Grind.CommRing.denoteSInt_eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L81-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.denoteSInt\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">denoteSInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.denoteSInt","kind":"def","line":75,"name":"Lean.Grind.CommRing.denoteSInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L75-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs.add\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">NonnegCoeffs</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.add\">Poly.add</a> <span class=\"fn\">a</span> <span class=\"fn\">m</span> <span class=\"fn\">p</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs.add","kind":"ctor","line":73,"name":"Lean.Grind.CommRing.Poly.NonnegCoeffs.add","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L73-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs.num\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">NonnegCoeffs</span>.<span class=\"name\">num</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly.num\">Poly.num</a> <span class=\"fn\">c</span>)</span>.<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\">NonnegCoeffs</a></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs.num","kind":"ctor","line":72,"name":"Lean.Grind.CommRing.Poly.NonnegCoeffs.num","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L72-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">NonnegCoeffs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Poly.NonnegCoeffs","kind":"inductive","line":71,"name":"Lean.Grind.CommRing.Poly.NonnegCoeffs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L71-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.toPolyS_nc\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toPolyS_nc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Expr\">Expr</a> → <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.toPolyS_nc","kind":"def","line":50,"name":"Lean.Grind.CommRing.Expr.toPolyS_nc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L50-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.toPolyS\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toPolyS</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Expr\">Expr</a> → <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Poly\">Poly</a></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.toPolyS","kind":"def","line":37,"name":"Lean.Grind.CommRing.Expr.toPolyS","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L37-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteAsRing_eq\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denoteAsRing_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteSAsRing\">denoteSAsRing</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Grind/Ring/Envelope.html#Lean.Grind.Ring.OfSemiring.toQ\">↑</a><span class=\"fn\">(<a href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS\">denoteS</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span>)</span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteAsRing_eq","kind":"theorem","line":34,"name":"Lean.Grind.CommRing.Expr.denoteAsRing_eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L34-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteSAsRing\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denoteSAsRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Init/Grind/Ring/Envelope.html#Lean.Grind.Ring.OfSemiring.Q\">Ring.OfSemiring.Q</a> <span class=\"fn\">α</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteSAsRing","kind":"def","line":23,"name":"Lean.Grind.CommRing.Expr.denoteSAsRing","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L23-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denoteS</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.Semiring\">Semiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/CommSolver.html#Lean.Grind.CommRing.Expr\">Expr</a> → <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Init/Grind/Ring/CommSemiringAdapter.html#Lean.Grind.CommRing.Expr.denoteS","kind":"def","line":14,"name":"Lean.Grind.CommRing.Expr.denoteS","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Ring/CommSemiringAdapter.lean#L14-L21"}}],"imports":["Init.Grind.Ring.Envelope","Init.Grind.Ring.CommSolver"],"instances":[],"name":"Init.Grind.Ring.CommSemiringAdapter"}