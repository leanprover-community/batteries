{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">Equiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"Equivalence relation from a `UnionFind` structure ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv","kind":"def","line":582,"name":"Batteries.UnionFind.Equiv","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L582-L583"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquivD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">checkEquivD</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Check whether two union-find nodes are equivalent with path compression,\nreturns `x == y` if either index is out of bounds ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquivD","kind":"def","line":575,"name":"Batteries.UnionFind.checkEquivD","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L575-L580"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquiv!\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">checkEquiv!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Check whether two union-find nodes are equivalent, updating structure using path compression.\nPanics if either index is out of bounds. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquiv!","kind":"def","line":567,"name":"Batteries.UnionFind.checkEquiv!","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L567-L573"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquivN\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">checkEquivN</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Check whether two union-find nodes are equivalent, updating structure using path compression. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquivN","kind":"def","line":563,"name":"Batteries.UnionFind.checkEquivN","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L563-L565"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquiv\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">checkEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Check whether two union-find nodes are equivalent, updating structure using path compression. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquiv","kind":"def","line":557,"name":"Batteries.UnionFind.checkEquiv","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L557-L561"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.union!\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">union!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>","info":{"doc":"Link two union-find nodes, uniting their respective classes.\nPanics if either index is out of bounds. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.union!","kind":"def","line":549,"name":"Batteries.UnionFind.union!","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L549-L555"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.unionN\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">unionN</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>","info":{"doc":"Link two union-find nodes, uniting their respective classes. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.unionN","kind":"def","line":545,"name":"Batteries.UnionFind.unionN","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L545-L547"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.union\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">union</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>","info":{"doc":"Link two union-find nodes, uniting their respective classes. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.union","kind":"def","line":534,"name":"Batteries.UnionFind.union","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L534-L543"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.link!\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">link!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">yroot</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>","info":{"doc":"Link a union-find node to a root node. Panics if either index is out of bounds. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.link!","kind":"def","line":527,"name":"Batteries.UnionFind.link!","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L527-L532"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkN\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">linkN</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">yroot</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>","info":{"doc":"Link a union-find node to a root node. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkN","kind":"def","line":523,"name":"Batteries.UnionFind.linkN","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L523-L525"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.link\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">link</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">yroot</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>","info":{"doc":"Link a union-find node to a root node. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.link","kind":"def","line":491,"name":"Batteries.UnionFind.link","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L491-L521"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkAux_size\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">linkAux_size</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkAux\">linkAux</a> <span class=\"fn\">self</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkAux_size","kind":"theorem","line":487,"name":"Batteries.UnionFind.linkAux_size","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L487-L489"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.setParent_rankD_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">setParent_rankD_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">y</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rankD_lt</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">have <span class=\"fn\">arr'</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Data/Array/Set.html#Array.set\">set</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">{</a> <span class=\"fn\">parent</span> := <span class=\"fn\">↑<span class=\"fn\">y</span></span>, <span class=\"fn\">rank</span> := <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">x</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">}</a> <span class=\"fn\">⋯</span></span>;\n<span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i</span>)</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.setParent_rankD_lt","kind":"theorem","line":479,"name":"Batteries.UnionFind.setParent_rankD_lt","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L479-L485"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.setParentBump_rankD_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">setParentBump_rankD_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr' </span><span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hroot</span> : <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">y</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">y</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">y</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rankD_lt</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hR</span> :\n  <span class=\"fn\">∀ {<span class=\"fn\">i_1</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}, <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i_1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">y</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">y</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i_1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.setParentBump_rankD_lt","kind":"theorem","line":454,"name":"Batteries.UnionFind.setParentBump_rankD_lt","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L454-L477"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkAux\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">linkAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span></div></div>","info":{"doc":"Link two union-find nodes ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkAux","kind":"def","line":438,"name":"Batteries.UnionFind.linkAux","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L438-L452"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_root_1\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">find_root_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find\">find</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_root_1","kind":"theorem","line":422,"name":"Batteries.UnionFind.find_root_1","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L422-L436"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_parent_or\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">find_parent_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find\">find</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find\">find</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_parent_or","kind":"theorem","line":418,"name":"Batteries.UnionFind.find_parent_or","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L418-L420"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_parent_1\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">find_parent_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find\">find</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_parent_1","kind":"theorem","line":413,"name":"Batteries.UnionFind.find_parent_1","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L413-L416"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_root_2\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">find_root_2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find\">find</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_root_2","kind":"theorem","line":410,"name":"Batteries.UnionFind.find_root_2","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L410-L411"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_size\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">find_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find\">find</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_size","kind":"theorem","line":407,"name":"Batteries.UnionFind.find_size","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L407-L408"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">findD</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Find root of a union-find node, updating the structure using path compression.\nReturns inputs unchanged when index is out of bounds. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findD","kind":"def","line":399,"name":"Batteries.UnionFind.findD","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L399-L405"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find!\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">find!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Find root of a union-find node, updating the structure using path compression.\nPanics if index is out of bounds. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find!","kind":"def","line":391,"name":"Batteries.UnionFind.find!","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L391-L397"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findN\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">findN</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"Find root of a union-find node, updating the structure using path compression. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findN","kind":"def","line":387,"name":"Batteries.UnionFind.findN","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L387-L389"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">find</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>) × <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">_root</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></div></div>","info":{"doc":"Find root of a union-find node, updating the structure using path compression. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find","kind":"def","line":374,"name":"Batteries.UnionFind.find","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L374-L385"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_rankD_findAux\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">lt_rankD_findAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_rankD_findAux","kind":"theorem","line":362,"name":"Batteries.UnionFind.lt_rankD_findAux","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L362-L372"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux_or\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_findAux_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a>   <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux_or","kind":"theorem","line":347,"name":"Batteries.UnionFind.parentD_findAux_or","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L347-L360"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_findAux_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux_lt","kind":"theorem","line":335,"name":"Batteries.UnionFind.parentD_findAux_lt","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L335-L345"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux_rootD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_findAux_rootD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux_rootD","kind":"theorem","line":326,"name":"Batteries.UnionFind.parentD_findAux_rootD","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L326-L333"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_findAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <a href=\"./Init/Prelude.html#Fin.mk\">⟨</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Fin.mk\">⟩</a>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux","kind":"theorem","line":312,"name":"Batteries.UnionFind.parentD_findAux","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L312-L324"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_findAux\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankD_findAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_findAux","kind":"theorem","line":298,"name":"Batteries.UnionFind.rankD_findAux","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L298-L310"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux_s\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">findAux_s</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span>\n  <a href=\"./Init/Prelude.html#ite\">else</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <a href=\"./Init/Prelude.html#Fin.mk\">⟨</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Fin.mk\">⟩</a>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span>.<a href=\"./Init/Data/Array/Basic.html#Array.modify\">modify</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">fun (<span class=\"fn\">s</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a>) =&gt; <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">{</a> <span class=\"fn\">parent</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>, <span class=\"fn\">rank</span> := <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">}</a></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux_s","kind":"theorem","line":287,"name":"Batteries.UnionFind.findAux_s","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L287-L296"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux_root\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">findAux_root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.root\">root</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.root\">root</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux_root","kind":"theorem","line":277,"name":"Batteries.UnionFind.findAux_root","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L277-L285"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">findAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux\">FindAux</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span></div></div>","info":{"doc":"Auxiliary function for find operation ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux","kind":"def","line":266,"name":"Batteries.UnionFind.findAux","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L266-L275"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.size_eq\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">FindAux</span>.<span class=\"name\">size_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux\">FindAux</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"Size requirement ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.size_eq","kind":"theorem","line":264,"name":"Batteries.UnionFind.FindAux.size_eq","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L264-L264"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.root\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">FindAux</span>.<span class=\"name\">root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux\">FindAux</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"Index of root node ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.root","kind":"def","line":262,"name":"Batteries.UnionFind.FindAux.root","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L262-L262"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">FindAux</span>.<span class=\"name\">s</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux\">FindAux</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span></div></div>","info":{"doc":"Array of nodes ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s","kind":"def","line":260,"name":"Batteries.UnionFind.FindAux.s","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L260-L260"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.mk\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">FindAux</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">root</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">size_eq</span> : <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux\">FindAux</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.mk","kind":"ctor","line":258,"name":"Batteries.UnionFind.FindAux.mk","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L258-L258"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">FindAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Auxiliary data structure for find operation ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux","kind":"structure","line":257,"name":"Batteries.UnionFind.FindAux","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L257-L264"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_rank_root\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">lt_rank_root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_rank_root","kind":"theorem","line":251,"name":"Batteries.UnionFind.lt_rank_root","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L251-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.le_rank_root\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">le_rank_root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.le_rank_root","kind":"theorem","line":242,"name":"Batteries.UnionFind.le_rank_root","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L242-L249"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_ext\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootD_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m1 </span><span class=\"fn\">m2</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m1</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m2</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m1</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m2</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_ext","kind":"theorem","line":233,"name":"Batteries.UnionFind.rootD_ext","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L233-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_rootD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootD_rootD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_rootD","kind":"theorem","line":230,"name":"Batteries.UnionFind.rootD_rootD","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L230-L231"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_eq_self\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootD_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_eq_self","kind":"theorem","line":225,"name":"Batteries.UnionFind.rootD_eq_self","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L225-L228"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootD_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_lt","kind":"theorem","line":222,"name":"Batteries.UnionFind.rootD_lt","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L222-L223"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_parent\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootD_parent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_parent","kind":"theorem","line":212,"name":"Batteries.UnionFind.rootD_parent","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L212-L220"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent_rootD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent_rootD</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent_rootD","kind":"theorem","line":205,"name":"Batteries.UnionFind.parent_rootD","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L205-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent_root\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent_root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.root\">root</a></span> <span class=\"fn\">x</span>)</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.root\">root</a></span> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent_root","kind":"theorem","line":197,"name":"Batteries.UnionFind.parent_root","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L197-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootD</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Root of a union-find node. Returns input if index is out of bounds. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD","kind":"def","line":192,"name":"Batteries.UnionFind.rootD","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L192-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.root!\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">root!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Root of a union-find node. Panics if index is out of bounds. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.root!","kind":"def","line":188,"name":"Batteries.UnionFind.root!","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L188-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootN\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootN</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"Root of a union-find node. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootN","kind":"def","line":184,"name":"Batteries.UnionFind.rootN","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L184-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.root\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span></div></div>","info":{"doc":"Root of a union-find node. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.root","kind":"def","line":174,"name":"Batteries.UnionFind.root","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L174-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">push</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>","info":{"doc":"Add a new node to a union-find structure, unlinked with any other nodes ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push","kind":"def","line":166,"name":"Batteries.UnionFind.push","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L166-L172"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push_parentD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">push_parentD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.push\">push</a></span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">{</a> <span class=\"fn\">parent</span> := <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>, <span class=\"fn\">rank</span> := <span class=\"fn\">0</span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">}</a>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push_parentD","kind":"theorem","line":160,"name":"Batteries.UnionFind.push_parentD","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L160-L164"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push_rankD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">push_rankD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.push\">push</a></span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">{</a> <span class=\"fn\">parent</span> := <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>, <span class=\"fn\">rank</span> := <span class=\"fn\">0</span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">}</a>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push_rankD","kind":"theorem","line":156,"name":"Batteries.UnionFind.push_rankD","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L156-L158"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_rankMax\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">lt_rankMax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankMax\">rankMax</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_rankMax","kind":"theorem","line":154,"name":"Batteries.UnionFind.lt_rankMax","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L154-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_lt_rankMax\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankD_lt_rankMax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankMax\">rankMax</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_lt_rankMax","kind":"theorem","line":150,"name":"Batteries.UnionFind.rankD_lt_rankMax","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L150-L152"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank'_lt_rankMax\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rank'_lt_rankMax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankMax\">rankMax</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank'_lt_rankMax","kind":"theorem","line":143,"name":"Batteries.UnionFind.rank'_lt_rankMax","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L143-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankMax\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankMax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Maximum rank of nodes in a union-find structure ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankMax","kind":"def","line":140,"name":"Batteries.UnionFind.rankMax","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L140-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank'_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rank'_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank'_lt","kind":"theorem","line":136,"name":"Batteries.UnionFind.rank'_lt","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L136-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rank_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank_lt","kind":"theorem","line":133,"name":"Batteries.UnionFind.rank_lt","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L133-L134"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rank</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Rank of union-find node ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank","kind":"def","line":130,"name":"Batteries.UnionFind.rank","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L130-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent_lt","kind":"theorem","line":127,"name":"Batteries.UnionFind.parent_lt","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L127-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent'_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent'_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent'_lt","kind":"theorem","line":124,"name":"Batteries.UnionFind.parent'_lt","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L124-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Parent of union-find node ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent","kind":"def","line":121,"name":"Batteries.UnionFind.parent","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L121-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.instEmptyCollection\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.instEmptyCollection","kind":"instance","line":119,"name":"Batteries.UnionFind.instEmptyCollection","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L119-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.empty\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>","info":{"doc":"Empty union-find structure ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.empty","kind":"def","line":116,"name":"Batteries.UnionFind.empty","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L116-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.mkEmpty\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">mkEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>","info":{"doc":"Create an empty union-find structure with specific capacity ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.mkEmpty","kind":"def","line":110,"name":"Batteries.UnionFind.mkEmpty","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L110-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Size of union-find structure. ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size","kind":"def","line":107,"name":"Batteries.UnionFind.size","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L107-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankD_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <span class=\"fn\">i</span>)</span></span></span></div></div>","info":{"doc":"Validity for rank ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_lt","kind":"theorem","line":103,"name":"Batteries.UnionFind.rankD_lt","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L103-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span></div></div>","info":{"doc":"Validity for parent nodes ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_lt","kind":"theorem","line":101,"name":"Batteries.UnionFind.parentD_lt","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L101-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">arr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span></div></div>","info":{"doc":"Array of union-find nodes ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr","kind":"def","line":99,"name":"Batteries.UnionFind.arr","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.mk\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parentD_lt</span> : <span class=\"fn\">∀ {<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}, <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rankD_lt</span> : <span class=\"fn\">∀ {<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.mk","kind":"ctor","line":97,"name":"Batteries.UnionFind.mk","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L97-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"### Union-find data structure\n\nThe `UnionFind` structure is an implementation of disjoint-set data structure\nthat uses path compression to make the primary operations run in amortized\nnearly linear time. The nodes of a `UnionFind` structure `s` are natural\nnumbers smaller than `s.size`. The structure associates with a canonical\nrepresentative from its equivalence class. The structure can be extended\nusing the `push` operation and equivalence classes can be updated using the\n`union` operation.\n\nThe main operations for `UnionFind` are:\n\n* `empty`/`mkEmpty` are used to create a new empty structure.\n* `size` returns the size of the data structure.\n* `push` adds a new node to a structure, unlinked to any other node.\n* `union` links two nodes of the data structure, joining their equivalence\n  classes, and performs path compression.\n* `find` returns the canonical representative of a node and updates the data\n  structure using path compression.\n* `root` returns the canonical representative of a node without altering the\n  data structure.\n* `checkEquiv` checks whether two nodes have the same canonical representative\n  and updates the structure using path compression.\n\nMost use cases should prefer `find` over `root` to benefit from the speedup from path-compression.\n\nThe main operations use `Fin s.size` to represent nodes of the union-find structure.\nSome alternatives are provided:\n\n* `unionN`, `findN`, `rootN`, `checkEquivN` use `Fin n` with a proof that `n = s.size`.\n* `union!`, `find!`, `root!`, `checkEquiv!` use `Nat` and panic when the indices are out of bounds.\n* `findD`, `rootD`, `checkEquivD` use `Nat` and treat out of bound indices as isolated nodes.\n\nThe noncomputable relation `UnionFind.Equiv` is provided to use the equivalence relation from a\n`UnionFind` structure in the context of proofs.\n","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind","kind":"structure","line":61,"name":"Batteries.UnionFind","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L61-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_set\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankD_set</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Data/Array/Set.html#Array.set\">set</a></span> <span class=\"fn\">x</span> <span class=\"fn\">v</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_set","kind":"theorem","line":50,"name":"Batteries.UnionFind.rankD_set","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L50-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_set\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_set</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Data/Array/Set.html#Array.set\">set</a></span> <span class=\"fn\">x</span> <span class=\"fn\">v</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_set","kind":"theorem","line":43,"name":"Batteries.UnionFind.parentD_set","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L43-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_of_parentD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">lt_of_parentD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_of_parentD","kind":"theorem","line":40,"name":"Batteries.UnionFind.lt_of_parentD","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L40-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_of_not_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_of_not_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_of_not_lt","kind":"theorem","line":38,"name":"Batteries.UnionFind.parentD_of_not_lt","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_eq\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankD_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_eq","kind":"theorem","line":36,"name":"Batteries.UnionFind.rankD_eq","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_eq\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_eq","kind":"theorem","line":33,"name":"Batteries.UnionFind.parentD_eq","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L33-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankD</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Rank of a union-find node, defaults to 0 when the node is a root ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD","kind":"def","line":29,"name":"Batteries.UnionFind.rankD","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L29-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Parent of a union-find node, defaults to self when the node is a root ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD","kind":"def","line":25,"name":"Batteries.UnionFind.parentD","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L25-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\"><span class=\"name\">Batteries</span>.<span class=\"name\">UFNode</span>.<span class=\"name\">rank</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Rank of node ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank","kind":"def","line":21,"name":"Batteries.UFNode.rank","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\"><span class=\"name\">Batteries</span>.<span class=\"name\">UFNode</span>.<span class=\"name\">parent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Parent of node ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent","kind":"def","line":19,"name":"Batteries.UFNode.parent","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\"><span class=\"name\">Batteries</span>.<span class=\"name\">UFNode</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parent </span><span class=\"fn\">rank</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk","kind":"ctor","line":17,"name":"Batteries.UFNode.mk","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\"><span class=\"name\">Batteries</span>.<span class=\"name\">UFNode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Union-find node type ","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode","kind":"structure","line":16,"name":"Batteries.UFNode","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Basic.lean#L16-L21"}}],"imports":["Init","Batteries.Tactic.Lint.Misc","Batteries.Tactic.SeqFocus","Batteries.Util.Panic"],"instances":[{"className":"EmptyCollection","name":"Batteries.UnionFind.instEmptyCollection","typeNames":["Batteries.UnionFind"]}],"name":"Batteries.Data.UnionFind.Basic"}