{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.many1Chars\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">many1Chars</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Char\">Char</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Parses one or more chars with `p` into a string, errors if none.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.many1Chars","kind":"def","line":258,"name":"Std.Internal.Parsec.many1Chars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L258-L263"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.manyChars\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">manyChars</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Char\">Char</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Parses zero or more chars with `p` into a string.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.manyChars","kind":"def","line":251,"name":"Std.Internal.Parsec.manyChars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L251-L256"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.manyCharsCore\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">manyCharsCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Char\">Char</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Parses zero or more chars with `p`, accumulates into a string.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.manyCharsCore","kind":"opaque","line":244,"name":"Std.Internal.Parsec.manyCharsCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L244-L249"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.skip\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">skip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Consumes one element if available, otherwise errors on EOF.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.skip","kind":"def","line":234,"name":"Std.Internal.Parsec.skip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L234-L242"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.peekD\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">peekD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">default</span> : <span class=\"fn\">elem</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span></span></div></div>","info":{"doc":"Peeks at the next element or returns a default if at EOF, does not consume input.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.peekD","kind":"def","line":224,"name":"Std.Internal.Parsec.peekD","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L224-L232"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.peek!\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">peek!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span></span></div></div>","info":{"doc":"Peeks at the next element, errors on EOF, does not consume input.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.peek!","kind":"def","line":214,"name":"Std.Internal.Parsec.peek!","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L214-L222"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.peekWhen?\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">peekWhen?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">elem</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">elem</span>)</span></span></div></div>","info":{"doc":"Peeks at the next element, returns `some elem` if it satisfies `p`, else `none`. Does not consume input.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.peekWhen?","kind":"def","line":201,"name":"Std.Internal.Parsec.peekWhen?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L201-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.peek?\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">peek?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">elem</span>)</span></span></div></div>","info":{"doc":"Peeks at the next element, returns `some` if exists else `none`, does not consume input.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.peek?","kind":"def","line":191,"name":"Std.Internal.Parsec.peek?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L191-L199"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.notFollowedBy\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">notFollowedBy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Fails if `p` succeeds, otherwise succeeds without consuming input.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.notFollowedBy","kind":"def","line":182,"name":"Std.Internal.Parsec.notFollowedBy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L182-L189"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.satisfy\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">satisfy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">elem</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span></span></div></div>","info":{"doc":"Checks if the next input element matches some condition.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.satisfy","kind":"def","line":174,"name":"Std.Internal.Parsec.satisfy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L174-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.any\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">any</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span></span></div></div>","info":{"doc":"Gets the next input element.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.any","kind":"def","line":162,"name":"Std.Internal.Parsec.any","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L162-L172"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.many1\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">many1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.many1","kind":"def","line":159,"name":"Std.Internal.Parsec.many1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L159-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.many\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">many</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.many","kind":"def","line":156,"name":"Std.Internal.Parsec.many","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L156-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.manyCore\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">manyCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.manyCore","kind":"opaque","line":152,"name":"Std.Internal.Parsec.manyCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L152-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.isEof\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">isEof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.isEof","kind":"def","line":148,"name":"Std.Internal.Parsec.isEof","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L148-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.eof\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">eof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Succeeds only if input is at end-of-file.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.eof","kind":"def","line":138,"name":"Std.Internal.Parsec.eof","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L138-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instAlternative\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">instAlternative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Basic.html#Alternative\">Alternative</a> <span class=\"fn\">(<a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instAlternative","kind":"instance","line":133,"name":"Std.Internal.Parsec.instAlternative","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L133-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.attempt\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">attempt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Attempt to parse with `p`, but don't consume input on failure.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.attempt","kind":"def","line":124,"name":"Std.Internal.Parsec.attempt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L124-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.orElse\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">orElse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Try `p`, and if it fails without consuming input, run `q ()` instead.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.orElse","kind":"def","line":117,"name":"Std.Internal.Parsec.orElse","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L117-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instMonad\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">instMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">(<a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instMonad","kind":"instance","line":112,"name":"Std.Internal.Parsec.instMonad","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L112-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.tryCatch\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">tryCatch</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">ι </span><span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">csuccess</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cerror</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"Try `p`, then decide what to do based on success or failure without consuming input on failure.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.tryCatch","kind":"def","line":100,"name":"Std.Internal.Parsec.tryCatch","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L100-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.fail\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">fail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Parser that always fails with the given error message.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.fail","kind":"def","line":93,"name":"Std.Internal.Parsec.fail","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L93-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.bind\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">bind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι </span><span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.bind","kind":"def","line":87,"name":"Std.Internal.Parsec.bind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L87-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.pure\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">pure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.pure","kind":"def","line":83,"name":"Std.Internal.Parsec.pure","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L83-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instInhabited\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\">Parsec</a> <span class=\"fn\">ι</span> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instInhabited","kind":"instance","line":80,"name":"Std.Internal.Parsec.instInhabited","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L80-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.curr'\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">Input</span>.<span class=\"name\">curr'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">it</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.hasNext\">hasNext</a> <span class=\"fn\">it</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\">elem</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.curr'","kind":"def","line":75,"name":"Std.Internal.Parsec.Input.curr'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L75-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.next'\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">Input</span>.<span class=\"name\">next'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">it</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.hasNext\">hasNext</a> <span class=\"fn\">it</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\">ι</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.next'","kind":"def","line":74,"name":"Std.Internal.Parsec.Input.next'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L74-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.hasNext\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">Input</span>.<span class=\"name\">hasNext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.hasNext","kind":"def","line":73,"name":"Std.Internal.Parsec.Input.hasNext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L73-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.curr\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">Input</span>.<span class=\"name\">curr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">elem</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.curr","kind":"def","line":72,"name":"Std.Internal.Parsec.Input.curr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L72-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.next\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">Input</span>.<span class=\"name\">next</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">ι</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.next","kind":"def","line":71,"name":"Std.Internal.Parsec.Input.next","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L71-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.pos\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">Input</span>.<span class=\"name\">pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">idx</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.pos","kind":"def","line":70,"name":"Std.Internal.Parsec.Input.pos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">Input</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">next</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">curr</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">elem</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hasNext</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">next'</span> : <span class=\"fn\">(<span class=\"fn\">it</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hasNext</span> <span class=\"fn\">it</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\">ι</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">curr'</span> : <span class=\"fn\">(<span class=\"fn\">it</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hasNext</span> <span class=\"fn\">it</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\">elem</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <span class=\"fn\">ι</span> <span class=\"fn\">elem</span> <span class=\"fn\">idx</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input.mk","kind":"ctor","line":69,"name":"Std.Internal.Parsec.Input.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">Input</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elem </span><span class=\"fn\">idx</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">idx</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">elem</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Interface for an input iterator with position tracking and lookahead support.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input","kind":"class","line":66,"name":"Std.Internal.Parsec.Input","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L66-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A `Parsec ι α` represents a parser that consumes input of type `ι` and, produces a\n`ParseResult` containing a value of type `α` (the result of parsing) and the remaining input.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec","kind":"def","line":56,"name":"Std.Internal.Parsec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L56-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instReprParseResult.repr\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">instReprParseResult</span>.<span class=\"name\">repr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝ </span><span class=\"fn\">ι✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">ι✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.ParseResult\">ParseResult</a> <span class=\"fn\">α✝</span> <span class=\"fn\">ι✝</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instReprParseResult.repr","kind":"def","line":52,"name":"Std.Internal.Parsec.instReprParseResult.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instReprParseResult\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">instReprParseResult</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝ </span><span class=\"fn\">ι✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">ι✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">(<a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.ParseResult\">ParseResult</a> <span class=\"fn\">α✝</span> <span class=\"fn\">ι✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instReprParseResult","kind":"instance","line":52,"name":"Std.Internal.Parsec.instReprParseResult","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.ParseResult.error\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">ParseResult</span>.<span class=\"name\">error</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">err</span> : <a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Error\">Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.ParseResult\">ParseResult</a> <span class=\"fn\">α</span> <span class=\"fn\">ι</span></span></div></div>","info":{"doc":"Parsing failed, returning the position `pos` where the error occurred and the error `err`.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.ParseResult.error","kind":"ctor","line":48,"name":"Std.Internal.Parsec.ParseResult.error","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L48-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.ParseResult.success\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">ParseResult</span>.<span class=\"name\">success</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">res</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.ParseResult\">ParseResult</a> <span class=\"fn\">α</span> <span class=\"fn\">ι</span></span></div></div>","info":{"doc":"Parsing succeeded, returning the new position `pos` and the parsed result `res`.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.ParseResult.success","kind":"ctor","line":43,"name":"Std.Internal.Parsec.ParseResult.success","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L43-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.ParseResult\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">ParseResult</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α </span><span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The result of parsing some string.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.ParseResult","kind":"inductive","line":39,"name":"Std.Internal.Parsec.ParseResult","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L39-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instToStringError\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">instToStringError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Error\">Error</a></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instToStringError","kind":"instance","line":34,"name":"Std.Internal.Parsec.instToStringError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L34-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instReprError.repr\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">instReprError</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Error\">Error</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instReprError.repr","kind":"def","line":32,"name":"Std.Internal.Parsec.instReprError.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instReprError\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">instReprError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Error\">Error</a></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.instReprError","kind":"instance","line":32,"name":"Std.Internal.Parsec.instReprError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Error.other\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">Error</span>.<span class=\"name\">other</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Error\">Error</a></div></div>","info":{"doc":"Represents any other kind of parsing error with an associated message.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Error.other","kind":"ctor","line":28,"name":"Std.Internal.Parsec.Error.other","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L28-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Error.eof\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">Error</span>.<span class=\"name\">eof</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Error\">Error</a></div></div>","info":{"doc":"Indicates that the parser reached the end of the input unexpectedly.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Error.eof","kind":"ctor","line":23,"name":"Std.Internal.Parsec.Error.eof","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L23-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Error\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">Error</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents an error that can occur during parsing.\n","docLink":"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Error","kind":"inductive","line":19,"name":"Std.Internal.Parsec.Error","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/Basic.lean#L19-L32"}}],"imports":["Init.NotationExtra","Init.Data.ToString.Macro","Init.Data.String.Basic"],"instances":[{"className":"Repr","name":"Std.Internal.Parsec.instReprError","typeNames":["Std.Internal.Parsec.Error"]},{"className":"ToString","name":"Std.Internal.Parsec.instToStringError","typeNames":["Std.Internal.Parsec.Error"]},{"className":"Repr","name":"Std.Internal.Parsec.instReprParseResult","typeNames":["Std.Internal.Parsec.ParseResult"]},{"className":"Inhabited","name":"Std.Internal.Parsec.instInhabited","typeNames":["Std.Internal.Parsec"]},{"className":"Monad","name":"Std.Internal.Parsec.instMonad","typeNames":["Std.Internal.Parsec"]},{"className":"Alternative","name":"Std.Internal.Parsec.instAlternative","typeNames":["Std.Internal.Parsec"]}],"name":"Std.Internal.Parsec.Basic"}