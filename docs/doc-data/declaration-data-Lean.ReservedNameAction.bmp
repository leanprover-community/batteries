{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ReservedNameAction.html#Lean.realizeGlobalConstNoOverload\"><span class=\"name\">Lean</span>.<span class=\"name\">realizeGlobalConstNoOverload</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"Similar to `realizeGlobalConstNoOverload`, but also executes reserved name actions.\n\nConsider using `realizeGlobalConstNoOverloadWithInfo` if you want the syntax to show the resulting\nname's info on hover.\n","docLink":"./Lean/ReservedNameAction.html#Lean.realizeGlobalConstNoOverload","kind":"def","line":83,"name":"Lean.realizeGlobalConstNoOverload","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ReservedNameAction.lean#L83-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ReservedNameAction.html#Lean.realizeGlobalConst\"><span class=\"name\">Lean</span>.<span class=\"name\">realizeGlobalConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>","info":{"doc":"Similar to `resolveGlobalConst`, but also executes reserved name actions.\n\nConsider using `realizeGlobalConstWithInfo` if you want the syntax to show the resulting name's info\non hover.\n","docLink":"./Lean/ReservedNameAction.html#Lean.realizeGlobalConst","kind":"def","line":74,"name":"Lean.realizeGlobalConst","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ReservedNameAction.lean#L74-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ReservedNameAction.html#Lean.realizeGlobalConstNoOverloadCore\"><span class=\"name\">Lean</span>.<span class=\"name\">realizeGlobalConstNoOverloadCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"Similar to `realizeGlobalConstNoOverloadCore`, but also executes reserved name actions.\n","docLink":"./Lean/ReservedNameAction.html#Lean.realizeGlobalConstNoOverloadCore","kind":"def","line":68,"name":"Lean.realizeGlobalConstNoOverloadCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ReservedNameAction.lean#L68-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ReservedNameAction.html#Lean.realizeGlobalConstCore\"><span class=\"name\">Lean</span>.<span class=\"name\">realizeGlobalConstCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>","info":{"doc":"Similar to `resolveGlobalConstCore`, but also executes reserved name actions.\n","docLink":"./Lean/ReservedNameAction.html#Lean.realizeGlobalConstCore","kind":"def","line":61,"name":"Lean.realizeGlobalConstCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ReservedNameAction.lean#L61-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ReservedNameAction.html#Lean.realizeGlobalName\"><span class=\"name\">Lean</span>.<span class=\"name\">realizeGlobalName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>))</span></span></div></div>","info":{"doc":"Similar to `resolveGlobalName`, but also executes reserved name actions.\n","docLink":"./Lean/ReservedNameAction.html#Lean.realizeGlobalName","kind":"def","line":42,"name":"Lean.realizeGlobalName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ReservedNameAction.lean#L42-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ReservedNameAction.html#Lean.executeReservedNameAction\"><span class=\"name\">Lean</span>.<span class=\"name\">executeReservedNameAction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Execute a registered reserved action for the given reserved name.\nNote that the handler can throw an exception.\n","docLink":"./Lean/ReservedNameAction.html#Lean.executeReservedNameAction","kind":"def","line":33,"name":"Lean.executeReservedNameAction","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ReservedNameAction.lean#L33-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ReservedNameAction.html#Lean.registerReservedNameAction\"><span class=\"name\">Lean</span>.<span class=\"name\">registerReservedNameAction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">act</span> : <a href=\"./Lean/ReservedNameAction.html#Lean.ReservedNameAction\">ReservedNameAction</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Register a new function that is invoked when trying to resolve a reserved name.\n","docLink":"./Lean/ReservedNameAction.html#Lean.registerReservedNameAction","kind":"def","line":25,"name":"Lean.registerReservedNameAction","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ReservedNameAction.lean#L25-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ReservedNameAction.html#Lean.ReservedNameAction\"><span class=\"name\">Lean</span>.<span class=\"name\">ReservedNameAction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"When trying to resolve a reserved name, an action can be executed to generate the actual definition/theorem.\nThe action returns `true` if it \"handled\" the given name.\n\nRemark: usually when one install a reserved name predicate, an associated action is also installed.\n","docLink":"./Lean/ReservedNameAction.html#Lean.ReservedNameAction","kind":"def","line":15,"name":"Lean.ReservedNameAction","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ReservedNameAction.lean#L15-L21"}}],"imports":["Lean.CoreM"],"instances":[],"name":"Lean.ReservedNameAction"}