{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM.runAtGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">GrindTacticM</span>.<span class=\"name\">runAtGoal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <a href=\"./Lean/Meta/Tactic/Grind/Main.html#Lean.Meta.Grind.Params\">Meta.Grind.Params</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">TacticM</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State\">State</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM.runAtGoal","kind":"def","line":369,"name":"Lean.Elab.Tactic.Grind.GrindTacticM.runAtGoal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L369-L383"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.mkEvalTactic\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">mkEvalTactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <a href=\"./Lean/Meta/Tactic/Grind/Main.html#Lean.Meta.Grind.Params\">Meta.Grind.Params</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">TacticM</a> <span class=\"fn\">(<a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Meta.Grind.Goal</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`grind</span> → <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GrindM\">Meta.Grind.GrindM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Meta.Grind.Goal</a>)</span></span></span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.mkEvalTactic","kind":"def","line":366,"name":"Lean.Elab.Tactic.Grind.mkEvalTactic","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L366-L367"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.mkEvalTactic'\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">mkEvalTactic'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elaborator</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <a href=\"./Lean/Meta/Tactic/Grind/Main.html#Lean.Meta.Grind.Params\">Meta.Grind.Params</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <span class=\"fn\">(<a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Meta.Grind.Goal</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`grind</span> → <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GrindM\">Meta.Grind.GrindM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Meta.Grind.Goal</a>)</span></span></span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.mkEvalTactic'","kind":"def","line":347,"name":"Lean.Elab.Tactic.Grind.mkEvalTactic'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L347-L364"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">GrindTacticM</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">TermElabM</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State\">State</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM.run","kind":"def","line":344,"name":"Lean.Elab.Tactic.Grind.GrindTacticM.run","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L344-L345"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.liftSearchM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">liftSearchM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">Meta.Grind.SearchM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.liftSearchM","kind":"def","line":335,"name":"Lean.Elab.Tactic.Grind.liftSearchM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L335-L342"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.liftGoalM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">liftGoalM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">Meta.Grind.GoalM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.liftGoalM","kind":"def","line":329,"name":"Lean.Elab.Tactic.Grind.liftGoalM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L329-L333"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.replaceMainGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">replaceMainGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Meta.Grind.Goal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.replaceMainGoal","kind":"def","line":324,"name":"Lean.Elab.Tactic.Grind.replaceMainGoal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L324-L327"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.liftGrindM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">liftGrindM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GrindM\">Meta.Grind.GrindM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.liftGrindM","kind":"def","line":317,"name":"Lean.Elab.Tactic.Grind.liftGrindM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L317-L322"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.tryTactic\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">tryTactic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tac</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.tryTactic","kind":"def","line":308,"name":"Lean.Elab.Tactic.Grind.tryTactic","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L308-L313"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.tryTactic?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">tryTactic?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tac</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.tryTactic?","kind":"def","line":302,"name":"Lean.Elab.Tactic.Grind.tryTactic?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L302-L306"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.withMainContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">withMainContext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Execute `x` using the main goal local context and instances ","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.withMainContext","kind":"def","line":298,"name":"Lean.Elab.Tactic.Grind.withMainContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L298-L300"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.getMainGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">getMainGoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Meta.Grind.Goal</a></span></div></div>","info":{"doc":"Return the first goal. ","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.getMainGoal","kind":"def","line":285,"name":"Lean.Elab.Tactic.Grind.getMainGoal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L285-L296"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.adaptExpander\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">adaptExpander</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exp</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTactic\">GrindTactic</a></div></div>","info":{"doc":"Adapt a syntax transformation to a regular tactic evaluator. ","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.adaptExpander","kind":"def","line":280,"name":"Lean.Elab.Tactic.Grind.adaptExpander","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L280-L283"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.withMacroExpansion\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">withMacroExpansion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">beforeStx </span><span class=\"fn\">afterStx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Elaborate `x` with `stx` on the macro stack ","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.withMacroExpansion","kind":"def","line":274,"name":"Lean.Elab.Tactic.Grind.withMacroExpansion","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L274-L278"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.saveTacticInfoForToken\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">saveTacticInfoForToken</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Save the current tactic state for a token `stx`.\nThis method is a no-op if `stx` has no position information.\nWe use this method to save the tactic state at punctuation such as `;`\n","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.saveTacticInfoForToken","kind":"def","line":265,"name":"Lean.Elab.Tactic.Grind.saveTacticInfoForToken","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L265-L272"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.instAlternativeGrindTacticM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instAlternativeGrindTacticM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Basic.html#Alternative\">Alternative</a> <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.instAlternativeGrindTacticM","kind":"instance","line":261,"name":"Lean.Elab.Tactic.Grind.instAlternativeGrindTacticM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L261-L263"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.instOrElseGrindTacticM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instOrElseGrindTacticM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OrElse\">OrElse</a> <span class=\"fn\">(<a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.instOrElseGrindTacticM","kind":"instance","line":258,"name":"Lean.Elab.Tactic.Grind.instOrElseGrindTacticM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L258-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.orElse\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">orElse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.orElse","kind":"def","line":255,"name":"Lean.Elab.Tactic.Grind.orElse","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L255-L256"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.throwOrLogError\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">throwOrLogError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Like `throwError`, but, if recovery is enabled, logs the error instead.\n","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.throwOrLogError","kind":"def","line":249,"name":"Lean.Elab.Tactic.Grind.throwOrLogError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L249-L253"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.throwOrLogErrorAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">throwOrLogErrorAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Like `throwErrorAt`, but, if recovery is enabled, logs the error instead.\n","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.throwOrLogErrorAt","kind":"def","line":240,"name":"Lean.Elab.Tactic.Grind.throwOrLogErrorAt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L240-L247"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.withoutRecover\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">withoutRecover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Execute `x` with error recovery disabled ","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.withoutRecover","kind":"def","line":236,"name":"Lean.Elab.Tactic.Grind.withoutRecover","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L236-L238"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.instMonadExceptExceptionGrindTacticM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instMonadExceptExceptionGrindTacticM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadExcept\">MonadExcept</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Exception</a> <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.instMonadExceptExceptionGrindTacticM","kind":"instance","line":232,"name":"Lean.Elab.Tactic.Grind.instMonadExceptExceptionGrindTacticM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L232-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.tryCatchRestore\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">tryCatchRestore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.Exception\">Exception</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Backtracking `try`/`catch`. This is used for the `MonadExcept` instance for `GrindTacticM`.\n","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.tryCatchRestore","kind":"def","line":224,"name":"Lean.Elab.Tactic.Grind.tryCatchRestore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L224-L230"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.tryCatch\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">tryCatch</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.Exception\">Exception</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Non-backtracking `try`/`catch`.\n","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.tryCatch","kind":"def","line":218,"name":"Lean.Elab.Tactic.Grind.tryCatch","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L218-L222"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.closeUsingOrAdmit\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">closeUsingOrAdmit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tac</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Close the main goal using the given tactic. If it fails, log the error and `admit` ","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.closeUsingOrAdmit","kind":"def","line":203,"name":"Lean.Elab.Tactic.Grind.closeUsingOrAdmit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L203-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.focusAndDone\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">focusAndDone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tactic</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Runs `tactic` with only the first unsolved goal as the goal, and expects it leave no goals.\nFails if there are no goal to be solved.\n","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.focusAndDone","kind":"def","line":193,"name":"Lean.Elab.Tactic.Grind.focusAndDone","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L193-L201"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.focus\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">focus</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Runs `x` with only the first unsolved goal as the goal.\nFails if there are no goal to be solved.\n","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.focus","kind":"def","line":180,"name":"Lean.Elab.Tactic.Grind.focus","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L180-L191"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.instMonadBacktrackSavedStateGrindTacticM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instMonadBacktrackSavedStateGrindTacticM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/MonadBacktrack.html#Lean.MonadBacktrack\">MonadBacktrack</a> <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState\">SavedState</a> <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.instMonadBacktrackSavedStateGrindTacticM","kind":"instance","line":176,"name":"Lean.Elab.Tactic.Grind.instMonadBacktrackSavedStateGrindTacticM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L176-L178"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.done\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">done</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.done","kind":"def","line":170,"name":"Lean.Elab.Tactic.Grind.done","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L170-L174"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.throwNoGoalsToBeSolved\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">throwNoGoalsToBeSolved</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.throwNoGoalsToBeSolved","kind":"def","line":167,"name":"Lean.Elab.Tactic.Grind.throwNoGoalsToBeSolved","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L167-L168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.evalGrindTactic\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">evalGrindTactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.evalGrindTactic","kind":"opaque","line":99,"name":"Lean.Elab.Tactic.Grind.evalGrindTactic","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L99-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.EvalTacticFailure.state\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EvalTacticFailure</span>.<span class=\"name\">state</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.EvalTacticFailure\">EvalTacticFailure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState\">SavedState</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.EvalTacticFailure.state","kind":"def","line":97,"name":"Lean.Elab.Tactic.Grind.EvalTacticFailure.state","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L97-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.EvalTacticFailure.exception\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EvalTacticFailure</span>.<span class=\"name\">exception</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.EvalTacticFailure\">EvalTacticFailure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Exception.html#Lean.Exception\">Exception</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.EvalTacticFailure.exception","kind":"def","line":96,"name":"Lean.Elab.Tactic.Grind.EvalTacticFailure.exception","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L96-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.EvalTacticFailure.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EvalTacticFailure</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exception</span> : <a href=\"./Lean/Exception.html#Lean.Exception\">Exception</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">state</span> : <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState\">SavedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.EvalTacticFailure\">EvalTacticFailure</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.EvalTacticFailure.mk","kind":"ctor","line":95,"name":"Lean.Elab.Tactic.Grind.EvalTacticFailure.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L95-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.EvalTacticFailure\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EvalTacticFailure</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.EvalTacticFailure","kind":"structure","line":95,"name":"Lean.Elab.Tactic.Grind.EvalTacticFailure","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L95-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.withTacticInfoContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">withTacticInfoContext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.withTacticInfoContext","kind":"def","line":92,"name":"Lean.Elab.Tactic.Grind.withTacticInfoContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L92-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.mkInitialTacticInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">mkInitialTacticInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">(<a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info\">Info</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.mkInitialTacticInfo","kind":"def","line":87,"name":"Lean.Elab.Tactic.Grind.mkInitialTacticInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L87-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.mkTacticInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">mkTacticInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mctxBefore</span> : <a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">MetavarContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goalsBefore</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info\">Info</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.mkTacticInfo","kind":"def","line":77,"name":"Lean.Elab.Tactic.Grind.mkTacticInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L77-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.grindTacElabAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grindTacElabAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute\">KeyedDeclsAttribute</a> <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTactic\">GrindTactic</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.grindTacElabAttribute","kind":"opaque","line":73,"name":"Lean.Elab.Tactic.Grind.grindTacElabAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L73-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.instInhabitedGrindTacticM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instInhabitedGrindTacticM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.instInhabitedGrindTacticM","kind":"instance","line":70,"name":"Lean.Elab.Tactic.Grind.instInhabitedGrindTacticM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L70-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.instMonadGrindTacticM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instMonadGrindTacticM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.instMonadGrindTacticM","kind":"instance","line":65,"name":"Lean.Elab.Tactic.Grind.instMonadGrindTacticM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L65-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState.restore\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SavedState</span>.<span class=\"name\">restore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState\">SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">restoreInfo</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState.restore","kind":"def","line":61,"name":"Lean.Elab.Tactic.Grind.SavedState.restore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L61-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.saveState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">saveState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState\">SavedState</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.saveState","kind":"def","line":58,"name":"Lean.Elab.Tactic.Grind.saveState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L58-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.getUnsolvedGoalMVarIds\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">getUnsolvedGoalMVarIds</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.getUnsolvedGoalMVarIds","kind":"def","line":53,"name":"Lean.Elab.Tactic.Grind.getUnsolvedGoalMVarIds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L53-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.getUnsolvedGoals\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">getUnsolvedGoals</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Meta.Grind.Goal</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.getUnsolvedGoals","kind":"def","line":49,"name":"Lean.Elab.Tactic.Grind.getUnsolvedGoals","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L49-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.pruneSolvedGoals\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">pruneSolvedGoals</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.pruneSolvedGoals","kind":"def","line":44,"name":"Lean.Elab.Tactic.Grind.pruneSolvedGoals","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L44-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.setGoals\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">setGoals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Meta.Grind.Goal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.setGoals","kind":"def","line":41,"name":"Lean.Elab.Tactic.Grind.setGoals","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L41-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.getGoals\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">getGoals</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\">GrindTacticM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Meta.Grind.Goal</a>)</span></span></div></div>","info":{"doc":"Returns the list of goals. Goals may or may not already be assigned. ","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.getGoals","kind":"def","line":37,"name":"Lean.Elab.Tactic.Grind.getGoals","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L37-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTactic\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">GrindTactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTactic","kind":"def","line":35,"name":"Lean.Elab.Tactic.Grind.GrindTactic","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">GrindTacticM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.GrindTacticM","kind":"def","line":33,"name":"Lean.Elab.Tactic.Grind.GrindTacticM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState.tactic\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SavedState</span>.<span class=\"name\">tactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState\">SavedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState.tactic","kind":"def","line":31,"name":"Lean.Elab.Tactic.Grind.SavedState.tactic","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState.term\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SavedState</span>.<span class=\"name\">term</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState\">SavedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.SavedState\">Term.SavedState</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState.term","kind":"def","line":30,"name":"Lean.Elab.Tactic.Grind.SavedState.term","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L30-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SavedState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">term</span> : <a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.SavedState\">Term.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tactic</span> : <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState\">SavedState</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState.mk","kind":"ctor","line":29,"name":"Lean.Elab.Tactic.Grind.SavedState.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SavedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.SavedState","kind":"structure","line":29,"name":"Lean.Elab.Tactic.Grind.SavedState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L29-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State.goals\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">State</span>.<span class=\"name\">goals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Meta.Grind.Goal</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State.goals","kind":"def","line":27,"name":"Lean.Elab.Tactic.Grind.State.goals","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State.state\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">State</span>.<span class=\"name\">state</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.State\">Meta.Grind.State</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State.state","kind":"def","line":26,"name":"Lean.Elab.Tactic.Grind.State.state","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">state</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.State\">Meta.Grind.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Meta.Grind.Goal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State.mk","kind":"ctor","line":25,"name":"Lean.Elab.Tactic.Grind.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.State","kind":"structure","line":25,"name":"Lean.Elab.Tactic.Grind.State","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L25-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context.params\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Context</span>.<span class=\"name\">params</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Main.html#Lean.Meta.Grind.Params\">Meta.Grind.Params</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context.params","kind":"def","line":21,"name":"Lean.Elab.Tactic.Grind.Context.params","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context.methods\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Context</span>.<span class=\"name\">methods</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Methods\">Meta.Grind.Methods</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context.methods","kind":"def","line":20,"name":"Lean.Elab.Tactic.Grind.Context.methods","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context.ctx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Context</span>.<span class=\"name\">ctx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Context\">Meta.Grind.Context</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context.ctx","kind":"def","line":19,"name":"Lean.Elab.Tactic.Grind.Context.ctx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toContext</span> : <a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Context\">Tactic.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Context\">Meta.Grind.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">methods</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Methods\">Meta.Grind.Methods</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <a href=\"./Lean/Meta/Tactic/Grind/Main.html#Lean.Meta.Grind.Params\">Meta.Grind.Params</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context\">Context</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context.mk","kind":"ctor","line":18,"name":"Lean.Elab.Tactic.Grind.Context.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context.toContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Context</span>.<span class=\"name\">toContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Context\">Tactic.Context</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context.toContext","kind":"def","line":18,"name":"Lean.Elab.Tactic.Grind.Context.toContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L18-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Context\">Lean.Elab.Tactic.Context</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Grind/Basic.html#Lean.Elab.Tactic.Grind.Context","kind":"structure","line":18,"name":"Lean.Elab.Tactic.Grind.Context","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Grind/Basic.lean#L18-L21"}}],"imports":["Lean.Elab.Tactic.Basic","Lean.Meta.Tactic.Grind.Main","Lean.Meta.Tactic.Grind.SearchM","Lean.CoreM","Lean.Meta.Tactic.Grind.Intro","Lean.Meta.Tactic.Grind.PP"],"instances":[{"className":"Monad","name":"Lean.Elab.Tactic.Grind.instMonadGrindTacticM","typeNames":["Lean.Elab.Tactic.Grind.GrindTacticM"]},{"className":"Inhabited","name":"Lean.Elab.Tactic.Grind.instInhabitedGrindTacticM","typeNames":["Lean.Elab.Tactic.Grind.GrindTacticM"]},{"className":"Lean.MonadBacktrack","name":"Lean.Elab.Tactic.Grind.instMonadBacktrackSavedStateGrindTacticM","typeNames":["Lean.Elab.Tactic.Grind.SavedState","Lean.Elab.Tactic.Grind.GrindTacticM"]},{"className":"MonadExcept","name":"Lean.Elab.Tactic.Grind.instMonadExceptExceptionGrindTacticM","typeNames":["Lean.Exception","Lean.Elab.Tactic.Grind.GrindTacticM"]},{"className":"OrElse","name":"Lean.Elab.Tactic.Grind.instOrElseGrindTacticM","typeNames":["Lean.Elab.Tactic.Grind.GrindTacticM"]},{"className":"Alternative","name":"Lean.Elab.Tactic.Grind.instAlternativeGrindTacticM","typeNames":["Lean.Elab.Tactic.Grind.GrindTacticM"]}],"name":"Lean.Elab.Tactic.Grind.Basic"}