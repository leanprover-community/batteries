{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.instMonadSetTermIdNonCommRingM\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">instMonadSetTermIdNonCommRingM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/RingM.html#Lean.Meta.Grind.Arith.CommRing.MonadSetTermId\">MonadSetTermId</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM\">NonCommRingM</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.instMonadSetTermIdNonCommRingM","kind":"instance","line":52,"name":"Lean.Meta.Grind.Arith.CommRing.instMonadSetTermIdNonCommRingM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.lean#L52-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.setTermNonCommRingId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">setTermNonCommRingId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM\">NonCommRingM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.setTermNonCommRingId","kind":"def","line":44,"name":"Lean.Meta.Grind.Arith.CommRing.setTermNonCommRingId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.lean#L44-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.getTermNonCommRingId?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">getTermNonCommRingId?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.getTermNonCommRingId?","kind":"def","line":41,"name":"Lean.Meta.Grind.Arith.CommRing.getTermNonCommRingId?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.lean#L41-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.instMonadRingNonCommRingM\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">instMonadRingNonCommRingM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/MonadRing.html#Lean.Meta.Grind.Arith.CommRing.MonadRing\">MonadRing</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM\">NonCommRingM</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.instMonadRingNonCommRingM","kind":"instance","line":37,"name":"Lean.Meta.Grind.Arith.CommRing.instMonadRingNonCommRingM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.lean#L37-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM.modifyRing\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">NonCommRingM</span>.<span class=\"name\">modifyRing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.Ring\">Ring</a> → <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.Ring\">Ring</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM\">NonCommRingM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM.modifyRing","kind":"def","line":33,"name":"Lean.Meta.Grind.Arith.CommRing.NonCommRingM.modifyRing","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.lean#L33-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM.getRing\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">NonCommRingM</span>.<span class=\"name\">getRing</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM\">NonCommRingM</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.Ring\">Ring</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM.getRing","kind":"def","line":25,"name":"Lean.Meta.Grind.Arith.CommRing.NonCommRingM.getRing","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.lean#L25-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.instMonadCanonNonCommRingM\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">instMonadCanonNonCommRingM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/MonadCanon.html#Lean.Meta.Grind.Arith.CommRing.MonadCanon\">MonadCanon</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM\">NonCommRingM</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.instMonadCanonNonCommRingM","kind":"instance","line":21,"name":"Lean.Meta.Grind.Arith.CommRing.instMonadCanonNonCommRingM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.lean#L21-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">NonCommRingM</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ringId</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM\">NonCommRingM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM.run","kind":"def","line":18,"name":"Lean.Meta.Grind.Arith.CommRing.NonCommRingM.run","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.lean#L18-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">NonCommRingM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"We don't want to keep carrying the `RingId` around. ","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM","kind":"def","line":15,"name":"Lean.Meta.Grind.Arith.CommRing.NonCommRingM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.lean#L15-L16"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM.Context.ringId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">NonCommRingM</span>.<span class=\"name\">Context</span>.<span class=\"name\">ringId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM.Context.ringId","kind":"def","line":13,"name":"Lean.Meta.Grind.Arith.CommRing.NonCommRingM.Context.ringId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.lean#L13-L13"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">NonCommRingM</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ringId</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM.Context\">Context</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM.Context.mk","kind":"ctor","line":12,"name":"Lean.Meta.Grind.Arith.CommRing.NonCommRingM.Context.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.lean#L12-L12"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">NonCommRingM</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.html#Lean.Meta.Grind.Arith.CommRing.NonCommRingM.Context","kind":"structure","line":12,"name":"Lean.Meta.Grind.Arith.CommRing.NonCommRingM.Context","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/CommRing/NonCommRingM.lean#L12-L13"}}],"imports":["Lean.Meta.Tactic.Grind.Arith.CommRing.RingM"],"instances":[{"className":"Lean.Meta.Grind.Arith.CommRing.MonadCanon","name":"Lean.Meta.Grind.Arith.CommRing.instMonadCanonNonCommRingM","typeNames":["Lean.Meta.Grind.Arith.CommRing.NonCommRingM"]},{"className":"Lean.Meta.Grind.Arith.CommRing.MonadRing","name":"Lean.Meta.Grind.Arith.CommRing.instMonadRingNonCommRingM","typeNames":["Lean.Meta.Grind.Arith.CommRing.NonCommRingM"]},{"className":"Lean.Meta.Grind.Arith.CommRing.MonadSetTermId","name":"Lean.Meta.Grind.Arith.CommRing.instMonadSetTermIdNonCommRingM","typeNames":["Lean.Meta.Grind.Arith.CommRing.NonCommRingM"]}],"name":"Lean.Meta.Tactic.Grind.Arith.CommRing.NonCommRingM"}