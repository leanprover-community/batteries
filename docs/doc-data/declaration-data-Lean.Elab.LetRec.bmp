{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.elabLetRec\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">elabLetRec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElab\">TermElab</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.elabLetRec","kind":"def","line":133,"name":"Lean.Elab.Term.elabLetRec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L133-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecView.body\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecView</span>.<span class=\"name\">body</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecView\">LetRecView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecView.body","kind":"def","line":30,"name":"Lean.Elab.Term.LetRecView.body","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L30-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecView.decls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecView</span>.<span class=\"name\">decls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecView\">LetRecView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView\">LetRecDeclView</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecView.decls","kind":"def","line":29,"name":"Lean.Elab.Term.LetRecView.decls","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView\">LetRecDeclView</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">body</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecView\">LetRecView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecView.mk","kind":"ctor","line":28,"name":"Lean.Elab.Term.LetRecView.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecView","kind":"structure","line":28,"name":"Lean.Elab.Term.LetRecView","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L28-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.termination\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecDeclView</span>.<span class=\"name\">termination</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView\">LetRecDeclView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.termination","kind":"def","line":26,"name":"Lean.Elab.Term.LetRecDeclView.termination","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.valStx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecDeclView</span>.<span class=\"name\">valStx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView\">LetRecDeclView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.valStx","kind":"def","line":25,"name":"Lean.Elab.Term.LetRecDeclView.valStx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.mvar\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecDeclView</span>.<span class=\"name\">mvar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView\">LetRecDeclView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.mvar","kind":"def","line":24,"name":"Lean.Elab.Term.LetRecDeclView.mvar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.type\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecDeclView</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView\">LetRecDeclView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.type","kind":"def","line":23,"name":"Lean.Elab.Term.LetRecDeclView.type","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.binderIds\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecDeclView</span>.<span class=\"name\">binderIds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView\">LetRecDeclView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.binderIds","kind":"def","line":22,"name":"Lean.Elab.Term.LetRecDeclView.binderIds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.parentName?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecDeclView</span>.<span class=\"name\">parentName?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView\">LetRecDeclView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.parentName?","kind":"def","line":21,"name":"Lean.Elab.Term.LetRecDeclView.parentName?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecDeclView</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView\">LetRecDeclView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.declName","kind":"def","line":20,"name":"Lean.Elab.Term.LetRecDeclView.declName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.shortDeclName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecDeclView</span>.<span class=\"name\">shortDeclName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView\">LetRecDeclView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.shortDeclName","kind":"def","line":19,"name":"Lean.Elab.Term.LetRecDeclView.shortDeclName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.attrs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecDeclView</span>.<span class=\"name\">attrs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView\">LetRecDeclView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Attributes.html#Lean.Elab.Attribute\">Attribute</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.attrs","kind":"def","line":18,"name":"Lean.Elab.Term.LetRecDeclView.attrs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecDeclView</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView\">LetRecDeclView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.ref","kind":"def","line":17,"name":"Lean.Elab.Term.LetRecDeclView.ref","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecDeclView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Attributes.html#Lean.Elab.Attribute\">Attribute</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">shortDeclName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parentName?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">binderIds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type </span><span class=\"fn\">mvar</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">valStx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">termination</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView\">LetRecDeclView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView.mk","kind":"ctor","line":16,"name":"Lean.Elab.Term.LetRecDeclView.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L16-L16"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">LetRecDeclView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView","kind":"structure","line":16,"name":"Lean.Elab.Term.LetRecDeclView","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/LetRec.lean#L16-L26"}}],"imports":["Lean.Elab.MutualDef"],"instances":[],"name":"Lean.Elab.LetRec"}