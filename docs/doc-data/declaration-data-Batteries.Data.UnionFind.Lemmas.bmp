{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_union\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.union\">union</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">(↑<span class=\"fn\">y</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">(↑<span class=\"fn\">x</span>)</span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_union","kind":"theorem","line":140,"name":"Batteries.UnionFind.equiv_union","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L140-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_link\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_link</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xroot</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">yroot</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.link\">link</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">yroot</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">(↑<span class=\"fn\">y</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">(↑<span class=\"fn\">x</span>)</span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_link","kind":"theorem","line":119,"name":"Batteries.UnionFind.equiv_link","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L119-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_find\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_find</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find\">find</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_find","kind":"theorem","line":117,"name":"Batteries.UnionFind.equiv_find","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L117-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_rootD_r\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_rootD_r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_rootD_r","kind":"theorem","line":114,"name":"Batteries.UnionFind.equiv_rootD_r","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L114-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_rootD_l\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_rootD_l</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_rootD_l","kind":"theorem","line":112,"name":"Batteries.UnionFind.equiv_rootD_l","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L112-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_rootD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_rootD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_rootD","kind":"theorem","line":111,"name":"Batteries.UnionFind.equiv_rootD","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L111-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_push\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push\">push</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_push","kind":"theorem","line":109,"name":"Batteries.UnionFind.equiv_push","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L109-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_empty\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.empty\">empty</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.equiv_empty","kind":"theorem","line":107,"name":"Batteries.UnionFind.equiv_empty","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L107-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.Equiv.trans\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.Equiv.trans","kind":"theorem","line":105,"name":"Batteries.UnionFind.Equiv.trans","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L105-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.Equiv.symm\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.Equiv.symm","kind":"theorem","line":104,"name":"Batteries.UnionFind.Equiv.symm","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L104-L104"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.Equiv.rfl\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">rfl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\">Equiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.Equiv.rfl","kind":"theorem","line":103,"name":"Batteries.UnionFind.Equiv.rfl","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L103-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.root_link\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">root_link</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xroot</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">yroot</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">r</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a>   (<span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span>) <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.link\">link</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">yroot</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.root_link","kind":"theorem","line":68,"name":"Batteries.UnionFind.root_link","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L68-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.parent_link\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent_link</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">yroot</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.link\">link</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">yroot</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span>\n  <a href=\"./Init/Prelude.html#ite\">else</a>     <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#ite\">then</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.parent_link","kind":"theorem","line":57,"name":"Batteries.UnionFind.parent_link","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L57-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.parentD_linkAux\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_linkAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkAux\">linkAux</a> <span class=\"fn\">self</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span>\n  <a href=\"./Init/Prelude.html#ite\">else</a>     <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><span class=\"fn\">self</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">y</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#ite\">then</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span>\n    <a href=\"./Init/Prelude.html#ite\">else</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.parentD_linkAux","kind":"theorem","line":45,"name":"Batteries.UnionFind.parentD_linkAux","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L45-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.arr_link\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">arr_link</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">yroot</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.link\">link</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">yroot</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkAux\">linkAux</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.arr_link","kind":"theorem","line":43,"name":"Batteries.UnionFind.arr_link","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.root_push\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">root_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push\">push</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.root_push","kind":"theorem","line":40,"name":"Batteries.UnionFind.root_push","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L40-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.rankMax_push\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankMax_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push\">push</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankMax\">rankMax</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankMax\">rankMax</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.rankMax_push","kind":"theorem","line":38,"name":"Batteries.UnionFind.rankMax_push","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.rank_push\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rank_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push\">push</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.rank_push","kind":"theorem","line":36,"name":"Batteries.UnionFind.rank_push","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.rankD_push\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankD_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.push\">push</a></span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">{</a> <span class=\"fn\">parent</span> := <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>, <span class=\"fn\">rank</span> := <span class=\"fn\">0</span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">}</a>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.rankD_push","kind":"theorem","line":31,"name":"Batteries.UnionFind.rankD_push","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L31-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.parent_push\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push\">push</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.parent_push","kind":"theorem","line":29,"name":"Batteries.UnionFind.parent_push","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.parentD_push\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.push\">push</a></span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">{</a> <span class=\"fn\">parent</span> := <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>, <span class=\"fn\">rank</span> := <span class=\"fn\">0</span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">}</a>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.parentD_push","kind":"theorem","line":21,"name":"Batteries.UnionFind.parentD_push","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L21-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.arr_push\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">arr_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push\">push</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span>.<a href=\"./Init/Prelude.html#Array.push\">push</a></span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">{</a> <span class=\"fn\">parent</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>, <span class=\"fn\">rank</span> := <span class=\"fn\">0</span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">}</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.arr_push","kind":"theorem","line":19,"name":"Batteries.UnionFind.arr_push","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.rootD_empty\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootD_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.empty\">empty</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.rootD_empty","kind":"theorem","line":17,"name":"Batteries.UnionFind.rootD_empty","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.rank_empty\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rank_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.empty\">empty</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.rank_empty","kind":"theorem","line":16,"name":"Batteries.UnionFind.rank_empty","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L16-L16"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.parent_empty\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.empty\">empty</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.parent_empty","kind":"theorem","line":15,"name":"Batteries.UnionFind.parent_empty","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L15-L15"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.arr_empty\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">arr_empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.empty\">empty</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a></div></div>","info":{"doc":"","docLink":"./Batteries/Data/UnionFind/Lemmas.html#Batteries.UnionFind.arr_empty","kind":"theorem","line":14,"name":"Batteries.UnionFind.arr_empty","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/UnionFind/Lemmas.lean#L14-L14"}}],"imports":["Init","Batteries.Data.UnionFind.Basic"],"instances":[],"name":"Batteries.Data.UnionFind.Lemmas"}