{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/ApplyControlFlow.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.mkApplyUnaryControlDiscrPath\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">mkApplyUnaryControlDiscrPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">typeParams</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">constName </span><span class=\"fn\">controlFlow</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">controlFlowParams</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Meta.DiscrTree.Key</a></span></div></div>","info":{"doc":"For `f`, `SomeType α β` and `ite` this function creates the path: `f (ite (SomeType _ _) _ _ _ _)`.\nThis path can be used to match on applications of unary functions onto control flow primitives.\n","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/ApplyControlFlow.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.mkApplyUnaryControlDiscrPath","kind":"def","line":63,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.mkApplyUnaryControlDiscrPath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/ApplyControlFlow.lean#L63-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/ApplyControlFlow.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.mkApplyProjControlDiscrPath\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">mkApplyProjControlDiscrPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">struct</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">structParams </span><span class=\"fn\">projIdx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">controlFlow</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">controlFlowParams</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Meta.DiscrTree.Key</a></span></div></div>","info":{"doc":"For `Prod.fst` and `ite` this function creates the path: `Prod.fst (ite (Prod _ _) _ _ _ _)`.\nThis path can be used to match on applications of structure projections onto control flow primitives.\n","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/ApplyControlFlow.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.mkApplyProjControlDiscrPath","kind":"def","line":49,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.mkApplyProjControlDiscrPath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/ApplyControlFlow.lean#L49-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/ApplyControlFlow.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.applyCondSimproc\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">applyCondSimproc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Meta.Simp.Simproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/ApplyControlFlow.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.applyCondSimproc","kind":"def","line":36,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.applyCondSimproc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/ApplyControlFlow.lean#L36-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/ApplyControlFlow.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.applyIteSimproc\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">applyIteSimproc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Meta.Simp.Simproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/ApplyControlFlow.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.applyIteSimproc","kind":"def","line":23,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.applyIteSimproc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/ApplyControlFlow.lean#L23-L34"}}],"imports":["Lean.Meta.Tactic.Simp"],"instances":[],"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.ApplyControlFlow"}