{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipInsideQuot\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">skipInsideQuot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.skipInsideQuot","kind":"def","line":293,"name":"Lake.Toml.skipInsideQuot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L293-L295"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipInsideQuotFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">skipInsideQuotFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.skipInsideQuotFn","kind":"def","line":290,"name":"Lake.Toml.skipInsideQuotFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L290-L291"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.sepBy1Linebreak\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">sepBy1Linebreak</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">allowTrailingLinebreak</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.sepBy1Linebreak","kind":"def","line":285,"name":"Lake.Toml.sepBy1Linebreak","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L285-L288"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByLinebreak\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">sepByLinebreak</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">allowTrailingLinebreak</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByLinebreak","kind":"def","line":280,"name":"Lake.Toml.sepByLinebreak","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L280-L283"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.recNodeWithAntiquot\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">recNodeWithAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.ParserMapFn\">ParserMapFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">anonymous</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.recNodeWithAntiquot","kind":"def","line":274,"name":"Lake.Toml.recNodeWithAntiquot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L274-L278"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.recNode\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">recNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.ParserMapFn\">ParserMapFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.recNode","kind":"def","line":270,"name":"Lake.Toml.recNode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L270-L272"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.ParserMapFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">ParserMapFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`Parser → Parser` hidden by an `abbrev`.\nPrevents the formatter/parenthesizer generator from transforming it.\n","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.ParserMapFn","kind":"def","line":264,"name":"Lake.Toml.ParserMapFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L264-L268"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">dynamicNode</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode.parenthesizer","kind":"def","line":257,"name":"Lake.Toml.dynamicNode.parenthesizer","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L257-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">dynamicNode</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode.formatter","kind":"def","line":253,"name":"Lake.Toml.dynamicNode.formatter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L253-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">dynamicNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode","kind":"def","line":250,"name":"Lake.Toml.dynamicNode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L250-L251"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.trailing\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">trailing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.trailing","kind":"def","line":246,"name":"Lake.Toml.trailing","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L246-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.extendTrailingFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">extendTrailingFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.extendTrailingFn","kind":"def","line":235,"name":"Lake.Toml.extendTrailingFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L235-L244"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">epsilon</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon.parenthesizer","kind":"def","line":224,"name":"Lake.Toml.epsilon.parenthesizer","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L224-L225"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">epsilon</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon.formatter","kind":"def","line":221,"name":"Lake.Toml.epsilon.formatter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L221-L222"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">epsilon</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon","kind":"def","line":218,"name":"Lake.Toml.epsilon","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L218-L219"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.litWithAntiquot\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">litWithAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">anonymous</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.litWithAntiquot","kind":"def","line":214,"name":"Lake.Toml.litWithAntiquot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L214-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.lit.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">lit</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.lit.parenthesizer","kind":"def","line":210,"name":"Lake.Toml.lit.parenthesizer","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L210-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.lit.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">lit</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.lit.formatter","kind":"def","line":206,"name":"Lake.Toml.lit.formatter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L206-L208"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.lit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">lit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.lit","kind":"def","line":203,"name":"Lake.Toml.lit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L203-L204"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.litFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">litFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.litFn","kind":"def","line":197,"name":"Lake.Toml.litFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L197-L201"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.pushLit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">pushLit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">startPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"Push `(Syntax.node kind <new-atom>)` onto the syntax stack. ","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.pushLit","kind":"def","line":186,"name":"Lake.Toml.pushLit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L186-L195"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">strAtom</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom.parenthesizer","kind":"def","line":182,"name":"Lake.Toml.strAtom.parenthesizer","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L182-L184"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">strAtom</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom.formatter","kind":"def","line":178,"name":"Lake.Toml.strAtom.formatter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L178-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">strAtom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span><a href=\"./Init/Prelude.html#List.cons\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>","info":{"doc":"Parse the trimmed string as an atom (but use the full string for formatting). ","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom","kind":"def","line":174,"name":"Lake.Toml.strAtom","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L174-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">chAtom</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom.parenthesizer","kind":"def","line":170,"name":"Lake.Toml.chAtom.parenthesizer","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L170-L172"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">chAtom</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom.formatter","kind":"def","line":166,"name":"Lake.Toml.chAtom.formatter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L166-L168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">chAtom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span><a href=\"./Init/Prelude.html#List.cons\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>","info":{"doc":"Parse a single character as an atom. ","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom","kind":"def","line":162,"name":"Lake.Toml.chAtom","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L162-L164"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.atom.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">atom</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.atom.formatter","kind":"def","line":150,"name":"Lake.Toml.atom.formatter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L150-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.atom\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">atom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.atom","kind":"def","line":146,"name":"Lake.Toml.atom","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L146-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.atomFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">atomFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"Match an arbitrary `ParserFn` and return the consumed String in a `Syntax.atom`. ","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.atomFn","kind":"def","line":139,"name":"Lake.Toml.atomFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L139-L144"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.pushAtom\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">pushAtom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">startPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"Push a new atom onto the syntax stack. ","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.pushAtom","kind":"def","line":128,"name":"Lake.Toml.pushAtom","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L128-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByChar1Fn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">sepByChar1Fn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sep</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByChar1Fn","kind":"opaque","line":112,"name":"Lake.Toml.sepByChar1Fn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L112-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByChar1AuxFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">sepByChar1AuxFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sep</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByChar1AuxFn","kind":"opaque","line":99,"name":"Lake.Toml.sepByChar1AuxFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L99-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.strFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">strFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">str</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">str</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span><a href=\"./Init/Prelude.html#List.cons\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"Consume a matching string atomically. ","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.strFn","kind":"def","line":93,"name":"Lake.Toml.strFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L93-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.strAuxFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">strAuxFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">str</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">strPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.strAuxFn","kind":"opaque","line":86,"name":"Lake.Toml.strAuxFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L86-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.chFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">chFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span><a href=\"./Init/Prelude.html#List.cons\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"Consume a single matching character. ","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.chFn","kind":"def","line":82,"name":"Lake.Toml.chFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L82-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.digitPairFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">digitPairFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">&quot;digit&quot;</span><a href=\"./Init/Prelude.html#List.cons\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"Consume a two digits (i.e., `Char.isDigit`). ","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.digitPairFn","kind":"def","line":78,"name":"Lake.Toml.digitPairFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L78-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.digitFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">digitFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">&quot;digit&quot;</span><a href=\"./Init/Prelude.html#List.cons\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"Consume a single digit (i.e., `Char.isDigit`). ","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.digitFn","kind":"def","line":74,"name":"Lake.Toml.digitFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L74-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.takeWhile1Fn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">takeWhile1Fn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.takeWhile1Fn","kind":"def","line":71,"name":"Lake.Toml.takeWhile1Fn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L71-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.satisfyFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">satisfyFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.satisfyFn","kind":"def","line":60,"name":"Lake.Toml.satisfyFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L60-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.mkUnexpectedCharError\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">mkUnexpectedCharError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pushMissing</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.mkUnexpectedCharError","kind":"def","line":57,"name":"Lake.Toml.mkUnexpectedCharError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L57-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.repeatFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">repeatFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"A sequence of `n` repetitions of a parser function. ","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.repeatFn","kind":"def","line":48,"name":"Lake.Toml.repeatFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L48-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.optFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">optFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"Match an arbitrary parser or do nothing. ","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.optFn","kind":"def","line":41,"name":"Lake.Toml.optFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L41-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.usePosFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">usePosFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"`ParserFn` combinator that runs `f` with the current position. ","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.usePosFn","kind":"def","line":37,"name":"Lake.Toml.usePosFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L37-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.instAndThenParserFn_lake\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">instAndThenParserFn_lake</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#AndThen\">AndThen</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.instAndThenParserFn_lake","kind":"def","line":34,"name":"Lake.Toml.instAndThenParserFn_lake","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L34-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">skipFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn","kind":"def","line":32,"name":"Lake.Toml.skipFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.isHexDigit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">isHexDigit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.isHexDigit","kind":"def","line":29,"name":"Lake.Toml.isHexDigit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L29-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.isOctDigit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">isOctDigit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.isOctDigit","kind":"def","line":26,"name":"Lake.Toml.isOctDigit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L26-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.isBinDigit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">isBinDigit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.isBinDigit","kind":"def","line":23,"name":"Lake.Toml.isBinDigit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/ParserUtil.lean#L23-L24"}}],"imports":["Lean.PrettyPrinter.Formatter","Lean.PrettyPrinter.Parenthesizer","Lean.Parser"],"instances":[],"name":"Lake.Toml.ParserUtil"}