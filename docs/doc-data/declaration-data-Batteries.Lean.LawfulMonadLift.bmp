{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTTermElabMTacticM_batteries\"><span class=\"name\">instLawfulMonadLiftTTermElabMTacticM_batteries</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLiftT\">LawfulMonadLiftT</a> <a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTTermElabMTacticM_batteries","kind":"instance","line":61,"name":"instLawfulMonadLiftTTermElabMTacticM_batteries","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/LawfulMonadLift.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTMetaMTermElabM_batteries\"><span class=\"name\">instLawfulMonadLiftTMetaMTermElabM_batteries</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLiftT\">LawfulMonadLiftT</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTMetaMTermElabM_batteries","kind":"instance","line":60,"name":"instLawfulMonadLiftTMetaMTermElabM_batteries","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/LawfulMonadLift.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTCoreMMetaM_batteries\"><span class=\"name\">instLawfulMonadLiftTCoreMMetaM_batteries</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLiftT\">LawfulMonadLiftT</a> <a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTCoreMMetaM_batteries","kind":"instance","line":59,"name":"instLawfulMonadLiftTCoreMMetaM_batteries","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/LawfulMonadLift.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTEIOExceptionCoreM_batteries\"><span class=\"name\">instLawfulMonadLiftTEIOExceptionCoreM_batteries</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLiftT\">LawfulMonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a>)</span> <a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTEIOExceptionCoreM_batteries","kind":"instance","line":58,"name":"instLawfulMonadLiftTEIOExceptionCoreM_batteries","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/LawfulMonadLift.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTEIOExceptionCommandElabM_batteries\"><span class=\"name\">instLawfulMonadLiftTEIOExceptionCommandElabM_batteries</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLiftT\">LawfulMonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a>)</span> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTEIOExceptionCommandElabM_batteries","kind":"instance","line":57,"name":"instLawfulMonadLiftTEIOExceptionCommandElabM_batteries","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/LawfulMonadLift.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftIOCoreM_batteries\"><span class=\"name\">instLawfulMonadLiftIOCoreM_batteries</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLift\">LawfulMonadLift</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftIOCoreM_batteries","kind":"instance","line":43,"name":"instLawfulMonadLiftIOCoreM_batteries","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/LawfulMonadLift.lean#L43-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftSTEST_batteries\"><span class=\"name\">instLawfulMonadLiftSTEST_batteries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ </span><span class=\"fn\">ε</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLift\">LawfulMonadLift</a> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <span class=\"fn\">σ</span>)</span> <span class=\"fn\">(<a href=\"./Init/System/ST.html#EST\">EST</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftSTEST_batteries","kind":"instance","line":32,"name":"instLawfulMonadLiftSTEST_batteries","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/LawfulMonadLift.lean#L32-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftBaseIOEIO_batteries\"><span class=\"name\">instLawfulMonadLiftBaseIOEIO_batteries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLift\">LawfulMonadLift</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftBaseIOEIO_batteries","kind":"instance","line":21,"name":"instLawfulMonadLiftBaseIOEIO_batteries","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/LawfulMonadLift.lean#L21-L30"}}],"imports":["Init","Lean.Elab.Command","Lean.CoreM","Init.System.IO","Init.Control.StateRef"],"instances":[{"className":"LawfulMonadLift","name":"instLawfulMonadLiftBaseIOEIO_batteries","typeNames":["BaseIO","EIO"]},{"className":"LawfulMonadLift","name":"instLawfulMonadLiftSTEST_batteries","typeNames":["ST","EST"]},{"className":"LawfulMonadLift","name":"instLawfulMonadLiftIOCoreM_batteries","typeNames":["IO","Lean.Core.CoreM"]},{"className":"LawfulMonadLiftT","name":"instLawfulMonadLiftTEIOExceptionCommandElabM_batteries","typeNames":["EIO","Lean.Elab.Command.CommandElabM"]},{"className":"LawfulMonadLiftT","name":"instLawfulMonadLiftTEIOExceptionCoreM_batteries","typeNames":["EIO","Lean.Core.CoreM"]},{"className":"LawfulMonadLiftT","name":"instLawfulMonadLiftTCoreMMetaM_batteries","typeNames":["Lean.Core.CoreM","Lean.Meta.MetaM"]},{"className":"LawfulMonadLiftT","name":"instLawfulMonadLiftTMetaMTermElabM_batteries","typeNames":["Lean.Meta.MetaM","Lean.Elab.Term.TermElabM"]},{"className":"LawfulMonadLiftT","name":"instLawfulMonadLiftTTermElabMTacticM_batteries","typeNames":["Lean.Elab.Term.TermElabM","Lean.Elab.Tactic.TacticM"]}],"name":"Batteries.Lean.LawfulMonadLift"}