{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Const.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastConst.go\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">blastConst</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">curr</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVec\">RefVec</a></span> <span class=\"fn\">curr</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hcurr</span> : <span class=\"fn\">curr</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">w</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVec\">RefVec</a></span> <span class=\"fn\">w</span></span></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Const.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastConst.go","kind":"def","line":30,"name":"Std.Tactic.BVDecide.BVExpr.bitblast.blastConst.go","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Const.lean#L30-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Const.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastConst\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">blastConst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVec\">RefVec</a></span> <span class=\"fn\">w</span></span></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Const.html#Std.Tactic.BVDecide.BVExpr.bitblast.blastConst","kind":"def","line":27,"name":"Std.Tactic.BVDecide.BVExpr.bitblast.blastConst","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Const.lean#L27-L39"}}],"imports":["Std.Tactic.BVDecide.Bitblast.BVExpr.Basic","Std.Sat.AIG.LawfulVecOperator"],"instances":[],"name":"Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Impl.Const"}