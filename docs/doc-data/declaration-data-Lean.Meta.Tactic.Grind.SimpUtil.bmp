{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.normalizeImp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">normalizeImp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">config</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Grind.Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.normalizeImp","kind":"def","line":201,"name":"Lean.Meta.Grind.normalizeImp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SimpUtil.lean#L201-L204"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.getSimpContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">getSimpContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">config</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Grind.Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context\">Simp.Context</a></span></div></div>","info":{"doc":"Returns the simplification context used by `grind`. ","docLink":"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.getSimpContext","kind":"def","line":179,"name":"Lean.Meta.Grind.getSimpContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SimpUtil.lean#L179-L199"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.getSimprocs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">getSimprocs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simprocs\">Simprocs</a>)</span></span></div></div>","info":{"doc":"Returns the array of simprocs used by `grind`. ","docLink":"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.getSimprocs","kind":"def","line":143,"name":"Lean.Meta.Grind.getSimprocs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SimpUtil.lean#L143-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.unfoldReducibleSimproc\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">unfoldReducibleSimproc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.unfoldReducibleSimproc","kind":"def","line":140,"name":"Lean.Meta.Grind.unfoldReducibleSimproc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SimpUtil.lean#L140-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.reduceCtorEqCheap\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">reduceCtorEqCheap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Simp.Simproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.reduceCtorEqCheap","kind":"def","line":132,"name":"Lean.Meta.Grind.reduceCtorEqCheap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SimpUtil.lean#L132-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.simpOr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">simpOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Simp.Simproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.simpOr","kind":"def","line":115,"name":"Lean.Meta.Grind.simpOr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SimpUtil.lean#L115-L130"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.pushNot\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">pushNot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Simp.Simproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.pushNot","kind":"def","line":77,"name":"Lean.Meta.Grind.pushNot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SimpUtil.lean#L77-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.simpDIte\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">simpDIte</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Simp.Simproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.simpDIte","kind":"def","line":67,"name":"Lean.Meta.Grind.simpDIte","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SimpUtil.lean#L67-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.simpEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">simpEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Simp.Simproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.simpEq","kind":"def","line":40,"name":"Lean.Meta.Grind.simpEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SimpUtil.lean#L40-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.registerNormTheorems\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">registerNormTheorems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preDeclNames </span><span class=\"fn\">postDeclNames</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.registerNormTheorems","kind":"def","line":23,"name":"Lean.Meta.Grind.registerNormTheorems","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SimpUtil.lean#L23-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.normExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">normExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpExtension\">SimpExtension</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SimpUtil.html#Lean.Meta.Grind.normExt","kind":"opaque","line":21,"name":"Lean.Meta.Grind.normExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SimpUtil.lean#L21-L21"}}],"imports":["Lean.Meta.Tactic.Simp.Simproc","Lean.Meta.Tactic.Grind.Simp","Lean.Meta.Tactic.Grind.MatchDiscrOnly","Lean.Meta.Tactic.Grind.MatchCond","Lean.Meta.Tactic.Grind.ForallProp","Lean.Meta.Tactic.Grind.Arith.Simproc","Lean.Meta.Tactic.Simp.BuiltinSimprocs.List","Lean.Meta.Tactic.Simp.BuiltinSimprocs.Core","Lean.Meta.Tactic.Grind.Util","Init.Grind.Norm"],"instances":[],"name":"Lean.Meta.Tactic.Grind.SimpUtil"}