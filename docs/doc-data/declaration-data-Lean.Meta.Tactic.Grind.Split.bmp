{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.split?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">split?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.SplitInfo\">SplitInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">SearchM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>))</span></span></div></div>","info":{"doc":"Tries to perform a case-split using `c`. Returns `none` if `c` has already been resolved or\nis not ready.\n","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.split?","kind":"def","line":501,"name":"Lean.Meta.Grind.split?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L501-L508"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.splitNext\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">splitNext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Selects a case-split from the list of candidates, and adds new choice point\n(aka backtracking point). Returns true if successful.\n","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.splitNext","kind":"def","line":488,"name":"Lean.Meta.Grind.splitNext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L488-L499"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.Action.splitNext\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Action</span>.<span class=\"name\">splitNext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stopAtFirstFailure </span><span class=\"fn\">compress</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Action\">Action</a></div></div>","info":{"doc":"Selects a case-split from the list of candidates, performs the split and applies\ncontinuation to all subgoals.\nIf a subgoal is solved without using new hypotheses, closes the original goal using this proof. That is,\nit performs non-chronological backtracking.\n\nIf `stopsAtFirstFailure = true`, it stops the search as soon as the given continuation cannot solve a subgoal.\n\nIf `compress = true`, then it uses `<;>` to generate the resulting tactic sequence if all subgoal sequences are\nidentical. For example, suppose that the following sequence is generated with `compress = false`\n```\ncases #50fc\nnext => lia\nnext => lia\n```\nThen with `compress = true` it generates `cases #50fc <;> lia`\n","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.Action.splitNext","kind":"def","line":424,"name":"Lean.Meta.Grind.Action.splitNext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L424-L448"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.Action.splitCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Action</span>.<span class=\"name\">splitCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.SplitInfo\">SplitInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numCases</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isRec </span><span class=\"fn\">stopAtFirstFailure </span><span class=\"fn\">compress</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Action\">Action</a></div></div>","info":{"doc":"Performs a case-split using `c`.\nRemark: `numCases` and `isRec` are computed using `checkSplitStatus`.\n","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.Action.splitCore","kind":"def","line":361,"name":"Lean.Meta.Grind.Action.splitCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L361-L422"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.getSplitCandidateAnchors\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">getSplitCandidateAnchors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filter</span> : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateAnchors\">SplitCandidateAnchors</a></span></div></div>","info":{"doc":"Returns case-split candidates. Case-splits that are tagged as `.resolved` or `.notReady` are skipped.\nApplies additional `filter` if provided.\n","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.getSplitCandidateAnchors","kind":"def","line":261,"name":"Lean.Meta.Grind.getSplitCandidateAnchors","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L261-L283"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateAnchors.numDigits\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SplitCandidateAnchors</span>.<span class=\"name\">numDigits</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateAnchors\">SplitCandidateAnchors</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Number of digits (≥ 4) sufficient for distinguishing anchors. We usually display only the first `numDigits`. ","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateAnchors.numDigits","kind":"def","line":259,"name":"Lean.Meta.Grind.SplitCandidateAnchors.numDigits","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L259-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateAnchors.candidates\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SplitCandidateAnchors</span>.<span class=\"name\">candidates</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateAnchors\">SplitCandidateAnchors</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor\">SplitCandidateWithAnchor</a></span></div></div>","info":{"doc":"Pairs `(anchor, split)` ","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateAnchors.candidates","kind":"def","line":257,"name":"Lean.Meta.Grind.SplitCandidateAnchors.candidates","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L257-L257"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateAnchors.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SplitCandidateAnchors</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">candidates</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor\">SplitCandidateWithAnchor</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numDigits</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateAnchors\">SplitCandidateAnchors</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateAnchors.mk","kind":"ctor","line":255,"name":"Lean.Meta.Grind.SplitCandidateAnchors.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L255-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateAnchors\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SplitCandidateAnchors</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateAnchors","kind":"structure","line":255,"name":"Lean.Meta.Grind.SplitCandidateAnchors","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L255-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.instHasAnchorSplitCandidateWithAnchor\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instHasAnchorSplitCandidateWithAnchor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Anchor.html#Lean.Meta.Grind.HasAnchor\">HasAnchor</a> <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor\">SplitCandidateWithAnchor</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.instHasAnchorSplitCandidateWithAnchor","kind":"instance","line":252,"name":"Lean.Meta.Grind.instHasAnchorSplitCandidateWithAnchor","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L252-L253"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor.anchor\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SplitCandidateWithAnchor</span>.<span class=\"name\">anchor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor\">SplitCandidateWithAnchor</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor.anchor","kind":"def","line":250,"name":"Lean.Meta.Grind.SplitCandidateWithAnchor.anchor","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L250-L250"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor.e\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SplitCandidateWithAnchor</span>.<span class=\"name\">e</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor\">SplitCandidateWithAnchor</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor.e","kind":"def","line":249,"name":"Lean.Meta.Grind.SplitCandidateWithAnchor.e","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L249-L249"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor.isRec\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SplitCandidateWithAnchor</span>.<span class=\"name\">isRec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor\">SplitCandidateWithAnchor</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor.isRec","kind":"def","line":248,"name":"Lean.Meta.Grind.SplitCandidateWithAnchor.isRec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L248-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor.numCases\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SplitCandidateWithAnchor</span>.<span class=\"name\">numCases</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor\">SplitCandidateWithAnchor</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor.numCases","kind":"def","line":247,"name":"Lean.Meta.Grind.SplitCandidateWithAnchor.numCases","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L247-L247"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor.c\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SplitCandidateWithAnchor</span>.<span class=\"name\">c</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor\">SplitCandidateWithAnchor</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.SplitInfo\">SplitInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor.c","kind":"def","line":246,"name":"Lean.Meta.Grind.SplitCandidateWithAnchor.c","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L246-L246"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SplitCandidateWithAnchor</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.SplitInfo\">SplitInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numCases</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isRec</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">anchor</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor\">SplitCandidateWithAnchor</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor.mk","kind":"ctor","line":245,"name":"Lean.Meta.Grind.SplitCandidateWithAnchor.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L245-L245"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SplitCandidateWithAnchor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitCandidateWithAnchor","kind":"structure","line":245,"name":"Lean.Meta.Grind.SplitCandidateWithAnchor","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L245-L250"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.checkSplitStatus\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">checkSplitStatus</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.SplitInfo\">SplitInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus\">SplitStatus</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.checkSplitStatus","kind":"def","line":160,"name":"Lean.Meta.Grind.checkSplitStatus","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L160-L164"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.checkSplitInfoArgStatus\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">checkSplitInfoArgStatus</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">eq</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus\">SplitStatus</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.checkSplitInfoArgStatus","kind":"def","line":122,"name":"Lean.Meta.Grind.checkSplitInfoArgStatus","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L122-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.instReprSplitStatus.repr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instReprSplitStatus</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus\">SplitStatus</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.instReprSplitStatus.repr","kind":"def","line":22,"name":"Lean.Meta.Grind.instReprSplitStatus.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.instReprSplitStatus\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instReprSplitStatus</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus\">SplitStatus</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.instReprSplitStatus","kind":"instance","line":22,"name":"Lean.Meta.Grind.instReprSplitStatus","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.instBEqSplitStatus\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instBEqSplitStatus</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus\">SplitStatus</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.instBEqSplitStatus","kind":"instance","line":22,"name":"Lean.Meta.Grind.instBEqSplitStatus","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.instBEqSplitStatus.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instBEqSplitStatus</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus\">SplitStatus</a> → <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus\">SplitStatus</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.instBEqSplitStatus.beq","kind":"def","line":22,"name":"Lean.Meta.Grind.instBEqSplitStatus.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.instInhabitedSplitStatus\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instInhabitedSplitStatus</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus\">SplitStatus</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.instInhabitedSplitStatus","kind":"instance","line":22,"name":"Lean.Meta.Grind.instInhabitedSplitStatus","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.instInhabitedSplitStatus.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instInhabitedSplitStatus</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus\">SplitStatus</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.instInhabitedSplitStatus.default","kind":"def","line":22,"name":"Lean.Meta.Grind.instInhabitedSplitStatus.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus.ready\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SplitStatus</span>.<span class=\"name\">ready</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numCases</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isRec </span><span class=\"fn\">tryPostpone</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus\">SplitStatus</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus.ready","kind":"ctor","line":21,"name":"Lean.Meta.Grind.SplitStatus.ready","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus.notReady\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SplitStatus</span>.<span class=\"name\">notReady</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus\">SplitStatus</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus.notReady","kind":"ctor","line":20,"name":"Lean.Meta.Grind.SplitStatus.notReady","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus.resolved\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SplitStatus</span>.<span class=\"name\">resolved</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus\">SplitStatus</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus.resolved","kind":"ctor","line":19,"name":"Lean.Meta.Grind.SplitStatus.resolved","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SplitStatus</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Split.html#Lean.Meta.Grind.SplitStatus","kind":"inductive","line":18,"name":"Lean.Meta.Grind.SplitStatus","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Split.lean#L18-L22"}}],"imports":["Lean.Meta.Tactic.Grind.SearchM","Lean.Meta.Tactic.Grind.Action","Lean.Meta.Tactic.Grind.Anchor","Lean.Meta.Tactic.Grind.Intro","Lean.Meta.Tactic.Grind.Util","Lean.Meta.Tactic.Grind.CasesMatch","Lean.Meta.Tactic.Grind.Internalize"],"instances":[{"className":"Inhabited","name":"Lean.Meta.Grind.instInhabitedSplitStatus","typeNames":["Lean.Meta.Grind.SplitStatus"]},{"className":"BEq","name":"Lean.Meta.Grind.instBEqSplitStatus","typeNames":["Lean.Meta.Grind.SplitStatus"]},{"className":"Repr","name":"Lean.Meta.Grind.instReprSplitStatus","typeNames":["Lean.Meta.Grind.SplitStatus"]},{"className":"Lean.Meta.Grind.HasAnchor","name":"Lean.Meta.Grind.instHasAnchorSplitCandidateWithAnchor","typeNames":["Lean.Meta.Grind.SplitCandidateWithAnchor"]}],"name":"Lean.Meta.Tactic.Grind.Split"}