{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.Job.collectArray\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">collectArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jobs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceCaption</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&lt;collection&gt;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Merge an `Array` of jobs into one, collecting their outputs into an `Array`. ","docLink":"./Lake/Build/Job/Monad.html#Lake.Job.collectArray","kind":"def","line":266,"name":"Lake.Job.collectArray","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L266-L268"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.Job.collectList\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">collectList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jobs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceCaption</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&lt;collection&gt;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Merge a `List` of jobs into one, collecting their outputs into a `List`. ","docLink":"./Lake/Build/Job/Monad.html#Lake.Job.collectList","kind":"def","line":262,"name":"Lake.Job.collectList","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L262-L264"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.Job.mixArray\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">mixArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jobs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceCaption</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&lt;collection&gt;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Merge an `Array` of jobs into one, discarding their outputs. ","docLink":"./Lake/Build/Job/Monad.html#Lake.Job.mixArray","kind":"def","line":258,"name":"Lake.Job.mixArray","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L258-L260"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.Job.mixList\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">mixList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jobs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceCaption</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&lt;collection&gt;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Merge a `List` of jobs into one, discarding their outputs. ","docLink":"./Lake/Build/Job/Monad.html#Lake.Job.mixList","kind":"def","line":254,"name":"Lake.Job.mixList","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L254-L256"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.Job.mix\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">mix</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">other</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Merges this job with another, discarding both outputs. ","docLink":"./Lake/Build/Job/Monad.html#Lake.Job.mix","kind":"def","line":250,"name":"Lake.Job.mix","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L250-L252"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.Job.add\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">other</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Merges this job with another, discarding its output and trace. ","docLink":"./Lake/Build/Job/Monad.html#Lake.Job.add","kind":"def","line":243,"name":"Lake.Job.add","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L243-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.Job.zipWith\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">zipWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Data.html#Lake.OptDataKind\">OptDataKind</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">other</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> := <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sync</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">γ</span></span></div></div>","info":{"doc":"`a.zipWith f b` produces a new job `c` that applies `f` to the\nresults of `a` and `b`. The job `c` errors if either `a` or `b` error.\n","docLink":"./Lake/Build/Job/Monad.html#Lake.Job.zipWith","kind":"def","line":231,"name":"Lake.Job.zipWith","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L231-L241"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.Job.zipResultWith\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">zipResultWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Data.html#Lake.OptDataKind\">OptDataKind</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.JobResult\">JobResult</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.JobResult\">JobResult</a> <span class=\"fn\">β</span></span> → <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.JobResult\">JobResult</a> <span class=\"fn\">γ</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">other</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> := <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sync</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">γ</span></span></div></div>","info":{"doc":"`a.zipWith f b` produces a new job `c` that applies `f` to the\nresults of `a` and `b`. The job `c` errors if either `a` or `b` error.\n","docLink":"./Lake/Build/Job/Monad.html#Lake.Job.zipResultWith","kind":"def","line":219,"name":"Lake.Job.zipResultWith","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L219-L229"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.Job.bindM\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">bindM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">kind</span> : <span class=\"fn\"><a href=\"./Lake/Build/Data.html#Lake.OptDataKind\">OptDataKind</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">β</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> := <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sync</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"Apply `f` asynchronously to the job's output\nand asynchronously await the resulting job.\n","docLink":"./Lake/Build/Job/Monad.html#Lake.Job.bindM","kind":"def","line":199,"name":"Lake.Job.bindM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L199-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.Job.mapM\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">mapM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">kind</span> : <span class=\"fn\"><a href=\"./Lake/Build/Data.html#Lake.OptDataKind\">OptDataKind</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> := <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sync</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"Apply `f` asynchronously to the job's output. ","docLink":"./Lake/Build/Job/Monad.html#Lake.Job.mapM","kind":"def","line":187,"name":"Lake.Job.mapM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L187-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.Job.await\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">await</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Log.html#Lake.LogIO\">LogIO</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Wait for a job to complete and return the produced value.\nLogs the job's log and throws if there was an error.\n","docLink":"./Lake/Build/Job/Monad.html#Lake.Job.await","kind":"def","line":178,"name":"Lake.Job.await","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L178-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.Job.wait?\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">wait?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Wait for a job to complete and return the produced value.\nIf an error occurred, return `none` and discarded any logs produced.\n","docLink":"./Lake/Build/Job/Monad.html#Lake.Job.wait?","kind":"def","line":171,"name":"Lake.Job.wait?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L171-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.Job.wait\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">wait</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.JobResult\">JobResult</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Wait for a job to complete and return the result. ","docLink":"./Lake/Build/Job/Monad.html#Lake.Job.wait","kind":"def","line":167,"name":"Lake.Job.wait","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L167-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.Job.async\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">async</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Data.html#Lake.OptDataKind\">OptDataKind</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">act</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> := <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Spawn a job that asynchronously performs `act`. ","docLink":"./Lake/Build/Job/Monad.html#Lake.Job.async","kind":"def","line":161,"name":"Lake.Job.async","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L161-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.Job.bindTask\"><span class=\"name\">Lake</span>.<span class=\"name\">Job</span>.<span class=\"name\">bindTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Data.html#Lake.OptDataKind\">OptDataKind</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.JobTask\">JobTask</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.JobTask\">JobTask</a> <span class=\"fn\">β</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Job/Monad.html#Lake.Job.bindTask","kind":"def","line":156,"name":"Lake.Job.bindTask","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L156-L159"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.instMonadLiftFetchMJobM\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadLiftFetchMJobM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a> <a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Job/Monad.html#Lake.instMonadLiftFetchMJobM","kind":"instance","line":149,"name":"Lake.instMonadLiftFetchMJobM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L149-L149"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.JobM.runFetchM\"><span class=\"name\">Lake</span>.<span class=\"name\">JobM</span>.<span class=\"name\">runFetchM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Run a `FetchM` action in `JobM`. ","docLink":"./Lake/Build/Job/Monad.html#Lake.JobM.runFetchM","kind":"def","line":143,"name":"Lake.JobM.runFetchM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L143-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.instMonadLiftJobMFetchM\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadLiftJobMFetchM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Job/Monad.html#Lake.instMonadLiftJobMFetchM","kind":"instance","line":135,"name":"Lake.instMonadLiftJobMFetchM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L135-L135"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.FetchM.runJobM\"><span class=\"name\">Lake</span>.<span class=\"name\">FetchM</span>.<span class=\"name\">runJobM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Run a `JobM` action in `FetchM`.\n\nGenerally, this should not be done, and instead a job action\nshould be run asynchronously in a Job (e.g., via `Job.async`).\n","docLink":"./Lake/Build/Job/Monad.html#Lake.FetchM.runJobM","kind":"def","line":123,"name":"Lake.FetchM.runJobM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L123-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.instMonadLiftSpawnMJobM\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadLiftSpawnMJobM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Job/Monad.html#Lake.instMonadLiftSpawnMJobM","kind":"instance","line":118,"name":"Lake.instMonadLiftSpawnMJobM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L118-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.JobM.runSpawnM\"><span class=\"name\">Lake</span>.<span class=\"name\">JobM</span>.<span class=\"name\">runSpawnM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Job/Monad.html#Lake.JobM.runSpawnM","kind":"def","line":115,"name":"Lake.JobM.runSpawnM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L115-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM.toFn\"><span class=\"name\">Lake</span>.<span class=\"name\">SpawnM</span>.<span class=\"name\">toFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.IndexBuildFn\">IndexBuildFn</a> <a href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\">RecBuildM</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Config/Package.html#Lake.Package\">Package</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Util/Cycle.html#Lake.CallStack\">CallStack</a> <a href=\"./Lake/Build/Key.html#Lake.BuildKey\">BuildKey</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">BuildStore</a></span> → <span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildContext\">BuildContext</a> → <span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></span></span></span></span></span></span></div></div>","info":{"doc":"Convert a `SpawnM` monad to its full functional representation. ","docLink":"./Lake/Build/Job/Monad.html#Lake.SpawnM.toFn","kind":"def","line":109,"name":"Lake.SpawnM.toFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L109-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM.ofFn\"><span class=\"name\">Lake</span>.<span class=\"name\">SpawnM</span>.<span class=\"name\">ofFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> :\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.IndexBuildFn\">IndexBuildFn</a> <a href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\">RecBuildM</a></span> →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Config/Package.html#Lake.Package\">Package</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Util/Cycle.html#Lake.CallStack\">CallStack</a> <a href=\"./Lake/Build/Key.html#Lake.BuildKey\">BuildKey</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">BuildStore</a></span> → <span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildContext\">BuildContext</a> → <span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Construct a `SpawnM` monad from its full functional representation. ","docLink":"./Lake/Build/Job/Monad.html#Lake.SpawnM.ofFn","kind":"def","line":102,"name":"Lake.SpawnM.ofFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L102-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\"><span class=\"name\">Lake</span>.<span class=\"name\">SpawnM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The monad used to spawn asynchronous Lake build jobs. Lifts into `FetchM`. ","docLink":"./Lake/Build/Job/Monad.html#Lake.SpawnM","kind":"def","line":99,"name":"Lake.SpawnM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L99-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.addSubTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">addSubTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Runs `x` with a new trace and then mixes it into the original trace. ","docLink":"./Lake/Build/Job/Monad.html#Lake.addSubTrace","kind":"def","line":92,"name":"Lake.addSubTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L92-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.addTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">addTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>","info":{"doc":"Mix a trace into the current job's build trace. ","docLink":"./Lake/Build/Job/Monad.html#Lake.addTrace","kind":"def","line":88,"name":"Lake.addTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L88-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.swapTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">swapTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>","info":{"doc":"Sets the current job's trace and returns the previous one. ","docLink":"./Lake/Build/Job/Monad.html#Lake.swapTrace","kind":"def","line":84,"name":"Lake.swapTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L84-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.takeTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">takeTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>","info":{"doc":"Returns the current job's build trace and removes it from the state. ","docLink":"./Lake/Build/Job/Monad.html#Lake.takeTrace","kind":"def","line":80,"name":"Lake.takeTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L80-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.setTraceCaption\"><span class=\"name\">Lake</span>.<span class=\"name\">setTraceCaption</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>","info":{"doc":"Set the caption of the job's build trace. ","docLink":"./Lake/Build/Job/Monad.html#Lake.setTraceCaption","kind":"def","line":76,"name":"Lake.setTraceCaption","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L76-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.modifyTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">modifyTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a> → <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>","info":{"doc":"Mutates the job's trace, applying `f` to it.","docLink":"./Lake/Build/Job/Monad.html#Lake.modifyTrace","kind":"def","line":72,"name":"Lake.modifyTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L72-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.newTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">newTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&lt;nil&gt;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>","info":{"doc":"Replace the job's build trace with a new empty trace. ","docLink":"./Lake/Build/Job/Monad.html#Lake.newTrace","kind":"def","line":68,"name":"Lake.newTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L68-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.setTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">setTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>","info":{"doc":"Sets the current job's build trace. ","docLink":"./Lake/Build/Job/Monad.html#Lake.setTrace","kind":"def","line":64,"name":"Lake.setTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L64-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.getTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">getTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>","info":{"doc":"Returns the current job's build trace. ","docLink":"./Lake/Build/Job/Monad.html#Lake.getTrace","kind":"def","line":60,"name":"Lake.getTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L60-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.updateAction\"><span class=\"name\">Lake</span>.<span class=\"name\">updateAction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">action</span> : <a href=\"./Lake/Build/Job/Basic.html#Lake.JobAction\">JobAction</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>","info":{"doc":"Record that this job is trying to perform some action. ","docLink":"./Lake/Build/Job/Monad.html#Lake.updateAction","kind":"def","line":56,"name":"Lake.updateAction","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L56-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.instMonadLiftLogIOJobM\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadLiftLogIOJobM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Lake/Util/Log.html#Lake.LogIO\">LogIO</a> <a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Job/Monad.html#Lake.instMonadLiftLogIOJobM","kind":"instance","line":54,"name":"Lake.instMonadLiftLogIOJobM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.instAlternativeJobM\"><span class=\"name\">Lake</span>.<span class=\"name\">instAlternativeJobM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Basic.html#Alternative\">Alternative</a> <a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Job/Monad.html#Lake.instAlternativeJobM","kind":"instance","line":53,"name":"Lake.instAlternativeJobM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.instMonadErrorJobM\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadErrorJobM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Error.html#Lake.MonadError\">MonadError</a> <a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Job/Monad.html#Lake.instMonadErrorJobM","kind":"instance","line":52,"name":"Lake.instMonadErrorJobM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.instMonadLogJobM\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadLogJobM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Log.html#Lake.MonadLog\">MonadLog</a> <a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Job/Monad.html#Lake.instMonadLogJobM","kind":"instance","line":51,"name":"Lake.instMonadLogJobM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.instMonadStateOfLogJobM\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadStateOfLogJobM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadStateOf\">MonadStateOf</a> <a href=\"./Lake/Util/Log.html#Lake.Log\">Log</a> <a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Job/Monad.html#Lake.instMonadStateOfLogJobM","kind":"instance","line":46,"name":"Lake.instMonadStateOfLogJobM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L46-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.instMonadStateOfJobStateJobM\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadStateOfJobStateJobM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadStateOf\">MonadStateOf</a> <a href=\"./Lake/Build/Job/Basic.html#Lake.JobState\">JobState</a> <a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Job/Monad.html#Lake.instMonadStateOfJobStateJobM","kind":"instance","line":44,"name":"Lake.instMonadStateOfJobStateJobM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L44-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.JobM.toFn\"><span class=\"name\">Lake</span>.<span class=\"name\">JobM</span>.<span class=\"name\">toFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.IndexBuildFn\">IndexBuildFn</a> <a href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\">RecBuildM</a></span> →\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Config/Package.html#Lake.Package\">Package</a></span> →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Util/Cycle.html#Lake.CallStack\">CallStack</a> <a href=\"./Lake/Build/Key.html#Lake.BuildKey\">BuildKey</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">BuildStore</a></span> → <span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildContext\">BuildContext</a> → <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.JobState\">JobState</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lake/Util/EStateT.html#Lake.EResult\">EResult</a> <a href=\"./Lake/Util/Log.html#Lake.Log.Pos\">Log.Pos</a> <a href=\"./Lake/Build/Job/Basic.html#Lake.JobState\">JobState</a> <span class=\"fn\">α</span>)</span></span></span></span></span></span></span></span></div></div>","info":{"doc":"Convert a `JobM` monad to its full functional representation. ","docLink":"./Lake/Build/Job/Monad.html#Lake.JobM.toFn","kind":"def","line":38,"name":"Lake.JobM.toFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L38-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.JobM.ofFn\"><span class=\"name\">Lake</span>.<span class=\"name\">JobM</span>.<span class=\"name\">ofFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> :\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.IndexBuildFn\">IndexBuildFn</a> <a href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\">RecBuildM</a></span> →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Config/Package.html#Lake.Package\">Package</a></span> →\n      <span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Util/Cycle.html#Lake.CallStack\">CallStack</a> <a href=\"./Lake/Build/Key.html#Lake.BuildKey\">BuildKey</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">BuildStore</a></span> → <span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildContext\">BuildContext</a> → <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.JobState\">JobState</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lake/Util/EStateT.html#Lake.EResult\">EResult</a> <a href=\"./Lake/Util/Log.html#Lake.Log.Pos\">Log.Pos</a> <a href=\"./Lake/Build/Job/Basic.html#Lake.JobState\">JobState</a> <span class=\"fn\">α</span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Construct a `FetchM` monad from its full functional representation. ","docLink":"./Lake/Build/Job/Monad.html#Lake.JobM.ofFn","kind":"def","line":31,"name":"Lake.JobM.ofFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L31-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Job/Monad.html#Lake.JobM\"><span class=\"name\">Lake</span>.<span class=\"name\">JobM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The monad of asynchronous Lake jobs.\n\nWhile this can be lifted into `FetchM`, job action should generally\nbe wrapped into an asynchronous job (e.g., via `Job.async`) instead of being\nrun directly in `FetchM`.\n","docLink":"./Lake/Build/Job/Monad.html#Lake.JobM","kind":"def","line":22,"name":"Lake.JobM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Job/Monad.lean#L22-L29"}}],"imports":["Lake.Build.Fetch"],"instances":[{"className":"MonadStateOf","name":"Lake.instMonadStateOfJobStateJobM","typeNames":["Lake.JobState","Lake.JobM"]},{"className":"MonadStateOf","name":"Lake.instMonadStateOfLogJobM","typeNames":["Lake.Log","Lake.JobM"]},{"className":"Lake.MonadLog","name":"Lake.instMonadLogJobM","typeNames":["Lake.JobM"]},{"className":"Lake.MonadError","name":"Lake.instMonadErrorJobM","typeNames":["Lake.JobM"]},{"className":"Alternative","name":"Lake.instAlternativeJobM","typeNames":["Lake.JobM"]},{"className":"MonadLift","name":"Lake.instMonadLiftLogIOJobM","typeNames":["Lake.LogIO","Lake.JobM"]},{"className":"MonadLift","name":"Lake.instMonadLiftSpawnMJobM","typeNames":["Lake.SpawnM","Lake.JobM"]},{"className":"MonadLift","name":"Lake.instMonadLiftJobMFetchM","typeNames":["Lake.JobM","Lake.FetchM"]},{"className":"MonadLift","name":"Lake.instMonadLiftFetchMJobM","typeNames":["Lake.FetchM","Lake.JobM"]}],"name":"Lake.Build.Job.Monad"}