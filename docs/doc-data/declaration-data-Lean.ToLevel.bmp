{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToLevel.html#Lean.ToLevel.imax\"><span class=\"name\">Lean</span>.<span class=\"name\">ToLevel</span>.<span class=\"name\">imax</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a></div></div>","info":{"doc":"`ToLevel` for `imax u v`. This is not an instance since it causes divergence. ","docLink":"./Lean/ToLevel.html#Lean.ToLevel.imax","kind":"def","line":40,"name":"Lean.ToLevel.imax","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToLevel.lean#L40-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToLevel.html#Lean.ToLevel.max\"><span class=\"name\">Lean</span>.<span class=\"name\">ToLevel</span>.<span class=\"name\">max</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a></div></div>","info":{"doc":"`ToLevel` for `max u v`. This is not an instance since it causes divergence. ","docLink":"./Lean/ToLevel.html#Lean.ToLevel.max","kind":"def","line":36,"name":"Lean.ToLevel.max","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToLevel.lean#L36-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToLevel.html#Lean.instToLevel_1\"><span class=\"name\">Lean</span>.<span class=\"name\">instToLevel_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a></div></div>","info":{"doc":"","docLink":"./Lean/ToLevel.html#Lean.instToLevel_1","kind":"instance","line":33,"name":"Lean.instToLevel_1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToLevel.lean#L33-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToLevel.html#Lean.instToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">instToLevel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a></div></div>","info":{"doc":"","docLink":"./Lean/ToLevel.html#Lean.instToLevel","kind":"instance","line":30,"name":"Lean.instToLevel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToLevel.lean#L30-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToLevel.html#Lean.ToLevel.univ\"><span class=\"name\">Lean</span>.<span class=\"name\">ToLevel</span>.<span class=\"name\">univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./foundational_types.html\">Sort</a> u), <a href=\"./Init/Prelude.html#True\">True</a></span></div></div>","info":{"doc":"A hack to avoid the \"unused universe parameter\" error.\nWe can remove this field pending issue https://github.com/leanprover/lean4/issues/2116 ","docLink":"./Lean/ToLevel.html#Lean.ToLevel.univ","kind":"theorem","line":27,"name":"Lean.ToLevel.univ","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToLevel.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToLevel.html#Lean.ToLevel.toLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">ToLevel</span>.<span class=\"name\">toLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Level.html#Lean.Level\">Level</a></div></div>","info":{"doc":"A `Level` that represents the universe level `u`. ","docLink":"./Lean/ToLevel.html#Lean.ToLevel.toLevel","kind":"def","line":24,"name":"Lean.ToLevel.toLevel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToLevel.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToLevel.html#Lean.ToLevel.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ToLevel</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toLevel</span> : <a href=\"./Lean/Level.html#Lean.Level\">Level</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">univ</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./foundational_types.html\">Sort</a> u), <a href=\"./Init/Prelude.html#True\">True</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a></div></div>","info":{"doc":"","docLink":"./Lean/ToLevel.html#Lean.ToLevel.mk","kind":"ctor","line":22,"name":"Lean.ToLevel.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToLevel.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToLevel.html#Lean.ToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">ToLevel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A class to create `Level` expressions that denote particular universe levels in Lean.\n`Lean.ToLevel.toLevel.{u}` evaluates to a `Lean.Level` term representing `u` ","docLink":"./Lean/ToLevel.html#Lean.ToLevel","kind":"class","line":20,"name":"Lean.ToLevel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ToLevel.lean#L20-L27"}}],"imports":["Lean.Expr"],"instances":[{"className":"Lean.ToLevel","name":"Lean.instToLevel","typeNames":[]},{"className":"Lean.ToLevel","name":"Lean.instToLevel_1","typeNames":[]}],"name":"Lean.ToLevel"}