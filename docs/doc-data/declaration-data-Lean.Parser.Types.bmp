{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserFn</span>.<span class=\"name\">run</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ictx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pmctx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tokens</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserFn.run","kind":"def","line":563,"name":"Lean.Parser.ParserFn.run","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L563-L568"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.withCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>","info":{"doc":"Run `p` and record result in parser cache for any further invocation with this `parserName`, parser context, and parser state.\n`p` cannot access syntax stack elements pushed before the invocation in order to make caching independent of parser history.\nAs this excludes trailing parsers from being cached, we also reset `lhsPrec`, which is not read but set by leading parsers, to 0\nin order to increase cache hits. Finally, `errorMsg` is also reset to `none` as a leading parser should not be called in the first\nplace if there was an error.\n","docLink":"./Lean/Parser/Types.html#Lean.Parser.withCache","kind":"def","line":560,"name":"Lean.Parser.withCache","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L560-L561"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.withCacheFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withCacheFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"Run `p` and record result in parser cache for any further invocation with this `parserName`, parser context, and parser state.\n`p` cannot access syntax stack elements pushed before the invocation in order to make caching independent of parser history.\nAs this excludes trailing parsers from being cached, we also reset `lhsPrec`, which is not read but set by leading parsers, to 0\nin order to increase cache hits. Finally, `errorMsg` is also reset to `none` as a leading parser should not be called in the first\nplace if there was an error.\n","docLink":"./Lean/Parser/Types.html#Lean.Parser.withCacheFn","kind":"def","line":541,"name":"Lean.Parser.withCacheFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L541-L558"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.adaptUncacheableContextFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">adaptUncacheableContextFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"Run `p` under the given context transformation with a fresh cache (see also `withResetCacheFn`). ","docLink":"./Lean/Parser/Types.html#Lean.Parser.adaptUncacheableContextFn","kind":"def","line":537,"name":"Lean.Parser.adaptUncacheableContextFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L537-L539"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.withResetCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withResetCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>","info":{"doc":"Run `p` with a fresh cache, restore outer cache afterwards.\n`p` may access the entire syntax stack.\n","docLink":"./Lean/Parser/Types.html#Lean.Parser.withResetCache","kind":"def","line":534,"name":"Lean.Parser.withResetCache","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L534-L535"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.withResetCacheFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withResetCacheFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"Run `p` with a fresh cache, restore outer cache afterwards.\n`p` may access the entire syntax stack.\n","docLink":"./Lean/Parser/Types.html#Lean.Parser.withResetCacheFn","kind":"def","line":525,"name":"Lean.Parser.withResetCacheFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L525-L532"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.adaptCacheableContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">adaptCacheableContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.adaptCacheableContext","kind":"def","line":517,"name":"Lean.Parser.adaptCacheableContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L517-L518"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.adaptCacheableContextFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">adaptCacheableContextFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.adaptCacheableContextFn","kind":"def","line":514,"name":"Lean.Parser.adaptCacheableContextFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L514-L515"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.withFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></div></div>","info":{"doc":"Create a simple parser combinator that inherits the `info` of the nested parser. ","docLink":"./Lean/Parser/Types.html#Lean.Parser.withFn","kind":"def","line":510,"name":"Lean.Parser.withFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L510-L512"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TrailingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TrailingParser</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.TrailingParser","kind":"def","line":508,"name":"Lean.Parser.TrailingParser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L508-L508"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParser.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedParser</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParser.default","kind":"def","line":506,"name":"Lean.Parser.instInhabitedParser.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L506-L506"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedParser</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParser","kind":"instance","line":506,"name":"Lean.Parser.instInhabitedParser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L506-L506"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Parser.fn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Parser</span>.<span class=\"name\">fn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.Parser.fn","kind":"def","line":505,"name":"Lean.Parser.Parser.fn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L505-L505"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Parser.info\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Parser</span>.<span class=\"name\">info</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.Parser.info","kind":"def","line":504,"name":"Lean.Parser.Parser.info","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L504-L504"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Parser.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.Parser.mk","kind":"ctor","line":503,"name":"Lean.Parser.Parser.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L503-L503"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Parser</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.Parser","kind":"structure","line":503,"name":"Lean.Parser.Parser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L503-L506"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParserInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedParserInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParserInfo","kind":"instance","line":501,"name":"Lean.Parser.instInhabitedParserInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L501-L501"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParserInfo.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedParserInfo</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParserInfo.default","kind":"def","line":501,"name":"Lean.Parser.instInhabitedParserInfo.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L501-L501"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.firstTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserInfo</span>.<span class=\"name\">firstTokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.firstTokens","kind":"def","line":500,"name":"Lean.Parser.ParserInfo.firstTokens","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L500-L500"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.collectKinds\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserInfo</span>.<span class=\"name\">collectKinds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.collectKinds","kind":"def","line":499,"name":"Lean.Parser.ParserInfo.collectKinds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L499-L499"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.collectTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserInfo</span>.<span class=\"name\">collectTokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.collectTokens","kind":"def","line":498,"name":"Lean.Parser.ParserInfo.collectTokens","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L498-L498"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">collectTokens</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">collectKinds</span> : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">firstTokens</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.mk","kind":"ctor","line":497,"name":"Lean.Parser.ParserInfo.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L497-L497"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserInfo","kind":"structure","line":497,"name":"Lean.Parser.ParserInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L497-L501"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.instToString\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">instToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.instToString","kind":"instance","line":492,"name":"Lean.Parser.FirstTokens.instToString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L492-L493"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.toStr\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">toStr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.toStr","kind":"def","line":486,"name":"Lean.Parser.FirstTokens.toStr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L486-L490"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.merge\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">merge</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.merge","kind":"def","line":477,"name":"Lean.Parser.FirstTokens.merge","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L477-L484"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.toOptional\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">toOptional</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.toOptional","kind":"def","line":473,"name":"Lean.Parser.FirstTokens.toOptional","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L473-L475"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.seq\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">seq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.seq","kind":"def","line":467,"name":"Lean.Parser.FirstTokens.seq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L467-L471"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedFirstTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedFirstTokens</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedFirstTokens","kind":"instance","line":463,"name":"Lean.Parser.instInhabitedFirstTokens","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L463-L463"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedFirstTokens.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedFirstTokens</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedFirstTokens.default","kind":"def","line":463,"name":"Lean.Parser.instInhabitedFirstTokens.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L463-L463"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.optTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">optTokens</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.optTokens","kind":"ctor","line":462,"name":"Lean.Parser.FirstTokens.optTokens","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L462-L462"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.tokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">tokens</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.tokens","kind":"ctor","line":461,"name":"Lean.Parser.FirstTokens.tokens","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L461-L461"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.unknown\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">unknown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.unknown","kind":"ctor","line":460,"name":"Lean.Parser.FirstTokens.unknown","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L460-L460"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.epsilon\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">epsilon</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.epsilon","kind":"ctor","line":459,"name":"Lean.Parser.FirstTokens.epsilon","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L459-L459"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens","kind":"inductive","line":458,"name":"Lean.Parser.FirstTokens","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L458-L463"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParserFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedParserFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParserFn","kind":"instance","line":455,"name":"Lean.Parser.instInhabitedParserFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L455-L456"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserFn","kind":"def","line":453,"name":"Lean.Parser.ParserFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L453-L453"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.toErrorMsg\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">toErrorMsg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.toErrorMsg","kind":"def","line":443,"name":"Lean.Parser.ParserState.toErrorMsg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L443-L449"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedErrorAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkUnexpectedErrorAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedErrorAt","kind":"def","line":440,"name":"Lean.Parser.ParserState.mkUnexpectedErrorAt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L440-L441"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedTokenError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkUnexpectedTokenError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iniPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"Reports given 'expected' message at range of top stack element (assumed to be a single token).\nReplaces the element with `missing` and resets position to the token position.\n`iniPos` can be specified to avoid this position lookup but still must be identical to the token position. ","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedTokenError","kind":"def","line":433,"name":"Lean.Parser.ParserState.mkUnexpectedTokenError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L433-L438"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedTokenErrors\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkUnexpectedTokenErrors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ex</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iniPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"Reports given 'expected' messages at range of top stack element (assumed to be a single token).\nReplaces the element with `missing` and resets position to the token position.\n`iniPos` can be specified to avoid this position lookup but still must be identical to the token position. ","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedTokenErrors","kind":"def","line":421,"name":"Lean.Parser.ParserState.mkUnexpectedTokenErrors","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L421-L431"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkErrorAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkErrorAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initStackSz?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkErrorAt","kind":"def","line":418,"name":"Lean.Parser.ParserState.mkErrorAt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L418-L419"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkErrorsAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkErrorsAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ex</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initStackSz?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkErrorsAt","kind":"def","line":411,"name":"Lean.Parser.ParserState.mkErrorsAt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L411-L416"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkEOIError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkEOIError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkEOIError","kind":"def","line":408,"name":"Lean.Parser.ParserState.mkEOIError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L408-L409"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkUnexpectedError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pushMissing</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedError","kind":"def","line":404,"name":"Lean.Parser.ParserState.mkUnexpectedError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L404-L406"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkError","kind":"def","line":401,"name":"Lean.Parser.ParserState.mkError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L401-L402"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.setError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">setError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.setError","kind":"def","line":396,"name":"Lean.Parser.ParserState.setError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L396-L399"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.allErrors\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">allErrors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.allErrors","kind":"def","line":393,"name":"Lean.Parser.ParserState.allErrors","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L393-L394"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkTrailingNode\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkTrailingNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iniStackSz</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkTrailingNode","kind":"def","line":385,"name":"Lean.Parser.ParserState.mkTrailingNode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L385-L391"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkNode\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iniStackSz</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkNode","kind":"def","line":366,"name":"Lean.Parser.ParserState.mkNode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L366-L383"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.next'\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">next'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">ParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.atEnd\">atEnd</a></span> <span class=\"fn\">pos</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.next'","kind":"def","line":363,"name":"Lean.Parser.ParserState.next'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L363-L364"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.next\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">next</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">ParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.next","kind":"def","line":360,"name":"Lean.Parser.ParserState.next","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L360-L361"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.shrinkStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">shrinkStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iniStackSz</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.shrinkStack","kind":"def","line":357,"name":"Lean.Parser.ParserState.shrinkStack","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L357-L358"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.popSyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">popSyntax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.popSyntax","kind":"def","line":354,"name":"Lean.Parser.ParserState.popSyntax","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L354-L355"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.pushSyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">pushSyntax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.pushSyntax","kind":"def","line":351,"name":"Lean.Parser.ParserState.pushSyntax","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L351-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.setCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">setCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">ParserCache</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.setCache","kind":"def","line":348,"name":"Lean.Parser.ParserState.setCache","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L348-L349"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.setPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">setPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.setPos","kind":"def","line":345,"name":"Lean.Parser.ParserState.setPos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L345-L346"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.restore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">restore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iniStackSz</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iniPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.restore","kind":"def","line":342,"name":"Lean.Parser.ParserState.restore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L342-L343"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.stackSize\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">stackSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.stackSize","kind":"def","line":339,"name":"Lean.Parser.ParserState.stackSize","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L339-L340"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.hasError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">hasError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.hasError","kind":"def","line":335,"name":"Lean.Parser.ParserState.hasError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L335-L337"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.recoveredErrors\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">recoveredErrors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.recoveredErrors","kind":"def","line":331,"name":"Lean.Parser.ParserState.recoveredErrors","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L331-L331"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.errorMsg\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">errorMsg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.errorMsg","kind":"def","line":330,"name":"Lean.Parser.ParserState.errorMsg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L330-L330"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.cache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">cache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">ParserCache</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.cache","kind":"def","line":329,"name":"Lean.Parser.ParserState.cache","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L329-L329"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.pos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.pos","kind":"def","line":328,"name":"Lean.Parser.ParserState.pos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L328-L328"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.lhsPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">lhsPrec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Set to the precedence of the preceding (not surrounding) parser by `runLongestMatchParser`\nfor the use of `checkLhsPrec` in trailing parsers.\nNote that with chaining, the preceding parser can be another trailing parser:\nin `1 * 2 + 3`, the preceding parser is '*' when '+' is executed. ","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.lhsPrec","kind":"def","line":327,"name":"Lean.Parser.ParserState.lhsPrec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L327-L327"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.stxStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">stxStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.stxStack","kind":"def","line":321,"name":"Lean.Parser.ParserState.stxStack","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L321-L321"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stxStack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhsPrec</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">ParserCache</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">errorMsg</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">recoveredErrors</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mk","kind":"ctor","line":320,"name":"Lean.Parser.ParserState.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L320-L320"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState","kind":"structure","line":320,"name":"Lean.Parser.ParserState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L320-L331"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.instHAppendArraySyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">instHAppendArraySyntax</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAppend\">HAppend</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span> <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.instHAppendArraySyntax","kind":"instance","line":315,"name":"Lean.Parser.SyntaxStack.instHAppendArraySyntax","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L315-L316"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.extract\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">extract</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">start </span><span class=\"fn\">stop</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.extract","kind":"def","line":312,"name":"Lean.Parser.SyntaxStack.extract","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L312-L313"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.get!\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">get!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.get!","kind":"def","line":306,"name":"Lean.Parser.SyntaxStack.get!","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L306-L310"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.back\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">back</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.back","kind":"def","line":300,"name":"Lean.Parser.SyntaxStack.back","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L300-L304"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.pop\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">pop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.pop","kind":"def","line":295,"name":"Lean.Parser.SyntaxStack.pop","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L295-L298"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.push\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">push</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.push","kind":"def","line":292,"name":"Lean.Parser.SyntaxStack.push","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L292-L293"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.shrink\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">shrink</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.shrink","kind":"def","line":289,"name":"Lean.Parser.SyntaxStack.shrink","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L289-L290"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.isEmpty\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.isEmpty","kind":"def","line":286,"name":"Lean.Parser.SyntaxStack.isEmpty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L286-L287"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.size\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.size","kind":"def","line":283,"name":"Lean.Parser.SyntaxStack.size","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L283-L284"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.empty","kind":"def","line":279,"name":"Lean.Parser.SyntaxStack.empty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L279-L281"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.toSubarray\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">toSubarray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Array/Subarray.html#Subarray\">Subarray</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.toSubarray","kind":"def","line":276,"name":"Lean.Parser.SyntaxStack.toSubarray","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L276-L277"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A syntax array with an inaccessible prefix, used for sound caching. ","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack","kind":"structure","line":269,"name":"Lean.Parser.SyntaxStack","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L269-L272"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.initCacheForInput\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">initCacheForInput</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">ParserCache</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.initCacheForInput","kind":"def","line":265,"name":"Lean.Parser.initCacheForInput","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L265-L267"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache.parserCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCache</span>.<span class=\"name\">parserCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">ParserCache</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">ParserCacheEntry</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCache.parserCache","kind":"def","line":263,"name":"Lean.Parser.ParserCache.parserCache","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L263-L263"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache.tokenCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCache</span>.<span class=\"name\">tokenCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">ParserCache</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">TokenCacheEntry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCache.tokenCache","kind":"def","line":262,"name":"Lean.Parser.ParserCache.tokenCache","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L262-L262"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCache</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tokenCache</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">TokenCacheEntry</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserCache</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">ParserCacheEntry</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">ParserCache</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCache.mk","kind":"ctor","line":261,"name":"Lean.Parser.ParserCache.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L261-L261"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCache","kind":"structure","line":261,"name":"Lean.Parser.ParserCache","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L261-L263"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.errorMsg\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span>.<span class=\"name\">errorMsg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">ParserCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.errorMsg","kind":"def","line":259,"name":"Lean.Parser.ParserCacheEntry.errorMsg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L259-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.newPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span>.<span class=\"name\">newPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">ParserCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.newPos","kind":"def","line":258,"name":"Lean.Parser.ParserCacheEntry.newPos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L258-L258"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.lhsPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span>.<span class=\"name\">lhsPrec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">ParserCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.lhsPrec","kind":"def","line":257,"name":"Lean.Parser.ParserCacheEntry.lhsPrec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L257-L257"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">ParserCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.stx","kind":"def","line":256,"name":"Lean.Parser.ParserCacheEntry.stx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L256-L256"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhsPrec</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">errorMsg</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">ParserCacheEntry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.mk","kind":"ctor","line":255,"name":"Lean.Parser.ParserCacheEntry.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L255-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry","kind":"structure","line":255,"name":"Lean.Parser.ParserCacheEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L255-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instHashableParserCacheKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instHashableParserCacheKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instHashableParserCacheKey","kind":"instance","line":251,"name":"Lean.Parser.instHashableParserCacheKey","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L251-L253"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instBEqParserCacheKey.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instBEqParserCacheKey</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instBEqParserCacheKey.beq","kind":"def","line":249,"name":"Lean.Parser.instBEqParserCacheKey.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L249-L249"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instBEqParserCacheKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instBEqParserCacheKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instBEqParserCacheKey","kind":"instance","line":249,"name":"Lean.Parser.instBEqParserCacheKey","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L249-L249"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.pos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheKey</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.pos","kind":"def","line":248,"name":"Lean.Parser.ParserCacheKey.pos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L248-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.parserName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheKey</span>.<span class=\"name\">parserName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.parserName","kind":"def","line":247,"name":"Lean.Parser.ParserCacheKey.parserName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L247-L247"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheKey</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toCacheableParserContext</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.mk","kind":"ctor","line":246,"name":"Lean.Parser.ParserCacheKey.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L246-L246"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.toCacheableParserContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheKey</span>.<span class=\"name\">toCacheableParserContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.toCacheableParserContext","kind":"def","line":246,"name":"Lean.Parser.ParserCacheKey.toCacheableParserContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L246-L249"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheKey</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey","kind":"structure","line":246,"name":"Lean.Parser.ParserCacheKey","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L246-L249"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.token\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenCacheEntry</span>.<span class=\"name\">token</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">TokenCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.token","kind":"def","line":244,"name":"Lean.Parser.TokenCacheEntry.token","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L244-L244"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.stopPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenCacheEntry</span>.<span class=\"name\">stopPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">TokenCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.stopPos","kind":"def","line":243,"name":"Lean.Parser.TokenCacheEntry.stopPos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L243-L243"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.startPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenCacheEntry</span>.<span class=\"name\">startPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">TokenCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.startPos","kind":"def","line":242,"name":"Lean.Parser.TokenCacheEntry.startPos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L242-L242"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenCacheEntry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">startPos </span><span class=\"fn\">stopPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">token</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">TokenCacheEntry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.mk","kind":"ctor","line":241,"name":"Lean.Parser.TokenCacheEntry.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L241-L241"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenCacheEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry","kind":"structure","line":241,"name":"Lean.Parser.TokenCacheEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L241-L244"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.merge\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">merge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e₁ </span><span class=\"fn\">e₂</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.merge","kind":"def","line":233,"name":"Lean.Parser.Error.merge","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L233-L237"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.instToString\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">instToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.instToString","kind":"instance","line":230,"name":"Lean.Parser.Error.instToString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L230-L231"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.toString\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.toString","kind":"def","line":222,"name":"Lean.Parser.Error.toString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L222-L228"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instBEqError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instBEqError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instBEqError","kind":"instance","line":212,"name":"Lean.Parser.instBEqError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L212-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instBEqError.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instBEqError</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instBEqError.beq","kind":"def","line":212,"name":"Lean.Parser.instBEqError.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L212-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedError","kind":"instance","line":212,"name":"Lean.Parser.instInhabitedError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L212-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedError.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedError</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedError.default","kind":"def","line":212,"name":"Lean.Parser.instInhabitedError.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L212-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.expected\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">expected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.expected","kind":"def","line":211,"name":"Lean.Parser.Error.expected","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L211-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.unexpected\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">unexpected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.unexpected","kind":"def","line":210,"name":"Lean.Parser.Error.unexpected","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L210-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.unexpectedTk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">unexpectedTk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"If not `missing`, used for lazily calculating `unexpected` message and range in `mkErrorMessage`.\nOtherwise, `ParserState.pos` is used as an empty range. ","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.unexpectedTk","kind":"def","line":209,"name":"Lean.Parser.Error.unexpectedTk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L209-L209"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unexpectedTk</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unexpected</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.mk","kind":"ctor","line":205,"name":"Lean.Parser.Error.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L205-L205"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error","kind":"structure","line":205,"name":"Lean.Parser.Error","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L205-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext.setEndPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContext</span>.<span class=\"name\">setEndPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">ParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">endPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">endPos_valid</span> : <span class=\"fn\">endPos</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.inputString\">inputString</a></span>.<a href=\"./Init/Prelude.html#String.endPos\">endPos</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">ParserContext</a></div></div>","info":{"doc":"Modifies the ending position of a parser context.\n","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContext.setEndPos","kind":"def","line":197,"name":"Lean.Parser.ParserContext.setEndPos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L197-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instCoeParserContextInputContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instCoeParserContextInputContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">ParserContext</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instCoeParserContextInputContext","kind":"instance","line":195,"name":"Lean.Parser.instCoeParserContextInputContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L195-L195"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext.toParserContextCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContext</span>.<span class=\"name\">toParserContextCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">ParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContext.toParserContextCore","kind":"def","line":193,"name":"Lean.Parser.ParserContext.toParserContextCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L193-L193"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContext</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">Lean.Parser.ParserContextCore</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Opaque parser context updateable using `adaptCacheableContextFn` and `adaptUncacheableContextFn`. ","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContext","kind":"structure","line":192,"name":"Lean.Parser.ParserContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L192-L193"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.tokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span>.<span class=\"name\">tokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.tokens","kind":"def","line":190,"name":"Lean.Parser.ParserContextCore.tokens","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L190-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toInputContext</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toParserModuleContext</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toCacheableParserContext</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tokens</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.mk","kind":"ctor","line":189,"name":"Lean.Parser.ParserContextCore.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L189-L189"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.toParserModuleContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span>.<span class=\"name\">toParserModuleContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.toParserModuleContext","kind":"def","line":189,"name":"Lean.Parser.ParserContextCore.toParserModuleContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L189-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.toInputContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span>.<span class=\"name\">toInputContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.toInputContext","kind":"def","line":189,"name":"Lean.Parser.ParserContextCore.toInputContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L189-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.toCacheableParserContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span>.<span class=\"name\">toCacheableParserContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.toCacheableParserContext","kind":"def","line":189,"name":"Lean.Parser.ParserContextCore.toCacheableParserContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L189-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a>, <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">Lean.Parser.ParserModuleContext</a>, <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Parser context updateable in `adaptUncacheableContextFn`. ","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore","kind":"structure","line":188,"name":"Lean.Parser.ParserContextCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L188-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instBEqCacheableParserContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instBEqCacheableParserContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instBEqCacheableParserContext","kind":"instance","line":186,"name":"Lean.Parser.instBEqCacheableParserContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L186-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instBEqCacheableParserContext.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instBEqCacheableParserContext</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instBEqCacheableParserContext.beq","kind":"def","line":186,"name":"Lean.Parser.instBEqCacheableParserContext.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L186-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.forbiddenTk?\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">forbiddenTk?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.forbiddenTk?","kind":"def","line":185,"name":"Lean.Parser.CacheableParserContext.forbiddenTk?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L185-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.savedPos?\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">savedPos?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.savedPos?","kind":"def","line":184,"name":"Lean.Parser.CacheableParserContext.savedPos?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L184-L184"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.suppressInsideQuot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">suppressInsideQuot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.suppressInsideQuot","kind":"def","line":183,"name":"Lean.Parser.CacheableParserContext.suppressInsideQuot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L183-L183"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.quotDepth\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">quotDepth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.quotDepth","kind":"def","line":182,"name":"Lean.Parser.CacheableParserContext.quotDepth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L182-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.prec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">prec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.prec","kind":"def","line":180,"name":"Lean.Parser.CacheableParserContext.prec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L180-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prec </span><span class=\"fn\">quotDepth</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">suppressInsideQuot</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">savedPos?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">forbiddenTk?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.mk","kind":"ctor","line":179,"name":"Lean.Parser.CacheableParserContext.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L179-L179"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Parser context parts that can be updated without invalidating the parser cache. ","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext","kind":"structure","line":178,"name":"Lean.Parser.CacheableParserContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L178-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.openDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span>.<span class=\"name\">openDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">OpenDecl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.openDecls","kind":"def","line":176,"name":"Lean.Parser.ParserModuleContext.openDecls","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L176-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.currNamespace\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span>.<span class=\"name\">currNamespace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.currNamespace","kind":"def","line":175,"name":"Lean.Parser.ParserModuleContext.currNamespace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L175-L175"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.options\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span>.<span class=\"name\">options</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.options","kind":"def","line":173,"name":"Lean.Parser.ParserModuleContext.options","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L173-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.env\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span>.<span class=\"name\">env</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.env","kind":"def","line":172,"name":"Lean.Parser.ParserModuleContext.env","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L172-L172"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">options</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">currNamespace</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">openDecls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">OpenDecl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.mk","kind":"ctor","line":171,"name":"Lean.Parser.ParserModuleContext.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L171-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Input context derived from elaboration of previous commands. ","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext","kind":"structure","line":170,"name":"Lean.Parser.ParserModuleContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L170-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.prev\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">prev</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></div></div>","info":{"doc":"Returns the character position prior to `pos` ","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.prev","kind":"def","line":162,"name":"Lean.Parser.InputContext.prev","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L162-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.getNext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">getNext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Char\">Char</a></div></div>","info":{"doc":"Return character after position `pos` ","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.getNext","kind":"def","line":157,"name":"Lean.Parser.InputContext.getNext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L157-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.substring\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">substring</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">startPos </span><span class=\"fn\">stopPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Substring\">Substring</a></div></div>","info":{"doc":"Extracts a substring of the input string, bounded by `startPos` and `stopPos`.\n","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.substring","kind":"def","line":150,"name":"Lean.Parser.InputContext.substring","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L150-L155"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.extract\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">extract</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a> → <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Creates a new string that consists of the region of the input string delimited by the two positions.\n\nThe result is `\"\"` if the start position is greater than or equal to the end position or if the\nstart position is at the end of the string. If either position is invalid (that is, if either points\nat the middle of a multi-byte UTF-8 character) then the result is unspecified.\n","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.extract","kind":"def","line":139,"name":"Lean.Parser.InputContext.extract","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L139-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.next'\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">next'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.atEnd\">atEnd</a></span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></div></div>","info":{"doc":"Returns the next position in the input string after position `p`. The result is unspecified if `p`\nis not a valid position.\n\nRequires evidence, `h`, that `p` is within bounds. No run-time bounds check is performed.\n","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.next'","kind":"def","line":129,"name":"Lean.Parser.InputContext.next'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L129-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.next\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">next</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></div></div>","info":{"doc":"Returns the next position in the input string after position `p`. If `p` is not a valid position or\n`p = c.endPos`, returns the position one byte after `p`.\n\nA run-time bounds check is performed to determine whether `p` is at the end of the string. If a\nbounds check has already been performed, use `InputContext.next'` to avoid a repeated check.\n","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.next","kind":"def","line":118,"name":"Lean.Parser.InputContext.next","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L118-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.get'\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">get'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.atEnd\">atEnd</a></span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Char\">Char</a></div></div>","info":{"doc":"Returns the character at position `p` of the input string. Returns `(default : Char)`, which is\n`'A'`, if `p` is not a valid position.\n\nRequires evidence, `h`, that `p` is within bounds instead of performing a run-time bounds check as\nin `InputContext.get`.\n\nA typical pattern combines `get'` with a dependent `if`-expression to avoid the overhead of an\nadditional bounds check. For example:\n```\ndef getInBounds? (s : String) (p : String.Pos) : Option Char :=\n  if h : s.atEnd p then none else some (s.get' p h)\n```\nEven with evidence of `¬ s.atEnd p`, `p` may be invalid if a byte index points into the middle of a\nmulti-byte UTF-8 character.\n","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.get'","kind":"def","line":98,"name":"Lean.Parser.InputContext.get'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L98-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.not_atEnd_inputString\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">not_atEnd_inputString</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.atEnd\">atEnd</a></span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Init/Data/String/Basic.html#String.Pos.Raw.atEnd\">String.Pos.Raw.atEnd</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.inputString\">inputString</a></span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.not_atEnd_inputString","kind":"theorem","line":89,"name":"Lean.Parser.InputContext.not_atEnd_inputString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L89-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.get\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">get</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Char\">Char</a></div></div>","info":{"doc":"Returns the character at position `p` of the input string. If `p` is not a valid position, returns\nthe fallback value `(default : Char)`, which is `'A'`, but does not panic.\n","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.get","kind":"def","line":82,"name":"Lean.Parser.InputContext.get","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L82-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.atEnd\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">atEnd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Returns `true` if a specified byte position is greater than or equal to the position which points to\nthe end of the input string. Otherwise, returns `false`.\n","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.atEnd","kind":"def","line":76,"name":"Lean.Parser.InputContext.atEnd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L76-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.input\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">input</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.input","kind":"def","line":73,"name":"Lean.Parser.InputContext.input","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L73-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input </span><span class=\"fn\">fileName</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">endPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a> := <span class=\"fn\"><span class=\"fn\">input</span>.<a href=\"./Init/Prelude.html#String.endPos\">endPos</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">endPos_valid</span> : <span class=\"fn\">endPos</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">input</span>.<a href=\"./Init/Prelude.html#String.endPos\">endPos</a></span> := by simp)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fileMap</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a> := <span class=\"fn\"><a href=\"./Lean/Data/Position.html#Lean.FileMap.ofString\">FileMap.ofString</a> <span class=\"fn\">input</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.mk","kind":"def","line":61,"name":"Lean.Parser.InputContext.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L61-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedInputContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedInputContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedInputContext","kind":"instance","line":56,"name":"Lean.Parser.instInhabitedInputContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L56-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.endPos_valid\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">endPos_valid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.endPos\">endPos</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.inputString\">inputString</a></span>.<a href=\"./Init/Prelude.html#String.endPos\">endPos</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.endPos_valid","kind":"theorem","line":54,"name":"Lean.Parser.InputContext.endPos_valid","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.endPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">endPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.endPos","kind":"def","line":53,"name":"Lean.Parser.InputContext.endPos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.fileMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">fileMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.fileMap","kind":"def","line":52,"name":"Lean.Parser.InputContext.fileMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.fileName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">fileName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.fileName","kind":"def","line":51,"name":"Lean.Parser.InputContext.fileName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.inputString\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">inputString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.inputString","kind":"def","line":50,"name":"Lean.Parser.InputContext.inputString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.mk'\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">mk'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inputString </span><span class=\"fn\">fileName</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fileMap</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">endPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">endPos_valid</span> : <span class=\"fn\">endPos</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">inputString</span>.<a href=\"./Init/Prelude.html#String.endPos\">endPos</a></span> := by simp)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.mk'","kind":"ctor","line":49,"name":"Lean.Parser.InputContext.mk'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Input string and related data. Recall that the `FileMap` is a helper structure for mapping\n`String.Pos` in the input string to line/column information.  ","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext","kind":"structure","line":45,"name":"Lean.Parser.InputContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L45-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxNodeKindSet</span>.<span class=\"name\">insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet.insert","kind":"def","line":42,"name":"Lean.Parser.SyntaxNodeKindSet.insert","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L42-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxNodeKindSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet","kind":"def","line":40,"name":"Lean.Parser.SyntaxNodeKindSet","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenTable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenTable","kind":"def","line":38,"name":"Lean.Parser.TokenTable","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Token\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Token</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.Token","kind":"def","line":36,"name":"Lean.Parser.Token","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.minPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">minPrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.minPrec","kind":"def","line":34,"name":"Lean.Parser.minPrec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.leadPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">leadPrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.leadPrec","kind":"def","line":33,"name":"Lean.Parser.leadPrec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.argPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">argPrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.argPrec","kind":"def","line":32,"name":"Lean.Parser.argPrec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.maxPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">maxPrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Maximal (and function application) precedence.\nIn the standard lean language, no parser has precedence higher than `maxPrec`.\n\nNote that nothing prevents users from using a higher precedence, but we strongly\ndiscourage them from doing it. ","docLink":"./Lean/Parser/Types.html#Lean.Parser.maxPrec","kind":"def","line":26,"name":"Lean.Parser.maxPrec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L26-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.getNext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getNext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Char\">Char</a></div></div>","info":{"doc":"Return character after position `pos` ","docLink":"./Lean/Parser/Types.html#Lean.Parser.getNext","kind":"def","line":22,"name":"Lean.Parser.getNext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L22-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.mkIdent\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkIdent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Init/Prelude.html#Lean.SourceInfo\">SourceInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rawVal</span> : <a href=\"./Init/Prelude.html#Substring\">Substring</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.mkIdent","kind":"def","line":19,"name":"Lean.Parser.mkIdent","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L19-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.mkAtom\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkAtom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Init/Prelude.html#Lean.SourceInfo\">SourceInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Types.html#Lean.Parser.mkAtom","kind":"def","line":16,"name":"Lean.Parser.mkAtom","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Types.lean#L16-L17"}}],"imports":["Lean.Data.Trie","Lean.DocString.Extension"],"instances":[{"className":"Inhabited","name":"Lean.Parser.instInhabitedInputContext","typeNames":["Lean.Parser.InputContext"]},{"className":"BEq","name":"Lean.Parser.instBEqCacheableParserContext","typeNames":["Lean.Parser.CacheableParserContext"]},{"className":"Coe","name":"Lean.Parser.instCoeParserContextInputContext","typeNames":["Lean.Parser.ParserContext","Lean.Parser.InputContext"]},{"className":"Inhabited","name":"Lean.Parser.instInhabitedError","typeNames":["Lean.Parser.Error"]},{"className":"BEq","name":"Lean.Parser.instBEqError","typeNames":["Lean.Parser.Error"]},{"className":"ToString","name":"Lean.Parser.Error.instToString","typeNames":["Lean.Parser.Error"]},{"className":"BEq","name":"Lean.Parser.instBEqParserCacheKey","typeNames":["Lean.Parser.ParserCacheKey"]},{"className":"Hashable","name":"Lean.Parser.instHashableParserCacheKey","typeNames":["Lean.Parser.ParserCacheKey"]},{"className":"HAppend","name":"Lean.Parser.SyntaxStack.instHAppendArraySyntax","typeNames":["Lean.Parser.SyntaxStack","Array","Lean.Parser.SyntaxStack"]},{"className":"Inhabited","name":"Lean.Parser.instInhabitedParserFn","typeNames":["Lean.Parser.ParserFn"]},{"className":"Inhabited","name":"Lean.Parser.instInhabitedFirstTokens","typeNames":["Lean.Parser.FirstTokens"]},{"className":"ToString","name":"Lean.Parser.FirstTokens.instToString","typeNames":["Lean.Parser.FirstTokens"]},{"className":"Inhabited","name":"Lean.Parser.instInhabitedParserInfo","typeNames":["Lean.Parser.ParserInfo"]},{"className":"Inhabited","name":"Lean.Parser.instInhabitedParser","typeNames":["Lean.Parser.Parser"]}],"name":"Lean.Parser.Types"}