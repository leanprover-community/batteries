{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.denote_bitblast\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">denote_bitblast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.WithCache\">WithCache</a> <span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">BVExpr</a> <span class=\"fn\">w</span>)</span> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">Assignment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">Cache.Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\">aig</span> <span class=\"fn\"><span class=\"fn\">input</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.WithCache.cache\">cache</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hidx</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">w</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟦</a><span class=\"fn\"><span class=\"fn\">assign</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment.toAIGAssignment\">toAIGAssignment</a></span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">,</a>     <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">{</a> <span class=\"fn\">aig</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast\">bitblast</a> <span class=\"fn\">aig</span> <span class=\"fn\">input</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.aig\">aig</a></span>, <span class=\"fn\">ref</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast\">bitblast</a> <span class=\"fn\">aig</span> <span class=\"fn\">input</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.vec\">vec</a></span>.<a href=\"./Std/Sat/AIG/RefVec.html#Std.Sat.AIG.RefVec.get\">get</a></span> <span class=\"fn\">idx</span> <span class=\"fn\">hidx</span></span> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">}</a><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟧</a> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.eval\">eval</a> <span class=\"fn\">assign</span> <span class=\"fn\"><span class=\"fn\">input</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.WithCache.val\">val</a></span>)</span>.<a href=\"./Init/Data/BitVec/Basic.html#BitVec.getLsbD\">getLsbD</a></span> <span class=\"fn\">idx</span></span></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.denote_bitblast","kind":"theorem","line":530,"name":"Std.Tactic.BVDecide.BVExpr.denote_bitblast","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L530-L540"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast_Inv_of_Inv\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast_Inv_of_Inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">Assignment</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.WithCache\">WithCache</a> <span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">BVExpr</a> <span class=\"fn\">w</span>)</span> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">Cache.Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\">aig</span> <span class=\"fn\"><span class=\"fn\">input</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.WithCache.cache\">cache</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">Cache.Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast\">bitblast</a> <span class=\"fn\">aig</span> <span class=\"fn\">input</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.aig\">aig</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast\">bitblast</a> <span class=\"fn\">aig</span> <span class=\"fn\">input</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.cache\">cache</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast_Inv_of_Inv","kind":"theorem","line":523,"name":"Std.Tactic.BVDecide.BVExpr.bitblast_Inv_of_Inv","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L523-L528"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast_denote_mem_prefix\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast_denote_mem_prefix</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inv</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.WithCache\">WithCache</a> <span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">BVExpr</a> <span class=\"fn\">w</span>)</span> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">Assignment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">start</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hstart</span> : <span class=\"fn\">start</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟦</a><span class=\"fn\"><span class=\"fn\">assign</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment.toAIGAssignment\">toAIGAssignment</a></span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">,</a>     <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">{</a> <span class=\"fn\">aig</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast\">bitblast</a> <span class=\"fn\">aig</span> <span class=\"fn\">input</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.aig\">aig</a></span>, <span class=\"fn\">ref</span> := <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">{</a> <span class=\"fn\">gate</span> := <span class=\"fn\">start</span>, <span class=\"fn\">invert</span> := <span class=\"fn\">inv</span>, <span class=\"fn\">hgate</span> := <span class=\"fn\">⋯</span> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">}</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">}</a><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟧</a> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟦</a><span class=\"fn\"><span class=\"fn\">assign</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment.toAIGAssignment\">toAIGAssignment</a></span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">,</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">{</a> <span class=\"fn\">aig</span> := <span class=\"fn\">aig</span>, <span class=\"fn\">ref</span> := <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">{</a> <span class=\"fn\">gate</span> := <span class=\"fn\">start</span>, <span class=\"fn\">invert</span> := <span class=\"fn\">inv</span>, <span class=\"fn\">hgate</span> := <span class=\"fn\">hstart</span> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">}</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">}</a><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟧</a></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast_denote_mem_prefix","kind":"theorem","line":511,"name":"Std.Tactic.BVDecide.BVExpr.bitblast_denote_mem_prefix","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L511-L521"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast_aig_IsPrefix\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast_aig_IsPrefix</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.WithCache\">WithCache</a> <span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">BVExpr</a> <span class=\"fn\">w</span>)</span> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/LawfulOperator.html#Std.Sat.AIG.IsPrefix\">Sat.AIG.IsPrefix</a> <span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast\">bitblast</a> <span class=\"fn\">aig</span> <span class=\"fn\">input</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.aig\">aig</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast_aig_IsPrefix","kind":"theorem","line":503,"name":"Std.Tactic.BVDecide.BVExpr.bitblast_aig_IsPrefix","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L503-L509"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.go_denote_eq\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">go_denote_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">BVExpr</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">Assignment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">Cache.Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\">aig</span> <span class=\"fn\">cache</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hidx</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">w</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟦</a><span class=\"fn\"><span class=\"fn\">assign</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment.toAIGAssignment\">toAIGAssignment</a></span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">,</a>     <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">{</a> <span class=\"fn\">aig</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.aig\">aig</a></span>, <span class=\"fn\">ref</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.vec\">vec</a></span>.<a href=\"./Std/Sat/AIG/RefVec.html#Std.Sat.AIG.RefVec.get\">get</a></span> <span class=\"fn\">idx</span> <span class=\"fn\">hidx</span></span> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">}</a><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟧</a> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.eval\">eval</a> <span class=\"fn\">assign</span> <span class=\"fn\">expr</span>)</span>.<a href=\"./Init/Data/BitVec/Basic.html#BitVec.getLsbD\">getLsbD</a></span> <span class=\"fn\">idx</span></span></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.go_denote_eq","kind":"theorem","line":290,"name":"Std.Tactic.BVDecide.BVExpr.bitblast.go_denote_eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L290-L497"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.goCache_denote_eq\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">goCache_denote_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">BVExpr</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">Assignment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">Cache.Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\">aig</span> <span class=\"fn\">cache</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hidx</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">w</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟦</a><span class=\"fn\"><span class=\"fn\">assign</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment.toAIGAssignment\">toAIGAssignment</a></span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">,</a>     <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">{</a> <span class=\"fn\">aig</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.goCache\">goCache</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.aig\">aig</a></span>, <span class=\"fn\">ref</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.goCache\">goCache</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.vec\">vec</a></span>.<a href=\"./Std/Sat/AIG/RefVec.html#Std.Sat.AIG.RefVec.get\">get</a></span> <span class=\"fn\">idx</span> <span class=\"fn\">hidx</span></span> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">}</a><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟧</a> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.eval\">eval</a> <span class=\"fn\">assign</span> <span class=\"fn\">expr</span>)</span>.<a href=\"./Init/Data/BitVec/Basic.html#BitVec.getLsbD\">getLsbD</a></span> <span class=\"fn\">idx</span></span></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.goCache_denote_eq","kind":"theorem","line":269,"name":"Std.Tactic.BVDecide.BVExpr.bitblast.goCache_denote_eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L269-L287"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.go_Inv_of_Inv\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">go_Inv_of_Inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">Assignment</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">Cache.Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\">aig</span> <span class=\"fn\">cache</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">BVExpr</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">Cache.Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.aig\">aig</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.cache\">cache</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.go_Inv_of_Inv","kind":"theorem","line":184,"name":"Std.Tactic.BVDecide.BVExpr.bitblast.go_Inv_of_Inv","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L184-L267"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.goCache_Inv_of_Inv\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">goCache_Inv_of_Inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">Assignment</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">Cache.Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\">aig</span> <span class=\"fn\">cache</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">BVExpr</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">Cache.Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.goCache\">goCache</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.aig\">aig</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.goCache\">goCache</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.cache\">cache</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.goCache_Inv_of_Inv","kind":"theorem","line":165,"name":"Std.Tactic.BVDecide.BVExpr.bitblast.goCache_Inv_of_Inv","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L165-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.goCache_denote_mem_prefix\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">goCache_denote_mem_prefix</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inv</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">BVExpr</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">Assignment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">start</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hstart</span> : <span class=\"fn\">start</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟦</a><span class=\"fn\"><span class=\"fn\">assign</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment.toAIGAssignment\">toAIGAssignment</a></span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">,</a>     <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">{</a> <span class=\"fn\">aig</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.goCache\">goCache</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.aig\">aig</a></span>, <span class=\"fn\">ref</span> := <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">{</a> <span class=\"fn\">gate</span> := <span class=\"fn\">start</span>, <span class=\"fn\">invert</span> := <span class=\"fn\">inv</span>, <span class=\"fn\">hgate</span> := <span class=\"fn\">⋯</span> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">}</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">}</a><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟧</a> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟦</a><span class=\"fn\"><span class=\"fn\">assign</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment.toAIGAssignment\">toAIGAssignment</a></span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">,</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">{</a> <span class=\"fn\">aig</span> := <span class=\"fn\">aig</span>, <span class=\"fn\">ref</span> := <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">{</a> <span class=\"fn\">gate</span> := <span class=\"fn\">start</span>, <span class=\"fn\">invert</span> := <span class=\"fn\">inv</span>, <span class=\"fn\">hgate</span> := <span class=\"fn\">hstart</span> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">}</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">}</a><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟧</a></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.goCache_denote_mem_prefix","kind":"theorem","line":144,"name":"Std.Tactic.BVDecide.BVExpr.bitblast.goCache_denote_mem_prefix","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L144-L158"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.go_denote_mem_prefix\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">go_denote_mem_prefix</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inv</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">BVExpr</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">Assignment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">start</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hstart</span> : <span class=\"fn\">start</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟦</a><span class=\"fn\"><span class=\"fn\">assign</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment.toAIGAssignment\">toAIGAssignment</a></span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">,</a>     <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">{</a> <span class=\"fn\">aig</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVecEntry.aig\">aig</a></span>, <span class=\"fn\">ref</span> := <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">{</a> <span class=\"fn\">gate</span> := <span class=\"fn\">start</span>, <span class=\"fn\">invert</span> := <span class=\"fn\">inv</span>, <span class=\"fn\">hgate</span> := <span class=\"fn\">⋯</span> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">}</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">}</a><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟧</a> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟦</a><span class=\"fn\"><span class=\"fn\">assign</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment.toAIGAssignment\">toAIGAssignment</a></span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">,</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">{</a> <span class=\"fn\">aig</span> := <span class=\"fn\">aig</span>, <span class=\"fn\">ref</span> := <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">{</a> <span class=\"fn\">gate</span> := <span class=\"fn\">start</span>, <span class=\"fn\">invert</span> := <span class=\"fn\">inv</span>, <span class=\"fn\">hgate</span> := <span class=\"fn\">hstart</span> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">}</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">}</a><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟧</a></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.go_denote_mem_prefix","kind":"theorem","line":128,"name":"Std.Tactic.BVDecide.BVExpr.bitblast.go_denote_mem_prefix","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L128-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.goCache_val_eq_bitblast\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">goCache_val_eq_bitblast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">BVExpr</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.goCache\">goCache</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast\">bitblast</a> <span class=\"fn\">aig</span> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.WithCache.mk\">{</a> <span class=\"fn\">val</span> := <span class=\"fn\">expr</span>, <span class=\"fn\">cache</span> := <span class=\"fn\">cache</span> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.WithCache.mk\">}</a></span></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.bitblast.goCache_val_eq_bitblast","kind":"theorem","line":124,"name":"Std.Tactic.BVDecide.BVExpr.bitblast.goCache_val_eq_bitblast","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L124-L126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.denote_eq_eval_of_get?_eq_some_of_Inv\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">Cache</span>.<span class=\"name\">denote_eq_eval_of_get?_eq_some_of_Inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">Assignment</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">BVExpr</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refs</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVec\">RefVec</a></span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsome</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cache</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.get?\">get?</a></span> <span class=\"fn\">expr</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">refs</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\">aig</span> <span class=\"fn\">cache</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">w</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟦</a><span class=\"fn\"><span class=\"fn\">assign</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment.toAIGAssignment\">toAIGAssignment</a></span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">,</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">{</a> <span class=\"fn\">aig</span> := <span class=\"fn\">aig</span>, <span class=\"fn\">ref</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">refs</span>.<a href=\"./Std/Sat/AIG/RefVec.html#Std.Sat.AIG.RefVec.get\">get</a></span> <span class=\"fn\">i</span> <span class=\"fn\">h</span></span> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">}</a><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟧</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.eval\">eval</a> <span class=\"fn\">assign</span> <span class=\"fn\">expr</span>)</span>.<a href=\"./Init/Data/BitVec/Basic.html#BitVec.getLsbD\">getLsbD</a></span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.denote_eq_eval_of_get?_eq_some_of_Inv","kind":"theorem","line":101,"name":"Std.Tactic.BVDecide.BVExpr.Cache.denote_eq_eval_of_get?_eq_some_of_Inv","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L101-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.get?_eq_some_iff\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">Cache</span>.<span class=\"name\">get?_eq_some_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">refs</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVec\">RefVec</a></span> <span class=\"fn\">w</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">BVExpr</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cache</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.get?\">get?</a></span> <span class=\"fn\">expr</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">refs</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cache</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.map\">map</a></span>.<a href=\"./Std/Data/DHashMap/Basic.html#Std.DHashMap.get?\">get?</a></span> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Key.mk\">{</a> <span class=\"fn\">w</span> := <span class=\"fn\">w</span>, <span class=\"fn\">expr</span> := <span class=\"fn\">expr</span> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Key.mk\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\"><span class=\"fn\">refs</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVec.refs\">refs</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.get?_eq_some_iff","kind":"theorem","line":95,"name":"Std.Tactic.BVDecide.BVExpr.Cache.get?_eq_some_iff","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L95-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv_insert\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">Cache</span>.<span class=\"name\">Inv_insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">Assignment</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">BVExpr</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refs</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.RefVec\">RefVec</a></span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\">aig</span> <span class=\"fn\">cache</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrefs</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>) (<span class=\"fn\">hidx</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">w</span>),\n    <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟦</a><span class=\"fn\"><span class=\"fn\">assign</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment.toAIGAssignment\">toAIGAssignment</a></span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">,</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">{</a> <span class=\"fn\">aig</span> := <span class=\"fn\">aig</span>, <span class=\"fn\">ref</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">refs</span>.<a href=\"./Std/Sat/AIG/RefVec.html#Std.Sat.AIG.RefVec.get\">get</a></span> <span class=\"fn\">idx</span> <span class=\"fn\">hidx</span></span> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">}</a><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟧</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.eval\">eval</a> <span class=\"fn\">assign</span> <span class=\"fn\">expr</span>)</span>.<a href=\"./Init/Data/BitVec/Basic.html#BitVec.getLsbD\">getLsbD</a></span> <span class=\"fn\">idx</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\">aig</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cache</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.insert\">insert</a></span> <span class=\"fn\">expr</span> <span class=\"fn\">refs</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv_insert","kind":"theorem","line":58,"name":"Std.Tactic.BVDecide.BVExpr.Cache.Inv_insert","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L58-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv_cast\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">Cache</span>.<span class=\"name\">Inv_cast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig1</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">Assignment</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig2</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">Cache</a> <span class=\"fn\">aig1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpref</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/LawfulOperator.html#Std.Sat.AIG.IsPrefix\">Sat.AIG.IsPrefix</a> <span class=\"fn\"><span class=\"fn\">aig1</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span> <span class=\"fn\"><span class=\"fn\">aig2</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\">aig1</span> <span class=\"fn\">cache</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\">aig2</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cache</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.cast\">cast</a></span> <span class=\"fn\">⋯</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv_cast","kind":"theorem","line":48,"name":"Std.Tactic.BVDecide.BVExpr.Cache.Inv_cast","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L48-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv_empty\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">Cache</span>.<span class=\"name\">Inv_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">Assignment</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\">aig</span> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.empty\">empty</a></span></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv_empty","kind":"theorem","line":44,"name":"Std.Tactic.BVDecide.BVExpr.Cache.Inv_empty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L44-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVExpr</span>.<span class=\"name\">Cache</span>.<span class=\"name\">Inv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">Assignment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv","kind":"def","line":38,"name":"Std.Tactic.BVDecide.BVExpr.Cache.Inv","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.lean#L38-L42"}}],"imports":["Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Lemmas.Var","Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Lemmas.Operations.ShiftRight","Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Lemmas.Operations.Append","Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Lemmas.Operations.Replicate","Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Lemmas.Operations.Extract","Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Lemmas.Operations.RotateLeft","Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Lemmas.Operations.RotateRight","Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Lemmas.Operations.Mul","Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Lemmas.Operations.Umod","Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Lemmas.Operations.Reverse","Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Lemmas.Operations.Clz","Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Impl.Expr"],"instances":[],"name":"Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Lemmas.Expr"}