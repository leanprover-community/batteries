{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserOfStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserOfStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">offset</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prec</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserOfStack","kind":"def","line":734,"name":"Lean.Parser.parserOfStack","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L734-L735"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserOfStackFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserOfStackFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">offset</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserOfStackFn","kind":"def","line":707,"name":"Lean.Parser.parserOfStackFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L707-L732"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.resolveParserName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">resolveParserName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Ident\">Ident</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution\">ParserResolution</a>)</span></span></div></div>","info":{"doc":"Resolve the given parser name and return a list of candidates. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.resolveParserName","kind":"def","line":703,"name":"Lean.Parser.resolveParserName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L703-L705"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserContext.resolveParserName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContext</span>.<span class=\"name\">resolveParserName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">ParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Ident\">Ident</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution\">ParserResolution</a></span></div></div>","info":{"doc":"Resolve the given parser name and return a list of candidates. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserContext.resolveParserName","kind":"def","line":699,"name":"Lean.Parser.ParserContext.resolveParserName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L699-L701"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution.alias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserResolution</span>.<span class=\"name\">alias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">ParserAliasValue</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution\">ParserResolution</a></div></div>","info":{"doc":"Reference to a parser alias. Note that as aliases are built-in, a corresponding declaration may\nnot be in the environment (yet).\n","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution.alias","kind":"ctor","line":659,"name":"Lean.Parser.ParserResolution.alias","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L659-L663"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution.parser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserResolution</span>.<span class=\"name\">parser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isDescr</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution\">ParserResolution</a></div></div>","info":{"doc":"Reference to a parser declaration in the environment.  A `(Trailing)ParserDescr` if `isDescr` is\ntrue.\n","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution.parser","kind":"ctor","line":654,"name":"Lean.Parser.ParserResolution.parser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L654-L658"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution.category\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserResolution</span>.<span class=\"name\">category</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cat</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution\">ParserResolution</a></div></div>","info":{"doc":"Reference to a category. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution.category","kind":"ctor","line":652,"name":"Lean.Parser.ParserResolution.category","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L652-L653"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserResolution</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Result of resolving a parser name. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution","kind":"inductive","line":650,"name":"Lean.Parser.ParserResolution","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L650-L663"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.aliasExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">aliasExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">EnvExtension</a> <span class=\"fn\">(<a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">NameMap</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">ParserAliasValue</a>)</span></span></div></div>","info":{"doc":"Helper environment extension that gives us access to built-in aliases in pure parser functions.\n","docLink":"./Lean/Parser/Extension.html#Lean.Parser.aliasExtension","kind":"opaque","line":644,"name":"Lean.Parser.aliasExtension","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L644-L648"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.withOpenDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withOpenDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenDecl","kind":"def","line":642,"name":"Lean.Parser.withOpenDecl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L642-L642"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.withOpenDeclFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withOpenDeclFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"If the parsing stack is of the form `#[.., openDecl]`, we process the open declaration, and execute `p` ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenDeclFn","kind":"def","line":634,"name":"Lean.Parser.withOpenDeclFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L634-L640"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.withOpen\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpen","kind":"def","line":632,"name":"Lean.Parser.withOpen","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L632-L632"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.withOpenFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withOpenFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"If the parsing stack is of the form `#[.., openCommand]`, we process the open command, and execute `p` ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenFn","kind":"def","line":620,"name":"Lean.Parser.withOpenFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L620-L629"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.withOpenDeclFnCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withOpenDeclFnCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">openDeclStx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenDeclFnCore","kind":"def","line":606,"name":"Lean.Parser.withOpenDeclFnCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L606-L618"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.commandParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">commandParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rbp</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.commandParser","kind":"def","line":592,"name":"Lean.Parser.commandParser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L592-L593"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerParserCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrName </span><span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">behavior</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">LeadingIdentBehavior</a> := <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior.default\">LeadingIdentBehavior.default</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerParserCategory","kind":"def","line":576,"name":"Lean.Parser.registerParserCategory","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L576-L579"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinDynamicParserAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerBuiltinDynamicParserAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrName </span><span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"A builtin parser attribute that can be extended by users. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinDynamicParserAttribute","kind":"def","line":566,"name":"Lean.Parser.registerBuiltinDynamicParserAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L566-L568"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkParserAttributeImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkParserAttributeImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrName </span><span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserAttributeImpl","kind":"def","line":559,"name":"Lean.Parser.mkParserAttributeImpl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L559-L564"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinParserAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerBuiltinParserAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">behavior</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">LeadingIdentBehavior</a> := <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior.default\">LeadingIdentBehavior.default</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"The parsing tables for builtin parsers are \"stored\" in the extracted source code.\n","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinParserAttribute","kind":"def","line":520,"name":"Lean.Parser.registerBuiltinParserAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L520-L535"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getParserPriority\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getParserPriority</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getParserPriority","kind":"def","line":497,"name":"Lean.Parser.getParserPriority","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L497-L503"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.declareTrailingBuiltinParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">declareTrailingBuiltinParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.declareTrailingBuiltinParser","kind":"def","line":494,"name":"Lean.Parser.declareTrailingBuiltinParser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L494-L495"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.declareLeadingBuiltinParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">declareLeadingBuiltinParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.declareLeadingBuiltinParser","kind":"def","line":491,"name":"Lean.Parser.declareLeadingBuiltinParser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L491-L492"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.declareBuiltinParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">declareBuiltinParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addFnName </span><span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.declareBuiltinParser","kind":"def","line":487,"name":"Lean.Parser.declareBuiltinParser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L487-L489"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.runParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">runParserCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fileName</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&lt;input&gt;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>","info":{"doc":"convenience function for testing ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.runParserCategory","kind":"def","line":475,"name":"Lean.Parser.runParserCategory","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L475-L485"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkParserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkParserState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserState","kind":"def","line":472,"name":"Lean.Parser.mkParserState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L472-L473"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkInputContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkInputContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input </span><span class=\"fn\">fileName</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">normalizeLineEndings</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">endPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a> := <span class=\"fn\"><span class=\"fn\">input</span>.<a href=\"./Init/Prelude.html#String.endPos\">endPos</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">endPos_valid</span> : <span class=\"fn\">endPos</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">input</span>.<a href=\"./Init/Prelude.html#String.endPos\">endPos</a></span> := by simp)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkInputContext","kind":"def","line":452,"name":"Lean.Parser.mkInputContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L452-L470"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getTokenTable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getTokenTable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getTokenTable","kind":"def","line":447,"name":"Lean.Parser.getTokenTable","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L447-L448"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getSyntaxNodeKinds\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getSyntaxNodeKinds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getSyntaxNodeKinds","kind":"def","line":443,"name":"Lean.Parser.getSyntaxNodeKinds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L443-L445"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.isValidSyntaxNodeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">isValidSyntaxNodeKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.isValidSyntaxNodeKind","kind":"def","line":437,"name":"Lean.Parser.isValidSyntaxNodeKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L437-L441"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addSyntaxNodeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addSyntaxNodeKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addSyntaxNodeKind","kind":"def","line":434,"name":"Lean.Parser.addSyntaxNodeKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L434-L435"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addToken\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addToken</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tk</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">AttributeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addToken","kind":"def","line":428,"name":"Lean.Parser.addToken","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L428-L432"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.categoryParserFnImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">categoryParserFnImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.categoryParserFnImpl","kind":"def","line":417,"name":"Lean.Parser.categoryParserFnImpl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L417-L423"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkCategoryAntiquotParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkCategoryAntiquotParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkCategoryAntiquotParser","kind":"def","line":410,"name":"Lean.Parser.mkCategoryAntiquotParser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L410-L411"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinTrailingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addBuiltinTrailingParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TrailingParser\">TrailingParser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinTrailingParser","kind":"def","line":407,"name":"Lean.Parser.addBuiltinTrailingParser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L407-L408"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinLeadingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addBuiltinLeadingParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinLeadingParser","kind":"def","line":404,"name":"Lean.Parser.addBuiltinLeadingParser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L404-L405"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addBuiltinParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leading</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinParser","kind":"def","line":396,"name":"Lean.Parser.addBuiltinParser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L396-L402"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.evalInsideQuot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">evalInsideQuot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>","info":{"doc":"Interpret `declName` if possible and inside a quotation, or else run `p`. The `ParserInfo` will always be taken from `p`. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.evalInsideQuot","kind":"def","line":387,"name":"Lean.Parser.evalInsideQuot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L387-L394"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.internal.parseQuotWithCurrentStage\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">internal</span>.<span class=\"name\">parseQuotWithCurrentStage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.internal.parseQuotWithCurrentStage","kind":"opaque","line":381,"name":"Lean.Parser.internal.parseQuotWithCurrentStage","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L381-L385"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.evalParserConst\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">evalParserConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.evalParserConst","kind":"opaque","line":378,"name":"Lean.Parser.evalParserConst","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L378-L379"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.evalParserConstUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">evalParserConstUnsafe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.evalParserConstUnsafe","kind":"def","line":370,"name":"Lean.Parser.evalParserConstUnsafe","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L370-L376"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.leadingIdentBehavior\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">leadingIdentBehavior</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">LeadingIdentBehavior</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.leadingIdentBehavior","kind":"def","line":365,"name":"Lean.Parser.leadingIdentBehavior","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L365-L368"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addParserCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">behavior</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">LeadingIdentBehavior</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addParserCategory","kind":"def","line":359,"name":"Lean.Parser.addParserCategory","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L359-L363"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.isParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">isParserCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.isParserCategory","kind":"def","line":356,"name":"Lean.Parser.isParserCategory","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L356-L357"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getParserCategory?\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getParserCategory?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory\">ParserCategory</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getParserCategory?","kind":"def","line":353,"name":"Lean.Parser.getParserCategory?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L353-L354"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension\">ParserExtension</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserExtension","kind":"opaque","line":345,"name":"Lean.Parser.parserExtension","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L345-L351"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.runParserAttributeHooks\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">runParserAttributeHooks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builtin</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.runParserAttributeHooks","kind":"def","line":315,"name":"Lean.Parser.runParserAttributeHooks","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L315-L317"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerParserAttributeHook\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerParserAttributeHook</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hook</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook\">ParserAttributeHook</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerParserAttributeHook","kind":"def","line":312,"name":"Lean.Parser.registerParserAttributeHook","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L312-L313"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserAttributeHooks\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserAttributeHooks</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook\">ParserAttributeHook</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAttributeHooks","kind":"opaque","line":310,"name":"Lean.Parser.parserAttributeHooks","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L310-L310"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook.postAdd\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAttributeHook</span>.<span class=\"name\">postAdd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook\">ParserAttributeHook</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builtin</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Called after a parser attribute is applied to a declaration. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook.postAdd","kind":"def","line":308,"name":"Lean.Parser.ParserAttributeHook.postAdd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L308-L308"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAttributeHook</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">postAdd</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Bool\">Bool</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook\">ParserAttributeHook</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook.mk","kind":"ctor","line":306,"name":"Lean.Parser.ParserAttributeHook.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L306-L306"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAttributeHook</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook","kind":"structure","line":306,"name":"Lean.Parser.ParserAttributeHook","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L306-L308"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstant\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkParserOfConstant</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">categories</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">constName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstant","kind":"def","line":303,"name":"Lean.Parser.mkParserOfConstant","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L303-L304"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.compileParserDescr\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">compileParserDescr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">categories</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.compileParserDescr","kind":"def","line":281,"name":"Lean.Parser.compileParserDescr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L281-L301"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstantAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkParserOfConstantAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">constName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">compileParserDescr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstantAux","kind":"opaque","line":278,"name":"Lean.Parser.mkParserOfConstantAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L278-L279"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstantUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkParserOfConstantUnsafe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">constName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">compileParserDescr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstantUnsafe","kind":"def","line":255,"name":"Lean.Parser.mkParserOfConstantUnsafe","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L255-L276"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ensureConstantParserAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ensureConstantParserAlias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ensureConstantParserAlias","kind":"def","line":252,"name":"Lean.Parser.ensureConstantParserAlias","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L252-L253"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ensureBinaryParserAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ensureBinaryParserAlias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ensureBinaryParserAlias","kind":"def","line":249,"name":"Lean.Parser.ensureBinaryParserAlias","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L249-L250"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ensureUnaryParserAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ensureUnaryParserAlias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ensureUnaryParserAlias","kind":"def","line":246,"name":"Lean.Parser.ensureUnaryParserAlias","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L246-L247"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getSyntaxKindOfParserAlias?\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getSyntaxKindOfParserAlias?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getSyntaxKindOfParserAlias?","kind":"def","line":243,"name":"Lean.Parser.getSyntaxKindOfParserAlias?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L243-L244"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.isParserAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">isParserAlias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.isParserAlias","kind":"def","line":238,"name":"Lean.Parser.isParserAlias","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L238-L241"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.instCoeForallParserForallParserAliasValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instCoeForallParserForallParserAliasValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">ParserAliasValue</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.instCoeForallParserForallParserAliasValue","kind":"instance","line":236,"name":"Lean.Parser.instCoeForallParserForallParserAliasValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L236-L236"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.instCoeForallParserParserAliasValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instCoeForallParserParserAliasValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">ParserAliasValue</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.instCoeForallParserParserAliasValue","kind":"instance","line":235,"name":"Lean.Parser.instCoeForallParserParserAliasValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L235-L235"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.instCoeParserParserAliasValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instCoeParserParserAliasValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">ParserAliasValue</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.instCoeParserParserAliasValue","kind":"instance","line":234,"name":"Lean.Parser.instCoeParserParserAliasValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L234-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerAlias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">ParserAliasValue</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">ParserAliasInfo</a> := <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.mk\">{</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.mk\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerAlias","kind":"def","line":228,"name":"Lean.Parser.registerAlias","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L228-L232"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getParserAliasInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getParserAliasInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">ParserAliasInfo</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getParserAliasInfo","kind":"def","line":224,"name":"Lean.Parser.getParserAliasInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L224-L225"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserAliases2infoRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserAliases2infoRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">NameMap</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">ParserAliasInfo</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAliases2infoRef","kind":"opaque","line":222,"name":"Lean.Parser.parserAliases2infoRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L222-L222"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserAlias2kindRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserAlias2kindRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">NameMap</a> <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAlias2kindRef","kind":"opaque","line":221,"name":"Lean.Parser.parserAlias2kindRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L221-L221"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserAliasesRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserAliasesRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">NameMap</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">ParserAliasValue</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAliasesRef","kind":"opaque","line":220,"name":"Lean.Parser.parserAliasesRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L220-L220"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.autoGroupArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasInfo</span>.<span class=\"name\">autoGroupArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">ParserAliasInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Whether arguments should be wrapped in `group(·)` if they do not produce exactly one syntax node. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.autoGroupArgs","kind":"def","line":218,"name":"Lean.Parser.ParserAliasInfo.autoGroupArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L218-L218"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.stackSz?\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasInfo</span>.<span class=\"name\">stackSz?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">ParserAliasInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"Number of syntax nodes produced by this parser. `none` means \"sum of input sizes\". ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.stackSz?","kind":"def","line":216,"name":"Lean.Parser.ParserAliasInfo.stackSz?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L216-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasInfo</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">ParserAliasInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.declName","kind":"def","line":214,"name":"Lean.Parser.ParserAliasInfo.declName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L214-L214"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stackSz?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">autoGroupArgs</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">ParserAliasInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.mk","kind":"ctor","line":213,"name":"Lean.Parser.ParserAliasInfo.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L213-L213"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo","kind":"structure","line":213,"name":"Lean.Parser.ParserAliasInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L213-L218"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue","kind":"def","line":211,"name":"Lean.Parser.ParserAliasValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L211-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getBinaryAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getBinaryAlias</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapRef</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\">AliasTable</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getBinaryAlias","kind":"def","line":205,"name":"Lean.Parser.getBinaryAlias","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L205-L209"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getUnaryAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getUnaryAlias</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapRef</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\">AliasTable</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\">α</span> → <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getUnaryAlias","kind":"def","line":199,"name":"Lean.Parser.getUnaryAlias","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L199-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getConstAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getConstAlias</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapRef</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\">AliasTable</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getConstAlias","kind":"def","line":192,"name":"Lean.Parser.getConstAlias","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L192-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getAlias</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapRef</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\">AliasTable</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\">AliasValue</a> <span class=\"fn\">α</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getAlias","kind":"def","line":189,"name":"Lean.Parser.getAlias","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L189-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerAliasCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerAliasCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapRef</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\">AliasTable</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\">AliasValue</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerAliasCore","kind":"def","line":183,"name":"Lean.Parser.registerAliasCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L183-L187"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">AliasTable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasTable","kind":"def","line":181,"name":"Lean.Parser.AliasTable","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L181-L181"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.binary\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">AliasValue</span>.<span class=\"name\">binary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\">AliasValue</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.binary","kind":"ctor","line":179,"name":"Lean.Parser.AliasValue.binary","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L179-L179"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.unary\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">AliasValue</span>.<span class=\"name\">unary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\">AliasValue</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.unary","kind":"ctor","line":178,"name":"Lean.Parser.AliasValue.unary","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L178-L178"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.const\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">AliasValue</span>.<span class=\"name\">const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\">AliasValue</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.const","kind":"ctor","line":177,"name":"Lean.Parser.AliasValue.const","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L177-L177"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">AliasValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Parser aliases for making `ParserDescr` extensible ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasValue","kind":"inductive","line":175,"name":"Lean.Parser.AliasValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L175-L179"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.addEntryImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">addEntryImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.addEntryImpl","kind":"def","line":158,"name":"Lean.Parser.ParserExtension.addEntryImpl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L158-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addParserTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addParserTokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tokenTable</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addParserTokens","kind":"def","line":148,"name":"Lean.Parser.addParserTokens","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L148-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">categories</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leading</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addParser","kind":"def","line":142,"name":"Lean.Parser.addParser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L142-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addTrailingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addTrailingParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">categories</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TrailingParser\">TrailingParser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addTrailingParser","kind":"def","line":134,"name":"Lean.Parser.addTrailingParser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L134-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addLeadingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addLeadingParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">categories</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addLeadingParser","kind":"def","line":106,"name":"Lean.Parser.addLeadingParser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L106-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">categories</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory\">ParserCategory</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getCategory","kind":"def","line":103,"name":"Lean.Parser.getCategory","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L103-L104"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.throwUnknownParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">throwUnknownParserCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Except.html#ExceptT\">ExceptT</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Control/Id.html#Id\">Id</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.throwUnknownParserCategory","kind":"def","line":100,"name":"Lean.Parser.throwUnknownParserCategory","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L100-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension","kind":"def","line":86,"name":"Lean.Parser.ParserExtension","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L86-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">instInhabitedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedState","kind":"instance","line":81,"name":"Lean.Parser.ParserExtension.instInhabitedState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L81-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedState.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">instInhabitedState</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedState.default","kind":"def","line":81,"name":"Lean.Parser.ParserExtension.instInhabitedState.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L81-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.categories\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">categories</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.categories","kind":"def","line":80,"name":"Lean.Parser.ParserExtension.State.categories","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L80-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.kinds\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">kinds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.kinds","kind":"def","line":79,"name":"Lean.Parser.ParserExtension.State.kinds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.tokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">tokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.tokens","kind":"def","line":78,"name":"Lean.Parser.ParserExtension.State.tokens","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L78-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tokens</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kinds</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">categories</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.mk","kind":"ctor","line":77,"name":"Lean.Parser.ParserExtension.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L77-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State","kind":"structure","line":77,"name":"Lean.Parser.ParserExtension.State","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L77-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.toOLeanEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">toOLeanEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a> → <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">OLeanEntry</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.toOLeanEntry","kind":"def","line":71,"name":"Lean.Parser.ParserExtension.Entry.toOLeanEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L71-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedEntry.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">instInhabitedEntry</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedEntry.default","kind":"def","line":69,"name":"Lean.Parser.ParserExtension.instInhabitedEntry.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">instInhabitedEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedEntry","kind":"instance","line":69,"name":"Lean.Parser.ParserExtension.instInhabitedEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.parser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">parser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leading</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.parser","kind":"ctor","line":68,"name":"Lean.Parser.ParserExtension.Entry.parser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.category\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">category</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">behavior</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">LeadingIdentBehavior</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.category","kind":"ctor","line":67,"name":"Lean.Parser.ParserExtension.Entry.category","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L67-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.kind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">kind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.kind","kind":"ctor","line":66,"name":"Lean.Parser.ParserExtension.Entry.kind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L66-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.token\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">token</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.token","kind":"ctor","line":65,"name":"Lean.Parser.ParserExtension.Entry.token","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry","kind":"inductive","line":64,"name":"Lean.Parser.ParserExtension.Entry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L64-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedOLeanEntry.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">instInhabitedOLeanEntry</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">OLeanEntry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedOLeanEntry.default","kind":"def","line":62,"name":"Lean.Parser.ParserExtension.instInhabitedOLeanEntry.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedOLeanEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">instInhabitedOLeanEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">OLeanEntry</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedOLeanEntry","kind":"instance","line":62,"name":"Lean.Parser.ParserExtension.instInhabitedOLeanEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.parser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">OLeanEntry</span>.<span class=\"name\">parser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">OLeanEntry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.parser","kind":"ctor","line":61,"name":"Lean.Parser.ParserExtension.OLeanEntry.parser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.category\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">OLeanEntry</span>.<span class=\"name\">category</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">behavior</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">LeadingIdentBehavior</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">OLeanEntry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.category","kind":"ctor","line":60,"name":"Lean.Parser.ParserExtension.OLeanEntry.category","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.kind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">OLeanEntry</span>.<span class=\"name\">kind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">OLeanEntry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.kind","kind":"ctor","line":59,"name":"Lean.Parser.ParserExtension.OLeanEntry.kind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.token\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">OLeanEntry</span>.<span class=\"name\">token</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">OLeanEntry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.token","kind":"ctor","line":58,"name":"Lean.Parser.ParserExtension.OLeanEntry.token","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">OLeanEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry","kind":"inductive","line":57,"name":"Lean.Parser.ParserExtension.OLeanEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L57-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.builtinParserCategoriesRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">builtinParserCategoriesRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.builtinParserCategoriesRef","kind":"opaque","line":37,"name":"Lean.Parser.builtinParserCategoriesRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinNodeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerBuiltinNodeKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinNodeKind","kind":"def","line":25,"name":"Lean.Parser.registerBuiltinNodeKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L25-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.builtinSyntaxNodeKindSetRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">builtinSyntaxNodeKindSetRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.builtinSyntaxNodeKindSetRef","kind":"opaque","line":23,"name":"Lean.Parser.builtinSyntaxNodeKindSetRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.builtinTokenTable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">builtinTokenTable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.builtinTokenTable","kind":"opaque","line":20,"name":"Lean.Parser.builtinTokenTable","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Extension.lean#L20-L20"}}],"imports":["Lean.Parser.Basic","Lean.ScopedEnvExtension","Lean.BuiltinDocAttr"],"instances":[{"className":"Inhabited","name":"Lean.Parser.ParserExtension.instInhabitedOLeanEntry","typeNames":["Lean.Parser.ParserExtension.OLeanEntry"]},{"className":"Inhabited","name":"Lean.Parser.ParserExtension.instInhabitedEntry","typeNames":["Lean.Parser.ParserExtension.Entry"]},{"className":"Inhabited","name":"Lean.Parser.ParserExtension.instInhabitedState","typeNames":["Lean.Parser.ParserExtension.State"]},{"className":"Coe","name":"Lean.Parser.instCoeParserParserAliasValue","typeNames":["Lean.Parser.Parser","Lean.Parser.ParserAliasValue"]},{"className":"Coe","name":"Lean.Parser.instCoeForallParserParserAliasValue","typeNames":["Lean.Parser.ParserAliasValue"]},{"className":"Coe","name":"Lean.Parser.instCoeForallParserForallParserAliasValue","typeNames":["Lean.Parser.ParserAliasValue"]}],"name":"Lean.Parser.Extension"}