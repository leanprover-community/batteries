{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.registerSimpleScopedEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">registerSimpleScopedEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">descr</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\">SimpleScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension\">SimpleScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.registerSimpleScopedEnvExtension","kind":"def","line":246,"name":"Lean.registerSimpleScopedEnvExtension","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L246-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.exportEntry?\"><span class=\"name\">Lean</span>.<span class=\"name\">SimpleScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">exportEntry?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.OLeanLevel\">OLeanLevel</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.exportEntry?","kind":"def","line":244,"name":"Lean.SimpleScopedEnvExtension.Descr.exportEntry?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L244-L244"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.finalizeImport\"><span class=\"name\">Lean</span>.<span class=\"name\">SimpleScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">finalizeImport</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.finalizeImport","kind":"def","line":243,"name":"Lean.SimpleScopedEnvExtension.Descr.finalizeImport","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L243-L243"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.initial\"><span class=\"name\">Lean</span>.<span class=\"name\">SimpleScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">initial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.initial","kind":"def","line":242,"name":"Lean.SimpleScopedEnvExtension.Descr.initial","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L242-L242"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.addEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">SimpleScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">addEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.addEntry","kind":"def","line":241,"name":"Lean.SimpleScopedEnvExtension.Descr.addEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L241-L241"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.name\"><span class=\"name\">Lean</span>.<span class=\"name\">SimpleScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">name</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.name","kind":"def","line":240,"name":"Lean.SimpleScopedEnvExtension.Descr.name","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L240-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">SimpleScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addEntry</span> : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initial</span> : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">finalizeImport</span> : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exportEntry?</span> : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.OLeanLevel\">OLeanLevel</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.mk","kind":"ctor","line":239,"name":"Lean.SimpleScopedEnvExtension.Descr.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L239-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\"><span class=\"name\">Lean</span>.<span class=\"name\">SimpleScopedEnvExtension</span>.<span class=\"name\">Descr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr","kind":"structure","line":239,"name":"Lean.SimpleScopedEnvExtension.Descr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L239-L244"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">SimpleScopedEnvExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension","kind":"def","line":237,"name":"Lean.SimpleScopedEnvExtension","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L237-L237"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.activateScoped\"><span class=\"name\">Lean</span>.<span class=\"name\">activateScoped</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a>)</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">namespaceName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.activateScoped","kind":"def","line":233,"name":"Lean.activateScoped","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L233-L235"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.setDelimitsLocal\"><span class=\"name\">Lean</span>.<span class=\"name\">setDelimitsLocal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a>)</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Used to implement `end_local_scope` command, that disables delimiting local entries of ScopedEnvExtension in a current scope.\n","docLink":"./Lean/ScopedEnvExtension.html#Lean.setDelimitsLocal","kind":"def","line":227,"name":"Lean.setDelimitsLocal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L227-L231"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.popScope\"><span class=\"name\">Lean</span>.<span class=\"name\">popScope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a>)</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.popScope","kind":"def","line":223,"name":"Lean.popScope","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L223-L225"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.pushScope\"><span class=\"name\">Lean</span>.<span class=\"name\">pushScope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a>)</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.pushScope","kind":"def","line":219,"name":"Lean.pushScope","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L219-L221"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.modifyState\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">modifyState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.modifyState","kind":"def","line":213,"name":"Lean.ScopedEnvExtension.modifyState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L213-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.activateScoped\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">activateScoped</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">namespaceName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.activateScoped","kind":"def","line":193,"name":"Lean.ScopedEnvExtension.activateScoped","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L193-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.getState\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">getState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ </span><span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">asyncMode</span> : <a href=\"./Lean/Environment.html#Lean.EnvExtension.AsyncMode\">EnvExtension.AsyncMode</a> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ext</span>.<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ext\">ext</a></span>.<a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.toEnvExtension\">toEnvExtension</a></span>.<a href=\"./Lean/Environment.html#Lean.EnvExtension.asyncMode\">asyncMode</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.getState","kind":"def","line":187,"name":"Lean.ScopedEnvExtension.getState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L187-L191"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.add\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ResolveName.html#Lean.MonadResolveName\">MonadResolveName</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">AttributeKind</a> := <a href=\"./Lean/Attributes.html#Lean.AttributeKind.global\">AttributeKind.global</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.add","kind":"def","line":183,"name":"Lean.ScopedEnvExtension.add","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L183-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addCore\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">addCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">AttributeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">namespaceName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addCore","kind":"def","line":177,"name":"Lean.ScopedEnvExtension.addCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L177-L181"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addLocalEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">addLocalEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addLocalEntry","kind":"def","line":173,"name":"Lean.ScopedEnvExtension.addLocalEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L173-L175"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.stateStackModify\"><span class=\"name\">Lean</span>.<span class=\"name\">stateStackModify</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">states</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State\">ScopedEnvExtension.State</a> <span class=\"fn\">σ</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State\">ScopedEnvExtension.State</a> <span class=\"fn\">σ</span>)</span></span></div></div>","info":{"doc":"The following function is used to implement `end_local_scope` command.\n\nBy default, all states have `delimitsLocal` set to `true`, and the following code modifies only the top element of the stack.\nIf the top element’s `delimitsLocal` is `false`, the function instead traverses down the stack until it reaches the first state where `delimitsLocal` is `true`.\nIntuitively, `delimitsLocal` of each `State` determines whether local entries are delimited. When set to false, it allows traversal through implicit scopes where local entries are not delimited.\n","docLink":"./Lean/ScopedEnvExtension.html#Lean.stateStackModify","kind":"def","line":159,"name":"Lean.stateStackModify","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L159-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addScopedEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">addScopedEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">namespaceName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addScopedEntry","kind":"def","line":156,"name":"Lean.ScopedEnvExtension.addScopedEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L156-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">addEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addEntry","kind":"def","line":153,"name":"Lean.ScopedEnvExtension.addEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L153-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.setDelimitsLocal\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">setDelimitsLocal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"Modifies `delimitsLocal` flag to `false` to turn off delimiting of local entries.\n","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.setDelimitsLocal","kind":"def","line":145,"name":"Lean.ScopedEnvExtension.setDelimitsLocal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L145-L151"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.popScope\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">popScope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.popScope","kind":"def","line":139,"name":"Lean.ScopedEnvExtension.popScope","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L139-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.pushScope\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">pushScope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.pushScope","kind":"def","line":133,"name":"Lean.ScopedEnvExtension.pushScope","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L133-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.registerScopedEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">registerScopedEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">descr</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.registerScopedEnvExtension","kind":"opaque","line":130,"name":"Lean.registerScopedEnvExtension","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L130-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.registerScopedEnvExtensionUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">registerScopedEnvExtensionUnsafe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">descr</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.registerScopedEnvExtensionUnsafe","kind":"def","line":112,"name":"Lean.registerScopedEnvExtensionUnsafe","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L112-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.scopedEnvExtensionsRef\"><span class=\"name\">Lean</span>.<span class=\"name\">scopedEnvExtensionsRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\">EnvExtensionEntry</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\">EnvExtensionEntry</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">EnvExtensionState</a>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.scopedEnvExtensionsRef","kind":"opaque","line":110,"name":"Lean.scopedEnvExtensionsRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L110-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.instInhabitedScopedEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedScopedEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝¹ </span><span class=\"fn\">a✝²</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">a✝</span> <span class=\"fn\">a✝¹</span> <span class=\"fn\">a✝²</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.instInhabitedScopedEnvExtension","kind":"instance","line":108,"name":"Lean.instInhabitedScopedEnvExtension","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L108-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.instInhabitedScopedEnvExtension.default\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedScopedEnvExtension</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝¹ </span><span class=\"fn\">a✝²</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">a✝</span> <span class=\"fn\">a✝¹</span> <span class=\"fn\">a✝²</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.instInhabitedScopedEnvExtension.default","kind":"def","line":108,"name":"Lean.instInhabitedScopedEnvExtension.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L108-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">PersistentEnvExtension</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Entry</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Entry</a> <span class=\"fn\">β</span>)</span> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ext","kind":"def","line":107,"name":"Lean.ScopedEnvExtension.ext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L107-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.descr\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">descr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.descr","kind":"def","line":106,"name":"Lean.ScopedEnvExtension.descr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L106-L106"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">descr</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">PersistentEnvExtension</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Entry</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Entry</a> <span class=\"fn\">β</span>)</span> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.mk","kind":"ctor","line":105,"name":"Lean.ScopedEnvExtension.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L105-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension","kind":"structure","line":105,"name":"Lean.ScopedEnvExtension","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L105-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.exportEntriesFn\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">exportEntriesFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">descr</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">level</span> : <a href=\"./Lean/Environment.html#Lean.OLeanLevel\">OLeanLevel</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Entry</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.exportEntriesFn","kind":"def","line":96,"name":"Lean.ScopedEnvExtension.exportEntriesFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L96-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addEntryFn\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">addEntryFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">descr</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Entry</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addEntryFn","kind":"def","line":76,"name":"Lean.ScopedEnvExtension.addEntryFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L76-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addImportedFn\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">addImportedFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">descr</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Entry</a> <span class=\"fn\">α</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addImportedFn","kind":"def","line":61,"name":"Lean.ScopedEnvExtension.addImportedFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L61-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">ScopedEntries</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">scopedEntries</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\">ScopedEntries</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ns</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\">ScopedEntries</a> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries.insert","kind":"def","line":56,"name":"Lean.ScopedEnvExtension.ScopedEntries.insert","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L56-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.mkInitial\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">mkInitial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">descr</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.mkInitial","kind":"def","line":53,"name":"Lean.ScopedEnvExtension.mkInitial","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L53-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedDescr\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">instInhabitedDescr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedDescr","kind":"instance","line":44,"name":"Lean.ScopedEnvExtension.instInhabitedDescr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L44-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.exportEntry?\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">exportEntry?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.OLeanLevel\">OLeanLevel</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.exportEntry?","kind":"def","line":42,"name":"Lean.ScopedEnvExtension.Descr.exportEntry?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.finalizeImport\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">finalizeImport</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.finalizeImport","kind":"def","line":41,"name":"Lean.ScopedEnvExtension.Descr.finalizeImport","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.addEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">addEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">σ</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.addEntry","kind":"def","line":40,"name":"Lean.ScopedEnvExtension.Descr.addEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.toOLeanEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">toOLeanEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.toOLeanEntry","kind":"def","line":39,"name":"Lean.ScopedEnvExtension.Descr.toOLeanEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.ofOLeanEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">ofOLeanEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> <span class=\"fn\">β</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.ofOLeanEntry","kind":"def","line":38,"name":"Lean.ScopedEnvExtension.Descr.ofOLeanEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.mkInitial\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">mkInitial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.mkInitial","kind":"def","line":37,"name":"Lean.ScopedEnvExtension.Descr.mkInitial","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.name\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">name</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.name","kind":"def","line":36,"name":"Lean.ScopedEnvExtension.Descr.name","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mkInitial</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ofOLeanEntry</span> : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toOLeanEntry</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addEntry</span> : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">finalizeImport</span> : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exportEntry?</span> : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.OLeanLevel\">OLeanLevel</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.mk","kind":"ctor","line":35,"name":"Lean.ScopedEnvExtension.Descr.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr","kind":"structure","line":35,"name":"Lean.ScopedEnvExtension.Descr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L35-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedStateStack\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">instInhabitedStateStack</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝ </span><span class=\"fn\">a✝¹ </span><span class=\"fn\">a✝²</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">StateStack</a> <span class=\"fn\">a✝</span> <span class=\"fn\">a✝¹</span> <span class=\"fn\">a✝²</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedStateStack","kind":"instance","line":33,"name":"Lean.ScopedEnvExtension.instInhabitedStateStack","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedStateStack.default\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">instInhabitedStateStack</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝ </span><span class=\"fn\">a✝¹ </span><span class=\"fn\">a✝²</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">StateStack</a> <span class=\"fn\">a✝</span> <span class=\"fn\">a✝¹</span> <span class=\"fn\">a✝²</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedStateStack.default","kind":"def","line":33,"name":"Lean.ScopedEnvExtension.instInhabitedStateStack.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.newEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">StateStack</span>.<span class=\"name\">newEntries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Entry</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.newEntries","kind":"def","line":32,"name":"Lean.ScopedEnvExtension.StateStack.newEntries","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.scopedEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">StateStack</span>.<span class=\"name\">scopedEntries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\">ScopedEntries</a> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.scopedEntries","kind":"def","line":31,"name":"Lean.ScopedEnvExtension.StateStack.scopedEntries","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.stateStack\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">StateStack</span>.<span class=\"name\">stateStack</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State\">State</a> <span class=\"fn\">σ</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.stateStack","kind":"def","line":30,"name":"Lean.ScopedEnvExtension.StateStack.stateStack","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L30-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">StateStack</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stateStack</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State\">State</a> <span class=\"fn\">σ</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">scopedEntries</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\">ScopedEntries</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newEntries</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Entry</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.mk","kind":"ctor","line":29,"name":"Lean.ScopedEnvExtension.StateStack.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">StateStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack","kind":"structure","line":29,"name":"Lean.ScopedEnvExtension.StateStack","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L29-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedScopedEntries.default\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">instInhabitedScopedEntries</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\">ScopedEntries</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedScopedEntries.default","kind":"def","line":28,"name":"Lean.ScopedEnvExtension.instInhabitedScopedEntries.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedScopedEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">instInhabitedScopedEntries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\">ScopedEntries</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedScopedEntries","kind":"instance","line":28,"name":"Lean.ScopedEnvExtension.instInhabitedScopedEntries","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries.map\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">ScopedEntries</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\">ScopedEntries</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/SMap.html#Lean.SMap\">SMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentArray.html#Lean.PArray\">PArray</a> <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries.map","kind":"def","line":27,"name":"Lean.ScopedEnvExtension.ScopedEntries.map","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">ScopedEntries</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Lean/Data/SMap.html#Lean.SMap\">SMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentArray.html#Lean.PArray\">PArray</a> <span class=\"fn\">β</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\">ScopedEntries</a> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries.mk","kind":"ctor","line":26,"name":"Lean.ScopedEnvExtension.ScopedEntries.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">ScopedEntries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries","kind":"structure","line":26,"name":"Lean.ScopedEnvExtension.ScopedEntries","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L26-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State.delimitsLocal\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">delimitsLocal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State\">State</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State.delimitsLocal","kind":"def","line":24,"name":"Lean.ScopedEnvExtension.State.delimitsLocal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State.activeScopes\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">activeScopes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State\">State</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameSet\">NameSet</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State.activeScopes","kind":"def","line":23,"name":"Lean.ScopedEnvExtension.State.activeScopes","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State.state\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">state</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State\">State</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State.state","kind":"def","line":22,"name":"Lean.ScopedEnvExtension.State.state","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">state</span> : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">activeScopes</span> : <a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameSet\">NameSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">delimitsLocal</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State\">State</a> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State.mk","kind":"ctor","line":21,"name":"Lean.ScopedEnvExtension.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State","kind":"structure","line":21,"name":"Lean.ScopedEnvExtension.State","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L21-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry.scoped\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">scoped</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Entry</a> <span class=\"fn\">α</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry.scoped","kind":"ctor","line":19,"name":"Lean.ScopedEnvExtension.Entry.scoped","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry.global\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">global</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Entry</a> <span class=\"fn\">α</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry.global","kind":"ctor","line":18,"name":"Lean.ScopedEnvExtension.Entry.global","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Entry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry","kind":"inductive","line":17,"name":"Lean.ScopedEnvExtension.Entry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ScopedEnvExtension.lean#L17-L19"}}],"imports":["Lean.Attributes"],"instances":[{"className":"Inhabited","name":"Lean.ScopedEnvExtension.instInhabitedScopedEntries","typeNames":["Lean.ScopedEnvExtension.ScopedEntries"]},{"className":"Inhabited","name":"Lean.ScopedEnvExtension.instInhabitedStateStack","typeNames":["Lean.ScopedEnvExtension.StateStack"]},{"className":"Inhabited","name":"Lean.ScopedEnvExtension.instInhabitedDescr","typeNames":["Lean.ScopedEnvExtension.Descr"]},{"className":"Inhabited","name":"Lean.instInhabitedScopedEnvExtension","typeNames":["Lean.ScopedEnvExtension"]}],"name":"Lean.ScopedEnvExtension"}