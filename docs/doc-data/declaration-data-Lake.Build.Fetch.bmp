{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.ModuleFacet.fetch\"><span class=\"name\">Lake</span>.<span class=\"name\">ModuleFacet</span>.<span class=\"name\">fetch</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Facets.html#Lake.ModuleFacet\">ModuleFacet</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <a href=\"./Lake/Config/Module.html#Lake.Module\">Module</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Fetch the result of this facet of a module. ","docLink":"./Lake/Build/Fetch.html#Lake.ModuleFacet.fetch","kind":"def","line":107,"name":"Lake.ModuleFacet.fetch","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L107-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.BuildInfo.fetch\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildInfo</span>.<span class=\"name\">fetch</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Info.html#Lake.BuildInfo\">BuildInfo</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyOut\">FamilyOut</a> <a href=\"./Lake/Build/Data.html#Lake.BuildData\">BuildData</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Lake/Build/Info.html#Lake.BuildInfo.key\">key</a></span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Fetch the result associated with the info using the Lake build index. ","docLink":"./Lake/Build/Fetch.html#Lake.BuildInfo.fetch","kind":"def","line":101,"name":"Lake.BuildInfo.fetch","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L101-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.FetchM.toFn\"><span class=\"name\">Lake</span>.<span class=\"name\">FetchM</span>.<span class=\"name\">toFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.IndexBuildFn\">IndexBuildFn</a> <a href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\">RecBuildM</a></span> →\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Config/Package.html#Lake.Package\">Package</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Util/Cycle.html#Lake.CallStack\">CallStack</a> <a href=\"./Lake/Build/Key.html#Lake.BuildKey\">BuildKey</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">BuildStore</a></span> → <span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildContext\">BuildContext</a> → <span class=\"fn\"><a href=\"./Lake/Util/Log.html#Lake.Log\">Log</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lake/Util/EStateT.html#Lake.EResult\">EResult</a> <a href=\"./Lake/Util/Log.html#Lake.Log.Pos\">Log.Pos</a> <a href=\"./Lake/Util/Log.html#Lake.Log\">Log</a> <span class=\"fn\">α</span>)</span></span></span></span></span></span></span></span></div></div>","info":{"doc":"Convert a `FetchM` monad to its full functional representation. ","docLink":"./Lake/Build/Fetch.html#Lake.FetchM.toFn","kind":"def","line":95,"name":"Lake.FetchM.toFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L95-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.FetchM.ofFn\"><span class=\"name\">Lake</span>.<span class=\"name\">FetchM</span>.<span class=\"name\">ofFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> :\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.IndexBuildFn\">IndexBuildFn</a> <a href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\">RecBuildM</a></span> →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Config/Package.html#Lake.Package\">Package</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Util/Cycle.html#Lake.CallStack\">CallStack</a> <a href=\"./Lake/Build/Key.html#Lake.BuildKey\">BuildKey</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">BuildStore</a></span> → <span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildContext\">BuildContext</a> → <span class=\"fn\"><a href=\"./Lake/Util/Log.html#Lake.Log\">Log</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lake/Util/EStateT.html#Lake.EResult\">EResult</a> <a href=\"./Lake/Util/Log.html#Lake.Log.Pos\">Log.Pos</a> <a href=\"./Lake/Util/Log.html#Lake.Log\">Log</a> <span class=\"fn\">α</span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Construct a `FetchM` monad from its full functional representation. ","docLink":"./Lake/Build/Fetch.html#Lake.FetchM.ofFn","kind":"def","line":88,"name":"Lake.FetchM.ofFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L88-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.FetchM\"><span class=\"name\">Lake</span>.<span class=\"name\">FetchM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The top-level monad for Lake build functions. ","docLink":"./Lake/Build/Fetch.html#Lake.FetchM","kind":"def","line":85,"name":"Lake.FetchM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L85-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.FetchT\"><span class=\"name\">Lake</span>.<span class=\"name\">FetchT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The top-level monad transformer for Lake build functions. ","docLink":"./Lake/Build/Fetch.html#Lake.FetchT","kind":"def","line":82,"name":"Lake.FetchT","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L82-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.IndexT\"><span class=\"name\">Lake</span>.<span class=\"name\">IndexT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> v</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>","info":{"doc":"A transformer to equip a monad with a build function for the Lake index. ","docLink":"./Lake/Build/Fetch.html#Lake.IndexT","kind":"def","line":79,"name":"Lake.IndexT","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L79-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.IndexBuildFn\"><span class=\"name\">Lake</span>.<span class=\"name\">IndexBuildFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> v</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>","info":{"doc":"A build function for any element of the Lake build index. ","docLink":"./Lake/Build/Fetch.html#Lake.IndexBuildFn","kind":"def","line":74,"name":"Lake.IndexBuildFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L74-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.RecBuildT.run'\"><span class=\"name\">Lake</span>.<span class=\"name\">RecBuildT</span>.<span class=\"name\">run'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a>)</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.RecBuildT\">RecBuildT</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildT\">BuildT</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Run a recursive build in a fresh build store. ","docLink":"./Lake/Build/Fetch.html#Lake.RecBuildT.run'","kind":"def","line":69,"name":"Lake.RecBuildT.run'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L69-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.RecBuildT.run\"><span class=\"name\">Lake</span>.<span class=\"name\">RecBuildT</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a>)</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <span class=\"fn\"><a href=\"./Lake/Util/Cycle.html#Lake.CallStack\">CallStack</a> <a href=\"./Lake/Build/Key.html#Lake.BuildKey\">BuildKey</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">store</span> : <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">BuildStore</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.RecBuildT\">RecBuildT</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildT\">BuildT</a> <span class=\"fn\">m</span> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">BuildStore</a>)</span></div></div>","info":{"doc":"Run a recursive build. ","docLink":"./Lake/Build/Fetch.html#Lake.RecBuildT.run","kind":"def","line":63,"name":"Lake.RecBuildT.run","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L63-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\"><span class=\"name\">Lake</span>.<span class=\"name\">RecBuildM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A recursive build of a Lake build store that may encounter a cycle.\n\nAn internal monad. **Not intended for user use.**\n","docLink":"./Lake/Build/Fetch.html#Lake.RecBuildM","kind":"def","line":56,"name":"Lake.RecBuildM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L56-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.instMonadCycleOfBuildKeyRecBuildTOfMonadOfMonadError\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadCycleOfBuildKeyRecBuildTOfMonadOfMonadError</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Error.html#Lake.MonadError\">MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Cycle.html#Lake.MonadCycleOf\">MonadCycleOf</a> <a href=\"./Lake/Build/Key.html#Lake.BuildKey\">BuildKey</a> <span class=\"fn\">(<a href=\"./Lake/Build/Fetch.html#Lake.RecBuildT\">RecBuildT</a> <span class=\"fn\">m</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Fetch.html#Lake.instMonadCycleOfBuildKeyRecBuildTOfMonadOfMonadError","kind":"instance","line":53,"name":"Lake.instMonadCycleOfBuildKeyRecBuildTOfMonadOfMonadError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L53-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.buildCycleError\"><span class=\"name\">Lake</span>.<span class=\"name\">buildCycleError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cycle</span> : <span class=\"fn\"><a href=\"./Lake/Util/Cycle.html#Lake.Cycle\">Cycle</a> <a href=\"./Lake/Build/Key.html#Lake.BuildKey\">BuildKey</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"Build cycle error message. ","docLink":"./Lake/Build/Fetch.html#Lake.buildCycleError","kind":"def","line":49,"name":"Lake.buildCycleError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L49-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.RecBuildT\"><span class=\"name\">Lake</span>.<span class=\"name\">RecBuildT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A recursive build of a Lake build store that may encounter a cycle.\n\nAn internal monad. **Not intended for user use.**\n","docLink":"./Lake/Build/Fetch.html#Lake.RecBuildT","kind":"def","line":41,"name":"Lake.RecBuildT","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L41-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.getCurrPackage?\"><span class=\"name\">Lake</span>.<span class=\"name\">getCurrPackage?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadReaderOf\">MonadReaderOf</a> <a href=\"./Lake/Build/Fetch.html#Lake.CurrPackage\">CurrPackage</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Config/Package.html#Lake.Package\">Package</a>)</span></span></div></div>","info":{"doc":"Get the package of the context (if any). ","docLink":"./Lake/Build/Fetch.html#Lake.getCurrPackage?","kind":"def","line":38,"name":"Lake.getCurrPackage?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L38-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.withCurrPackage\"><span class=\"name\">Lake</span>.<span class=\"name\">withCurrPackage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadWithReader\">MonadWithReader</a> <a href=\"./Lake/Build/Fetch.html#Lake.CurrPackage\">CurrPackage</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <a href=\"./Lake/Config/Package.html#Lake.Package\">Package</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Run the action `x` with `pkg` as the current package. ","docLink":"./Lake/Build/Fetch.html#Lake.withCurrPackage","kind":"def","line":34,"name":"Lake.withCurrPackage","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L34-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.withCurrPackage?\"><span class=\"name\">Lake</span>.<span class=\"name\">withCurrPackage?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadWithReader\">MonadWithReader</a> <a href=\"./Lake/Build/Fetch.html#Lake.CurrPackage\">CurrPackage</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Config/Package.html#Lake.Package\">Package</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Run the action `x` with `pkg?` as the current package or no package if `none`. ","docLink":"./Lake/Build/Fetch.html#Lake.withCurrPackage?","kind":"def","line":30,"name":"Lake.withCurrPackage?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L30-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.CurrPackage\"><span class=\"name\">Lake</span>.<span class=\"name\">CurrPackage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A type alias for `Option Package` that assists monad type class synthesis. ","docLink":"./Lake/Build/Fetch.html#Lake.CurrPackage","kind":"def","line":27,"name":"Lake.CurrPackage","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Fetch.lean#L27-L28"}}],"imports":["Lake.Build.Info","Lake.Build.Store","Lake.Build.Context","Lake.Config.Module","Lake.Util.EquipT","Lake.Util.Cycle","Lake.Build.Infos"],"instances":[{"className":"Lake.MonadCycleOf","name":"Lake.instMonadCycleOfBuildKeyRecBuildTOfMonadOfMonadError","typeNames":["Lake.BuildKey","Lake.RecBuildT"]}],"name":"Lake.Build.Fetch"}