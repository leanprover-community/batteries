{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/FloatArray.html#FloatArray.map\"><span class=\"name\">FloatArray</span>.<span class=\"name\">map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></div></div>","info":{"doc":"`map f a` applies the function `f` to each element of the array. ","docLink":"./Batteries/Data/FloatArray.html#FloatArray.map","kind":"def","line":42,"name":"FloatArray.map","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/FloatArray.lean#L42-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/FloatArray.html#FloatArray.mapM\"><span class=\"name\">FloatArray</span>.<span class=\"name\">mapM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></span></div></div>","info":{"doc":"`mapM f a` applies the monadic function `f` to each element of the array. ","docLink":"./Batteries/Data/FloatArray.html#FloatArray.mapM","kind":"def","line":34,"name":"FloatArray.mapM","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/FloatArray.lean#L34-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/FloatArray.html#FloatArray.mapMUnsafe.loop\"><span class=\"name\">FloatArray</span>.<span class=\"name\">mapMUnsafe</span>.<span class=\"name\">loop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></span></div></div>","info":{"doc":"Inner loop for `mapMUnsafe`. ","docLink":"./Batteries/Data/FloatArray.html#FloatArray.mapMUnsafe.loop","kind":"def","line":26,"name":"FloatArray.mapMUnsafe.loop","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/FloatArray.lean#L26-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/FloatArray.html#FloatArray.mapMUnsafe\"><span class=\"name\">FloatArray</span>.<span class=\"name\">mapMUnsafe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></span></div></div>","info":{"doc":"Unsafe optimized implementation of `mapM`.\n\nThis function is unsafe because it relies on the implementation limit that the size of an array is\nalways less than `USize.size`.\n","docLink":"./Batteries/Data/FloatArray.html#FloatArray.mapMUnsafe","kind":"def","line":14,"name":"FloatArray.mapMUnsafe","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/FloatArray.lean#L14-L32"}}],"imports":["Init"],"instances":[],"name":"Batteries.Data.FloatArray"}