{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.importedBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">importedBy</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">requestedMod</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.ModuleImport\">ModuleImport</a></span></div></div>","info":{"doc":"Yields all imports that import the given `requestedMod`. ","docLink":"./Lean/Server/References.html#Lean.Server.References.importedBy","kind":"def","line":778,"name":"Lean.Server.References.importedBy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L778-L792"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.definitionsMatching\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">definitionsMatching</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filterMapIdent</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cancelTk?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition\">MatchedDefinition</a> <span class=\"fn\">α</span>)</span>)</span></span></div></div>","info":{"doc":"Yields all definitions matching the given `filter`. ","docLink":"./Lean/Server/References.html#Lean.Server.References.definitionsMatching","kind":"def","line":759,"name":"Lean.Server.References.definitionsMatching","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L759-L776"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.range\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">MatchedDefinition</span>.<span class=\"name\">range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition\">MatchedDefinition</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Range\">Lsp.Range</a></div></div>","info":{"doc":"Definition range of matched identifier. ","docLink":"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.range","kind":"def","line":757,"name":"Lean.Server.References.MatchedDefinition.range","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L757-L757"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.ident\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">MatchedDefinition</span>.<span class=\"name\">ident</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition\">MatchedDefinition</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"Result of `filterMapIdent`. ","docLink":"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.ident","kind":"def","line":755,"name":"Lean.Server.References.MatchedDefinition.ident","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L755-L755"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.modUri\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">MatchedDefinition</span>.<span class=\"name\">modUri</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition\">MatchedDefinition</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a></div></div>","info":{"doc":"URI for `mod`. ","docLink":"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.modUri","kind":"def","line":753,"name":"Lean.Server.References.MatchedDefinition.modUri","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L753-L753"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.mod\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">MatchedDefinition</span>.<span class=\"name\">mod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition\">MatchedDefinition</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"Result of `filterMapMod`. ","docLink":"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.mod","kind":"def","line":751,"name":"Lean.Server.References.MatchedDefinition.mod","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L751-L751"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">MatchedDefinition</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modUri</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ident</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">range</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Range\">Lsp.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition\">MatchedDefinition</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.mk","kind":"ctor","line":749,"name":"Lean.Server.References.MatchedDefinition.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L749-L749"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">MatchedDefinition</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A match in `References.definitionsMatching`. ","docLink":"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition","kind":"structure","line":748,"name":"Lean.Server.References.MatchedDefinition","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L748-L757"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.definitionOf?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">definitionOf?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ident</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">DocumentRefInfo</a></span></div></div>","info":{"doc":"Yields the definition location of `ident`. ","docLink":"./Lean/Server/References.html#Lean.Server.References.definitionOf?","kind":"def","line":737,"name":"Lean.Server.References.definitionOf?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L737-L746"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.referringTo\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">referringTo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ident</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeDefinition</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">DocumentRefInfo</a></span></div></div>","info":{"doc":"Yields locations and parent declaration for all references referring to `ident`. ","docLink":"./Lean/Server/References.html#Lean.Server.References.referringTo","kind":"def","line":722,"name":"Lean.Server.References.referringTo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L722-L735"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.parentInfo?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">DocumentRefInfo</span>.<span class=\"name\">parentInfo?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">DocumentRefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo.ParentDecl\">Lsp.RefInfo.ParentDecl</a></span></div></div>","info":{"doc":"Parent declaration of the reference. ","docLink":"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.parentInfo?","kind":"def","line":720,"name":"Lean.Server.References.DocumentRefInfo.parentInfo?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L720-L720"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.module\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">DocumentRefInfo</span>.<span class=\"name\">module</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">DocumentRefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"Module name of the reference. ","docLink":"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.module","kind":"def","line":718,"name":"Lean.Server.References.DocumentRefInfo.module","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L718-L718"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.location\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">DocumentRefInfo</span>.<span class=\"name\">location</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">DocumentRefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Location\">Lsp.Location</a></div></div>","info":{"doc":"Location of the reference. ","docLink":"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.location","kind":"def","line":716,"name":"Lean.Server.References.DocumentRefInfo.location","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L716-L716"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">DocumentRefInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">location</span> : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Location\">Lsp.Location</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">module</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parentInfo?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo.ParentDecl\">Lsp.RefInfo.ParentDecl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">DocumentRefInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.mk","kind":"ctor","line":714,"name":"Lean.Server.References.DocumentRefInfo.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L714-L714"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">DocumentRefInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Location and parent declaration of a reference. ","docLink":"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo","kind":"structure","line":713,"name":"Lean.Server.References.DocumentRefInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L713-L720"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.findRange?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">findRange?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">module</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Position\">Lsp.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Range\">Lsp.Range</a></span></div></div>","info":{"doc":"Yields the first reference in `module` at `pos`. ","docLink":"./Lean/Server/References.html#Lean.Server.References.findRange?","kind":"def","line":708,"name":"Lean.Server.References.findRange?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L708-L711"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.findAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">findAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">module</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Position\">Lsp.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a></span></div></div>","info":{"doc":"Yields all references in `module` at `pos`. ","docLink":"./Lean/Server/References.html#Lean.Server.References.findAt","kind":"def","line":702,"name":"Lean.Server.References.findAt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L702-L706"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.allRefsFor\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">allRefsFor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ident</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">Lsp.RefInfo</a>)</span></div></div>","info":{"doc":"Yields all references in `self` for `ident`, as well as the `DocumentUri` that each\nreference occurs in.\n","docLink":"./Lean/Server/References.html#Lean.Server.References.allRefsFor","kind":"def","line":680,"name":"Lean.Server.References.allRefsFor","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L680-L700"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.getDirectImports?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">getDirectImports?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Server/References.html#Lean.Server.DirectImports\">DirectImports</a></span></div></div>","info":{"doc":"Gets the direct imports of `mod`.\nThe current imports in a file worker take precedence over those in .ilean files.\n","docLink":"./Lean/Server/References.html#Lean.Server.References.getDirectImports?","kind":"def","line":669,"name":"Lean.Server.References.getDirectImports?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L669-L678"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.getModuleRefs?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">getModuleRefs?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a>)</span></div></div>","info":{"doc":"Gets the references for `mod`.\nThe current references in a file worker take precedence over those in .ilean files.\n","docLink":"./Lean/Server/References.html#Lean.Server.References.getModuleRefs?","kind":"def","line":658,"name":"Lean.Server.References.getModuleRefs?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L658-L667"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.allDirectImports\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">allDirectImports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References.AllDirectImportsMap\">AllDirectImportsMap</a></div></div>","info":{"doc":"Yields a map from all modules to all of their direct imports. ","docLink":"./Lean/Server/References.html#Lean.Server.References.allDirectImports","kind":"def","line":649,"name":"Lean.Server.References.allDirectImports","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L649-L656"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.AllDirectImportsMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">AllDirectImportsMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Map from each module to all of its direct imports.\nThe current references in a file worker take precedence over those in .ilean files.\n","docLink":"./Lean/Server/References.html#Lean.Server.References.AllDirectImportsMap","kind":"def","line":643,"name":"Lean.Server.References.AllDirectImportsMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L643-L647"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.allRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">allRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References.AllRefsMap\">AllRefsMap</a></div></div>","info":{"doc":"Yields a map from all modules to all of their references. ","docLink":"./Lean/Server/References.html#Lean.Server.References.allRefs","kind":"def","line":638,"name":"Lean.Server.References.allRefs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L638-L641"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.AllRefsMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">AllRefsMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Map from each module to all of its references.\nThe current references in a file worker take precedence over those in .ilean files.\n","docLink":"./Lean/Server/References.html#Lean.Server.References.AllRefsMap","kind":"def","line":632,"name":"Lean.Server.References.AllRefsMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L632-L636"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.removeWorkerRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">removeWorkerRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></div></div>","info":{"doc":"Erases all worker references in `self` for the worker managing `name`. ","docLink":"./Lean/Server/References.html#Lean.Server.References.removeWorkerRefs","kind":"def","line":628,"name":"Lean.Server.References.removeWorkerRefs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L628-L630"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.finalizeWorkerRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">finalizeWorkerRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moduleUri</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">version</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refs</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></span></div></div>","info":{"doc":"Replaces the worker references in `self` with the `refs` of the worker managing the module `name`\nif `version` is newer than the current version managed in `refs`.\n","docLink":"./Lean/Server/References.html#Lean.Server.References.finalizeWorkerRefs","kind":"def","line":608,"name":"Lean.Server.References.finalizeWorkerRefs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L608-L626"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.updateWorkerRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">updateWorkerRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moduleUri</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">version</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refs</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></span></div></div>","info":{"doc":"Updates the worker references in `self` with the `refs` of the worker managing the module `name`.\nReplaces the current references with `refs` if `version` is newer than the current version managed\nin `refs` and otherwise merges the reference data if `version` is equal to the current version.\n","docLink":"./Lean/Server/References.html#Lean.Server.References.updateWorkerRefs","kind":"def","line":583,"name":"Lean.Server.References.updateWorkerRefs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L583-L606"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.updateWorkerImports\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">updateWorkerImports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moduleUri</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">version</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">directImports</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ImportInfo\">Lsp.ImportInfo</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></span></div></div>","info":{"doc":"Replaces the direct imports of a worker for the module `name` in `self` with\na new set of direct imports.\n","docLink":"./Lean/Server/References.html#Lean.Server.References.updateWorkerImports","kind":"def","line":560,"name":"Lean.Server.References.updateWorkerImports","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L560-L581"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.removeIlean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">removeIlean</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></div></div>","info":{"doc":"Removes the ilean file data at `path` from `self`. ","docLink":"./Lean/Server/References.html#Lean.Server.References.removeIlean","kind":"def","line":554,"name":"Lean.Server.References.removeIlean","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L554-L558"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.addIlean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">addIlean</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ilean</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></span></div></div>","info":{"doc":"Adds the contents of an ilean file `ilean` at `path` to `self`. ","docLink":"./Lean/Server/References.html#Lean.Server.References.addIlean","kind":"def","line":536,"name":"Lean.Server.References.addIlean","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L536-L552"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></div></div>","info":{"doc":"No ilean files, no information from workers. ","docLink":"./Lean/Server/References.html#Lean.Server.References.empty","kind":"def","line":533,"name":"Lean.Server.References.empty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L533-L534"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.instInhabitedReferences\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instInhabitedReferences</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.instInhabitedReferences","kind":"instance","line":529,"name":"Lean.Server.instInhabitedReferences","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L529-L529"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.instInhabitedReferences.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instInhabitedReferences</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.instInhabitedReferences.default","kind":"def","line":529,"name":"Lean.Server.instInhabitedReferences.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L529-L529"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.workers\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">workers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.WorkerRefMap\">WorkerRefMap</a></div></div>","info":{"doc":"References from workers, overriding the corresponding ilean files ","docLink":"./Lean/Server/References.html#Lean.Server.References.workers","kind":"def","line":528,"name":"Lean.Server.References.workers","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L528-L528"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.ileans\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">ileans</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.ILeanMap\">ILeanMap</a></div></div>","info":{"doc":"References loaded from ilean files ","docLink":"./Lean/Server/References.html#Lean.Server.References.ileans","kind":"def","line":526,"name":"Lean.Server.References.ileans","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L526-L526"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ileans</span> : <a href=\"./Lean/Server/References.html#Lean.Server.ILeanMap\">ILeanMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">workers</span> : <a href=\"./Lean/Server/References.html#Lean.Server.WorkerRefMap\">WorkerRefMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.References.mk","kind":"ctor","line":524,"name":"Lean.Server.References.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L524-L524"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"References from ilean files and current ilean information from file workers. ","docLink":"./Lean/Server/References.html#Lean.Server.References","kind":"structure","line":523,"name":"Lean.Server.References","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L523-L529"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.WorkerRefMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">WorkerRefMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Document versions and module references for every module name. Loaded from the current state\nin a file worker.\n","docLink":"./Lean/Server/References.html#Lean.Server.WorkerRefMap","kind":"def","line":517,"name":"Lean.Server.WorkerRefMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L517-L521"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.TransientWorkerILean.refs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">TransientWorkerILean</span>.<span class=\"name\">refs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.TransientWorkerILean\">TransientWorkerILean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a></div></div>","info":{"doc":"References provided by the worker. ","docLink":"./Lean/Server/References.html#Lean.Server.TransientWorkerILean.refs","kind":"def","line":515,"name":"Lean.Server.TransientWorkerILean.refs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L515-L515"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.TransientWorkerILean.directImports\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">TransientWorkerILean</span>.<span class=\"name\">directImports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.TransientWorkerILean\">TransientWorkerILean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.DirectImports\">DirectImports</a></div></div>","info":{"doc":"Direct imports of the module that the file worker is associated with. ","docLink":"./Lean/Server/References.html#Lean.Server.TransientWorkerILean.directImports","kind":"def","line":513,"name":"Lean.Server.TransientWorkerILean.directImports","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L513-L513"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.TransientWorkerILean.version\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">TransientWorkerILean</span>.<span class=\"name\">version</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.TransientWorkerILean\">TransientWorkerILean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Document version for which these references have been collected. ","docLink":"./Lean/Server/References.html#Lean.Server.TransientWorkerILean.version","kind":"def","line":511,"name":"Lean.Server.TransientWorkerILean.version","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L511-L511"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.TransientWorkerILean.moduleUri\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">TransientWorkerILean</span>.<span class=\"name\">moduleUri</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.TransientWorkerILean\">TransientWorkerILean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a></div></div>","info":{"doc":"URI of the module that the file worker is associated with. ","docLink":"./Lean/Server/References.html#Lean.Server.TransientWorkerILean.moduleUri","kind":"def","line":509,"name":"Lean.Server.TransientWorkerILean.moduleUri","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L509-L509"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.TransientWorkerILean.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">TransientWorkerILean</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moduleUri</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">version</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">directImports</span> : <a href=\"./Lean/Server/References.html#Lean.Server.DirectImports\">DirectImports</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refs</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.TransientWorkerILean\">TransientWorkerILean</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.TransientWorkerILean.mk","kind":"ctor","line":507,"name":"Lean.Server.TransientWorkerILean.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L507-L507"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.TransientWorkerILean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">TransientWorkerILean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Transient reference information from a file worker.\nWe track this information so that we have up-to-date reference information before a file has been\nbuilt.\n","docLink":"./Lean/Server/References.html#Lean.Server.TransientWorkerILean","kind":"structure","line":502,"name":"Lean.Server.TransientWorkerILean","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L502-L515"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ILeanMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ILeanMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Paths and module references for every module name. Loaded from `.ilean` files. ","docLink":"./Lean/Server/References.html#Lean.Server.ILeanMap","kind":"def","line":499,"name":"Lean.Server.ILeanMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L499-L500"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.LoadedILean.refs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">LoadedILean</span>.<span class=\"name\">refs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.LoadedILean\">LoadedILean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a></div></div>","info":{"doc":"Reference information from this ILean. ","docLink":"./Lean/Server/References.html#Lean.Server.LoadedILean.refs","kind":"def","line":497,"name":"Lean.Server.LoadedILean.refs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L497-L497"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.LoadedILean.directImports\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">LoadedILean</span>.<span class=\"name\">directImports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.LoadedILean\">LoadedILean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.DirectImports\">DirectImports</a></div></div>","info":{"doc":"Direct imports of the module of this ILean. ","docLink":"./Lean/Server/References.html#Lean.Server.LoadedILean.directImports","kind":"def","line":495,"name":"Lean.Server.LoadedILean.directImports","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L495-L495"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.LoadedILean.ileanPath\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">LoadedILean</span>.<span class=\"name\">ileanPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.LoadedILean\">LoadedILean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></div></div>","info":{"doc":"Path to the ILean file. ","docLink":"./Lean/Server/References.html#Lean.Server.LoadedILean.ileanPath","kind":"def","line":493,"name":"Lean.Server.LoadedILean.ileanPath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L493-L493"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.LoadedILean.moduleUri\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">LoadedILean</span>.<span class=\"name\">moduleUri</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.LoadedILean\">LoadedILean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a></div></div>","info":{"doc":"URI of the module of this ILean. ","docLink":"./Lean/Server/References.html#Lean.Server.LoadedILean.moduleUri","kind":"def","line":491,"name":"Lean.Server.LoadedILean.moduleUri","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L491-L491"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.LoadedILean.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">LoadedILean</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moduleUri</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ileanPath</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">directImports</span> : <a href=\"./Lean/Server/References.html#Lean.Server.DirectImports\">DirectImports</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refs</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.LoadedILean\">LoadedILean</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.LoadedILean.mk","kind":"ctor","line":489,"name":"Lean.Server.LoadedILean.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L489-L489"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.LoadedILean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">LoadedILean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Reference information from a loaded ILean file. ","docLink":"./Lean/Server/References.html#Lean.Server.LoadedILean","kind":"structure","line":488,"name":"Lean.Server.LoadedILean","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L488-L497"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.DirectImports.convertImportInfos\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">DirectImports</span>.<span class=\"name\">convertImportInfos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">infos</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ImportInfo\">Lsp.ImportInfo</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Server/References.html#Lean.Server.DirectImports\">DirectImports</a></span></div></div>","info":{"doc":"Converts a list of LSP module imports to the module imports of the references data structure.\nRemoves all imports for which we cannot resolve the corresponding `DocumentUri`.\n","docLink":"./Lean/Server/References.html#Lean.Server.DirectImports.convertImportInfos","kind":"def","line":467,"name":"Lean.Server.DirectImports.convertImportInfos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L467-L486"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.instEmptyCollectionDirectImports\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instEmptyCollectionDirectImports</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Lean/Server/References.html#Lean.Server.DirectImports\">DirectImports</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.instEmptyCollectionDirectImports","kind":"instance","line":464,"name":"Lean.Server.instEmptyCollectionDirectImports","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L464-L465"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.DirectImports.index\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">DirectImports</span>.<span class=\"name\">index</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.DirectImports\">DirectImports</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.ModuleImportIndex\">ModuleImportIndex</a></div></div>","info":{"doc":"Index that allows efficiently looking up the imports of a module by module name.\nSince the same module can be imported multiple times with different attributes,\neach module name maps to an array of imports.\n","docLink":"./Lean/Server/References.html#Lean.Server.DirectImports.index","kind":"def","line":462,"name":"Lean.Server.DirectImports.index","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L462-L462"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.DirectImports.ordered\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">DirectImports</span>.<span class=\"name\">ordered</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.DirectImports\">DirectImports</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.ModuleImport\">ModuleImport</a></span></div></div>","info":{"doc":"Imports as they occurred in the module. ","docLink":"./Lean/Server/References.html#Lean.Server.DirectImports.ordered","kind":"def","line":456,"name":"Lean.Server.DirectImports.ordered","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L456-L456"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.DirectImports.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">DirectImports</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ordered</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.ModuleImport\">ModuleImport</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">index</span> : <a href=\"./Lean/Server/References.html#Lean.Server.ModuleImportIndex\">ModuleImportIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.DirectImports\">DirectImports</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.DirectImports.mk","kind":"ctor","line":454,"name":"Lean.Server.DirectImports.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L454-L454"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.DirectImports\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">DirectImports</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Direct imports of a module, containing an ordered representation and an index for fast lookups.\n","docLink":"./Lean/Server/References.html#Lean.Server.DirectImports","kind":"structure","line":451,"name":"Lean.Server.DirectImports","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L451-L462"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleImportIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleImportIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Index that allows efficiently looking up the imports of a module by module name.\nSince the same module can be imported multiple times with different attributes,\neach module name maps to an array of imports.\n","docLink":"./Lean/Server/References.html#Lean.Server.ModuleImportIndex","kind":"def","line":444,"name":"Lean.Server.ModuleImportIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L444-L449"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleImport.collapseIdenticalImports?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleImport</span>.<span class=\"name\">collapseIdenticalImports?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">identicalImports</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.ModuleImport\">ModuleImport</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Server/References.html#Lean.Server.ModuleImport\">ModuleImport</a></span></div></div>","info":{"doc":"Reduces `identicalImports` with the same module name by merging their flags.\nYields `none` if `identicalImports` is empty or `identicalImports` contains an import that\nhas a name or uri that is not identical to the others.\n","docLink":"./Lean/Server/References.html#Lean.Server.ModuleImport.collapseIdenticalImports?","kind":"def","line":417,"name":"Lean.Server.ModuleImport.collapseIdenticalImports?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L417-L441"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.instInhabitedModuleImport.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instInhabitedModuleImport</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.ModuleImport\">ModuleImport</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.instInhabitedModuleImport.default","kind":"def","line":415,"name":"Lean.Server.instInhabitedModuleImport.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L415-L415"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.instInhabitedModuleImport\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instInhabitedModuleImport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Server/References.html#Lean.Server.ModuleImport\">ModuleImport</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.instInhabitedModuleImport","kind":"instance","line":415,"name":"Lean.Server.instInhabitedModuleImport","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L415-L415"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleImport.metaKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleImport</span>.<span class=\"name\">metaKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.ModuleImport\">ModuleImport</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Extra.html#Lean.Lsp.LeanImportMetaKind\">Lsp.LeanImportMetaKind</a></div></div>","info":{"doc":"Kind of `meta` annotation on this import. ","docLink":"./Lean/Server/References.html#Lean.Server.ModuleImport.metaKind","kind":"def","line":414,"name":"Lean.Server.ModuleImport.metaKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L414-L414"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleImport.isPrivate\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleImport</span>.<span class=\"name\">isPrivate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.ModuleImport\">ModuleImport</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Whether the `private` flag is set on this import. ","docLink":"./Lean/Server/References.html#Lean.Server.ModuleImport.isPrivate","kind":"def","line":412,"name":"Lean.Server.ModuleImport.isPrivate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L412-L412"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleImport.isAll\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleImport</span>.<span class=\"name\">isAll</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.ModuleImport\">ModuleImport</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Whether the `all` flag is set on this import. ","docLink":"./Lean/Server/References.html#Lean.Server.ModuleImport.isAll","kind":"def","line":410,"name":"Lean.Server.ModuleImport.isAll","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L410-L410"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleImport.uri\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleImport</span>.<span class=\"name\">uri</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.ModuleImport\">ModuleImport</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a></div></div>","info":{"doc":"URI of the module that is imported. ","docLink":"./Lean/Server/References.html#Lean.Server.ModuleImport.uri","kind":"def","line":408,"name":"Lean.Server.ModuleImport.uri","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L408-L408"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleImport.module\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleImport</span>.<span class=\"name\">module</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.ModuleImport\">ModuleImport</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"Module name of the module that is imported. ","docLink":"./Lean/Server/References.html#Lean.Server.ModuleImport.module","kind":"def","line":406,"name":"Lean.Server.ModuleImport.module","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L406-L406"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleImport.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleImport</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">module</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">uri</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isAll </span><span class=\"fn\">isPrivate</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">metaKind</span> : <a href=\"./Lean/Data/Lsp/Extra.html#Lean.Lsp.LeanImportMetaKind\">Lsp.LeanImportMetaKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.ModuleImport\">ModuleImport</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.ModuleImport.mk","kind":"ctor","line":404,"name":"Lean.Server.ModuleImport.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L404-L404"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleImport\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleImport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents a direct import of a module in the references data structure. ","docLink":"./Lean/Server/References.html#Lean.Server.ModuleImport","kind":"structure","line":403,"name":"Lean.Server.ModuleImport","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L403-L415"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.findModuleRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">findModuleRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trees</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Elab.InfoTree</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">localVars</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">allowSimultaneousBinderUse</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs\">ModuleRefs</a></div></div>","info":{"doc":"Finds all references in `trees` and deduplicates the result.\nSee `dedupReferences` and `combineIdents`.\n","docLink":"./Lean/Server/References.html#Lean.Server.findModuleRefs","kind":"def","line":385,"name":"Lean.Server.findModuleRefs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L385-L399"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.dedupReferences\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">dedupReferences</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">allowSimultaneousBinderUse</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span></div></div>","info":{"doc":"Groups `refs` by identifier and range s.t. references with the same identifier and range\nare added to the `aliases` of the representative of the group.\nYields to separate groups for declaration and usages if `allowSimultaneousBinderUse` is set.\n","docLink":"./Lean/Server/References.html#Lean.Server.dedupReferences","kind":"def","line":368,"name":"Lean.Server.dedupReferences","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L368-L383"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.combineIdents\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">combineIdents</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trees</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Elab.InfoTree</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span></div></div>","info":{"doc":"There are several different identifiers that should be considered equal for the purpose of finding\nall references of an identifier:\n- `FVarId`s of a function parameter in the function's signature and body\n- Chains of helper definitions like those created for do-reassignment `x := e`\n- Overlapping definitions like those defined by `where` declarations that define both an FVar\n  (for local usage) and a constant (for non-local usage)\n- Identifiers connected by `FVarAliasInfo` such as variables before and after `match` generalization\n\nIn the first three cases that are not explicitly denoted as aliases with an `FVarAliasInfo`, the\ncorresponding `Reference`s have the exact same range.\nThis function finds all definitions that have the exact same range as another definition or usage\nand collapses them into a single identifier. It also collapses identifiers connected by\nan `FVarAliasInfo`.\nWhen collapsing identifiers, it prefers using a `RefIdent.const name` over a `RefIdent.fvar id` for\nall identifiers that are being collapsed into one.\n","docLink":"./Lean/Server/References.html#Lean.Server.combineIdents","kind":"def","line":270,"name":"Lean.Server.combineIdents","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L270-L366"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.findReferences\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">findReferences</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trees</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Elab.InfoTree</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span></div></div>","info":{"doc":"Finds all references in `trees`. ","docLink":"./Lean/Server/References.html#Lean.Server.findReferences","kind":"def","line":257,"name":"Lean.Server.findReferences","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L257-L268"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.identOf\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">identOf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ci</span> : <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo\">Elab.ContextInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info\">Elab.Info</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></div></div>","info":{"doc":"Determines the `RefIdent` for the `Info` `i` of an identifier in `module` and\nwhether it is a declaration.\n","docLink":"./Lean/Server/References.html#Lean.Server.identOf","kind":"def","line":237,"name":"Lean.Server.identOf","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L237-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.getModuleContainingDecl?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">getModuleContainingDecl?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"Gets the name of the module that contains `declName`. ","docLink":"./Lean/Server/References.html#Lean.Server.getModuleContainingDecl?","kind":"def","line":231,"name":"Lean.Server.getModuleContainingDecl?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L231-L235"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.load\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">load</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a></span></div></div>","info":{"doc":"Reads and parses the .ilean file at `path`. ","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.load","kind":"def","line":221,"name":"Lean.Server.Ilean.load","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L221-L226"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.instToJsonIlean.toJson\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instToJsonIlean</span>.<span class=\"name\">toJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a> → <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.instToJsonIlean.toJson","kind":"def","line":217,"name":"Lean.Server.instToJsonIlean.toJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L217-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.instToJsonIlean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instToJsonIlean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.instToJsonIlean","kind":"instance","line":217,"name":"Lean.Server.instToJsonIlean","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L217-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.instFromJsonIlean.fromJson\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instFromJsonIlean</span>.<span class=\"name\">fromJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.instFromJsonIlean.fromJson","kind":"def","line":217,"name":"Lean.Server.instFromJsonIlean.fromJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L217-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.instFromJsonIlean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instFromJsonIlean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.instFromJsonIlean","kind":"instance","line":217,"name":"Lean.Server.instFromJsonIlean","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L217-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.references\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">references</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a></div></div>","info":{"doc":"All references of this module. ","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.references","kind":"def","line":216,"name":"Lean.Server.Ilean.references","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L216-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.directImports\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">directImports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ImportInfo\">Lsp.ImportInfo</a></span></div></div>","info":{"doc":"Direct imports of the module. ","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.directImports","kind":"def","line":214,"name":"Lean.Server.Ilean.directImports","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L214-L214"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.module\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">module</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"Name of the module that this ilean data has been collected for. ","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.module","kind":"def","line":212,"name":"Lean.Server.Ilean.module","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L212-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.version\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">version</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Version number of the ilean format. ","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.version","kind":"def","line":210,"name":"Lean.Server.Ilean.version","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L210-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">version</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">module</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">directImports</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ImportInfo\">Lsp.ImportInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">references</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.mk","kind":"ctor","line":208,"name":"Lean.Server.Ilean.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L208-L208"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Content of individual `.ilean` files ","docLink":"./Lean/Server/References.html#Lean.Server.Ilean","kind":"structure","line":207,"name":"Lean.Server.Ilean","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L207-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.ModuleRefs.findRange?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">ModuleRefs</span>.<span class=\"name\">findRange?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">ModuleRefs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Position\">Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Range\">Range</a></span></div></div>","info":{"doc":"Finds the first range in `self` that contains `pos`. ","docLink":"./Lean/Server/References.html#Lean.Lsp.ModuleRefs.findRange?","kind":"def","line":193,"name":"Lean.Lsp.ModuleRefs.findRange?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L193-L198"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.ModuleRefs.findAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">ModuleRefs</span>.<span class=\"name\">findAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">ModuleRefs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Position\">Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">RefIdent</a></span></div></div>","info":{"doc":"Find all identifiers in `self` with a reference in this module that contains `pos` in its range.\n","docLink":"./Lean/Server/References.html#Lean.Lsp.ModuleRefs.findAt","kind":"def","line":179,"name":"Lean.Lsp.ModuleRefs.findAt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L179-L191"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.RefInfo.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">RefInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Position\">Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Checks whether any of the ranges in `self.definition?` or `self.usages` contains `pos`. ","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.contains","kind":"def","line":170,"name":"Lean.Lsp.RefInfo.contains","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L170-L172"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.RefInfo.findReferenceLocation?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">findReferenceLocation?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">RefInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Position\">Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo.Location\">Location</a></span></div></div>","info":{"doc":"Finds the first definition or usage in `self` where the `RefInfo.Location.range`\ncontains the given `pos`. The `includeStop` parameter can be used to toggle between closed-interval\nand half-open-interval behavior for the range. Closed-interval behavior matches the expectation of\nVSCode when selecting an identifier at a cursor position (see #767).\n","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.findReferenceLocation?","kind":"def","line":148,"name":"Lean.Lsp.RefInfo.findReferenceLocation?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L148-L168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.RefInfo.merge\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">merge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">RefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">RefInfo</a></div></div>","info":{"doc":"Combines the `usages` of `a` and `b` and prefers the `definition?` of `b` over that of `a`. ","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.merge","kind":"def","line":143,"name":"Lean.Lsp.RefInfo.merge","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L143-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.RefInfo.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">RefInfo</a></div></div>","info":{"doc":"No definition, no usages ","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.empty","kind":"def","line":140,"name":"Lean.Lsp.RefInfo.empty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L140-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs.toLspModuleRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleRefs</span>.<span class=\"name\">toLspModuleRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refs</span> : <a href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs\">ModuleRefs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a></span></div></div>","info":{"doc":"Converts `refs` to a JSON-serializable `Lsp.ModuleRefs`. ","docLink":"./Lean/Server/References.html#Lean.Server.ModuleRefs.toLspModuleRefs","kind":"def","line":126,"name":"Lean.Server.ModuleRefs.toLspModuleRefs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L126-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs.addRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleRefs</span>.<span class=\"name\">addRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs\">ModuleRefs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs\">ModuleRefs</a></div></div>","info":{"doc":"Adds `ref` to the `RefInfo` corresponding to `ref.ident` in `self`. See `RefInfo.addRef`. ","docLink":"./Lean/Server/References.html#Lean.Server.ModuleRefs.addRef","kind":"def","line":121,"name":"Lean.Server.ModuleRefs.addRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L121-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleRefs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"All references from within a module for all identifiers used in a single module. ","docLink":"./Lean/Server/References.html#Lean.Server.ModuleRefs","kind":"def","line":116,"name":"Lean.Server.ModuleRefs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L116-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.toLspRefInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">toLspRefInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">RefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">Lsp.RefInfo</a></span></div></div>","info":{"doc":"Converts `i` to a JSON-serializable `Lsp.RefInfo`. ","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.toLspRefInfo","kind":"def","line":84,"name":"Lean.Server.RefInfo.toLspRefInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L84-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.addRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">addRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">RefInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">RefInfo</a></div></div>","info":{"doc":"Adds `ref` to `i`.\nIf `i` has no `definition` and `ref` is a declaration, it becomes the `definition`.\nIf `i` already has a `definition` and `ref` is also a declaration, it is not added to `i`.\nOtherwise, `ref` is added to `i.usages`.\n","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.addRef","kind":"def","line":69,"name":"Lean.Server.RefInfo.addRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L69-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">RefInfo</a></div></div>","info":{"doc":"No definition, no usages. ","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.empty","kind":"def","line":66,"name":"Lean.Server.RefInfo.empty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L66-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.usages\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">usages</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">RefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span></div></div>","info":{"doc":"All usage `Reference`s of the identifier in a single module. ","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.usages","kind":"def","line":62,"name":"Lean.Server.RefInfo.usages","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.definition\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">definition</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">RefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span></div></div>","info":{"doc":"Definition `Reference` of the identifier.\nIs equal to `none` if e.g. the definition is outside of the module where this `RefInfo` is used.\n","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.definition","kind":"def","line":60,"name":"Lean.Server.RefInfo.definition","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">definition</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">usages</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">RefInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.mk","kind":"ctor","line":55,"name":"Lean.Server.RefInfo.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L55-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Definition and usages of an identifier within a single module. ","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo","kind":"structure","line":54,"name":"Lean.Server.RefInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L54-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.isBinder\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">isBinder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Whether this reference declares `ident`. ","docLink":"./Lean/Server/References.html#Lean.Server.Reference.isBinder","kind":"def","line":52,"name":"Lean.Server.Reference.isBinder","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.info\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">info</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info\">Elab.Info</a></div></div>","info":{"doc":"Additional `InfoTree` information for this reference. ","docLink":"./Lean/Server/References.html#Lean.Server.Reference.info","kind":"def","line":50,"name":"Lean.Server.Reference.info","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.ci\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">ci</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo\">Elab.ContextInfo</a></div></div>","info":{"doc":"`ContextInfo` at the point of elaboration of this reference. ","docLink":"./Lean/Server/References.html#Lean.Server.Reference.ci","kind":"def","line":48,"name":"Lean.Server.Reference.ci","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"Syntax of this reference. ","docLink":"./Lean/Server/References.html#Lean.Server.Reference.stx","kind":"def","line":46,"name":"Lean.Server.Reference.stx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.range\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">range</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Range\">Lsp.Range</a></div></div>","info":{"doc":"Range where this reference occurs. ","docLink":"./Lean/Server/References.html#Lean.Server.Reference.range","kind":"def","line":44,"name":"Lean.Server.Reference.range","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L44-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.aliases\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">aliases</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a></span></div></div>","info":{"doc":"Identifiers that are logically identical to this reference. ","docLink":"./Lean/Server/References.html#Lean.Server.Reference.aliases","kind":"def","line":42,"name":"Lean.Server.Reference.aliases","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.ident\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">ident</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a></div></div>","info":{"doc":"Identifier of this reference. ","docLink":"./Lean/Server/References.html#Lean.Server.Reference.ident","kind":"def","line":40,"name":"Lean.Server.Reference.ident","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ident</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliases</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">range</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Range\">Lsp.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ci</span> : <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo\">Elab.ContextInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info\">Elab.Info</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isBinder</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/References.html#Lean.Server.Reference.mk","kind":"ctor","line":38,"name":"Lean.Server.Reference.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Global reference. Used by the language server to figure out which identifiers refer to which\nother identifiers across the whole project.\n","docLink":"./Lean/Server/References.html#Lean.Server.Reference","kind":"structure","line":34,"name":"Lean.Server.Reference","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L34-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.collectImports\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">collectImports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">headerStx</span> : <a href=\"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax\">Elab.HeaderSyntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ImportInfo\">Lsp.ImportInfo</a></span></div></div>","info":{"doc":"Collects `ImportInfo` for all import statements in `headerStx`. ","docLink":"./Lean/Server/References.html#Lean.Server.collectImports","kind":"def","line":30,"name":"Lean.Server.collectImports","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L30-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ImportInfo.ofImport\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ImportInfo</span>.<span class=\"name\">ofImport</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Lean/Setup.html#Lean.Import\">Import</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ImportInfo\">Lsp.ImportInfo</a></div></div>","info":{"doc":"Converts an `Import` to its LSP-internal representation. ","docLink":"./Lean/Server/References.html#Lean.Server.ImportInfo.ofImport","kind":"def","line":23,"name":"Lean.Server.ImportInfo.ofImport","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/References.lean#L23-L28"}}],"imports":["Lean.Data.Lsp.Internal","Lean.Server.Utils","Lean.Elab.Import"],"instances":[{"className":"Lean.FromJson","name":"Lean.Server.instFromJsonIlean","typeNames":["Lean.Server.Ilean"]},{"className":"Lean.ToJson","name":"Lean.Server.instToJsonIlean","typeNames":["Lean.Server.Ilean"]},{"className":"Inhabited","name":"Lean.Server.instInhabitedModuleImport","typeNames":["Lean.Server.ModuleImport"]},{"className":"EmptyCollection","name":"Lean.Server.instEmptyCollectionDirectImports","typeNames":["Lean.Server.DirectImports"]},{"className":"Inhabited","name":"Lean.Server.instInhabitedReferences","typeNames":["Lean.Server.References"]}],"name":"Lean.Server.References"}