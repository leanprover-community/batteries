{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.elabTerminationHints\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">elabTerminationHints</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Parser.Termination.suffix</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a></span></div></div>","info":{"doc":"Takes apart a `Termination.suffix` syntax object ","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.elabTerminationHints","kind":"def","line":148,"name":"Lean.Elab.elabTerminationHints","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L148-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.checkVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">checkVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extraParams</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tb</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Checks that `termination_by` binds at most as many variables are present in the outermost\nlambda of `value`, and throws appropriate errors.\n","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.checkVars","kind":"def","line":127,"name":"Lean.Elab.TerminationBy.checkVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L127-L144"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.rememberExtraParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">rememberExtraParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">headerParams</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hints</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a></div></div>","info":{"doc":"Remembers `extraParams` for later use. Needs to happen early enough where we still know\nhow many parameters came from the function header (`headerParams`).\n","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.rememberExtraParams","kind":"def","line":119,"name":"Lean.Elab.TerminationHints.rememberExtraParams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L119-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.isNotNone\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">isNotNone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hints</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"True if any form of termination hint is present. ","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.isNotNone","kind":"def","line":112,"name":"Lean.Elab.TerminationHints.isNotNone","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L112-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.ensureNone\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">ensureNone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hints</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">reason</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Logs warnings when the `TerminationHints` are unexpectedly present.  ","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.ensureNone","kind":"def","line":94,"name":"Lean.Elab.TerminationHints.ensureNone","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L94-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.none\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">none</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.none","kind":"def","line":92,"name":"Lean.Elab.TerminationHints.none","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L92-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isLatticeTheoretic\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">isLatticeTheoretic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isLatticeTheoretic","kind":"def","line":89,"name":"Lean.Elab.isLatticeTheoretic","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L89-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isPartialFixpoint\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">isPartialFixpoint</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isPartialFixpoint","kind":"def","line":85,"name":"Lean.Elab.isPartialFixpoint","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L85-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isCoinductiveFixpoint\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">isCoinductiveFixpoint</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isCoinductiveFixpoint","kind":"def","line":81,"name":"Lean.Elab.isCoinductiveFixpoint","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L81-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isInductiveFixpoint\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">isInductiveFixpoint</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isInductiveFixpoint","kind":"def","line":77,"name":"Lean.Elab.isInductiveFixpoint","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L77-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedTerminationHints\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedTerminationHints</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedTerminationHints","kind":"instance","line":75,"name":"Lean.Elab.instInhabitedTerminationHints","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L75-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedTerminationHints.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedTerminationHints</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedTerminationHints.default","kind":"def","line":75,"name":"Lean.Elab.instInhabitedTerminationHints.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L75-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.extraParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">extraParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Here we record the number of parameters past the `:`. It is set by\n`TerminationHints.rememberExtraParams` and used as follows:\n\n* When we guess the termination measure in `GuessLex` and want to print it in surface-syntax\n  compatible form.\n* If there are fewer variables in the `termination_by` annotation than there are extra\n  parameters, we know which parameters they should apply to (`TerminationBy.checkVars`).\n","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.extraParams","kind":"def","line":74,"name":"Lean.Elab.TerminationHints.extraParams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L74-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.decreasingBy?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">decreasingBy?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy\">DecreasingBy</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.decreasingBy?","kind":"def","line":64,"name":"Lean.Elab.TerminationHints.decreasingBy?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.partialFixpoint?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">partialFixpoint?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\">PartialFixpoint</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.partialFixpoint?","kind":"def","line":63,"name":"Lean.Elab.TerminationHints.partialFixpoint?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.terminationBy?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">terminationBy?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.terminationBy?","kind":"def","line":62,"name":"Lean.Elab.TerminationHints.terminationBy?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.terminationBy??\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">terminationBy??</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.terminationBy??","kind":"def","line":61,"name":"Lean.Elab.TerminationHints.terminationBy??","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.ref","kind":"def","line":60,"name":"Lean.Elab.TerminationHints.ref","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">terminationBy??</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">terminationBy?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">partialFixpoint?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\">PartialFixpoint</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decreasingBy?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy\">DecreasingBy</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extraParams</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.mk","kind":"ctor","line":59,"name":"Lean.Elab.TerminationHints.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The termination annotations for a single function.\nFor `decreasing_by`, we store the whole `decreasing_by tacticSeq` expression, as this\nis what `Term.runTactic` expects.\n ","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints","kind":"structure","line":54,"name":"Lean.Elab.TerminationHints","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L54-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedPartialFixpoint.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedPartialFixpoint</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\">PartialFixpoint</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedPartialFixpoint.default","kind":"def","line":52,"name":"Lean.Elab.instInhabitedPartialFixpoint.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedPartialFixpoint\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedPartialFixpoint</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\">PartialFixpoint</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedPartialFixpoint","kind":"instance","line":52,"name":"Lean.Elab.instInhabitedPartialFixpoint","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.fixpointType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">fixpointType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\">PartialFixpoint</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.fixpointType","kind":"def","line":51,"name":"Lean.Elab.PartialFixpoint.fixpointType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.term?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">term?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\">PartialFixpoint</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.term?","kind":"def","line":50,"name":"Lean.Elab.PartialFixpoint.term?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\">PartialFixpoint</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.ref","kind":"def","line":49,"name":"Lean.Elab.PartialFixpoint.ref","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">term?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fixpointType</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\">PartialFixpoint</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.mk","kind":"ctor","line":48,"name":"Lean.Elab.PartialFixpoint.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A single `partial_fixpoint`, `inductive_fixpoint` or `coinductive_fixpoint` clause ","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint","kind":"structure","line":47,"name":"Lean.Elab.PartialFixpoint","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L47-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedPartialFixpointType.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedPartialFixpointType</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedPartialFixpointType.default","kind":"def","line":45,"name":"Lean.Elab.instInhabitedPartialFixpointType.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedPartialFixpointType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedPartialFixpointType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedPartialFixpointType","kind":"instance","line":45,"name":"Lean.Elab.instInhabitedPartialFixpointType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType.inductiveFixpoint\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpointType</span>.<span class=\"name\">inductiveFixpoint</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType.inductiveFixpoint","kind":"ctor","line":44,"name":"Lean.Elab.PartialFixpointType.inductiveFixpoint","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L44-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType.coinductiveFixpoint\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpointType</span>.<span class=\"name\">coinductiveFixpoint</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType.coinductiveFixpoint","kind":"ctor","line":43,"name":"Lean.Elab.PartialFixpointType.coinductiveFixpoint","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType.partialFixpoint\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpointType</span>.<span class=\"name\">partialFixpoint</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType.partialFixpoint","kind":"ctor","line":42,"name":"Lean.Elab.PartialFixpointType.partialFixpoint","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpointType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType","kind":"inductive","line":41,"name":"Lean.Elab.PartialFixpointType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L41-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedDecreasingBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedDecreasingBy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy\">DecreasingBy</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedDecreasingBy","kind":"instance","line":39,"name":"Lean.Elab.instInhabitedDecreasingBy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedDecreasingBy.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedDecreasingBy</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy\">DecreasingBy</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedDecreasingBy.default","kind":"def","line":39,"name":"Lean.Elab.instInhabitedDecreasingBy.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy.tactic\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DecreasingBy</span>.<span class=\"name\">tactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy\">DecreasingBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.tacticSeq</span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy.tactic","kind":"def","line":38,"name":"Lean.Elab.DecreasingBy.tactic","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DecreasingBy</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy\">DecreasingBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy.ref","kind":"def","line":37,"name":"Lean.Elab.DecreasingBy.ref","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DecreasingBy</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tactic</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.tacticSeq</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy\">DecreasingBy</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy.mk","kind":"ctor","line":36,"name":"Lean.Elab.DecreasingBy.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DecreasingBy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A single `decreasing_by` clause ","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy","kind":"structure","line":35,"name":"Lean.Elab.DecreasingBy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L35-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedTerminationBy.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedTerminationBy</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedTerminationBy.default","kind":"def","line":33,"name":"Lean.Elab.instInhabitedTerminationBy.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedTerminationBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedTerminationBy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedTerminationBy","kind":"instance","line":33,"name":"Lean.Elab.instInhabitedTerminationBy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.synthetic\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">synthetic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"If `synthetic := true`, then this `termination_by` clause was\ngenerated by `GuessLex`, and `vars` refers to *all* parameters\nof the function, not just the “extra parameters”.\nCf. Lean.Elab.WF.unpackUnary\n","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.synthetic","kind":"def","line":32,"name":"Lean.Elab.TerminationBy.synthetic","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.body\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">body</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.body","kind":"def","line":25,"name":"Lean.Elab.TerminationBy.body","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.vars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">vars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntaxArray\">TSyntaxArray</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">`ident</span><a href=\"./Init/Prelude.html#List.cons\">,</a> <span class=\"fn\">`Lean.Parser.Term.hole</span><a href=\"./Init/Prelude.html#List.cons\">]</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.vars","kind":"def","line":24,"name":"Lean.Elab.TerminationBy.vars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.structural\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">structural</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.structural","kind":"def","line":23,"name":"Lean.Elab.TerminationBy.structural","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.ref","kind":"def","line":22,"name":"Lean.Elab.TerminationBy.ref","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">structural</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntaxArray\">TSyntaxArray</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">`ident</span><a href=\"./Init/Prelude.html#List.cons\">,</a> <span class=\"fn\">`Lean.Parser.Term.hole</span><a href=\"./Init/Prelude.html#List.cons\">]</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">body</span> : <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">synthetic</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.mk","kind":"ctor","line":21,"name":"Lean.Elab.TerminationBy.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A single `termination_by` clause ","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy","kind":"structure","line":20,"name":"Lean.Elab.TerminationBy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PreDefinition/TerminationHint.lean#L20-L33"}}],"imports":["Lean.Parser.Term","Lean.Parser.Term"],"instances":[{"className":"Inhabited","name":"Lean.Elab.instInhabitedTerminationBy","typeNames":["Lean.Elab.TerminationBy"]},{"className":"Inhabited","name":"Lean.Elab.instInhabitedDecreasingBy","typeNames":["Lean.Elab.DecreasingBy"]},{"className":"Inhabited","name":"Lean.Elab.instInhabitedPartialFixpointType","typeNames":["Lean.Elab.PartialFixpointType"]},{"className":"Inhabited","name":"Lean.Elab.instInhabitedPartialFixpoint","typeNames":["Lean.Elab.PartialFixpoint"]},{"className":"Inhabited","name":"Lean.Elab.instInhabitedTerminationHints","typeNames":["Lean.Elab.TerminationHints"]}],"name":"Lean.Elab.PreDefinition.TerminationHint"}