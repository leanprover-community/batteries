{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHSubOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">instHSubOffset_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHSubOffset_1","kind":"instance","line":367,"name":"Std.Time.PlainDate.instHSubOffset_1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L367-L368"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHAddOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">instHAddOffset_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHAddOffset_1","kind":"instance","line":364,"name":"Std.Time.PlainDate.instHAddOffset_1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L364-L365"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHSubOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">instHSubOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHSubOffset","kind":"instance","line":361,"name":"Std.Time.PlainDate.instHSubOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L361-L362"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHAddOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">instHAddOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHAddOffset","kind":"instance","line":358,"name":"Std.Time.PlainDate.instHAddOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L358-L359"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">weekOfYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Week.Ordinal</a></div></div>","info":{"doc":"Calculates the week of the year starting Monday for a given year.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekOfYear","kind":"def","line":337,"name":"Std.Time.PlainDate.weekOfYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L337-L356"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withWeekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withWeekday</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">desiredWeekday</span> : <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Sets the date to the specified `desiredWeekday`. If the `desiredWeekday` is the same as the current weekday,\nthe original `date` is returned without modification. If the `desiredWeekday` is in the future, the\nfunction adjusts the date forward to the next occurrence of that weekday.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withWeekday","kind":"def","line":318,"name":"Std.Time.PlainDate.withWeekday","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L318-L335"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.alignedWeekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">alignedWeekOfMonth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">Week.Ordinal.OfMonth</a></div></div>","info":{"doc":"Determines the week of the month for the given `PlainDate`. The week of the month is calculated based\non the day of the month and the weekday. Each week starts on Monday because the entire library is\nbased on the Gregorian Calendar.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.alignedWeekOfMonth","kind":"def","line":308,"name":"Std.Time.PlainDate.alignedWeekOfMonth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L308-L316"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">weekday</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></div></div>","info":{"doc":"Calculates the `Weekday` of a given `PlainDate` using Zeller's Congruence for the Gregorian calendar.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekday","kind":"def","line":300,"name":"Std.Time.PlainDate.weekday","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L300-L306"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withMonthRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withMonthRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Creates a new `PlainDate` by adjusting the month to the given `month` value.\nThe day is rolled over to the next valid month if necessary.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withMonthRollOver","kind":"def","line":292,"name":"Std.Time.PlainDate.withMonthRollOver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L292-L298"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withMonthClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withMonthClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Creates a new `PlainDate` by adjusting the month to the given `month` value.\nThe day remains unchanged, and any invalid days for the new month will be handled according to the `clip` behavior.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withMonthClip","kind":"def","line":284,"name":"Std.Time.PlainDate.withMonthClip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L284-L290"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withDaysRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withDaysRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Creates a new `PlainDate` by adjusting the day of the month to the given `days` value, with any\nout-of-range days rolled over to the next month or year as needed.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withDaysRollOver","kind":"def","line":276,"name":"Std.Time.PlainDate.withDaysRollOver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L276-L282"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withDaysClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withDaysClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Creates a new `PlainDate` by adjusting the day of the month to the given `days` value, with any\nout-of-range days clipped to the nearest valid date.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withDaysClip","kind":"def","line":268,"name":"Std.Time.PlainDate.withDaysClip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L268-L274"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subYearsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Subtracts `Year.Offset` from a `PlainDate`, clipping the day to the last valid day of the month.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subYearsClip","kind":"def","line":261,"name":"Std.Time.PlainDate.subYearsClip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L261-L266"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addYearsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Adds `Year.Offset` to a `PlainDate`, clipping the day to the last valid day of the month.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addYearsClip","kind":"def","line":254,"name":"Std.Time.PlainDate.addYearsClip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L254-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subYearsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Subtracts `Year.Offset` from a `PlainDate`, rolling over excess days to the next month.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subYearsRollOver","kind":"def","line":247,"name":"Std.Time.PlainDate.subYearsRollOver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L247-L252"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addYearsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Adds `Year.Offset` to a `PlainDate`, rolling over excess days to the next month, or next year.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addYearsRollOver","kind":"def","line":240,"name":"Std.Time.PlainDate.addYearsRollOver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L240-L245"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subMonthsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Subtracts `Month.Offset` from a `PlainDate`, rolling over excess days as needed.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subMonthsRollOver","kind":"def","line":233,"name":"Std.Time.PlainDate.subMonthsRollOver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L233-L238"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addMonthsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Adds a given number of months to a `PlainDate`, rolling over any excess days into the following month.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addMonthsRollOver","kind":"def","line":226,"name":"Std.Time.PlainDate.addMonthsRollOver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L226-L231"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withYearRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withYearRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Creates a new `PlainDate` by adjusting the year to the given `year` value. The month and day are rolled\nover to the next valid month and day if necessary.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withYearRollOver","kind":"def","line":218,"name":"Std.Time.PlainDate.withYearRollOver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L218-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withYearClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withYearClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Creates a new `PlainDate` by adjusting the year to the given `year` value. The month and day remain unchanged,\nand any invalid days for the new year will be handled according to the `clip` behavior.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withYearClip","kind":"def","line":210,"name":"Std.Time.PlainDate.withYearClip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L210-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.rollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">rollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">day</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Creates a `PlainDate` by rolling over the extra days to the next month.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.rollOver","kind":"def","line":204,"name":"Std.Time.PlainDate.rollOver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L204-L208"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subMonthsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Subtracts `Month.Offset` from a `PlainDate`, it clips the day to the last valid day of that month.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subMonthsClip","kind":"def","line":197,"name":"Std.Time.PlainDate.subMonthsClip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L197-L202"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addMonthsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Adds a given number of months to a `PlainDate`, clipping the day to the last valid day of the month.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addMonthsClip","kind":"def","line":187,"name":"Std.Time.PlainDate.addMonthsClip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L187-L195"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subWeeks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Subtracts a given number of weeks from a `PlainDate`.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subWeeks","kind":"def","line":180,"name":"Std.Time.PlainDate.subWeeks","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L180-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addWeeks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Adds a given number of weeks to a `PlainDate`.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addWeeks","kind":"def","line":171,"name":"Std.Time.PlainDate.addWeeks","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L171-L178"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Subtracts a given number of days from a `PlainDate`.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subDays","kind":"def","line":164,"name":"Std.Time.PlainDate.subDays","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L164-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Adds a given number of days to a `PlainDate`.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addDays","kind":"def","line":156,"name":"Std.Time.PlainDate.addDays","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L156-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.toDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">toDaysSinceUNIXEpoch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a></div></div>","info":{"doc":"Converts a `PlainDate` to the number of days since the UNIX epoch.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.toDaysSinceUNIXEpoch","kind":"def","line":142,"name":"Std.Time.PlainDate.toDaysSinceUNIXEpoch","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L142-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.inLeapYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">inLeapYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Checks if the `PlainDate` is in a leap year.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.inLeapYear","kind":"def","line":135,"name":"Std.Time.PlainDate.inLeapYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L135-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.era\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">era</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Year.Era</a></div></div>","info":{"doc":"Determines the era of the given `PlainDate` based on its year.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.era","kind":"def","line":128,"name":"Std.Time.PlainDate.era","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L128-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.dayOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">dayOfYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Day.Ordinal.OfYear</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">date</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\">year</a></span>.<a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.isLeap\">isLeap</a></span></span></div></div>","info":{"doc":"Transforms a `PlainDate` into a `Day.Ordinal.OfYear`.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.dayOfYear","kind":"def","line":122,"name":"Std.Time.PlainDate.dayOfYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L122-L126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.quarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">quarter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">4</span></span></div></div>","info":{"doc":"Determines the quarter of the year for the given `PlainDate`.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.quarter","kind":"def","line":116,"name":"Std.Time.PlainDate.quarter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L116-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">weekOfMonth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">5</span></span></div></div>","info":{"doc":"Returns the unaligned week of the month for a `PlainDate` (day divided by 7, plus 1).\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekOfMonth","kind":"def","line":110,"name":"Std.Time.PlainDate.weekOfMonth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L110-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ofDaysSinceUNIXEpoch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">day</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Creates a `PlainDate` from the number of days since the UNIX epoch (January 1st, 1970).\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofDaysSinceUNIXEpoch","kind":"def","line":94,"name":"Std.Time.PlainDate.ofDaysSinceUNIXEpoch","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L94-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ofYearOrdinal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ordinal</span> : <span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Day.Ordinal.OfYear</a> <span class=\"fn\"><span class=\"fn\">year</span>.<a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.isLeap\">isLeap</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Creates a `PlainDate` from a year and a day ordinal within that year.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearOrdinal","kind":"def","line":86,"name":"Std.Time.PlainDate.ofYearOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L86-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearMonthDay?\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ofYearMonthDay?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">day</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>","info":{"doc":"Creates a new `PlainDate` from year, month, and day components.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearMonthDay?","kind":"def","line":77,"name":"Std.Time.PlainDate.ofYearMonthDay?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L77-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instInhabited\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instInhabited","kind":"instance","line":74,"name":"Std.Time.PlainDate.instInhabited","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L74-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearMonthDayClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ofYearMonthDayClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">day</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"Creates a `PlainDate` by clipping the day to ensure validity. This function forces the date to be\nvalid by adjusting the day to fit within the valid range to fit the given month and year.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearMonthDayClip","kind":"def","line":65,"name":"Std.Time.PlainDate.ofYearMonthDayClip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L65-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instLawfulEqOrdPlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instLawfulEqOrdPlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instLawfulEqOrdPlainDate","kind":"instance","line":55,"name":"Std.Time.instLawfulEqOrdPlainDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L55-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instTransOrdPlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instTransOrdPlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instTransOrdPlainDate","kind":"instance","line":53,"name":"Std.Time.instTransOrdPlainDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.compare_def\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">compare_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Ord/Basic.html#Ord.compare\">compare</a> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#compareLex\">compareLex</a> <span class=\"fn\">(<a href=\"./Init/Data/Ord/Basic.html#compareOn\">compareOn</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\">year</a></span></span>)</span>\n    <span class=\"fn\">(<a href=\"./Init/Data/Ord/Basic.html#compareLex\">compareLex</a> <span class=\"fn\">(<a href=\"./Init/Data/Ord/Basic.html#compareOn\">compareOn</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month\">month</a></span></span>)</span> <span class=\"fn\">(<a href=\"./Init/Data/Ord/Basic.html#compareOn\">compareOn</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day\">day</a></span></span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.compare_def","kind":"theorem","line":49,"name":"Std.Time.PlainDate.compare_def","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L49-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instOrdPlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instOrdPlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instOrdPlainDate","kind":"instance","line":46,"name":"Std.Time.instOrdPlainDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L46-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instInhabitedPlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instInhabitedPlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instInhabitedPlainDate","kind":"instance","line":43,"name":"Std.Time.instInhabitedPlainDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L43-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instDecidableEqPlainDate.decEq\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instDecidableEqPlainDate</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instDecidableEqPlainDate.decEq","kind":"def","line":41,"name":"Std.Time.instDecidableEqPlainDate.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instDecidableEqPlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instDecidableEqPlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instDecidableEqPlainDate","kind":"instance","line":41,"name":"Std.Time.instDecidableEqPlainDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instReprPlainDate.repr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instReprPlainDate</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instReprPlainDate.repr","kind":"def","line":41,"name":"Std.Time.instReprPlainDate.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instReprPlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instReprPlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instReprPlainDate","kind":"instance","line":41,"name":"Std.Time.instReprPlainDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.valid\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">valid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\">year</a></span>.<a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.Valid\">Valid</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month\">month</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day\">day</a></span></span></div></div>","info":{"doc":"Validates the date by ensuring that the year, month, and day form a correct and valid date. ","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.valid","kind":"theorem","line":40,"name":"Std.Time.PlainDate.valid","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">day</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a></div></div>","info":{"doc":"The day component of the date. It is represented as an `Ordinal` type from `Day`. ","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day","kind":"def","line":37,"name":"Std.Time.PlainDate.day","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">month</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a></div></div>","info":{"doc":"The month component of the date. It is represented as an `Ordinal` type from `Month`. ","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month","kind":"def","line":34,"name":"Std.Time.PlainDate.month","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">year</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a></div></div>","info":{"doc":"The year component of the date. It is represented as an `Offset` type from `Year`. ","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year","kind":"def","line":31,"name":"Std.Time.PlainDate.year","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">day</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">valid</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">year</span>.<a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.Valid\">Valid</a></span> <span class=\"fn\">month</span> <span class=\"fn\">day</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.mk","kind":"ctor","line":28,"name":"Std.Time.PlainDate.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ext_iff\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\">year</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\">year</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month\">month</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month\">month</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day\">day</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day\">day</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ext_iff","kind":"theorem","line":27,"name":"Std.Time.PlainDate.ext_iff","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ext\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\">year</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\">year</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month\">month</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month\">month</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">day</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day\">day</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day\">day</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ext","kind":"theorem","line":27,"name":"Std.Time.PlainDate.ext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`PlainDate` represents a date in the Year-Month-Day (YMD) format. It encapsulates the year, month,\nand day components, with validation to ensure the date is valid.\n","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate","kind":"structure","line":23,"name":"Std.Time.PlainDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/PlainDate.lean#L23-L41"}}],"imports":["Std.Time.Date.Basic","Std.Time.Date.Unit.Month","Std.Time.Date.Unit.Year"],"instances":[{"className":"Repr","name":"Std.Time.instReprPlainDate","typeNames":["Std.Time.PlainDate"]},{"className":"Decidable","name":"Std.Time.instDecidableEqPlainDate","typeNames":["Eq"]},{"className":"Inhabited","name":"Std.Time.instInhabitedPlainDate","typeNames":["Std.Time.PlainDate"]},{"className":"Ord","name":"Std.Time.instOrdPlainDate","typeNames":["Std.Time.PlainDate"]},{"className":"Std.TransCmp","name":"Std.Time.instTransOrdPlainDate","typeNames":["Std.Time.PlainDate"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.instLawfulEqOrdPlainDate","typeNames":["Std.Time.PlainDate"]},{"className":"Inhabited","name":"Std.Time.PlainDate.instInhabited","typeNames":["Std.Time.PlainDate"]},{"className":"HAdd","name":"Std.Time.PlainDate.instHAddOffset","typeNames":["Std.Time.PlainDate","Std.Time.Day.Offset","Std.Time.PlainDate"]},{"className":"HSub","name":"Std.Time.PlainDate.instHSubOffset","typeNames":["Std.Time.PlainDate","Std.Time.Day.Offset","Std.Time.PlainDate"]},{"className":"HAdd","name":"Std.Time.PlainDate.instHAddOffset_1","typeNames":["Std.Time.PlainDate","Std.Time.Week.Offset","Std.Time.PlainDate"]},{"className":"HSub","name":"Std.Time.PlainDate.instHSubOffset_1","typeNames":["Std.Time.PlainDate","Std.Time.Week.Offset","Std.Time.PlainDate"]}],"name":"Std.Time.Date.PlainDate"}