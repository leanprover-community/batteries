{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.Toml.Table.insertD\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">Table</span>.<span class=\"name\">insertD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">enc</span> : <span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v </span><span class=\"fn\">default</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a></div></div>","info":{"doc":"Inserts the value into the table if it is not equal to `default`. ","docLink":"./Lake/Toml/Encode.html#Lake.Toml.Table.insertD","kind":"def","line":107,"name":"Lake.Toml.Table.insertD","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L107-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.Toml.Table.insertUnless\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">Table</span>.<span class=\"name\">insertUnless</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">enc</span> : <span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a></div></div>","info":{"doc":"Insert a value into the table if `p` is `false`. ","docLink":"./Lake/Toml/Encode.html#Lake.Toml.Table.insertUnless","kind":"def","line":102,"name":"Lake.Toml.Table.insertUnless","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L102-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.Toml.Table.insertIf\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">Table</span>.<span class=\"name\">insertIf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">enc</span> : <span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a></div></div>","info":{"doc":"Insert a value into the table if `p` is `true`. ","docLink":"./Lake/Toml/Encode.html#Lake.Toml.Table.insertIf","kind":"def","line":97,"name":"Lake.Toml.Table.insertIf","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L97-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.Toml.Table.smartInsert\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">Table</span>.<span class=\"name\">smartInsert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.Toml.SmartInsert\">SmartInsert</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a></div></div>","info":{"doc":"Insert a value into the table unless it represents a nullish value. ","docLink":"./Lake/Toml/Encode.html#Lake.Toml.Table.smartInsert","kind":"def","line":92,"name":"Lake.Toml.Table.smartInsert","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L92-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.Toml.Table.instSmartInsertOptionOfToToml\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">Table</span>.<span class=\"name\">instSmartInsertOptionOfToToml</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.Toml.SmartInsert\">SmartInsert</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.Toml.Table.instSmartInsertOptionOfToToml","kind":"instance","line":90,"name":"Lake.Toml.Table.instSmartInsertOptionOfToToml","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L90-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.Toml.Table.insertSome\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">Table</span>.<span class=\"name\">insertSome</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">enc</span> : <span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a></div></div>","info":{"doc":"If the value is not `none`, inserts the encoded value into the table. ","docLink":"./Lake/Toml/Encode.html#Lake.Toml.Table.insertSome","kind":"def","line":85,"name":"Lake.Toml.Table.insertSome","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L85-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.Toml.Table.insert\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">Table</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">enc</span> : <span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a></div></div>","info":{"doc":"Inserts the encoded value into the table. ","docLink":"./Lake/Toml/Encode.html#Lake.Toml.Table.insert","kind":"def","line":80,"name":"Lake.Toml.Table.insert","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L80-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.Toml.instSmartInsertString\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">instSmartInsertString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.Toml.SmartInsert\">SmartInsert</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.Toml.instSmartInsertString","kind":"instance","line":75,"name":"Lake.Toml.instSmartInsertString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L75-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.Toml.instSmartInsertArrayOfToToml\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">instSmartInsertArrayOfToToml</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.Toml.SmartInsert\">SmartInsert</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.Toml.instSmartInsertArrayOfToToml","kind":"instance","line":72,"name":"Lake.Toml.instSmartInsertArrayOfToToml","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L72-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.Toml.instSmartInsertTable\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">instSmartInsertTable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.Toml.SmartInsert\">SmartInsert</a> <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.Toml.instSmartInsertTable","kind":"instance","line":69,"name":"Lake.Toml.instSmartInsertTable","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L69-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.Toml.instSmartInsertOfToToml?\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">instSmartInsertOfToToml?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml?\">ToToml?</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.Toml.SmartInsert\">SmartInsert</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.Toml.instSmartInsertOfToToml?","kind":"instance","line":66,"name":"Lake.Toml.instSmartInsertOfToToml?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L66-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.Toml.SmartInsert.smartInsert\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">SmartInsert</span>.<span class=\"name\">smartInsert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.Toml.SmartInsert\">SmartInsert</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a> → <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a></span></span></div></div>","info":{"doc":"Insert a value into a table unless it represents a nullish value. ","docLink":"./Lake/Toml/Encode.html#Lake.Toml.SmartInsert.smartInsert","kind":"def","line":64,"name":"Lake.Toml.SmartInsert.smartInsert","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.Toml.SmartInsert.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">SmartInsert</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">smartInsert</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a> → <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Table</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.Toml.SmartInsert\">SmartInsert</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.Toml.SmartInsert.mk","kind":"ctor","line":62,"name":"Lake.Toml.SmartInsert.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.Toml.SmartInsert\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">SmartInsert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.Toml.SmartInsert","kind":"class","line":62,"name":"Lake.Toml.SmartInsert","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L62-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.instToToml?OptionOfToToml\"><span class=\"name\">Lake</span>.<span class=\"name\">instToToml?OptionOfToToml</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml?\">ToToml?</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.instToToml?OptionOfToToml","kind":"instance","line":58,"name":"Lake.instToToml?OptionOfToToml","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.instToToml?Option\"><span class=\"name\">Lake</span>.<span class=\"name\">instToToml?Option</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml?\">ToToml?</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml?\">ToToml?</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.instToToml?Option","kind":"instance","line":57,"name":"Lake.instToToml?Option","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.instToToml?Array\"><span class=\"name\">Lake</span>.<span class=\"name\">instToToml?Array</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml?\">ToToml?</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml?\">ToToml?</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.instToToml?Array","kind":"instance","line":54,"name":"Lake.instToToml?Array","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L54-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.Toml.encodeArray?\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">encodeArray?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml?\">ToToml?</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Value\">Value</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.Toml.encodeArray?","kind":"def","line":48,"name":"Lake.Toml.encodeArray?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L48-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.instToToml?OfToToml\"><span class=\"name\">Lake</span>.<span class=\"name\">instToToml?OfToToml</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml?\">ToToml?</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.instToToml?OfToToml","kind":"instance","line":45,"name":"Lake.instToToml?OfToToml","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L45-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.ToToml?.toToml?\"><span class=\"name\">Lake</span>.<span class=\"name\">ToToml?</span>.<span class=\"name\">toToml?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml?\">ToToml?</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Value\">Toml.Value</a></span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.ToToml?.toToml?","kind":"def","line":41,"name":"Lake.ToToml?.toToml?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.ToToml?.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">ToToml?</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toToml?</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Value\">Toml.Value</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml?\">ToToml?</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.ToToml?.mk","kind":"ctor","line":40,"name":"Lake.ToToml?.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.ToToml?\"><span class=\"name\">Lake</span>.<span class=\"name\">ToToml?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.ToToml?","kind":"class","line":40,"name":"Lake.ToToml?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L40-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.instToTomlTable\"><span class=\"name\">Lake</span>.<span class=\"name\">instToTomlTable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Toml.Table</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.instToTomlTable","kind":"instance","line":38,"name":"Lake.instToTomlTable","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.instToTomlArrayValue\"><span class=\"name\">Lake</span>.<span class=\"name\">instToTomlArrayValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Value\">Toml.Value</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.instToTomlArrayValue","kind":"instance","line":37,"name":"Lake.instToTomlArrayValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.instToTomlArray\"><span class=\"name\">Lake</span>.<span class=\"name\">instToTomlArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.instToTomlArray","kind":"instance","line":36,"name":"Lake.instToTomlArray","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.instToTomlBool\"><span class=\"name\">Lake</span>.<span class=\"name\">instToTomlBool</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.instToTomlBool","kind":"instance","line":35,"name":"Lake.instToTomlBool","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.instToTomlFloat\"><span class=\"name\">Lake</span>.<span class=\"name\">instToTomlFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.instToTomlFloat","kind":"instance","line":34,"name":"Lake.instToTomlFloat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.instToTomlNat\"><span class=\"name\">Lake</span>.<span class=\"name\">instToTomlNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.instToTomlNat","kind":"instance","line":33,"name":"Lake.instToTomlNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.instToTomlInt\"><span class=\"name\">Lake</span>.<span class=\"name\">instToTomlInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.instToTomlInt","kind":"instance","line":32,"name":"Lake.instToTomlInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.instToTomlName\"><span class=\"name\">Lake</span>.<span class=\"name\">instToTomlName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.instToTomlName","kind":"instance","line":31,"name":"Lake.instToTomlName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.instToTomlFilePath\"><span class=\"name\">Lake</span>.<span class=\"name\">instToTomlFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.instToTomlFilePath","kind":"instance","line":30,"name":"Lake.instToTomlFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L30-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.instToTomlString\"><span class=\"name\">Lake</span>.<span class=\"name\">instToTomlString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.instToTomlString","kind":"instance","line":29,"name":"Lake.instToTomlString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.instToTomlValue\"><span class=\"name\">Lake</span>.<span class=\"name\">instToTomlValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Value\">Toml.Value</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.instToTomlValue","kind":"instance","line":28,"name":"Lake.instToTomlValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.ToToml.toToml\"><span class=\"name\">Lake</span>.<span class=\"name\">ToToml</span>.<span class=\"name\">toToml</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Value\">Toml.Value</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.ToToml.toToml","kind":"def","line":24,"name":"Lake.ToToml.toToml","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.ToToml.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">ToToml</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toToml</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Value\">Toml.Value</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Toml/Encode.html#Lake.ToToml\">ToToml</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.ToToml.mk","kind":"ctor","line":23,"name":"Lake.ToToml.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Encode.html#Lake.ToToml\"><span class=\"name\">Lake</span>.<span class=\"name\">ToToml</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"","docLink":"./Lake/Toml/Encode.html#Lake.ToToml","kind":"class","line":23,"name":"Lake.ToToml","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Toml/Encode.lean#L23-L24"}}],"imports":["Lake.Util.FilePath","Lake.Toml.Data.Value"],"instances":[{"className":"Lake.ToToml","name":"Lake.instToTomlValue","typeNames":["Lake.Toml.Value"]},{"className":"Lake.ToToml","name":"Lake.instToTomlString","typeNames":["String"]},{"className":"Lake.ToToml","name":"Lake.instToTomlFilePath","typeNames":["System.FilePath"]},{"className":"Lake.ToToml","name":"Lake.instToTomlName","typeNames":["Lean.Name"]},{"className":"Lake.ToToml","name":"Lake.instToTomlInt","typeNames":["Int"]},{"className":"Lake.ToToml","name":"Lake.instToTomlNat","typeNames":["Nat"]},{"className":"Lake.ToToml","name":"Lake.instToTomlFloat","typeNames":["Float"]},{"className":"Lake.ToToml","name":"Lake.instToTomlBool","typeNames":["Bool"]},{"className":"Lake.ToToml","name":"Lake.instToTomlArray","typeNames":["Array"]},{"className":"Lake.ToToml","name":"Lake.instToTomlArrayValue","typeNames":["Array"]},{"className":"Lake.ToToml","name":"Lake.instToTomlTable","typeNames":["Lake.Toml.Table"]},{"className":"Lake.ToToml?","name":"Lake.instToToml?OfToToml","typeNames":[]},{"className":"Lake.ToToml?","name":"Lake.instToToml?Array","typeNames":["Array"]},{"className":"Lake.ToToml?","name":"Lake.instToToml?Option","typeNames":["Option"]},{"className":"Lake.ToToml?","name":"Lake.instToToml?OptionOfToToml","typeNames":["Option"]},{"className":"Lake.Toml.SmartInsert","name":"Lake.Toml.instSmartInsertOfToToml?","typeNames":[]},{"className":"Lake.Toml.SmartInsert","name":"Lake.Toml.instSmartInsertTable","typeNames":["Lake.Toml.Table"]},{"className":"Lake.Toml.SmartInsert","name":"Lake.Toml.instSmartInsertArrayOfToToml","typeNames":["Array"]},{"className":"Lake.Toml.SmartInsert","name":"Lake.Toml.instSmartInsertString","typeNames":["String"]},{"className":"Lake.Toml.SmartInsert","name":"Lake.Toml.Table.instSmartInsertOptionOfToToml","typeNames":["Option"]}],"name":"Lake.Toml.Encode"}