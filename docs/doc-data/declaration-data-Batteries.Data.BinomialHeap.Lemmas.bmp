{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/BinomialHeap/Lemmas.html#Batteries.BinomialHeap.Imp.Heap.WF.size_eq\"><span class=\"name\">Batteries</span>.<span class=\"name\">BinomialHeap</span>.<span class=\"name\">Imp</span>.<span class=\"name\">Heap</span>.<span class=\"name\">WF</span>.<span class=\"name\">size_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">le</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.Heap\">Heap</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.Heap.WF\">WF</a> <span class=\"fn\">le</span> <span class=\"fn\">n</span> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.Heap.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.Heap.realSize\">realSize</a></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/BinomialHeap/Lemmas.html#Batteries.BinomialHeap.Imp.Heap.WF.size_eq","kind":"theorem","line":32,"name":"Batteries.BinomialHeap.Imp.Heap.WF.size_eq","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/BinomialHeap/Lemmas.lean#L32-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/BinomialHeap/Lemmas.html#Batteries.BinomialHeap.Imp.HeapNode.WF.realSize_eq\"><span class=\"name\">Batteries</span>.<span class=\"name\">BinomialHeap</span>.<span class=\"name\">Imp</span>.<span class=\"name\">HeapNode</span>.<span class=\"name\">WF</span>.<span class=\"name\">realSize_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">le</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.HeapNode\">HeapNode</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.HeapNode.WF\">WF</a> <span class=\"fn\">le</span> <span class=\"fn\">a</span> <span class=\"fn\">s</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.HeapNode.realSize\">realSize</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/BinomialHeap/Lemmas.html#Batteries.BinomialHeap.Imp.HeapNode.WF.realSize_eq","kind":"theorem","line":25,"name":"Batteries.BinomialHeap.Imp.HeapNode.WF.realSize_eq","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/BinomialHeap/Lemmas.lean#L25-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/BinomialHeap/Lemmas.html#Batteries.BinomialHeap.Imp.Heap.deleteMin_fst\"><span class=\"name\">Batteries</span>.<span class=\"name\">BinomialHeap</span>.<span class=\"name\">Imp</span>.<span class=\"name\">Heap</span>.<span class=\"name\">deleteMin_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.Heap\">Heap</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">le</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.Heap\">Heap</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#Prod.fst\">fst</a></span>)</span> <span class=\"fn\">(<a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.Heap.deleteMin\">deleteMin</a> <span class=\"fn\">le</span> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.Heap.head?\">head?</a> <span class=\"fn\">le</span> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/BinomialHeap/Lemmas.html#Batteries.BinomialHeap.Imp.Heap.deleteMin_fst","kind":"theorem","line":20,"name":"Batteries.BinomialHeap.Imp.Heap.deleteMin_fst","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/BinomialHeap/Lemmas.lean#L20-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/BinomialHeap/Lemmas.html#Batteries.BinomialHeap.Imp.Heap.findMin_val\"><span class=\"name\">Batteries</span>.<span class=\"name\">BinomialHeap</span>.<span class=\"name\">Imp</span>.<span class=\"name\">Heap</span>.<span class=\"name\">findMin_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.Heap\">Heap</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">le</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.Heap\">Heap</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.Heap\">Heap</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">res</span> : <span class=\"fn\"><a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.FindMin\">FindMin</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.Heap.findMin\">findMin</a> <span class=\"fn\">le</span> <span class=\"fn\">k</span> <span class=\"fn\">s</span> <span class=\"fn\">res</span>)</span>.<a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.FindMin.val\">val</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.Heap.headD\">headD</a> <span class=\"fn\">le</span> <span class=\"fn\"><span class=\"fn\">res</span>.<a href=\"./Batteries/Data/BinomialHeap/Basic.html#Batteries.BinomialHeap.Imp.FindMin.val\">val</a></span> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/BinomialHeap/Lemmas.html#Batteries.BinomialHeap.Imp.Heap.findMin_val","kind":"theorem","line":15,"name":"Batteries.BinomialHeap.Imp.Heap.findMin_val","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/BinomialHeap/Lemmas.lean#L15-L18"}}],"imports":["Init","Batteries.Data.BinomialHeap.Basic"],"instances":[],"name":"Batteries.Data.BinomialHeap.Lemmas"}