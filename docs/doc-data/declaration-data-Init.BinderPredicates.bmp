{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.«binderPred⊃_»\"><span class=\"name\">Lean</span>.<span class=\"name\">«binderPred⊃_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Declare `∀ x ⊃ y, ...` as syntax for `∀ x, x ⊃ y → ...` and `∃ x ⊃ y, ...` as syntax for\n`∃ x, x ⊃ y ∧ ...` ","docLink":"./Init/BinderPredicates.html#Lean.«binderPred⊃_»","kind":"def","line":82,"name":"Lean.«binderPred⊃_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L82-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.«binderPred⊇_»\"><span class=\"name\">Lean</span>.<span class=\"name\">«binderPred⊇_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Declare `∀ x ⊇ y, ...` as syntax for `∀ x, x ⊇ y → ...` and `∃ x ⊇ y, ...` as syntax for\n`∃ x, x ⊇ y ∧ ...` ","docLink":"./Init/BinderPredicates.html#Lean.«binderPred⊇_»","kind":"def","line":78,"name":"Lean.«binderPred⊇_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L78-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.«binderPred⊂_»\"><span class=\"name\">Lean</span>.<span class=\"name\">«binderPred⊂_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Declare `∀ x ⊂ y, ...` as syntax for `∀ x, x ⊂ y → ...` and `∃ x ⊂ y, ...` as syntax for\n`∃ x, x ⊂ y ∧ ...` ","docLink":"./Init/BinderPredicates.html#Lean.«binderPred⊂_»","kind":"def","line":74,"name":"Lean.«binderPred⊂_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L74-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.«binderPred⊆_»\"><span class=\"name\">Lean</span>.<span class=\"name\">«binderPred⊆_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Declare `∀ x ⊆ y, ...` as syntax for `∀ x, x ⊆ y → ...` and `∃ x ⊆ y, ...` as syntax for\n`∃ x, x ⊆ y ∧ ...` ","docLink":"./Init/BinderPredicates.html#Lean.«binderPred⊆_»","kind":"def","line":70,"name":"Lean.«binderPred⊆_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L70-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.«binderPred∉_»\"><span class=\"name\">Lean</span>.<span class=\"name\">«binderPred∉_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Declare `∀ x ∉ y, ...` as syntax for `∀ x, x ∉ y → ...` and `∃ x ∉ y, ...` as syntax for\n`∃ x, x ∉ y ∧ ...` ","docLink":"./Init/BinderPredicates.html#Lean.«binderPred∉_»","kind":"def","line":66,"name":"Lean.«binderPred∉_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L66-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.«binderPred∈_»\"><span class=\"name\">Lean</span>.<span class=\"name\">«binderPred∈_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Declare `∀ x ∈ y, ...` as syntax for `∀ x, x ∈ y → ...` and `∃ x ∈ y, ...` as syntax for\n`∃ x, x ∈ y ∧ ...` ","docLink":"./Init/BinderPredicates.html#Lean.«binderPred∈_»","kind":"def","line":62,"name":"Lean.«binderPred∈_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L62-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.«binderPred≠_»\"><span class=\"name\">Lean</span>.<span class=\"name\">«binderPred≠_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Declare `∃ x ≠ y, ...` as syntax for `∃ x, x ≠ y ∧ ...` ","docLink":"./Init/BinderPredicates.html#Lean.«binderPred≠_»","kind":"def","line":59,"name":"Lean.«binderPred≠_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L59-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.«binderPred≤_»\"><span class=\"name\">Lean</span>.<span class=\"name\">«binderPred≤_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Declare `∃ x ≤ y, ...` as syntax for `∃ x, x ≤ y ∧ ...` ","docLink":"./Init/BinderPredicates.html#Lean.«binderPred≤_»","kind":"def","line":57,"name":"Lean.«binderPred≤_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L57-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.«binderPred&lt;_»\"><span class=\"name\">Lean</span>.<span class=\"name\">«binderPred&lt;_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Declare `∃ x < y, ...` as syntax for `∃ x, x < y ∧ ...` ","docLink":"./Init/BinderPredicates.html#Lean.«binderPred<_»","kind":"def","line":55,"name":"Lean.«binderPred<_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L55-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.«binderPred≥_»\"><span class=\"name\">Lean</span>.<span class=\"name\">«binderPred≥_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Declare `∃ x ≥ y, ...` as syntax for `∃ x, x ≥ y ∧ ...` ","docLink":"./Init/BinderPredicates.html#Lean.«binderPred≥_»","kind":"def","line":53,"name":"Lean.«binderPred≥_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L53-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.«binderPred&gt;_»\"><span class=\"name\">Lean</span>.<span class=\"name\">«binderPred&gt;_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Declare `∃ x > y, ...` as syntax for `∃ x, x > y ∧ ...` ","docLink":"./Init/BinderPredicates.html#Lean.«binderPred>_»","kind":"def","line":51,"name":"Lean.«binderPred>_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L51-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.«term∀__,_»\"><span class=\"name\">Lean</span>.<span class=\"name\">«term∀__,_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"The notation `∀ x < 2, p x` is shorthand for `∀ x, x < 2 → p x`,\nand similarly for other binary operators.\n","docLink":"./Init/BinderPredicates.html#Lean.«term∀__,_»","kind":"def","line":33,"name":"Lean.«term∀__,_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L33-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.«term∃__,_»\"><span class=\"name\">Lean</span>.<span class=\"name\">«term∃__,_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"The notation `∃ x < 2, p x` is shorthand for `∃ x, x < 2 ∧ p x`,\nand similarly for other binary operators.\n","docLink":"./Init/BinderPredicates.html#Lean.«term∃__,_»","kind":"def","line":28,"name":"Lean.«term∃__,_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L28-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.«termSatisfies_binder_pred%__»\"><span class=\"name\">Lean</span>.<span class=\"name\">«termSatisfies_binder_pred%__»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`satisfies_binder_pred% t pred` expands to a proposition expressing that `t` satisfies `pred`.\n","docLink":"./Init/BinderPredicates.html#Lean.«termSatisfies_binder_pred%__»","kind":"def","line":21,"name":"Lean.«termSatisfies_binder_pred%__»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L21-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.Parser.Category.binderPred\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Category</span>.<span class=\"name\">binderPred</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Notation.html#Lean.Parser.Category\">Category</a></div></div>","info":{"doc":"The syntax category of binder predicates contains predicates like `> 0`, `∈ s`, etc.\n(`: t` should not be a binder predicate because it would clash with the built-in syntax for ∀/∃.)\n","docLink":"./Init/BinderPredicates.html#Lean.Parser.Category.binderPred","kind":"def","line":15,"name":"Lean.Parser.Category.binderPred","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L15-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/BinderPredicates.html#Lean.binderPred.quot\"><span class=\"name\">Lean</span>.<span class=\"name\">binderPred</span>.<span class=\"name\">quot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/BinderPredicates.html#Lean.binderPred.quot","kind":"def","line":15,"name":"Lean.binderPred.quot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/BinderPredicates.lean#L15-L19"}}],"imports":["Init.NotationExtra"],"instances":[],"name":"Init.BinderPredicates"}