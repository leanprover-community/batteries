{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.valid_clipDay\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">valid_clipDay</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">day</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.Valid\">Valid</a> <span class=\"fn\">leap</span> <span class=\"fn\">month</span> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.clipDay\">clipDay</a> <span class=\"fn\">leap</span> <span class=\"fn\">month</span> <span class=\"fn\">day</span>)</span></span></div></div>","info":{"doc":"Proves that every value provided by a clipDay is a valid day in a year.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.valid_clipDay","kind":"theorem","line":325,"name":"Std.Time.Month.Ordinal.valid_clipDay","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L325-L332"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.clipDay\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">clipDay</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">day</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a></div></div>","info":{"doc":"Clips the day to be within the valid range.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.clipDay","kind":"def","line":315,"name":"Std.Time.Month.Ordinal.clipDay","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L315-L323"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.Valid\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">Valid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">day</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"Checks if a given day is valid for the specified month and year. For example, `29/02` is valid only\nif the year is a leap year.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.Valid","kind":"def","line":308,"name":"Std.Time.Month.Ordinal.Valid","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L308-L313"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.difference_eq\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">difference_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">month</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">11</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">have <span class=\"fn\">next</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE.truncateTop\">Internal.Bounded.LE.truncateTop</a> <span class=\"fn\">month</span> <span class=\"fn\">p</span>)</span>.<a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE.addTop\">addTop</a></span> <span class=\"fn\">1</span> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.difference_eq._proof_1\">difference_eq._proof_1</a></span>;\n<span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.cumulativeDays\">cumulativeDays</a> <span class=\"fn\">leap</span> <span class=\"fn\">next</span>)</span>.<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val\">val</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.cumulativeDays\">cumulativeDays</a> <span class=\"fn\">leap</span> <span class=\"fn\">month</span>)</span>.<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val\">val</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.days\">days</a> <span class=\"fn\">leap</span> <span class=\"fn\">month</span>)</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.difference_eq","kind":"theorem","line":298,"name":"Std.Time.Month.Ordinal.difference_eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L298-L306"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.cumulativeDays_le\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">cumulativeDays_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.cumulativeDays\">cumulativeDays</a> <span class=\"fn\">leap</span> <span class=\"fn\">month</span></span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.cumulativeDays\">cumulativeDays</a> <span class=\"fn\">leap</span> <span class=\"fn\">month</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">334</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">leap</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.cumulativeDays_le","kind":"theorem","line":291,"name":"Std.Time.Month.Ordinal.cumulativeDays_le","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L291-L296"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.cumulativeDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">cumulativeDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a></div></div>","info":{"doc":"Returns the number of days until the `month`.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.cumulativeDays","kind":"def","line":281,"name":"Std.Time.Month.Ordinal.cumulativeDays","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L281-L289"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.days_gt_27\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">days_gt_27</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.days\">days</a> <span class=\"fn\">leap</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">27</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.days_gt_27","kind":"theorem","line":271,"name":"Std.Time.Month.Ordinal.days_gt_27","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L271-L279"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.days\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">days</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a></div></div>","info":{"doc":"Gets the number of days in a month.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.days","kind":"def","line":259,"name":"Std.Time.Month.Ordinal.days","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L259-L269"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.toDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a></div></div>","info":{"doc":"Transforms `Month.Ordinal` into `Day.Offset`.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.toDays","kind":"def","line":238,"name":"Std.Time.Month.Ordinal.toDays","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L238-L243"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.toHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a></div></div>","info":{"doc":"Transforms `Month.Ordinal` into `Hour.Offset`.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.toHours","kind":"def","line":231,"name":"Std.Time.Month.Ordinal.toHours","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L231-L236"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.toMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a></div></div>","info":{"doc":"Transforms `Month.Ordinal` into `Minute.Offset`.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.toMinutes","kind":"def","line":224,"name":"Std.Time.Month.Ordinal.toMinutes","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L224-L229"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.toSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a></div></div>","info":{"doc":"Transforms `Month.Ordinal` into `Second.Offset`.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.toSeconds","kind":"def","line":213,"name":"Std.Time.Month.Ordinal.toSeconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L213-L222"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.ofFin\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">13</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></div></div>","info":{"doc":"Creates an `Ordinal` from a `Fin`, ensuring the value is within bounds, if its 0 then its converted\nto 1.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.ofFin","kind":"def","line":205,"name":"Std.Time.Month.Ordinal.ofFin","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L205-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.toNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Converts a `Ordinal` into a `Nat`.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.toNat","kind":"def","line":196,"name":"Std.Time.Month.Ordinal.toNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L196-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">12</span> := by decide)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></div></div>","info":{"doc":"Creates an `Ordinal` from a `Nat`, ensuring the value is within bounds.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.ofNat","kind":"def","line":189,"name":"Std.Time.Month.Ordinal.ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L189-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">12</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></div></div>","info":{"doc":"Creates an `Ordinal` from an integer, ensuring the value is within bounds.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.ofInt","kind":"def","line":182,"name":"Std.Time.Month.Ordinal.ofInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L182-L187"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.toOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toOffset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></div></div>","info":{"doc":"Converts a `Ordinal` into a `Offset`.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.toOffset","kind":"def","line":175,"name":"Std.Time.Month.Ordinal.toOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L175-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.december\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">december</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></div></div>","info":{"doc":"The ordinal value representing the month of December.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.december","kind":"def","line":170,"name":"Std.Time.Month.Ordinal.december","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L170-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.november\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">november</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></div></div>","info":{"doc":"The ordinal value representing the month of November.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.november","kind":"def","line":165,"name":"Std.Time.Month.Ordinal.november","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L165-L168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.october\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">october</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></div></div>","info":{"doc":"The ordinal value representing the month of October.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.october","kind":"def","line":160,"name":"Std.Time.Month.Ordinal.october","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L160-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.september\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">september</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></div></div>","info":{"doc":"The ordinal value representing the month of September.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.september","kind":"def","line":155,"name":"Std.Time.Month.Ordinal.september","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L155-L158"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.august\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">august</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></div></div>","info":{"doc":"The ordinal value representing the month of August.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.august","kind":"def","line":150,"name":"Std.Time.Month.Ordinal.august","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L150-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.july\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">july</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></div></div>","info":{"doc":"The ordinal value representing the month of July.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.july","kind":"def","line":145,"name":"Std.Time.Month.Ordinal.july","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L145-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.june\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">june</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></div></div>","info":{"doc":"The ordinal value representing the month of June.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.june","kind":"def","line":140,"name":"Std.Time.Month.Ordinal.june","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L140-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.may\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">may</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></div></div>","info":{"doc":"The ordinal value representing the month of May.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.may","kind":"def","line":135,"name":"Std.Time.Month.Ordinal.may","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L135-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.april\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">april</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></div></div>","info":{"doc":"The ordinal value representing the month of April.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.april","kind":"def","line":130,"name":"Std.Time.Month.Ordinal.april","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L130-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.march\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">march</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></div></div>","info":{"doc":"The ordinal value representing the month of March.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.march","kind":"def","line":125,"name":"Std.Time.Month.Ordinal.march","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L125-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.february\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">february</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></div></div>","info":{"doc":"The ordinal value representing the month of February.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.february","kind":"def","line":120,"name":"Std.Time.Month.Ordinal.february","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L120-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.january\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">january</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></div></div>","info":{"doc":"The ordinal value representing the month of January.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal.january","kind":"def","line":115,"name":"Std.Time.Month.Ordinal.january","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L115-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></div></div>","info":{"doc":"Creates an `Offset` from an integer.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset.ofInt","kind":"def","line":104,"name":"Std.Time.Month.Offset.ofInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L104-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></div></div>","info":{"doc":"Creates an `Offset` from a natural number.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset.ofNat","kind":"def","line":97,"name":"Std.Time.Month.Offset.ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L97-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Quarter.ofMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Quarter</span>.<span class=\"name\">ofMonth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Quarter\">Quarter</a></div></div>","info":{"doc":"Determine the `Quarter` by the month.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Quarter.ofMonth","kind":"def","line":84,"name":"Std.Time.Month.Quarter.ofMonth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L84-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLawfulEqOrdQuarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instLawfulEqOrdQuarter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Quarter\">Quarter</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLawfulEqOrdQuarter","kind":"instance","line":80,"name":"Std.Time.Month.instLawfulEqOrdQuarter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L80-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instTransOrdQuarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instTransOrdQuarter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Quarter\">Quarter</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instTransOrdQuarter","kind":"instance","line":78,"name":"Std.Time.Month.instTransOrdQuarter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L78-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instOrdQuarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instOrdQuarter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Quarter\">Quarter</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instOrdQuarter","kind":"instance","line":76,"name":"Std.Time.Month.instOrdQuarter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L76-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instInhabitedQuarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instInhabitedQuarter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Quarter\">Quarter</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instInhabitedQuarter","kind":"instance","line":73,"name":"Std.Time.Month.instInhabitedQuarter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L73-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instOfNatQuarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instOfNatQuarter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Quarter\">Quarter</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instOfNatQuarter","kind":"instance","line":71,"name":"Std.Time.Month.instOfNatQuarter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L71-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLEQuarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instLEQuarter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Quarter\">Quarter</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLEQuarter","kind":"instance","line":69,"name":"Std.Time.Month.instLEQuarter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLTQuarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instLTQuarter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Quarter\">Quarter</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLTQuarter","kind":"instance","line":69,"name":"Std.Time.Month.instLTQuarter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDecidableEqQuarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instDecidableEqQuarter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Quarter\">Quarter</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDecidableEqQuarter","kind":"instance","line":69,"name":"Std.Time.Month.instDecidableEqQuarter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instReprQuarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instReprQuarter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Quarter\">Quarter</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instReprQuarter","kind":"instance","line":69,"name":"Std.Time.Month.instReprQuarter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Quarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Quarter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`Quarter` represents a value between 1 and 4, inclusive, corresponding to the four quarters of a year.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Quarter","kind":"def","line":65,"name":"Std.Time.Month.Quarter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L65-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLawfulEqOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instLawfulEqOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLawfulEqOrdOffset","kind":"instance","line":63,"name":"Std.Time.Month.instLawfulEqOrdOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instTransOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instTransOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instTransOrdOffset","kind":"instance","line":61,"name":"Std.Time.Month.instTransOrdOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instOrdOffset","kind":"instance","line":59,"name":"Std.Time.Month.instOrdOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instOfNatOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instOfNatOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instOfNatOffset","kind":"instance","line":56,"name":"Std.Time.Month.instOfNatOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L56-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDecidableLtOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instDecidableLtOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDecidableLtOffset","kind":"instance","line":53,"name":"Std.Time.Month.instDecidableLtOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L53-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDecidableLeOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instDecidableLeOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDecidableLeOffset","kind":"instance","line":50,"name":"Std.Time.Month.instDecidableLeOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L50-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLEOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instLEOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLEOffset","kind":"instance","line":48,"name":"Std.Time.Month.instLEOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLTOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instLTOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLTOffset","kind":"instance","line":48,"name":"Std.Time.Month.instLTOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instToStringOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instToStringOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instToStringOffset","kind":"instance","line":48,"name":"Std.Time.Month.instToStringOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instNegOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instNegOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instNegOffset","kind":"instance","line":48,"name":"Std.Time.Month.instNegOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDivOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instDivOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDivOffset","kind":"instance","line":48,"name":"Std.Time.Month.instDivOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instMulOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instMulOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instMulOffset","kind":"instance","line":48,"name":"Std.Time.Month.instMulOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instSubOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instSubOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instSubOffset","kind":"instance","line":48,"name":"Std.Time.Month.instSubOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instAddOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instAddOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instAddOffset","kind":"instance","line":48,"name":"Std.Time.Month.instAddOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instInhabitedOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instInhabitedOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instInhabitedOffset","kind":"instance","line":48,"name":"Std.Time.Month.instInhabitedOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDecidableEqOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instDecidableEqOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDecidableEqOffset","kind":"instance","line":48,"name":"Std.Time.Month.instDecidableEqOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instReprOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instReprOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instReprOffset","kind":"instance","line":48,"name":"Std.Time.Month.instReprOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Offset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`Offset` represents an offset in months. It is defined as an `Int`.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset","kind":"def","line":44,"name":"Std.Time.Month.Offset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L44-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLawfulEqOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instLawfulEqOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLawfulEqOrdOrdinal","kind":"instance","line":42,"name":"Std.Time.Month.instLawfulEqOrdOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instTransOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instTransOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instTransOrdOrdinal","kind":"instance","line":40,"name":"Std.Time.Month.instTransOrdOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instOrdOrdinal","kind":"instance","line":38,"name":"Std.Time.Month.instOrdOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDecidableLtOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instDecidableLtOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDecidableLtOrdinal","kind":"instance","line":35,"name":"Std.Time.Month.instDecidableLtOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L35-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDecidableLeOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instDecidableLeOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDecidableLeOrdinal","kind":"instance","line":32,"name":"Std.Time.Month.instDecidableLeOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L32-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instInhabitedOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instInhabitedOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instInhabitedOrdinal","kind":"instance","line":29,"name":"Std.Time.Month.instInhabitedOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L29-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instOfNatOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instOfNatOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instOfNatOrdinal","kind":"instance","line":26,"name":"Std.Time.Month.instOfNatOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L26-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLTOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instLTOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLTOrdinal","kind":"instance","line":24,"name":"Std.Time.Month.instLTOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLEOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instLEOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instLEOrdinal","kind":"instance","line":24,"name":"Std.Time.Month.instLEOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDecidableEqOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instDecidableEqOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instDecidableEqOrdinal","kind":"instance","line":24,"name":"Std.Time.Month.instDecidableEqOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instReprOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">instReprOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.instReprOrdinal","kind":"instance","line":24,"name":"Std.Time.Month.instReprOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Month</span>.<span class=\"name\">Ordinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`Ordinal` represents a bounded value for months, which ranges between 1 and 12.\n","docLink":"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal","kind":"def","line":20,"name":"Std.Time.Month.Ordinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Month.lean#L20-L24"}}],"imports":["Std.Time.Date.Unit.Day"],"instances":[{"className":"Repr","name":"Std.Time.Month.instReprOrdinal","typeNames":["Std.Time.Month.Ordinal"]},{"className":"Decidable","name":"Std.Time.Month.instDecidableEqOrdinal","typeNames":["Eq"]},{"className":"LE","name":"Std.Time.Month.instLEOrdinal","typeNames":["Std.Time.Month.Ordinal"]},{"className":"LT","name":"Std.Time.Month.instLTOrdinal","typeNames":["Std.Time.Month.Ordinal"]},{"className":"OfNat","name":"Std.Time.Month.instOfNatOrdinal","typeNames":["Std.Time.Month.Ordinal"]},{"className":"Inhabited","name":"Std.Time.Month.instInhabitedOrdinal","typeNames":["Std.Time.Month.Ordinal"]},{"className":"Decidable","name":"Std.Time.Month.instDecidableLeOrdinal","typeNames":["LE.le"]},{"className":"Decidable","name":"Std.Time.Month.instDecidableLtOrdinal","typeNames":["LT.lt"]},{"className":"Ord","name":"Std.Time.Month.instOrdOrdinal","typeNames":["Std.Time.Month.Ordinal"]},{"className":"Std.TransCmp","name":"Std.Time.Month.instTransOrdOrdinal","typeNames":["Std.Time.Month.Ordinal"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.Month.instLawfulEqOrdOrdinal","typeNames":["Std.Time.Month.Ordinal"]},{"className":"Repr","name":"Std.Time.Month.instReprOffset","typeNames":["Std.Time.Month.Offset"]},{"className":"Decidable","name":"Std.Time.Month.instDecidableEqOffset","typeNames":["Eq"]},{"className":"Inhabited","name":"Std.Time.Month.instInhabitedOffset","typeNames":["Std.Time.Month.Offset"]},{"className":"Add","name":"Std.Time.Month.instAddOffset","typeNames":["Std.Time.Month.Offset"]},{"className":"Sub","name":"Std.Time.Month.instSubOffset","typeNames":["Std.Time.Month.Offset"]},{"className":"Mul","name":"Std.Time.Month.instMulOffset","typeNames":["Std.Time.Month.Offset"]},{"className":"Div","name":"Std.Time.Month.instDivOffset","typeNames":["Std.Time.Month.Offset"]},{"className":"Neg","name":"Std.Time.Month.instNegOffset","typeNames":["Std.Time.Month.Offset"]},{"className":"ToString","name":"Std.Time.Month.instToStringOffset","typeNames":["Std.Time.Month.Offset"]},{"className":"LT","name":"Std.Time.Month.instLTOffset","typeNames":["Std.Time.Month.Offset"]},{"className":"LE","name":"Std.Time.Month.instLEOffset","typeNames":["Std.Time.Month.Offset"]},{"className":"Decidable","name":"Std.Time.Month.instDecidableLeOffset","typeNames":["LE.le"]},{"className":"Decidable","name":"Std.Time.Month.instDecidableLtOffset","typeNames":["LT.lt"]},{"className":"OfNat","name":"Std.Time.Month.instOfNatOffset","typeNames":["Std.Time.Month.Offset"]},{"className":"Ord","name":"Std.Time.Month.instOrdOffset","typeNames":["Std.Time.Month.Offset"]},{"className":"Std.TransCmp","name":"Std.Time.Month.instTransOrdOffset","typeNames":["Std.Time.Month.Offset"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.Month.instLawfulEqOrdOffset","typeNames":["Std.Time.Month.Offset"]},{"className":"Repr","name":"Std.Time.Month.instReprQuarter","typeNames":["Std.Time.Month.Quarter"]},{"className":"Decidable","name":"Std.Time.Month.instDecidableEqQuarter","typeNames":["Eq"]},{"className":"LT","name":"Std.Time.Month.instLTQuarter","typeNames":["Std.Time.Month.Quarter"]},{"className":"LE","name":"Std.Time.Month.instLEQuarter","typeNames":["Std.Time.Month.Quarter"]},{"className":"OfNat","name":"Std.Time.Month.instOfNatQuarter","typeNames":["Std.Time.Month.Quarter"]},{"className":"Inhabited","name":"Std.Time.Month.instInhabitedQuarter","typeNames":["Std.Time.Month.Quarter"]},{"className":"Ord","name":"Std.Time.Month.instOrdQuarter","typeNames":["Std.Time.Month.Quarter"]},{"className":"Std.TransCmp","name":"Std.Time.Month.instTransOrdQuarter","typeNames":["Std.Time.Month.Quarter"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.Month.instLawfulEqOrdQuarter","typeNames":["Std.Time.Month.Quarter"]}],"name":"Std.Time.Date.Unit.Month"}