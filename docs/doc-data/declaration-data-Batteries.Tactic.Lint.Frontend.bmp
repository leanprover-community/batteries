{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.«command#list_linters»\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">«command#list_linters»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The command `#list_linters` prints a list of all available linters. ","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.«command#list_linters»","kind":"def","line":272,"name":"Batteries.Tactic.Lint.«command#list_linters»","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L272-L280"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.«command#lint+-*Only___»\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">«command#lint+-*Only___»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The command `#lint` runs the linters on the current file (by default).\n\n`#lint only someLinter` can be used to run only a single linter. ","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.«command#lint+-*Only___»","kind":"def","line":227,"name":"Batteries.Tactic.Lint.«command#lint+-*Only___»","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L227-L269"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.inProject\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">inProject</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The `in foo` config argument allows running the linter on a specified project. ","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.inProject","kind":"def","line":223,"name":"Batteries.Tactic.Lint.inProject","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L223-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getDeclsInPackage\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">getDeclsInPackage</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span></div></div>","info":{"doc":"Get the list of all declarations in the specified package. ","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getDeclsInPackage","kind":"def","line":213,"name":"Batteries.Tactic.Lint.getDeclsInPackage","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L213-L221"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getAllDecls\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">getAllDecls</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span></div></div>","info":{"doc":"Get the list of all declarations in the environment. ","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getAllDecls","kind":"def","line":209,"name":"Batteries.Tactic.Lint.getAllDecls","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L209-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getDeclsInCurrModule\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">getDeclsInCurrModule</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span></div></div>","info":{"doc":"Get the list of declarations in the current module. ","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getDeclsInCurrModule","kind":"def","line":205,"name":"Batteries.Tactic.Lint.getDeclsInCurrModule","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L205-L207"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.formatLinterResults\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">formatLinterResults</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">results</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Batteries/Tactic/Lint/Basic.html#Batteries.Tactic.Lint.NamedLinter\">NamedLinter</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">groupByFilename</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">whereDesc</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">runSlowLinters</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">verbose</span> : <a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numLinters</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useErrorFormat</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>","info":{"doc":"Formats the linter results as Lean code with comments and `#check` commands.\n","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.formatLinterResults","kind":"def","line":172,"name":"Batteries.Tactic.Lint.formatLinterResults","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L172-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.groupedByFilename\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">groupedByFilename</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">results</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useErrorFormat</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>","info":{"doc":"Formats a map of linter warnings grouped by filename with `-- filename` comments.\nThe first `drop_fn_chars` characters are stripped from the filename.\n","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.groupedByFilename","kind":"def","line":148,"name":"Batteries.Tactic.Lint.groupedByFilename","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L148-L170"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.printWarnings\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">printWarnings</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">results</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filePath</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> := <a href=\"./Init/Prelude.html#Inhabited.default\">default</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useErrorFormat</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>","info":{"doc":"Formats a map of linter warnings using `print_warning`, sorted by line number. ","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.printWarnings","kind":"def","line":141,"name":"Batteries.Tactic.Lint.printWarnings","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L141-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.printWarning\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">printWarning</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">warning</span> : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useErrorFormat</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filePath</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> := <a href=\"./Init/Prelude.html#Inhabited.default\">default</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>","info":{"doc":"Formats a linter warning as `#check` command with comment. ","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.printWarning","kind":"def","line":130,"name":"Batteries.Tactic.Lint.printWarning","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L130-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.sortResults\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">sortResults</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">results</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>))</span></span></div></div>","info":{"doc":"Sorts a map with declaration keys as names by line number. ","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.sortResults","kind":"def","line":122,"name":"Batteries.Tactic.Lint.sortResults","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L122-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.lintCore\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">lintCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">linters</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Tactic/Lint/Basic.html#Batteries.Tactic.Lint.NamedLinter\">NamedLinter</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Batteries/Tactic/Lint/Basic.html#Batteries.Tactic.Lint.NamedLinter\">NamedLinter</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>))</span></span></div></div>","info":{"doc":"Runs all the specified linters on all the specified declarations in parallel,\nproducing a list of results.\n","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.lintCore","kind":"def","line":94,"name":"Batteries.Tactic.Lint.lintCore","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L94-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getChecks\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">getChecks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">slow</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">runOnly </span><span class=\"fn\">runAlways</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Tactic/Lint/Basic.html#Batteries.Tactic.Lint.NamedLinter\">NamedLinter</a>)</span></span></div></div>","info":{"doc":"`getChecks slow runOnly runAlways` produces a list of linters.\n`runOnly` is an optional list of names that should resolve to declarations with type `NamedLinter`.\nIf populated, only these linters are run (regardless of the default configuration).\n`runAlways` is an optional list of names that should resolve to declarations with type\n`NamedLinter`. If populated, these linters are always run (regardless of their configuration).\nSpecifying a linter in `runAlways` but not `runOnly` is an error.\nOtherwise, it uses all enabled linters in the environment tagged with `@[env_linter]`.\nIf `slow` is false, it only uses the fast default tests. ","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getChecks","kind":"def","line":70,"name":"Batteries.Tactic.Lint.getChecks","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L70-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instReprLintVerbosity\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">instReprLintVerbosity</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instReprLintVerbosity","kind":"instance","line":68,"name":"Batteries.Tactic.Lint.instReprLintVerbosity","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instReprLintVerbosity.repr\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">instReprLintVerbosity</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instReprLintVerbosity.repr","kind":"def","line":68,"name":"Batteries.Tactic.Lint.instReprLintVerbosity.repr","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instDecidableEqLintVerbosity\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">instDecidableEqLintVerbosity</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instDecidableEqLintVerbosity","kind":"instance","line":68,"name":"Batteries.Tactic.Lint.instDecidableEqLintVerbosity","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instInhabitedLintVerbosity.default\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">instInhabitedLintVerbosity</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a></div></div>","info":{"doc":"","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instInhabitedLintVerbosity.default","kind":"def","line":68,"name":"Batteries.Tactic.Lint.instInhabitedLintVerbosity.default","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instInhabitedLintVerbosity\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">instInhabitedLintVerbosity</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instInhabitedLintVerbosity","kind":"instance","line":68,"name":"Batteries.Tactic.Lint.instInhabitedLintVerbosity","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity.high\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">LintVerbosity</span>.<span class=\"name\">high</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a></div></div>","info":{"doc":"`high`: print output of every check. ","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity.high","kind":"ctor","line":66,"name":"Batteries.Tactic.Lint.LintVerbosity.high","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L66-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity.medium\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">LintVerbosity</span>.<span class=\"name\">medium</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a></div></div>","info":{"doc":"`medium`: only print failing checks, print confirmation on success. ","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity.medium","kind":"ctor","line":64,"name":"Batteries.Tactic.Lint.LintVerbosity.medium","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L64-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity.low\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">LintVerbosity</span>.<span class=\"name\">low</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a></div></div>","info":{"doc":"`low`: only print failing checks, print nothing on success. ","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity.low","kind":"ctor","line":62,"name":"Batteries.Tactic.Lint.LintVerbosity.low","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L62-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">LintVerbosity</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Verbosity for the linter output. ","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity","kind":"inductive","line":60,"name":"Batteries.Tactic.Lint.LintVerbosity","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/Lint/Frontend.lean#L60-L68"}}],"imports":["Init","Lean.Elab.Command","Batteries.Tactic.Lint.Basic"],"instances":[{"className":"Inhabited","name":"Batteries.Tactic.Lint.instInhabitedLintVerbosity","typeNames":["Batteries.Tactic.Lint.LintVerbosity"]},{"className":"Decidable","name":"Batteries.Tactic.Lint.instDecidableEqLintVerbosity","typeNames":["Eq"]},{"className":"Repr","name":"Batteries.Tactic.Lint.instReprLintVerbosity","typeNames":["Batteries.Tactic.Lint.LintVerbosity"]}],"name":"Batteries.Tactic.Lint.Frontend"}