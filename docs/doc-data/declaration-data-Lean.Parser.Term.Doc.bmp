{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.getRecommendedSpellingString\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">getRecommendedSpellingString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"Renders the recommended spellings for the given declaration into a string for appending to\nthe docstring. ","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.getRecommendedSpellingString","kind":"def","line":70,"name":"Lean.Parser.Term.Doc.getRecommendedSpellingString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Term/Doc.lean#L70-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.getRecommendedSpellingsForName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">getRecommendedSpellingsForName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a></span></div></div>","info":{"doc":"Returns the recommended spellings associated with the given declaration name. ","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.getRecommendedSpellingsForName","kind":"def","line":59,"name":"Lean.Parser.Term.Doc.getRecommendedSpellingsForName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Term/Doc.lean#L59-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.addRecommendedSpelling\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">addRecommendedSpelling</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rec</span> : <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">names</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"Adds a recommended spelling to the environment. ","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.addRecommendedSpelling","kind":"def","line":54,"name":"Lean.Parser.Term.Doc.addRecommendedSpelling","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Term/Doc.lean#L54-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.recommendedSpellingExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">recommendedSpellingExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">PersistentEnvExtension</a> <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a> <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a>)</span></span></div></div>","info":{"doc":"Recommended spellings for notations, stored in such a way that it is easy to generate a table\ncontaining every recommended spelling exactly once. ","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.recommendedSpellingExt","kind":"opaque","line":43,"name":"Lean.Parser.Term.Doc.recommendedSpellingExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Term/Doc.lean#L43-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.recommendedSpellingByNameExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">recommendedSpellingByNameExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">PersistentEnvExtension</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a></span>) (<a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)\n  <span class=\"fn\">(<a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a>)</span>)</span></span></div></div>","info":{"doc":"Recommended spellings for notations, stored in a way so that the recommended spellings for a given\ndeclaration are easily accessible.\n","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.recommendedSpellingByNameExt","kind":"opaque","line":28,"name":"Lean.Parser.Term.Doc.recommendedSpellingByNameExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Term/Doc.lean#L28-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.additionalInformation?\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">RecommendedSpelling</span>.<span class=\"name\">additionalInformation?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Additional information. ","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.additionalInformation?","kind":"def","line":26,"name":"Lean.Parser.Term.Doc.RecommendedSpelling.additionalInformation?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Term/Doc.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.recommendedSpelling\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">RecommendedSpelling</span>.<span class=\"name\">recommendedSpelling</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"The recommended spelling of the notation in identifiers. ","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.recommendedSpelling","kind":"def","line":24,"name":"Lean.Parser.Term.Doc.RecommendedSpelling.recommendedSpelling","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Term/Doc.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.notation\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">RecommendedSpelling</span>.<span class=\"name\">notation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"The notation in question. ","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.notation","kind":"def","line":22,"name":"Lean.Parser.Term.Doc.RecommendedSpelling.notation","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Term/Doc.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">RecommendedSpelling</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">«notation» </span><span class=\"fn\">recommendedSpelling</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">additionalInformation?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.mk","kind":"ctor","line":20,"name":"Lean.Parser.Term.Doc.RecommendedSpelling.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Term/Doc.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">RecommendedSpelling</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Information about how to spell a certain notation for an identifier in declaration names. ","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling","kind":"structure","line":19,"name":"Lean.Parser.Term.Doc.RecommendedSpelling","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Parser/Term/Doc.lean#L19-L26"}}],"imports":["Lean.Parser.Extension"],"instances":[],"name":"Lean.Parser.Term.Doc"}