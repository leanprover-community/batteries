{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.registerParserCompiler\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">registerParserCompiler</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Precondition: `α` must match `ctx.tyName`. ","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.registerParserCompiler","kind":"def","line":151,"name":"Lean.ParserCompiler.registerParserCompiler","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler.lean#L151-L164"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.compileEmbeddedParsers\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">compileEmbeddedParsers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builtin</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.compileEmbeddedParsers","kind":"def","line":136,"name":"Lean.ParserCompiler.compileEmbeddedParsers","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler.lean#L136-L149"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.compileParserExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">compileParserExpr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builtin </span><span class=\"fn\">force</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"Translate an expression of type `Parser` into one of type `tyName`, tagging intermediary constants with\n`ctx.combinatorAttr`. If `force` is `false`, refuse to do so for imported constants. ","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.compileParserExpr","kind":"opaque","line":62,"name":"Lean.ParserCompiler.compileParserExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler.lean#L62-L132"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.parserNodeKind?\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">parserNodeKind?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>","info":{"doc":"Takes an expression of type `Parser`, and determines the syntax kind of the root node it produces. ","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.parserNodeKind?","kind":"opaque","line":39,"name":"Lean.ParserCompiler.parserNodeKind?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler.lean#L39-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.replaceParserTy\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">replaceParserTy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"Replace all references of `Parser` with `tyName` ","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.replaceParserTy","kind":"def","line":31,"name":"Lean.ParserCompiler.replaceParserTy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler.lean#L31-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.tyName\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">Context</span>.<span class=\"name\">tyName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.tyName","kind":"def","line":29,"name":"Lean.ParserCompiler.Context.tyName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.combinatorAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">Context</span>.<span class=\"name\">combinatorAttr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.combinatorAttr","kind":"def","line":27,"name":"Lean.ParserCompiler.Context.combinatorAttr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.categoryAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">Context</span>.<span class=\"name\">categoryAttr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute\">KeyedDeclsAttribute</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.categoryAttr","kind":"def","line":26,"name":"Lean.ParserCompiler.Context.categoryAttr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.varName\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">Context</span>.<span class=\"name\">varName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context\">Context</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.varName","kind":"def","line":25,"name":"Lean.ParserCompiler.Context.varName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">varName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">categoryAttr</span> : <span class=\"fn\"><a href=\"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute\">KeyedDeclsAttribute</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">combinatorAttr</span> : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context\">Context</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.mk","kind":"ctor","line":24,"name":"Lean.ParserCompiler.Context.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context","kind":"structure","line":24,"name":"Lean.ParserCompiler.Context","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ParserCompiler.lean#L24-L27"}}],"imports":["Lean.Meta.ReduceEval","Lean.Meta.WHNF","Lean.KeyedDeclsAttribute","Lean.ParserCompiler.Attribute","Lean.Parser.Extension"],"instances":[],"name":"Lean.ParserCompiler"}