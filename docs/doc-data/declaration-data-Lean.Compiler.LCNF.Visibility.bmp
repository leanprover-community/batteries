{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Visibility.html#Lean.Compiler.LCNF.inferVisibility\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">inferVisibility</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">phase</span> : <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase\">Phase</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/PassManager.html#Lean.Compiler.LCNF.Pass\">Pass</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/Visibility.html#Lean.Compiler.LCNF.inferVisibility","kind":"def","line":178,"name":"Lean.Compiler.LCNF.inferVisibility","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Visibility.lean#L178-L188"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Visibility.html#Lean.Compiler.LCNF.checkTemplateVisibility\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">checkTemplateVisibility</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/PassManager.html#Lean.Compiler.LCNF.Pass\">Pass</a></div></div>","info":{"doc":"Checks that imports necessary for inlining/specialization are public as otherwise we may run into\nunknown declarations at the point of inlining/specializing. This is a limitation that we want to\nlift in the future by moving main compilation into a different process that can use a different\nimport/incremental system.\n","docLink":"./Lean/Compiler/LCNF/Visibility.html#Lean.Compiler.LCNF.checkTemplateVisibility","kind":"def","line":140,"name":"Lean.Compiler.LCNF.checkTemplateVisibility","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Visibility.lean#L140-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Visibility.html#Lean.Compiler.LCNF.checkMeta\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">checkMeta</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">origDecl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Checks whether references in the given declaration adhere to phase distinction. ","docLink":"./Lean/Compiler/LCNF/Visibility.html#Lean.Compiler.LCNF.checkMeta","kind":"def","line":59,"name":"Lean.Compiler.LCNF.checkMeta","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Visibility.lean#L59-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Visibility.html#Lean.Compiler.LCNF.markDeclPublicRec\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">markDeclPublicRec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">phase</span> : <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase\">Phase</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Marks the given declaration as to be exported and recursively infers the correct visibility of its\nbody and referenced declarations based on that.\n","docLink":"./Lean/Compiler/LCNF/Visibility.html#Lean.Compiler.LCNF.markDeclPublicRec","kind":"opaque","line":43,"name":"Lean.Compiler.LCNF.markDeclPublicRec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/Visibility.lean#L43-L57"}}],"imports":["Lean.Compiler.ImplementedByAttr","Lean.ExtraModUses","Lean.Compiler.Options"],"instances":[],"name":"Lean.Compiler.LCNF.Visibility"}