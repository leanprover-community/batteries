{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Import.html#Lean.Elab.printImportSrcs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">printImportSrcs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fileName</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Import.html#Lean.Elab.printImportSrcs","kind":"def","line":95,"name":"Lean.Elab.printImportSrcs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Import.lean#L95-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Import.html#Lean.Elab.printImports\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">printImports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fileName</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Import.html#Lean.Elab.printImports","kind":"def","line":89,"name":"Lean.Elab.printImports","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Import.lean#L89-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Import.html#Lean.Elab.parseImports\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">parseImports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fileName</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Setup.html#Lean.Import\">Import</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Data/Position.html#Lean.Position\">Position</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Message.html#Lean.MessageLog\">MessageLog</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Import.html#Lean.Elab.parseImports","kind":"def","line":83,"name":"Lean.Elab.parseImports","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Import.lean#L83-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Import.html#Lean.Elab.processHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">processHeader</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">header</span> : <a href=\"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax\">HeaderSyntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">messages</span> : <a href=\"./Lean/Message.html#Lean.MessageLog\">MessageLog</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inputCtx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trustLevel</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">plugins</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leakEnv</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainModule</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := <a href=\"./Init/Prelude.html#Lean.Name.anonymous\">Name.anonymous</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Message.html#Lean.MessageLog\">MessageLog</a>)</span></div></div>","info":{"doc":"Elaborates the given header syntax into an environment.\n\nIf `mainModule` is not given, `Environment.setMainModule` should be called manually. This is a\nbackwards compatibility measure not compatible with the module system.\n","docLink":"./Lean/Elab/Import.html#Lean.Elab.processHeader","kind":"def","line":68,"name":"Lean.Elab.processHeader","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Import.lean#L68-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Import.html#Lean.Elab.processHeaderCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">processHeaderCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">startPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">imports</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Setup.html#Lean.Import\">Import</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isModule</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">messages</span> : <a href=\"./Lean/Message.html#Lean.MessageLog\">MessageLog</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inputCtx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trustLevel</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">plugins</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leakEnv</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainModule</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := <a href=\"./Init/Prelude.html#Lean.Name.anonymous\">Name.anonymous</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arts</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">NameMap</a> <a href=\"./Lean/Setup.html#Lean.ImportArtifacts\">ImportArtifacts</a></span> := <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Message.html#Lean.MessageLog\">MessageLog</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Import.html#Lean.Elab.processHeaderCore","kind":"def","line":44,"name":"Lean.Elab.processHeaderCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Import.lean#L44-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Import.html#Lean.Elab.headerToImports\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">headerToImports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax\">HeaderSyntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeInit</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Setup.html#Lean.Import\">Import</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Import.html#Lean.Elab.headerToImports","kind":"def","line":42,"name":"Lean.Elab.headerToImports","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Import.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax.toModuleHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">HeaderSyntax</span>.<span class=\"name\">toModuleHeader</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax\">HeaderSyntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Setup.html#Lean.ModuleHeader\">ModuleHeader</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax.toModuleHeader","kind":"def","line":38,"name":"Lean.Elab.HeaderSyntax.toModuleHeader","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Import.lean#L38-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax.imports\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">HeaderSyntax</span>.<span class=\"name\">imports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax\">HeaderSyntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeInit</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Setup.html#Lean.Import\">Import</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax.imports","kind":"def","line":26,"name":"Lean.Elab.HeaderSyntax.imports","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Import.lean#L26-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax.isModule\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">HeaderSyntax</span>.<span class=\"name\">isModule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">header</span> : <a href=\"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax\">HeaderSyntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax.isModule","kind":"def","line":23,"name":"Lean.Elab.HeaderSyntax.isModule","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Import.lean#L23-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax.startPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">HeaderSyntax</span>.<span class=\"name\">startPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">header</span> : <a href=\"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax\">HeaderSyntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax.startPos","kind":"def","line":20,"name":"Lean.Elab.HeaderSyntax.startPos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Import.lean#L20-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">HeaderSyntax</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Import.html#Lean.Elab.HeaderSyntax","kind":"def","line":18,"name":"Lean.Elab.HeaderSyntax","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Import.lean#L18-L18"}}],"imports":["Lean.Parser.Module","Lean.Parser.Module"],"instances":[],"name":"Lean.Elab.Import"}