{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.tactic_code_action\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">tactic_code_action</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"This attribute marks a code action, which is used to suggest new tactics or replace existing ones.\n\n* `@[tactic_code_action]`: This is a code action which applies to the spaces between tactics,\nto suggest a new tactic to change the goal state.\n\n* `@[tactic_code_action kind]`: This is a code action which applies to applications of the tactic\n`kind` (a tactic syntax kind), which can replace the tactic or insert things before or after it.\n\n* `@[tactic_code_action kind₁ kind₂]`: shorthand for\n`@[tactic_code_action kind₁, tactic_code_action kind₂]`.\n\n* `@[tactic_code_action *]`: This is a tactic code action that applies to all tactics.\nUse sparingly.\n","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.tactic_code_action","kind":"def","line":98,"name":"Batteries.CodeAction.tactic_code_action","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L98-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.tacticCodeActionExt\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">tacticCodeActionExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry\">TacticCodeActionEntry</a> (<a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry\">TacticCodeActionEntry</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeAction\">TacticCodeAction</a>)\n  (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry\">TacticCodeActionEntry</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions\">TacticCodeActions</a>)</span></div></div>","info":{"doc":"An extension which collects all the tactic code actions. ","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.tacticCodeActionExt","kind":"opaque","line":85,"name":"Batteries.CodeAction.tacticCodeActionExt","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L85-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.tacticSeqCodeActionExt\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">tacticSeqCodeActionExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticSeqCodeAction\">TacticSeqCodeAction</a>) (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticSeqCodeAction\">TacticSeqCodeAction</a></span>)</span></div></div>","info":{"doc":"An extension which collects all the tactic code actions. ","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.tacticSeqCodeActionExt","kind":"opaque","line":73,"name":"Batteries.CodeAction.tacticSeqCodeActionExt","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L73-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions.insert\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">TacticCodeActions</span>.<span class=\"name\">insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions\">TacticCodeActions</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tacticKinds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">action</span> : <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeAction\">TacticCodeAction</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions\">TacticCodeActions</a></div></div>","info":{"doc":"Insert a tactic code action entry into the `TacticCodeActions` structure. ","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions.insert","kind":"def","line":64,"name":"Batteries.CodeAction.TacticCodeActions.insert","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L64-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.instInhabitedTacticCodeActions.default\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">instInhabitedTacticCodeActions</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions\">TacticCodeActions</a></div></div>","info":{"doc":"","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.instInhabitedTacticCodeActions.default","kind":"def","line":62,"name":"Batteries.CodeAction.instInhabitedTacticCodeActions.default","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.instInhabitedTacticCodeActions\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">instInhabitedTacticCodeActions</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions\">TacticCodeActions</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.instInhabitedTacticCodeActions","kind":"instance","line":62,"name":"Batteries.CodeAction.instInhabitedTacticCodeActions","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions.onTactic\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">TacticCodeActions</span>.<span class=\"name\">onTactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions\">TacticCodeActions</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">Lean.NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeAction\">TacticCodeAction</a>)</span></span></div></div>","info":{"doc":"The list of tactic code actions to apply when a particular tactic kind is highlighted. ","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions.onTactic","kind":"def","line":61,"name":"Batteries.CodeAction.TacticCodeActions.onTactic","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions.onAnyTactic\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">TacticCodeActions</span>.<span class=\"name\">onAnyTactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions\">TacticCodeActions</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeAction\">TacticCodeAction</a></span></div></div>","info":{"doc":"The list of tactic code actions to apply on any tactic. ","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions.onAnyTactic","kind":"def","line":59,"name":"Batteries.CodeAction.TacticCodeActions.onAnyTactic","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions.mk\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">TacticCodeActions</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">onAnyTactic</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeAction\">TacticCodeAction</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">onTactic</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">Lean.NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeAction\">TacticCodeAction</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions\">TacticCodeActions</a></div></div>","info":{"doc":"","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions.mk","kind":"ctor","line":57,"name":"Batteries.CodeAction.TacticCodeActions.mk","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">TacticCodeActions</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The state of the tactic code actions extension. ","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActions","kind":"structure","line":56,"name":"Batteries.CodeAction.TacticCodeActions","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L56-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.instInhabitedTacticCodeActionEntry.default\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">instInhabitedTacticCodeActionEntry</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry\">TacticCodeActionEntry</a></div></div>","info":{"doc":"","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.instInhabitedTacticCodeActionEntry.default","kind":"def","line":54,"name":"Batteries.CodeAction.instInhabitedTacticCodeActionEntry.default","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.instInhabitedTacticCodeActionEntry\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">instInhabitedTacticCodeActionEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry\">TacticCodeActionEntry</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.instInhabitedTacticCodeActionEntry","kind":"instance","line":54,"name":"Batteries.CodeAction.instInhabitedTacticCodeActionEntry","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry.tacticKinds\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">TacticCodeActionEntry</span>.<span class=\"name\">tacticKinds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry\">TacticCodeActionEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span></div></div>","info":{"doc":"The tactic kinds that this extension supports. If empty it is called on all tactic kinds. ","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry.tacticKinds","kind":"def","line":53,"name":"Batteries.CodeAction.TacticCodeActionEntry.tacticKinds","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry.declName\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">TacticCodeActionEntry</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry\">TacticCodeActionEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>","info":{"doc":"The declaration to tag ","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry.declName","kind":"def","line":51,"name":"Batteries.CodeAction.TacticCodeActionEntry.declName","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry.mk\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">TacticCodeActionEntry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tacticKinds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry\">TacticCodeActionEntry</a></div></div>","info":{"doc":"","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry.mk","kind":"ctor","line":49,"name":"Batteries.CodeAction.TacticCodeActionEntry.mk","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">TacticCodeActionEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"An entry in the tactic code actions extension, containing the attribute arguments. ","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeActionEntry","kind":"structure","line":48,"name":"Batteries.CodeAction.TacticCodeActionEntry","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L48-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.mkTacticSeqCodeAction\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">mkTacticSeqCodeAction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticSeqCodeAction\">TacticSeqCodeAction</a></span></div></div>","info":{"doc":"Read a tacticSeq code action from a declaration of the right type. ","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.mkTacticSeqCodeAction","kind":"def","line":43,"name":"Batteries.CodeAction.mkTacticSeqCodeAction","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L43-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.mkTacticCodeAction\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">mkTacticCodeAction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeAction\">TacticCodeAction</a></span></div></div>","info":{"doc":"Read a tactic code action from a declaration of the right type. ","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.mkTacticCodeAction","kind":"def","line":38,"name":"Batteries.CodeAction.mkTacticCodeAction","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L38-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticSeqCodeAction\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">TacticSeqCodeAction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A tactic code action extension. ","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticSeqCodeAction","kind":"def","line":32,"name":"Batteries.CodeAction.TacticSeqCodeAction","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L32-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeAction\"><span class=\"name\">Batteries</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">TacticCodeAction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A tactic code action extension. ","docLink":"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeAction","kind":"def","line":26,"name":"Batteries.CodeAction.TacticCodeAction","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/CodeAction/Attr.lean#L26-L30"}}],"imports":["Init","Lean.Server.CodeActions.Basic","Lean.Compiler.IR.CompilerM"],"instances":[{"className":"Inhabited","name":"Batteries.CodeAction.instInhabitedTacticCodeActionEntry","typeNames":["Batteries.CodeAction.TacticCodeActionEntry"]},{"className":"Inhabited","name":"Batteries.CodeAction.instInhabitedTacticCodeActions","typeNames":["Batteries.CodeAction.TacticCodeActions"]}],"name":"Batteries.CodeAction.Attr"}