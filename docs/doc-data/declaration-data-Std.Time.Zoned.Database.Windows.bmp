{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb.inst\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Database</span>.<span class=\"name\">WindowsDb</span>.<span class=\"name\">inst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/Database/Basic.html#Std.Time.Database\">Time.Database</a> <a href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb\">WindowsDb</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb.inst","kind":"instance","line":89,"name":"Std.Time.Database.WindowsDb.inst","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/Database/Windows.lean#L89-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb.default\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Database</span>.<span class=\"name\">WindowsDb</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb\">WindowsDb</a></div></div>","info":{"doc":"Returns a default `WindowsDb` instance.\n","docLink":"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb.default","kind":"def","line":83,"name":"Std.Time.Database.WindowsDb.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/Database/Windows.lean#L83-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Database</span>.<span class=\"name\">WindowsDb</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb\">WindowsDb</a></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb.mk","kind":"ctor","line":78,"name":"Std.Time.Database.WindowsDb.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/Database/Windows.lean#L78-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Database</span>.<span class=\"name\">WindowsDb</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents a Time Zone Database that we get from ICU available on Windows SDK.\n","docLink":"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb","kind":"structure","line":75,"name":"Std.Time.Database.WindowsDb","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/Database/Windows.lean#L75-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.Windows.getZoneRules\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Database</span>.<span class=\"name\">Windows</span>.<span class=\"name\">getZoneRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules\">TimeZone.ZoneRules</a></span></div></div>","info":{"doc":"Retrieves the timezone rules, including all transitions, for a given timezone identifier.\n","docLink":"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.Windows.getZoneRules","kind":"def","line":34,"name":"Std.Time.Database.Windows.getZoneRules","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/Database/Windows.lean#L34-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.Windows.getLocalTimeZoneIdentifierAt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Database</span>.<span class=\"name\">Windows</span>.<span class=\"name\">getLocalTimeZoneIdentifierAt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></span></div></div>","info":{"doc":"Fetches the timezone at a timestamp.\n","docLink":"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.Windows.getLocalTimeZoneIdentifierAt","kind":"opaque","line":28,"name":"Std.Time.Database.Windows.getLocalTimeZoneIdentifierAt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/Database/Windows.lean#L28-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.Windows.getNextTransition\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Database</span>.<span class=\"name\">Windows</span>.<span class=\"name\">getNextTransition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Bool\">Bool</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>))</span></span></span></span></span></div></div>","info":{"doc":"Fetches the next timezone transition for a given timezone identifier and timestamp.\n","docLink":"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.Windows.getNextTransition","kind":"opaque","line":22,"name":"Std.Time.Database.Windows.getNextTransition","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/Database/Windows.lean#L22-L26"}}],"imports":["Init.Data.SInt.Basic","Std.Time.Zoned.Database.Basic"],"instances":[{"className":"Std.Time.Database","name":"Std.Time.Database.WindowsDb.inst","typeNames":["Std.Time.Database.WindowsDb"]}],"name":"Std.Time.Zoned.Database.Windows"}