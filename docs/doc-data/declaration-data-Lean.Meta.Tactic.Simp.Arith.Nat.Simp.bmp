{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Simp.html#Lean.Meta.Simp.Arith.Nat.simpExpr?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">simpExpr?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>))</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Simp.html#Lean.Meta.Simp.Arith.Nat.simpExpr?","kind":"def","line":67,"name":"Lean.Meta.Simp.Arith.Nat.simpExpr?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/Arith/Nat/Simp.lean#L67-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Simp.html#Lean.Meta.Simp.Arith.Nat.simpCnstr?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">simpCnstr?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>))</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Simp.html#Lean.Meta.Simp.Arith.Nat.simpCnstr?","kind":"def","line":38,"name":"Lean.Meta.Simp.Arith.Nat.simpCnstr?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/Arith/Nat/Simp.lean#L38-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Simp.html#Lean.Meta.Simp.Arith.Nat.simpCnstrPos?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">simpCnstrPos?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>))</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Simp.html#Lean.Meta.Simp.Arith.Nat.simpCnstrPos?","kind":"def","line":14,"name":"Lean.Meta.Simp.Arith.Nat.simpCnstrPos?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/Arith/Nat/Simp.lean#L14-L36"}}],"imports":["Lean.Meta.Tactic.Simp.Arith.Util","Lean.Meta.Tactic.Simp.Arith.Nat.Basic","Lean.Meta.AppBuilder"],"instances":[],"name":"Lean.Meta.Tactic.Simp.Arith.Nat.Simp"}