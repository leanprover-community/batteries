{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.ppGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">ppGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.ppGoal","kind":"def","line":117,"name":"Lean.ppGoal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L117-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.ppLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">ppLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Lean/Level.html#Lean.Level\">Level</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.ppLevel","kind":"def","line":114,"name":"Lean.ppLevel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L114-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.ppTerm\"><span class=\"name\">Lean</span>.<span class=\"name\">ppTerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.ppTerm","kind":"def","line":102,"name":"Lean.ppTerm","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L102-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.ppConstNameWithInfos\"><span class=\"name\">Lean</span>.<span class=\"name\">ppConstNameWithInfos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.ppConstNameWithInfos","kind":"def","line":93,"name":"Lean.ppConstNameWithInfos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L93-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.ppExprWithInfos\"><span class=\"name\">Lean</span>.<span class=\"name\">ppExprWithInfos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.ppExprWithInfos","kind":"def","line":80,"name":"Lean.ppExprWithInfos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L80-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.ppExt\"><span class=\"name\">Lean</span>.<span class=\"name\">ppExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">EnvExtension</a> <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.ppExt","kind":"opaque","line":77,"name":"Lean.ppExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L77-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.ppFnsRef\"><span class=\"name\">Lean</span>.<span class=\"name\">ppFnsRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.ppFnsRef","kind":"opaque","line":68,"name":"Lean.ppFnsRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L68-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.formatRawGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">formatRawGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.formatRawGoal","kind":"def","line":65,"name":"Lean.formatRawGoal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L65-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.formatRawTerm\"><span class=\"name\">Lean</span>.<span class=\"name\">formatRawTerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.formatRawTerm","kind":"def","line":62,"name":"Lean.formatRawTerm","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L62-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.instInhabitedPPFns.default\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedPPFns</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.instInhabitedPPFns.default","kind":"def","line":60,"name":"Lean.instInhabitedPPFns.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.instInhabitedPPFns\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedPPFns</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.instInhabitedPPFns","kind":"instance","line":60,"name":"Lean.instInhabitedPPFns","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPFns.ppGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFns</span>.<span class=\"name\">ppGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PPFns.ppGoal","kind":"def","line":59,"name":"Lean.PPFns.ppGoal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPFns.ppLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFns</span>.<span class=\"name\">ppLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Lean/Level.html#Lean.Level\">Level</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PPFns.ppLevel","kind":"def","line":58,"name":"Lean.PPFns.ppLevel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPFns.ppTerm\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFns</span>.<span class=\"name\">ppTerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PPFns.ppTerm","kind":"def","line":57,"name":"Lean.PPFns.ppTerm","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPFns.ppConstNameWithInfos\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFns</span>.<span class=\"name\">ppConstNameWithInfos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PPFns.ppConstNameWithInfos","kind":"def","line":56,"name":"Lean.PPFns.ppConstNameWithInfos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPFns.ppExprWithInfos\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFns</span>.<span class=\"name\">ppExprWithInfos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PPFns.ppExprWithInfos","kind":"def","line":55,"name":"Lean.PPFns.ppExprWithInfos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L55-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPFns.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFns</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ppExprWithInfos</span> : <span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ppConstNameWithInfos</span> : <span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ppTerm</span> : <span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ppLevel</span> : <span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Lean/Level.html#Lean.Level\">Level</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ppGoal</span> : <span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PPFns.mk","kind":"ctor","line":54,"name":"Lean.PPFns.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPFns\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFns</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PPFns","kind":"structure","line":54,"name":"Lean.PPFns","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L54-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.instCoeFormatFormatWithInfos\"><span class=\"name\">Lean</span>.<span class=\"name\">instCoeFormatFormatWithInfos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.instCoeFormatFormatWithInfos","kind":"instance","line":51,"name":"Lean.instCoeFormatFormatWithInfos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L51-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos.infos\"><span class=\"name\">Lean</span>.<span class=\"name\">FormatWithInfos</span>.<span class=\"name\">infos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/PPExt.html#Lean.PrettyPrinter.InfoPerPos\">PrettyPrinter.InfoPerPos</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.FormatWithInfos.infos","kind":"def","line":50,"name":"Lean.FormatWithInfos.infos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos.fmt\"><span class=\"name\">Lean</span>.<span class=\"name\">FormatWithInfos</span>.<span class=\"name\">fmt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.FormatWithInfos.fmt","kind":"def","line":49,"name":"Lean.FormatWithInfos.fmt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">FormatWithInfos</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fmt</span> : <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">infos</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PrettyPrinter.InfoPerPos\">PrettyPrinter.InfoPerPos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.FormatWithInfos.mk","kind":"ctor","line":48,"name":"Lean.FormatWithInfos.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\"><span class=\"name\">Lean</span>.<span class=\"name\">FormatWithInfos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A format tree with `Elab.Info` annotations.\nEach `.tag n _` node is annotated with `infos[n]`.\nThis is used to attach semantic data such as expressions\nto pretty-printer outputs. ","docLink":"./Lean/Util/PPExt.html#Lean.FormatWithInfos","kind":"structure","line":44,"name":"Lean.FormatWithInfos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L44-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PrettyPrinter.InfoPerPos\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">InfoPerPos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PrettyPrinter.InfoPerPos","kind":"def","line":43,"name":"Lean.PrettyPrinter.InfoPerPos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext.openDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span>.<span class=\"name\">openDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">OpenDecl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PPContext.openDecls","kind":"def","line":41,"name":"Lean.PPContext.openDecls","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext.currNamespace\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span>.<span class=\"name\">currNamespace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PPContext.currNamespace","kind":"def","line":40,"name":"Lean.PPContext.currNamespace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext.opts\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span>.<span class=\"name\">opts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PPContext.opts","kind":"def","line":39,"name":"Lean.PPContext.opts","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext.lctx\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span>.<span class=\"name\">lctx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">LocalContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PPContext.lctx","kind":"def","line":38,"name":"Lean.PPContext.lctx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext.mctx\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span>.<span class=\"name\">mctx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">MetavarContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PPContext.mctx","kind":"def","line":37,"name":"Lean.PPContext.mctx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext.env\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span>.<span class=\"name\">env</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PPContext.env","kind":"def","line":36,"name":"Lean.PPContext.env","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mctx</span> : <a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">MetavarContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">currNamespace</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">openDecls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">OpenDecl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PPContext.mk","kind":"ctor","line":35,"name":"Lean.PPContext.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.PPContext","kind":"structure","line":35,"name":"Lean.PPContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L35-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.pp.rawOnError\"><span class=\"name\">Lean</span>.<span class=\"name\">pp</span>.<span class=\"name\">rawOnError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.pp.rawOnError","kind":"opaque","line":29,"name":"Lean.pp.rawOnError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L29-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.pp.raw.maxDepth\"><span class=\"name\">Lean</span>.<span class=\"name\">pp</span>.<span class=\"name\">raw</span>.<span class=\"name\">maxDepth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.pp.raw.maxDepth","kind":"opaque","line":24,"name":"Lean.pp.raw.maxDepth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L24-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.pp.raw.showInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">pp</span>.<span class=\"name\">raw</span>.<span class=\"name\">showInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.pp.raw.showInfo","kind":"opaque","line":19,"name":"Lean.pp.raw.showInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L19-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.pp.raw\"><span class=\"name\">Lean</span>.<span class=\"name\">pp</span>.<span class=\"name\">raw</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/PPExt.html#Lean.pp.raw","kind":"opaque","line":14,"name":"Lean.pp.raw","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/PPExt.lean#L14-L18"}}],"imports":["Lean.Elab.InfoTree.Types"],"instances":[{"className":"Coe","name":"Lean.instCoeFormatFormatWithInfos","typeNames":["Std.Format","Lean.FormatWithInfos"]},{"className":"Inhabited","name":"Lean.instInhabitedPPFns","typeNames":["Lean.PPFns"]}],"name":"Lean.Util.PPExt"}