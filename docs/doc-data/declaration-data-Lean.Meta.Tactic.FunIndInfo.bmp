{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunIndInfo?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getFunIndInfo?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cases </span><span class=\"fn\">unfolding</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunIndInfo?","kind":"def","line":85,"name":"Lean.Meta.getFunIndInfo?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L85-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunIndInfoForInduct?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getFunIndInfoForInduct?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inductName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunIndInfoForInduct?","kind":"def","line":82,"name":"Lean.Meta.getFunIndInfoForInduct?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L82-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.setFunIndInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">setFunIndInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funIndInfo</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.setFunIndInfo","kind":"def","line":78,"name":"Lean.Meta.setFunIndInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L78-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunInduct?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getFunInduct?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unfolding </span><span class=\"fn\">cases</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunInduct?","kind":"def","line":66,"name":"Lean.Meta.getFunInduct?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L66-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getMutualInductName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getMutualInductName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unfolding</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getMutualInductName","kind":"def","line":60,"name":"Lean.Meta.getMutualInductName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L60-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunCasesName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getFunCasesName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unfolding</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunCasesName","kind":"def","line":54,"name":"Lean.Meta.getFunCasesName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L54-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunInductName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getFunInductName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unfolding</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunInductName","kind":"def","line":48,"name":"Lean.Meta.getFunInductName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L48-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.funIndInfoExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">funIndInfoExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/EnvExtension.html#Lean.MapDeclarationExtension\">MapDeclarationExtension</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.funIndInfoExt","kind":"opaque","line":46,"name":"Lean.Meta.funIndInfoExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instReprFunIndInfo.repr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReprFunIndInfo</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instReprFunIndInfo.repr","kind":"def","line":44,"name":"Lean.Meta.instReprFunIndInfo.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L44-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instReprFunIndInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReprFunIndInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instReprFunIndInfo","kind":"instance","line":44,"name":"Lean.Meta.instReprFunIndInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L44-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instInhabitedFunIndInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedFunIndInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instInhabitedFunIndInfo","kind":"instance","line":44,"name":"Lean.Meta.instInhabitedFunIndInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L44-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instInhabitedFunIndInfo.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedFunIndInfo</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instInhabitedFunIndInfo.default","kind":"def","line":44,"name":"Lean.Meta.instInhabitedFunIndInfo.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L44-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.params\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndInfo</span>.<span class=\"name\">params</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.params","kind":"def","line":43,"name":"Lean.Meta.FunIndInfo.params","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.levelMask\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndInfo</span>.<span class=\"name\">levelMask</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"`true` means that the corresponding level parameter of the function is also a level param\nof the induction principle.\n","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.levelMask","kind":"def","line":42,"name":"Lean.Meta.FunIndInfo.levelMask","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.funIndName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndInfo</span>.<span class=\"name\">funIndName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.funIndName","kind":"def","line":37,"name":"Lean.Meta.FunIndInfo.funIndName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.funName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndInfo</span>.<span class=\"name\">funName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.funName","kind":"def","line":36,"name":"Lean.Meta.FunIndInfo.funName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funName </span><span class=\"fn\">funIndName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">levelMask</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.mk","kind":"ctor","line":35,"name":"Lean.Meta.FunIndInfo.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A `FunIndInfo` indicates how a function's arguments map to the arguments of the functional induction\n(resp. cases) theorem.\n\nThe size of `params` also indicates the arity of the function.\n","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo","kind":"structure","line":29,"name":"Lean.Meta.FunIndInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L29-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instInhabitedFunIndParamKind.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedFunIndParamKind</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instInhabitedFunIndParamKind.default","kind":"def","line":27,"name":"Lean.Meta.instInhabitedFunIndParamKind.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instInhabitedFunIndParamKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedFunIndParamKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instInhabitedFunIndParamKind","kind":"instance","line":27,"name":"Lean.Meta.instInhabitedFunIndParamKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instReprFunIndParamKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReprFunIndParamKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instReprFunIndParamKind","kind":"instance","line":27,"name":"Lean.Meta.instReprFunIndParamKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instReprFunIndParamKind.repr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReprFunIndParamKind</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instReprFunIndParamKind.repr","kind":"def","line":27,"name":"Lean.Meta.instReprFunIndParamKind.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instBEqFunIndParamKind.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instBEqFunIndParamKind</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a> → <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instBEqFunIndParamKind.beq","kind":"def","line":27,"name":"Lean.Meta.instBEqFunIndParamKind.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instBEqFunIndParamKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instBEqFunIndParamKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instBEqFunIndParamKind","kind":"instance","line":27,"name":"Lean.Meta.instBEqFunIndParamKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind.target\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndParamKind</span>.<span class=\"name\">target</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind.target","kind":"ctor","line":26,"name":"Lean.Meta.FunIndParamKind.target","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind.param\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndParamKind</span>.<span class=\"name\">param</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind.param","kind":"ctor","line":25,"name":"Lean.Meta.FunIndParamKind.param","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind.dropped\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndParamKind</span>.<span class=\"name\">dropped</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind.dropped","kind":"ctor","line":24,"name":"Lean.Meta.FunIndParamKind.dropped","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndParamKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind","kind":"inductive","line":23,"name":"Lean.Meta.FunIndParamKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndInfo.lean#L23-L27"}}],"imports":["Lean.Meta.Basic","Lean.ReservedNameAction"],"instances":[{"className":"BEq","name":"Lean.Meta.instBEqFunIndParamKind","typeNames":["Lean.Meta.FunIndParamKind"]},{"className":"Repr","name":"Lean.Meta.instReprFunIndParamKind","typeNames":["Lean.Meta.FunIndParamKind"]},{"className":"Inhabited","name":"Lean.Meta.instInhabitedFunIndParamKind","typeNames":["Lean.Meta.FunIndParamKind"]},{"className":"Inhabited","name":"Lean.Meta.instInhabitedFunIndInfo","typeNames":["Lean.Meta.FunIndInfo"]},{"className":"Repr","name":"Lean.Meta.instReprFunIndInfo","typeNames":["Lean.Meta.FunIndInfo"]}],"name":"Lean.Meta.Tactic.FunIndInfo"}