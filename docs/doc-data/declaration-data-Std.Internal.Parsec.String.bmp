{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.take\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">String</span>.<span class=\"name\">take</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.Parser\">Parser</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Takes a fixed amount of chars from the iterator.\n","docLink":"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.take","kind":"def","line":146,"name":"Std.Internal.Parsec.String.take","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/String.lean#L146-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.ws\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">String</span>.<span class=\"name\">ws</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.Parser\">Parser</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Skip whitespace: tabs, newlines, carriage returns, and spaces.\n","docLink":"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.ws","kind":"def","line":139,"name":"Std.Internal.Parsec.String.ws","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/String.lean#L139-L144"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.asciiLetter\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">String</span>.<span class=\"name\">asciiLetter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.Parser\">Parser</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>","info":{"doc":"Parse an ASCII letter `a-z` or `A-Z` as a `Char`.\n","docLink":"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.asciiLetter","kind":"def","line":121,"name":"Std.Internal.Parsec.String.asciiLetter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/String.lean#L121-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.hexDigit\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">String</span>.<span class=\"name\">hexDigit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.Parser\">Parser</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>","info":{"doc":"Parse a hex digit `0-9`, `a-f`, or `A-F` as a `Char`.\n","docLink":"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.hexDigit","kind":"def","line":111,"name":"Std.Internal.Parsec.String.hexDigit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/String.lean#L111-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.digits\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">String</span>.<span class=\"name\">digits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.Parser\">Parser</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"Parse one or more ASCII digits into a `Nat`.\n","docLink":"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.digits","kind":"def","line":103,"name":"Std.Internal.Parsec.String.digits","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/String.lean#L103-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.digit\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">String</span>.<span class=\"name\">digit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.Parser\">Parser</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>","info":{"doc":"Parse an ASCII digit `0-9` as a `Char`.\n","docLink":"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.digit","kind":"def","line":68,"name":"Std.Internal.Parsec.String.digit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/String.lean#L68-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.skipChar\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">String</span>.<span class=\"name\">skipChar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.Parser\">Parser</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Skips the given char.\n","docLink":"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.skipChar","kind":"def","line":62,"name":"Std.Internal.Parsec.String.skipChar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/String.lean#L62-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.pchar\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">String</span>.<span class=\"name\">pchar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.Parser\">Parser</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>","info":{"doc":"Parses the given char.\n","docLink":"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.pchar","kind":"def","line":55,"name":"Std.Internal.Parsec.String.pchar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/String.lean#L55-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.skipString\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">String</span>.<span class=\"name\">skipString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.Parser\">Parser</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Skips the given string.\n","docLink":"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.skipString","kind":"def","line":49,"name":"Std.Internal.Parsec.String.skipString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/String.lean#L49-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.pstring\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">String</span>.<span class=\"name\">pstring</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.Parser\">Parser</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Parses the given string.\n","docLink":"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.pstring","kind":"def","line":39,"name":"Std.Internal.Parsec.String.pstring","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/String.lean#L39-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.Parser.run\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">String</span>.<span class=\"name\">Parser</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.Parser\">Parser</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Run a `Parser` on a `String`, returns either the result or an error string with offset.\n","docLink":"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.Parser.run","kind":"def","line":31,"name":"Std.Internal.Parsec.String.Parser.run","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/String.lean#L31-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.Parser\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">String</span>.<span class=\"name\">Parser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`Parser α` is a parser that consumes a `String` input using a `String.Iterator` and returns a result of type `α`.\n","docLink":"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.Parser","kind":"def","line":26,"name":"Std.Internal.Parsec.String.Parser","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/String.lean#L26-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.instInputIteratorCharRaw\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Parsec</span>.<span class=\"name\">String</span>.<span class=\"name\">instInputIteratorCharRaw</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/Basic.html#Std.Internal.Parsec.Input\">Input</a> <a href=\"./Init/Data/String/Basic.html#String.Iterator\">String.Iterator</a> <a href=\"./Init/Prelude.html#Char\">Char</a> <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Parsec/String.html#Std.Internal.Parsec.String.instInputIteratorCharRaw","kind":"instance","line":18,"name":"Std.Internal.Parsec.String.instInputIteratorCharRaw","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Parsec/String.lean#L18-L24"}}],"imports":["Std.Internal.Parsec.Basic","Init.Data.String.Basic"],"instances":[{"className":"Std.Internal.Parsec.Input","name":"Std.Internal.Parsec.String.instInputIteratorCharRaw","typeNames":["String.Iterator","Char","String.Pos.Raw"]}],"name":"Std.Internal.Parsec.String"}