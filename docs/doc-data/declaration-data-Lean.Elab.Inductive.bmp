{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Inductive.html#Lean.Elab.Command.elabCoinductiveCommand\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">elabCoinductiveCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.InductiveElabDescr\">InductiveElabDescr</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.elabCoinductiveCommand","kind":"def","line":334,"name":"Lean.Elab.Command.elabCoinductiveCommand","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Inductive.lean#L334-L335"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Inductive.html#Lean.Elab.Command.elabInductiveCommand\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">elabInductiveCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.InductiveElabDescr\">InductiveElabDescr</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.elabInductiveCommand","kind":"def","line":331,"name":"Lean.Elab.Command.elabInductiveCommand","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Inductive.lean#L331-L332"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Inductive.html#Lean.Elab.Command.mkInductiveElabDescr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">mkInductiveElabDescr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isCoinductive</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.InductiveElabDescr\">InductiveElabDescr</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.mkInductiveElabDescr","kind":"def","line":321,"name":"Lean.Elab.Command.mkInductiveElabDescr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Inductive.lean#L321-L329"}}],"imports":["Lean.Elab.MutualInductive","Lean.Linter.Basic"],"instances":[],"name":"Lean.Elab.Inductive"}