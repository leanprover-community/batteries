{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Acyclic.html#Lean.MVarId.acyclic\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">acyclic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Close the given goal if `h` is a proof for an equality such as `as = a :: as`.\nInductive datatypes in Lean are acyclic.\n","docLink":"./Lean/Meta/Tactic/Acyclic.html#Lean.MVarId.acyclic","kind":"def","line":23,"name":"Lean.MVarId.acyclic","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Acyclic.lean#L23-L59"}}],"imports":["Lean.Meta.MatchUtil","Lean.Meta.Tactic.Simp.Main"],"instances":[],"name":"Lean.Meta.Tactic.Acyclic"}