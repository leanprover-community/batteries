{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.isWeekend\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">isWeekend</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Check if it's a weekend.\n","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.isWeekend","kind":"def","line":153,"name":"Std.Time.Weekday.isWeekend","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L153-L159"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.next\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">next</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a> → <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></span></div></div>","info":{"doc":"Gets the next `Weekday`.\n","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.next","kind":"def","line":141,"name":"Std.Time.Weekday.next","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L141-L151"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.ofNat!\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">ofNat!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></div></div>","info":{"doc":"Converts a `Nat` to a `Weekday`. Panics if the value provided is invalid.\n","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.ofNat!","kind":"def","line":132,"name":"Std.Time.Weekday.ofNat!","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L132-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.ofNat?\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">ofNat?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></span></span></div></div>","info":{"doc":"Converts a `Nat` to an `Option Weekday`.\n","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.ofNat?","kind":"def","line":119,"name":"Std.Time.Weekday.ofNat?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L119-L130"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.toNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">toNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"Converts a `Weekday` to a `Nat`.\n","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.toNat","kind":"def","line":107,"name":"Std.Time.Weekday.toNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L107-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instLawfulEqOrd\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">instLawfulEqOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instLawfulEqOrd","kind":"instance","line":104,"name":"Std.Time.Weekday.instLawfulEqOrd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L104-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.toOrdinal.inj\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">toOrdinal</span>.<span class=\"name\">inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.toOrdinal\">toOrdinal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.toOrdinal\">toOrdinal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.toOrdinal.inj","kind":"theorem","line":101,"name":"Std.Time.Weekday.toOrdinal.inj","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L101-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instTransOrd\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">instTransOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instTransOrd","kind":"instance","line":99,"name":"Std.Time.Weekday.instTransOrd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instOrd\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">instOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instOrd","kind":"instance","line":96,"name":"Std.Time.Weekday.instOrd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L96-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.toOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">toOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a> → <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"Converts a `Weekday` to a `Ordinal`.\n","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.toOrdinal","kind":"def","line":84,"name":"Std.Time.Weekday.toOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L84-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.ofOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">ofOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Ordinal</a> → <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></span></div></div>","info":{"doc":"Converts a `Ordinal` representing a day index into a corresponding `Weekday`. This function is useful\nfor mapping numerical representations to days of the week.\n","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.ofOrdinal","kind":"def","line":71,"name":"Std.Time.Weekday.ofOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L71-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instLawfulEqOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">instLawfulEqOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instLawfulEqOrdOrdinal","kind":"instance","line":69,"name":"Std.Time.Weekday.instLawfulEqOrdOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instTransOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">instTransOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instTransOrdOrdinal","kind":"instance","line":67,"name":"Std.Time.Weekday.instTransOrdOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L67-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">instOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instOrdOrdinal","kind":"instance","line":65,"name":"Std.Time.Weekday.instOrdOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instInhabitedOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">instInhabitedOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instInhabitedOrdinal","kind":"instance","line":62,"name":"Std.Time.Weekday.instInhabitedOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L62-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instOfNatOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">instOfNatOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Ordinal</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instOfNatOrdinal","kind":"instance","line":59,"name":"Std.Time.Weekday.instOfNatOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L59-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instDecidableLtOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">instDecidableLtOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instDecidableLtOrdinal","kind":"instance","line":56,"name":"Std.Time.Weekday.instDecidableLtOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L56-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instDecidableLeOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">instDecidableLeOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instDecidableLeOrdinal","kind":"instance","line":53,"name":"Std.Time.Weekday.instDecidableLeOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L53-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instLEOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">instLEOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instLEOrdinal","kind":"instance","line":51,"name":"Std.Time.Weekday.instLEOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instLTOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">instLTOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instLTOrdinal","kind":"instance","line":51,"name":"Std.Time.Weekday.instLTOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instDecidableEqOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">instDecidableEqOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instDecidableEqOrdinal","kind":"instance","line":51,"name":"Std.Time.Weekday.instDecidableEqOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instReprOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">instReprOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instReprOrdinal","kind":"instance","line":51,"name":"Std.Time.Weekday.instReprOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">Ordinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`Ordinal` represents a bounded value for weekdays, which ranges between 1 and 7.\n","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal","kind":"def","line":47,"name":"Std.Time.Weekday.Ordinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L47-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.instDecidableEqWeekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instDecidableEqWeekday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.instDecidableEqWeekday","kind":"instance","line":43,"name":"Std.Time.instDecidableEqWeekday","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.instInhabitedWeekday.default\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instInhabitedWeekday</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.instInhabitedWeekday.default","kind":"def","line":43,"name":"Std.Time.instInhabitedWeekday.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.instInhabitedWeekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instInhabitedWeekday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.instInhabitedWeekday","kind":"instance","line":43,"name":"Std.Time.instInhabitedWeekday","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.instReprWeekday.repr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instReprWeekday</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.instReprWeekday.repr","kind":"def","line":43,"name":"Std.Time.instReprWeekday.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.instReprWeekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instReprWeekday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.instReprWeekday","kind":"instance","line":43,"name":"Std.Time.instReprWeekday","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.sunday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">sunday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></div></div>","info":{"doc":"Sunday. ","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.sunday","kind":"ctor","line":41,"name":"Std.Time.Weekday.sunday","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L41-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.saturday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">saturday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></div></div>","info":{"doc":"Saturday. ","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.saturday","kind":"ctor","line":38,"name":"Std.Time.Weekday.saturday","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L38-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.friday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">friday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></div></div>","info":{"doc":"Friday. ","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.friday","kind":"ctor","line":35,"name":"Std.Time.Weekday.friday","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L35-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.thursday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">thursday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></div></div>","info":{"doc":"Thursday. ","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.thursday","kind":"ctor","line":32,"name":"Std.Time.Weekday.thursday","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L32-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.wednesday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">wednesday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></div></div>","info":{"doc":"Wednesday. ","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.wednesday","kind":"ctor","line":29,"name":"Std.Time.Weekday.wednesday","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L29-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.tuesday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">tuesday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></div></div>","info":{"doc":"Tuesday. ","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.tuesday","kind":"ctor","line":26,"name":"Std.Time.Weekday.tuesday","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L26-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.monday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">monday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></div></div>","info":{"doc":"Monday. ","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.monday","kind":"ctor","line":23,"name":"Std.Time.Weekday.monday","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L23-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Defines the enumeration for days of the week. Each variant corresponds to a day of the week.\n","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday","kind":"inductive","line":19,"name":"Std.Time.Weekday","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Weekday.lean#L19-L43"}}],"imports":["Std.Time.Date.Unit.Day"],"instances":[{"className":"Repr","name":"Std.Time.instReprWeekday","typeNames":["Std.Time.Weekday"]},{"className":"Inhabited","name":"Std.Time.instInhabitedWeekday","typeNames":["Std.Time.Weekday"]},{"className":"Decidable","name":"Std.Time.instDecidableEqWeekday","typeNames":["Eq"]},{"className":"Repr","name":"Std.Time.Weekday.instReprOrdinal","typeNames":["Std.Time.Weekday.Ordinal"]},{"className":"Decidable","name":"Std.Time.Weekday.instDecidableEqOrdinal","typeNames":["Eq"]},{"className":"LT","name":"Std.Time.Weekday.instLTOrdinal","typeNames":["Std.Time.Weekday.Ordinal"]},{"className":"LE","name":"Std.Time.Weekday.instLEOrdinal","typeNames":["Std.Time.Weekday.Ordinal"]},{"className":"Decidable","name":"Std.Time.Weekday.instDecidableLeOrdinal","typeNames":["LE.le"]},{"className":"Decidable","name":"Std.Time.Weekday.instDecidableLtOrdinal","typeNames":["LT.lt"]},{"className":"OfNat","name":"Std.Time.Weekday.instOfNatOrdinal","typeNames":["Std.Time.Weekday.Ordinal"]},{"className":"Inhabited","name":"Std.Time.Weekday.instInhabitedOrdinal","typeNames":["Std.Time.Weekday.Ordinal"]},{"className":"Ord","name":"Std.Time.Weekday.instOrdOrdinal","typeNames":["Std.Time.Weekday.Ordinal"]},{"className":"Std.TransCmp","name":"Std.Time.Weekday.instTransOrdOrdinal","typeNames":["Std.Time.Weekday.Ordinal"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.Weekday.instLawfulEqOrdOrdinal","typeNames":["Std.Time.Weekday.Ordinal"]},{"className":"Ord","name":"Std.Time.Weekday.instOrd","typeNames":["Std.Time.Weekday"]},{"className":"Std.TransCmp","name":"Std.Time.Weekday.instTransOrd","typeNames":["Std.Time.Weekday"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.Weekday.instLawfulEqOrd","typeNames":["Std.Time.Weekday"]}],"name":"Std.Time.Date.Unit.Weekday"}