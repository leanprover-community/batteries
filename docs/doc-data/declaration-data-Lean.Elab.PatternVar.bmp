{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.getPatternVarNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">getPatternVarNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pvars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar\">PatternVar</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.getPatternVarNames","kind":"def","line":474,"name":"Lean.Elab.Term.getPatternVarNames","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L474-L475"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.getPatternsVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">getPatternsVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">patterns</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar\">PatternVar</a>)</span></span></div></div>","info":{"doc":"Return the pattern variables occurring in the given patterns.\nThis method is used in the `match` and `do` notation elaborators\n","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.getPatternsVars","kind":"def","line":463,"name":"Lean.Elab.Term.getPatternsVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L463-L472"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.getPatternVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">getPatternVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">patternStx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar\">PatternVar</a>)</span></span></div></div>","info":{"doc":"Return the pattern variables in the given pattern.\nRemark: this method is not used by the main `match` elaborator, but in the precheck hook and other macros (e.g., at `Do.lean`).\n","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.getPatternVars","kind":"def","line":454,"name":"Lean.Elab.Term.getPatternVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L454-L461"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.collectPatternVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">collectPatternVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">alt</span> : <a href=\"./Lean/Elab/MatchAltView.html#Lean.Elab.Term.MatchAltView\">MatchAltView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">TermElabM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar\">PatternVar</a></span> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Elab/MatchAltView.html#Lean.Elab.Term.MatchAltView\">MatchAltView</a>)</span></div></div>","info":{"doc":"Collect pattern variables occurring in the `match`-alternative object views.\nIt also returns the updated views.\n","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.collectPatternVars","kind":"def","line":446,"name":"Lean.Elab.Term.collectPatternVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L446-L452"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.main\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">main</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">alt</span> : <a href=\"./Lean/Elab/MatchAltView.html#Lean.Elab.Term.MatchAltView\">MatchAltView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M\">M</a> <a href=\"./Lean/Elab/MatchAltView.html#Lean.Elab.Term.MatchAltView\">MatchAltView</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.main","kind":"def","line":438,"name":"Lean.Elab.Term.CollectPatternVars.main","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L438-L442"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">collect</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M\">M</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect","kind":"opaque","line":229,"name":"Lean.Elab.Term.CollectPatternVars.collect","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L229-L436"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.instInhabitedContext.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">instInhabitedContext</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Context</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.instInhabitedContext.default","kind":"def","line":124,"name":"Lean.Elab.Term.CollectPatternVars.instInhabitedContext.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L124-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.instInhabitedContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">instInhabitedContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Context</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.instInhabitedContext","kind":"instance","line":124,"name":"Lean.Elab.Term.CollectPatternVars.instInhabitedContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L124-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.newArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">newArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.newArgs","kind":"def","line":123,"name":"Lean.Elab.Term.CollectPatternVars.Context.newArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L123-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.args\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">args</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/Arg.html#Lean.Elab.Term.Arg\">Arg</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.args","kind":"def","line":122,"name":"Lean.Elab.Term.CollectPatternVars.Context.args","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L122-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.usedNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">usedNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.usedNames","kind":"def","line":121,"name":"Lean.Elab.Term.CollectPatternVars.Context.usedNames","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L121-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.namedArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">namedArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Arg.html#Lean.Elab.Term.NamedArg\">NamedArg</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.namedArgs","kind":"def","line":120,"name":"Lean.Elab.Term.CollectPatternVars.Context.namedArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L120-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.paramDeclIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">paramDeclIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.paramDeclIdx","kind":"def","line":119,"name":"Lean.Elab.Term.CollectPatternVars.Context.paramDeclIdx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L119-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.paramDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">paramDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.paramDecls","kind":"def","line":118,"name":"Lean.Elab.Term.CollectPatternVars.Context.paramDecls","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L118-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.ellipsis\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">ellipsis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.ellipsis","kind":"def","line":117,"name":"Lean.Elab.Term.CollectPatternVars.Context.ellipsis","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L117-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.explicit\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">explicit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.explicit","kind":"def","line":116,"name":"Lean.Elab.Term.CollectPatternVars.Context.explicit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L116-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.ctorVal?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">ctorVal?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">ConstructorVal</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.ctorVal?","kind":"def","line":115,"name":"Lean.Elab.Term.CollectPatternVars.Context.ctorVal?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L115-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.funId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">funId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Meta/Defs.html#Lean.Syntax.Ident\">Ident</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.funId","kind":"def","line":114,"name":"Lean.Elab.Term.CollectPatternVars.Context.funId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L114-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funId</span> : <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Ident\">Ident</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctorVal?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">ConstructorVal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">explicit </span><span class=\"fn\">ellipsis</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">paramDecls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">paramDeclIdx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">namedArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Arg.html#Lean.Elab.Term.NamedArg\">NamedArg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">usedNames</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/Arg.html#Lean.Elab.Term.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Context</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.mk","kind":"ctor","line":113,"name":"Lean.Elab.Term.CollectPatternVars.Context.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L113-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context","kind":"structure","line":113,"name":"Lean.Elab.Term.CollectPatternVars.Context","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L113-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M","kind":"def","line":52,"name":"Lean.Elab.Term.CollectPatternVars.M","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.instInhabitedState.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">instInhabitedState</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.instInhabitedState.default","kind":"def","line":50,"name":"Lean.Elab.Term.CollectPatternVars.instInhabitedState.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.instInhabitedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">instInhabitedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State\">State</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.instInhabitedState","kind":"instance","line":50,"name":"Lean.Elab.Term.CollectPatternVars.instInhabitedState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State.vars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">State</span>.<span class=\"name\">vars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar\">PatternVar</a></span></div></div>","info":{"doc":"Pattern variables found so far as an array. It contains the order they were found. ","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State.vars","kind":"def","line":49,"name":"Lean.Elab.Term.CollectPatternVars.State.vars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State.found\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">State</span>.<span class=\"name\">found</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameSet\">NameSet</a></div></div>","info":{"doc":"Pattern variables found so far. ","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State.found","kind":"def","line":47,"name":"Lean.Elab.Term.CollectPatternVars.State.found","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">found</span> : <a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameSet\">NameSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar\">PatternVar</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State.mk","kind":"ctor","line":45,"name":"Lean.Elab.Term.CollectPatternVars.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"State for the pattern variable collector monad. ","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State","kind":"structure","line":44,"name":"Lean.Elab.Term.CollectPatternVars.State","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L44-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">PatternVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar","kind":"def","line":19,"name":"Lean.Elab.Term.PatternVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/PatternVar.lean#L19-L19"}}],"imports":["Lean.Meta.Hint","Lean.Elab.Arg","Lean.Elab.MatchAltView"],"instances":[{"className":"Inhabited","name":"Lean.Elab.Term.CollectPatternVars.instInhabitedState","typeNames":["Lean.Elab.Term.CollectPatternVars.State"]},{"className":"Inhabited","name":"Lean.Elab.Term.CollectPatternVars.instInhabitedContext","typeNames":["Lean.Elab.Term.CollectPatternVars.Context"]}],"name":"Lean.Elab.PatternVar"}