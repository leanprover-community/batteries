{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.interfaceAddresses\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">interfaceAddresses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress\">InterfaceAddress</a>)</span></span></div></div>","info":{"doc":"Gets address information about the network interfaces on the system, including disabled ones and\nmultiple addresses for each interface.\n","docLink":"./Std/Net/Addr.html#Std.Net.interfaceAddresses","kind":"opaque","line":242,"name":"Std.Net.interfaceAddresses","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L242-L247"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqInterfaceAddress.decEq\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqInterfaceAddress</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress\">InterfaceAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqInterfaceAddress.decEq","kind":"def","line":240,"name":"Std.Net.instDecidableEqInterfaceAddress.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L240-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqInterfaceAddress\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqInterfaceAddress</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress\">InterfaceAddress</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqInterfaceAddress","kind":"instance","line":240,"name":"Std.Net.instDecidableEqInterfaceAddress","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L240-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedInterfaceAddress\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedInterfaceAddress</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress\">InterfaceAddress</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedInterfaceAddress","kind":"instance","line":240,"name":"Std.Net.instInhabitedInterfaceAddress","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L240-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedInterfaceAddress.default\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedInterfaceAddress</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress\">InterfaceAddress</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedInterfaceAddress.default","kind":"def","line":240,"name":"Std.Net.instInhabitedInterfaceAddress.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L240-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress.netMask\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">InterfaceAddress</span>.<span class=\"name\">netMask</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress\">InterfaceAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">IPAddr</a></div></div>","info":{"doc":"The subnet mask associated with the interface.\n","docLink":"./Std/Net/Addr.html#Std.Net.InterfaceAddress.netMask","kind":"def","line":239,"name":"Std.Net.InterfaceAddress.netMask","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L239-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress.address\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">InterfaceAddress</span>.<span class=\"name\">address</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress\">InterfaceAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">IPAddr</a></div></div>","info":{"doc":"The IP address assigned to the interface.\n","docLink":"./Std/Net/Addr.html#Std.Net.InterfaceAddress.address","kind":"def","line":234,"name":"Std.Net.InterfaceAddress.address","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L234-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress.isLoopback\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">InterfaceAddress</span>.<span class=\"name\">isLoopback</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress\">InterfaceAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Indicates whether the interface is a loopback interface.\n","docLink":"./Std/Net/Addr.html#Std.Net.InterfaceAddress.isLoopback","kind":"def","line":229,"name":"Std.Net.InterfaceAddress.isLoopback","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L229-L229"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress.physicalAddress\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">InterfaceAddress</span>.<span class=\"name\">physicalAddress</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress\">InterfaceAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.MACAddr\">MACAddr</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.InterfaceAddress.physicalAddress","kind":"def","line":224,"name":"Std.Net.InterfaceAddress.physicalAddress","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L224-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress.name\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">InterfaceAddress</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress\">InterfaceAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"The name of the network interface.\n","docLink":"./Std/Net/Addr.html#Std.Net.InterfaceAddress.name","kind":"def","line":219,"name":"Std.Net.InterfaceAddress.name","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L219-L219"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">InterfaceAddress</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">physicalAddress</span> : <a href=\"./Std/Net/Addr.html#Std.Net.MACAddr\">MACAddr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isLoopback</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">address </span><span class=\"fn\">netMask</span> : <a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">IPAddr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress\">InterfaceAddress</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.InterfaceAddress.mk","kind":"ctor","line":215,"name":"Std.Net.InterfaceAddress.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L215-L215"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.InterfaceAddress\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">InterfaceAddress</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents an interface address, including details such as the interface name,\nwhether it is internal, the associated address, and the network mask.\n","docLink":"./Std/Net/Addr.html#Std.Net.InterfaceAddress","kind":"structure","line":211,"name":"Std.Net.InterfaceAddress","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L211-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddress.port\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddress</span>.<span class=\"name\">port</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">SocketAddress</a> → <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"Obtain the port contained in a `SocketAddress`.\n","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddress.port","kind":"def","line":203,"name":"Std.Net.SocketAddress.port","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L203-L207"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddress.ipAddr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddress</span>.<span class=\"name\">ipAddr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">SocketAddress</a> → <a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">IPAddr</a></span></div></div>","info":{"doc":"Obtain the `IPAddr` contained in a `SocketAddress`.\n","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddress.ipAddr","kind":"def","line":196,"name":"Std.Net.SocketAddress.ipAddr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L196-L201"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddress.family\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddress</span>.<span class=\"name\">family</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">SocketAddress</a> → <a href=\"./Std/Net/Addr.html#Std.Net.AddressFamily\">AddressFamily</a></span></div></div>","info":{"doc":"Obtain the `AddressFamily` associated with a `SocketAddress`.\n","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddress.family","kind":"def","line":189,"name":"Std.Net.SocketAddress.family","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L189-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPAddr.instToString\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPAddr</span>.<span class=\"name\">instToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">IPAddr</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.IPAddr.instToString","kind":"instance","line":182,"name":"Std.Net.IPAddr.instToString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L182-L183"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPAddr.toString\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPAddr</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">IPAddr</a> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.IPAddr.toString","kind":"def","line":178,"name":"Std.Net.IPAddr.toString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L178-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPAddr.family\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPAddr</span>.<span class=\"name\">family</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">IPAddr</a> → <a href=\"./Std/Net/Addr.html#Std.Net.AddressFamily\">AddressFamily</a></span></div></div>","info":{"doc":"Obtain the `AddressFamily` associated with an `IPAddr`.\n","docLink":"./Std/Net/Addr.html#Std.Net.IPAddr.family","kind":"def","line":171,"name":"Std.Net.IPAddr.family","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L171-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV6.instCoeSocketAddress\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddressV6</span>.<span class=\"name\">instCoeSocketAddress</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV6\">SocketAddressV6</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">SocketAddress</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddressV6.instCoeSocketAddress","kind":"instance","line":164,"name":"Std.Net.SocketAddressV6.instCoeSocketAddress","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L164-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr.instCoeIPAddr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv6Addr</span>.<span class=\"name\">instCoeIPAddr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr\">IPv6Addr</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">IPAddr</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.IPv6Addr.instCoeIPAddr","kind":"instance","line":157,"name":"Std.Net.IPv6Addr.instCoeIPAddr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L157-L158"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr.instToString\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv6Addr</span>.<span class=\"name\">instToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr\">IPv6Addr</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.IPv6Addr.instToString","kind":"instance","line":154,"name":"Std.Net.IPv6Addr.instToString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L154-L155"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr.toString\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv6Addr</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr\">IPv6Addr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"Turn `addr` into a `String` in the IPv6 format described in\n[RFC 2373](https://datatracker.ietf.org/doc/html/rfc2373).\n","docLink":"./Std/Net/Addr.html#Std.Net.IPv6Addr.toString","kind":"opaque","line":147,"name":"Std.Net.IPv6Addr.toString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L147-L152"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr.ofString\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv6Addr</span>.<span class=\"name\">ofString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr\">IPv6Addr</a></span></div></div>","info":{"doc":"Try to parse `s` as an IPv6 address according to\n[RFC 2373](https://datatracker.ietf.org/doc/html/rfc2373), returning `none` on failure.\n","docLink":"./Std/Net/Addr.html#Std.Net.IPv6Addr.ofString","kind":"opaque","line":140,"name":"Std.Net.IPv6Addr.ofString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L140-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr.ofParts\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv6Addr</span>.<span class=\"name\">ofParts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d </span><span class=\"fn\">e </span><span class=\"fn\">f </span><span class=\"fn\">g </span><span class=\"fn\">h</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr\">IPv6Addr</a></div></div>","info":{"doc":"Build the IPv6 address `a:b:c:d:e:f:g:h`.\n","docLink":"./Std/Net/Addr.html#Std.Net.IPv6Addr.ofParts","kind":"def","line":134,"name":"Std.Net.IPv6Addr.ofParts","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L134-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV4.instCoeSocketAddress\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddressV4</span>.<span class=\"name\">instCoeSocketAddress</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV4\">SocketAddressV4</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">SocketAddress</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddressV4.instCoeSocketAddress","kind":"instance","line":127,"name":"Std.Net.SocketAddressV4.instCoeSocketAddress","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L127-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr.instCoeIPAddr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv4Addr</span>.<span class=\"name\">instCoeIPAddr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr\">IPv4Addr</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">IPAddr</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.IPv4Addr.instCoeIPAddr","kind":"instance","line":120,"name":"Std.Net.IPv4Addr.instCoeIPAddr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L120-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr.instToString\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv4Addr</span>.<span class=\"name\">instToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr\">IPv4Addr</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.IPv4Addr.instToString","kind":"instance","line":117,"name":"Std.Net.IPv4Addr.instToString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L117-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr.toString\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv4Addr</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr\">IPv4Addr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"Turn `addr` into a `String` in the usual IPv4 format.\n","docLink":"./Std/Net/Addr.html#Std.Net.IPv4Addr.toString","kind":"opaque","line":111,"name":"Std.Net.IPv4Addr.toString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L111-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr.ofString\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv4Addr</span>.<span class=\"name\">ofString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr\">IPv4Addr</a></span></div></div>","info":{"doc":"Try to parse `s` as an IPv4 address, returning `none` on failure.\n","docLink":"./Std/Net/Addr.html#Std.Net.IPv4Addr.ofString","kind":"opaque","line":105,"name":"Std.Net.IPv4Addr.ofString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L105-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr.ofParts\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv4Addr</span>.<span class=\"name\">ofParts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr\">IPv4Addr</a></div></div>","info":{"doc":"Build the IPv4 address `a.b.c.d`.\n","docLink":"./Std/Net/Addr.html#Std.Net.IPv4Addr.ofParts","kind":"def","line":99,"name":"Std.Net.IPv4Addr.ofParts","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L99-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqAddressFamily\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqAddressFamily</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Net/Addr.html#Std.Net.AddressFamily\">AddressFamily</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqAddressFamily","kind":"instance","line":95,"name":"Std.Net.instDecidableEqAddressFamily","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L95-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedAddressFamily.default\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedAddressFamily</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.AddressFamily\">AddressFamily</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedAddressFamily.default","kind":"def","line":95,"name":"Std.Net.instInhabitedAddressFamily.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L95-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedAddressFamily\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedAddressFamily</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Net/Addr.html#Std.Net.AddressFamily\">AddressFamily</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedAddressFamily","kind":"instance","line":95,"name":"Std.Net.instInhabitedAddressFamily","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L95-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.AddressFamily.ipv6\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">AddressFamily</span>.<span class=\"name\">ipv6</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.AddressFamily\">AddressFamily</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.AddressFamily.ipv6","kind":"ctor","line":94,"name":"Std.Net.AddressFamily.ipv6","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L94-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.AddressFamily.ipv4\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">AddressFamily</span>.<span class=\"name\">ipv4</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.AddressFamily\">AddressFamily</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.AddressFamily.ipv4","kind":"ctor","line":93,"name":"Std.Net.AddressFamily.ipv4","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L93-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.AddressFamily\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">AddressFamily</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The kinds of address families supported by Lean, currently only IP variants.\n","docLink":"./Std/Net/Addr.html#Std.Net.AddressFamily","kind":"inductive","line":89,"name":"Std.Net.AddressFamily","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L89-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqSocketAddress\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqSocketAddress</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">SocketAddress</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqSocketAddress","kind":"instance","line":87,"name":"Std.Net.instDecidableEqSocketAddress","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L87-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqSocketAddress.decEq\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqSocketAddress</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">SocketAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqSocketAddress.decEq","kind":"def","line":87,"name":"Std.Net.instDecidableEqSocketAddress.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L87-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedSocketAddress.default\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedSocketAddress</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">SocketAddress</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedSocketAddress.default","kind":"def","line":87,"name":"Std.Net.instInhabitedSocketAddress.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L87-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedSocketAddress\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedSocketAddress</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">SocketAddress</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedSocketAddress","kind":"instance","line":87,"name":"Std.Net.instInhabitedSocketAddress","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L87-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddress.v6\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddress</span>.<span class=\"name\">v6</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV6\">SocketAddressV6</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">SocketAddress</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddress.v6","kind":"ctor","line":86,"name":"Std.Net.SocketAddress.v6","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L86-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddress.v4\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddress</span>.<span class=\"name\">v4</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV4\">SocketAddressV4</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">SocketAddress</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddress.v4","kind":"ctor","line":85,"name":"Std.Net.SocketAddress.v4","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddress</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Either a `SocketAddressV4` or `SocketAddressV6`.\n","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddress","kind":"inductive","line":81,"name":"Std.Net.SocketAddress","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L81-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqIPAddr.decEq\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqIPAddr</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">IPAddr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqIPAddr.decEq","kind":"def","line":79,"name":"Std.Net.instDecidableEqIPAddr.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqIPAddr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqIPAddr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">IPAddr</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqIPAddr","kind":"instance","line":79,"name":"Std.Net.instDecidableEqIPAddr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedIPAddr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedIPAddr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">IPAddr</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedIPAddr","kind":"instance","line":79,"name":"Std.Net.instInhabitedIPAddr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedIPAddr.default\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedIPAddr</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">IPAddr</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedIPAddr.default","kind":"def","line":79,"name":"Std.Net.instInhabitedIPAddr.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPAddr.v6\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPAddr</span>.<span class=\"name\">v6</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr\">IPv6Addr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">IPAddr</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.IPAddr.v6","kind":"ctor","line":78,"name":"Std.Net.IPAddr.v6","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L78-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPAddr.v4\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPAddr</span>.<span class=\"name\">v4</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr\">IPv4Addr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">IPAddr</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.IPAddr.v4","kind":"ctor","line":77,"name":"Std.Net.IPAddr.v4","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L77-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPAddr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPAddr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"An IP address, either IPv4 or IPv6.\n","docLink":"./Std/Net/Addr.html#Std.Net.IPAddr","kind":"inductive","line":73,"name":"Std.Net.IPAddr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L73-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqSocketAddressV6.decEq\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqSocketAddressV6</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV6\">SocketAddressV6</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqSocketAddressV6.decEq","kind":"def","line":71,"name":"Std.Net.instDecidableEqSocketAddressV6.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L71-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqSocketAddressV6\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqSocketAddressV6</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV6\">SocketAddressV6</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqSocketAddressV6","kind":"instance","line":71,"name":"Std.Net.instDecidableEqSocketAddressV6","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L71-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedSocketAddressV6.default\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedSocketAddressV6</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV6\">SocketAddressV6</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedSocketAddressV6.default","kind":"def","line":71,"name":"Std.Net.instInhabitedSocketAddressV6.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L71-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedSocketAddressV6\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedSocketAddressV6</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV6\">SocketAddressV6</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedSocketAddressV6","kind":"instance","line":71,"name":"Std.Net.instInhabitedSocketAddressV6","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L71-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV6.port\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddressV6</span>.<span class=\"name\">port</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV6\">SocketAddressV6</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt16\">UInt16</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddressV6.port","kind":"def","line":70,"name":"Std.Net.SocketAddressV6.port","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV6.addr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddressV6</span>.<span class=\"name\">addr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV6\">SocketAddressV6</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr\">IPv6Addr</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddressV6.addr","kind":"def","line":69,"name":"Std.Net.SocketAddressV6.addr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV6.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddressV6</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr\">IPv6Addr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">port</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV6\">SocketAddressV6</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddressV6.mk","kind":"ctor","line":68,"name":"Std.Net.SocketAddressV6.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV6\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddressV6</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A pair of an `IPv6Addr` and a port.\n","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddressV6","kind":"structure","line":65,"name":"Std.Net.SocketAddressV6","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L65-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqIPv6Addr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqIPv6Addr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr\">IPv6Addr</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqIPv6Addr","kind":"instance","line":63,"name":"Std.Net.instDecidableEqIPv6Addr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqIPv6Addr.decEq\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqIPv6Addr</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr\">IPv6Addr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqIPv6Addr.decEq","kind":"def","line":63,"name":"Std.Net.instDecidableEqIPv6Addr.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedIPv6Addr.default\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedIPv6Addr</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr\">IPv6Addr</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedIPv6Addr.default","kind":"def","line":63,"name":"Std.Net.instInhabitedIPv6Addr.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedIPv6Addr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedIPv6Addr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr\">IPv6Addr</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedIPv6Addr","kind":"instance","line":63,"name":"Std.Net.instInhabitedIPv6Addr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr.segments\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv6Addr</span>.<span class=\"name\">segments</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr\">IPv6Addr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a> <span class=\"fn\">8</span></span></div></div>","info":{"doc":"This structure represents the address: `segments[0]:segments[1]:...`.\n","docLink":"./Std/Net/Addr.html#Std.Net.IPv6Addr.segments","kind":"def","line":62,"name":"Std.Net.IPv6Addr.segments","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv6Addr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">segments</span> : <span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a> <span class=\"fn\">8</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr\">IPv6Addr</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.IPv6Addr.mk","kind":"ctor","line":58,"name":"Std.Net.IPv6Addr.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv6Addr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv6Addr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Representation of an IPv6 address.\n","docLink":"./Std/Net/Addr.html#Std.Net.IPv6Addr","kind":"structure","line":55,"name":"Std.Net.IPv6Addr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L55-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqSocketAddressV4\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqSocketAddressV4</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV4\">SocketAddressV4</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqSocketAddressV4","kind":"instance","line":53,"name":"Std.Net.instDecidableEqSocketAddressV4","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqSocketAddressV4.decEq\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqSocketAddressV4</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV4\">SocketAddressV4</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqSocketAddressV4.decEq","kind":"def","line":53,"name":"Std.Net.instDecidableEqSocketAddressV4.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedSocketAddressV4.default\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedSocketAddressV4</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV4\">SocketAddressV4</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedSocketAddressV4.default","kind":"def","line":53,"name":"Std.Net.instInhabitedSocketAddressV4.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedSocketAddressV4\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedSocketAddressV4</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV4\">SocketAddressV4</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedSocketAddressV4","kind":"instance","line":53,"name":"Std.Net.instInhabitedSocketAddressV4","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV4.port\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddressV4</span>.<span class=\"name\">port</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV4\">SocketAddressV4</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt16\">UInt16</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddressV4.port","kind":"def","line":52,"name":"Std.Net.SocketAddressV4.port","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV4.addr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddressV4</span>.<span class=\"name\">addr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV4\">SocketAddressV4</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr\">IPv4Addr</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddressV4.addr","kind":"def","line":51,"name":"Std.Net.SocketAddressV4.addr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV4.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddressV4</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr\">IPv4Addr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">port</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV4\">SocketAddressV4</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddressV4.mk","kind":"ctor","line":50,"name":"Std.Net.SocketAddressV4.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.SocketAddressV4\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">SocketAddressV4</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A pair of an `IPv4Addr` and a port.\n","docLink":"./Std/Net/Addr.html#Std.Net.SocketAddressV4","kind":"structure","line":47,"name":"Std.Net.SocketAddressV4","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L47-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqIPv4Addr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqIPv4Addr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr\">IPv4Addr</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqIPv4Addr","kind":"instance","line":45,"name":"Std.Net.instDecidableEqIPv4Addr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqIPv4Addr.decEq\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqIPv4Addr</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr\">IPv4Addr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqIPv4Addr.decEq","kind":"def","line":45,"name":"Std.Net.instDecidableEqIPv4Addr.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedIPv4Addr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedIPv4Addr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr\">IPv4Addr</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedIPv4Addr","kind":"instance","line":45,"name":"Std.Net.instInhabitedIPv4Addr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedIPv4Addr.default\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedIPv4Addr</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr\">IPv4Addr</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedIPv4Addr.default","kind":"def","line":45,"name":"Std.Net.instInhabitedIPv4Addr.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr.octets\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv4Addr</span>.<span class=\"name\">octets</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr\">IPv4Addr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a> <span class=\"fn\">4</span></span></div></div>","info":{"doc":"This structure represents the address: `octets[0].octets[1].octets[2].octets[3]`.\n","docLink":"./Std/Net/Addr.html#Std.Net.IPv4Addr.octets","kind":"def","line":44,"name":"Std.Net.IPv4Addr.octets","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L44-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv4Addr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">octets</span> : <span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a> <span class=\"fn\">4</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr\">IPv4Addr</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.IPv4Addr.mk","kind":"ctor","line":40,"name":"Std.Net.IPv4Addr.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.IPv4Addr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">IPv4Addr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Representation of an IPv4 address.\n","docLink":"./Std/Net/Addr.html#Std.Net.IPv4Addr","kind":"structure","line":37,"name":"Std.Net.IPv4Addr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L37-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqMACAddr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqMACAddr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Net/Addr.html#Std.Net.MACAddr\">MACAddr</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqMACAddr","kind":"instance","line":35,"name":"Std.Net.instDecidableEqMACAddr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instDecidableEqMACAddr.decEq\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instDecidableEqMACAddr</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Std/Net/Addr.html#Std.Net.MACAddr\">MACAddr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instDecidableEqMACAddr.decEq","kind":"def","line":35,"name":"Std.Net.instDecidableEqMACAddr.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedMACAddr.default\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedMACAddr</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.MACAddr\">MACAddr</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedMACAddr.default","kind":"def","line":35,"name":"Std.Net.instInhabitedMACAddr.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.instInhabitedMACAddr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">instInhabitedMACAddr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Net/Addr.html#Std.Net.MACAddr\">MACAddr</a></span></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.instInhabitedMACAddr","kind":"instance","line":35,"name":"Std.Net.instInhabitedMACAddr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.MACAddr.octets\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">MACAddr</span>.<span class=\"name\">octets</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Net/Addr.html#Std.Net.MACAddr\">MACAddr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a> <span class=\"fn\">6</span></span></div></div>","info":{"doc":"This structure represents the address: `octets[0]:octets[1]:octets[2]:octets[3]:octets[4]:octets[5]`.\n","docLink":"./Std/Net/Addr.html#Std.Net.MACAddr.octets","kind":"def","line":34,"name":"Std.Net.MACAddr.octets","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.MACAddr.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">MACAddr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">octets</span> : <span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a> <span class=\"fn\">6</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Net/Addr.html#Std.Net.MACAddr\">MACAddr</a></div></div>","info":{"doc":"","docLink":"./Std/Net/Addr.html#Std.Net.MACAddr.mk","kind":"ctor","line":30,"name":"Std.Net.MACAddr.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L30-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Net/Addr.html#Std.Net.MACAddr\"><span class=\"name\">Std</span>.<span class=\"name\">Net</span>.<span class=\"name\">MACAddr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Representation of a MAC address.\n","docLink":"./Std/Net/Addr.html#Std.Net.MACAddr","kind":"structure","line":27,"name":"Std.Net.MACAddr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Net/Addr.lean#L27-L35"}}],"imports":["Init.System.IO","Init.Data.Vector.Basic"],"instances":[{"className":"Inhabited","name":"Std.Net.instInhabitedMACAddr","typeNames":["Std.Net.MACAddr"]},{"className":"Decidable","name":"Std.Net.instDecidableEqMACAddr","typeNames":["Eq"]},{"className":"Inhabited","name":"Std.Net.instInhabitedIPv4Addr","typeNames":["Std.Net.IPv4Addr"]},{"className":"Decidable","name":"Std.Net.instDecidableEqIPv4Addr","typeNames":["Eq"]},{"className":"Inhabited","name":"Std.Net.instInhabitedSocketAddressV4","typeNames":["Std.Net.SocketAddressV4"]},{"className":"Decidable","name":"Std.Net.instDecidableEqSocketAddressV4","typeNames":["Eq"]},{"className":"Inhabited","name":"Std.Net.instInhabitedIPv6Addr","typeNames":["Std.Net.IPv6Addr"]},{"className":"Decidable","name":"Std.Net.instDecidableEqIPv6Addr","typeNames":["Eq"]},{"className":"Inhabited","name":"Std.Net.instInhabitedSocketAddressV6","typeNames":["Std.Net.SocketAddressV6"]},{"className":"Decidable","name":"Std.Net.instDecidableEqSocketAddressV6","typeNames":["Eq"]},{"className":"Inhabited","name":"Std.Net.instInhabitedIPAddr","typeNames":["Std.Net.IPAddr"]},{"className":"Decidable","name":"Std.Net.instDecidableEqIPAddr","typeNames":["Eq"]},{"className":"Inhabited","name":"Std.Net.instInhabitedSocketAddress","typeNames":["Std.Net.SocketAddress"]},{"className":"Decidable","name":"Std.Net.instDecidableEqSocketAddress","typeNames":["Eq"]},{"className":"Inhabited","name":"Std.Net.instInhabitedAddressFamily","typeNames":["Std.Net.AddressFamily"]},{"className":"Decidable","name":"Std.Net.instDecidableEqAddressFamily","typeNames":["Eq"]},{"className":"ToString","name":"Std.Net.IPv4Addr.instToString","typeNames":["Std.Net.IPv4Addr"]},{"className":"Coe","name":"Std.Net.IPv4Addr.instCoeIPAddr","typeNames":["Std.Net.IPv4Addr","Std.Net.IPAddr"]},{"className":"Coe","name":"Std.Net.SocketAddressV4.instCoeSocketAddress","typeNames":["Std.Net.SocketAddressV4","Std.Net.SocketAddress"]},{"className":"ToString","name":"Std.Net.IPv6Addr.instToString","typeNames":["Std.Net.IPv6Addr"]},{"className":"Coe","name":"Std.Net.IPv6Addr.instCoeIPAddr","typeNames":["Std.Net.IPv6Addr","Std.Net.IPAddr"]},{"className":"Coe","name":"Std.Net.SocketAddressV6.instCoeSocketAddress","typeNames":["Std.Net.SocketAddressV6","Std.Net.SocketAddress"]},{"className":"ToString","name":"Std.Net.IPAddr.instToString","typeNames":["Std.Net.IPAddr"]},{"className":"Inhabited","name":"Std.Net.instInhabitedInterfaceAddress","typeNames":["Std.Net.InterfaceAddress"]},{"className":"Decidable","name":"Std.Net.instDecidableEqInterfaceAddress","typeNames":["Eq"]}],"name":"Std.Net.Addr"}