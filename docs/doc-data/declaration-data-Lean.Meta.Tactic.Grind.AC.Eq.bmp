{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.check'\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">check'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.check'","kind":"def","line":506,"name":"Lean.Meta.Grind.AC.check'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Eq.lean#L506-L507"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.check\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">check</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Lean/Meta/Tactic/Grind/CheckResult.html#Lean.Meta.Grind.CheckResult\">CheckResult</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.check","kind":"def","line":493,"name":"Lean.Meta.Grind.AC.check","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Eq.lean#L493-L504"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.PropagateEqMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">PropagateEqMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.PropagateEqMap","kind":"def","line":446,"name":"Lean.Meta.Grind.AC.PropagateEqMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Eq.lean#L446-L446"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.mkEqData\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">mkEqData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Init/Grind/AC.html#Lean.Grind.AC.Expr\">Grind.AC.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <a href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqData\">EqData</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.mkEqData","kind":"def","line":440,"name":"Lean.Meta.Grind.AC.mkEqData","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Eq.lean#L440-L444"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqData.c\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">EqData</span>.<span class=\"name\">c</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqData\">EqData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Types.html#Lean.Meta.Grind.AC.EqCnstr\">EqCnstr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqData.c","kind":"def","line":438,"name":"Lean.Meta.Grind.AC.EqData.c","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Eq.lean#L438-L438"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqData.r\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">EqData</span>.<span class=\"name\">r</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqData\">EqData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Grind/AC.html#Lean.Grind.AC.Expr\">Grind.AC.Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqData.r","kind":"def","line":437,"name":"Lean.Meta.Grind.AC.EqData.r","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Eq.lean#L437-L437"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqData.e\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">EqData</span>.<span class=\"name\">e</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqData\">EqData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqData.e","kind":"def","line":436,"name":"Lean.Meta.Grind.AC.EqData.e","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Eq.lean#L436-L436"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqData.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">EqData</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Init/Grind/AC.html#Lean.Grind.AC.Expr\">Grind.AC.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/AC/Types.html#Lean.Meta.Grind.AC.EqCnstr\">EqCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqData\">EqData</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqData.mk","kind":"ctor","line":435,"name":"Lean.Meta.Grind.AC.EqData.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Eq.lean#L435-L435"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqData\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">EqData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Data for equality propagation. We maintain a mapping from sequences to `EqData`\n","docLink":"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqData","kind":"structure","line":432,"name":"Lean.Meta.Grind.AC.EqData","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Eq.lean#L432-L438"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqCnstr.simplifyRHS\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">EqCnstr</span>.<span class=\"name\">simplifyRHS</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/AC/Types.html#Lean.Meta.Grind.AC.EqCnstr\">EqCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <a href=\"./Lean/Meta/Tactic/Grind/AC/Types.html#Lean.Meta.Grind.AC.EqCnstr\">EqCnstr</a></span></div></div>","info":{"doc":"Simplifies the right-hand-side of the given equation. ","docLink":"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.EqCnstr.simplifyRHS","kind":"def","line":401,"name":"Lean.Meta.Grind.AC.EqCnstr.simplifyRHS","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Eq.lean#L401-L430"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.processNewDiseq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">processNewDiseq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.processNewDiseq","kind":"def","line":371,"name":"Lean.Meta.Grind.AC.processNewDiseq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Eq.lean#L371-L376"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.processNewEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">processNewEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.processNewEq","kind":"def","line":363,"name":"Lean.Meta.Grind.AC.processNewEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Eq.lean#L363-L369"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.norm\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">norm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Grind/AC.html#Lean.Grind.AC.Expr\">Grind.AC.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <a href=\"./Init/Grind/AC.html#Lean.Grind.AC.Seq\">Grind.AC.Seq</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.norm","kind":"def","line":41,"name":"Lean.Meta.Grind.AC.norm","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Eq.lean#L41-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.asACExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">asACExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <a href=\"./Init/Grind/AC.html#Lean.Grind.AC.Expr\">Grind.AC.Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.asACExpr","kind":"def","line":35,"name":"Lean.Meta.Grind.AC.asACExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Eq.lean#L35-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.withExprs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">AC</span>.<span class=\"name\">withExprs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/AC/Util.html#Lean.Meta.Grind.AC.ACM\">ACM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"For each structure `s` s.t. `a` and `b` are elements of, execute `k` ","docLink":"./Lean/Meta/Tactic/Grind/AC/Eq.html#Lean.Meta.Grind.AC.withExprs","kind":"def","line":17,"name":"Lean.Meta.Grind.AC.withExprs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/AC/Eq.lean#L17-L33"}}],"imports":["Lean.Meta.Tactic.Grind.AC.Util","Lean.Meta.Tactic.Grind.AC.DenoteExpr","Lean.Meta.Tactic.Grind.AC.Proof","Lean.Meta.Tactic.Grind.AC.Seq","Lean.Meta.Tactic.Grind.AC.Inv"],"instances":[],"name":"Lean.Meta.Tactic.Grind.AC.Eq"}