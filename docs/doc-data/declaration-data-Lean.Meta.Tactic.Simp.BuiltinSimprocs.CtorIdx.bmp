{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/CtorIdx.html#reduceCtorIdx\"><span class=\"name\">reduceCtorIdx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"This simproc reduces `T.ctorIdx (T.con â€¦)` to the constructor index.\nIt does not take part in simp's discrimination tree index, so can be costly on large goals.\n","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/CtorIdx.html#reduceCtorIdx","kind":"def","line":17,"name":"reduceCtorIdx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/CtorIdx.lean#L17-L28"}}],"imports":["Init.Simproc","Lean.Meta.Tactic.Simp.Simproc"],"instances":[],"name":"Lean.Meta.Tactic.Simp.BuiltinSimprocs.CtorIdx"}