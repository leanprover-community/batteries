{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.isNatOffsetCnstr?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">isNatOffsetCnstr?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e </span><span class=\"fn\">z</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\">Cnstr</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"Returns `some cnstr` if `e` is offset constraint.\nRemark: `z` is `0` numeral. It is an extra argument because we\nwant to be able to provide the one that has already been internalized.\n","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.isNatOffsetCnstr?","kind":"def","line":43,"name":"Lean.Meta.Grind.Arith.Offset.isNatOffsetCnstr?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Offset/Util.lean#L43-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.instToMessageDataCnstrExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">instToMessageDataCnstrExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">ToMessageData</a> <span class=\"fn\">(<a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\">Cnstr</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.instToMessageDataCnstrExpr","kind":"instance","line":40,"name":"Lean.Meta.Grind.Arith.Offset.instToMessageDataCnstrExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Offset/Util.lean#L40-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.toMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toMessageData</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">ToMessageData</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\">Cnstr</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.toMessageData","kind":"def","line":34,"name":"Lean.Meta.Grind.Arith.Offset.toMessageData","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Offset/Util.lean#L34-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr.neg\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\">Cnstr</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\">Cnstr</a> <span class=\"fn\">α</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr.neg","kind":"def","line":28,"name":"Lean.Meta.Grind.Arith.Offset.Cnstr.neg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Offset/Util.lean#L28-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.instInhabitedCnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">instInhabitedCnstr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\">Cnstr</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.instInhabitedCnstr","kind":"instance","line":26,"name":"Lean.Meta.Grind.Arith.Offset.instInhabitedCnstr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Offset/Util.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.instInhabitedCnstr.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">instInhabitedCnstr</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\">Cnstr</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.instInhabitedCnstr.default","kind":"def","line":26,"name":"Lean.Meta.Grind.Arith.Offset.instInhabitedCnstr.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Offset/Util.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr.k\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">k</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\">Cnstr</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr.k","kind":"def","line":25,"name":"Lean.Meta.Grind.Arith.Offset.Cnstr.k","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Offset/Util.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr.v\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">v</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\">Cnstr</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr.v","kind":"def","line":24,"name":"Lean.Meta.Grind.Arith.Offset.Cnstr.v","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Offset/Util.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr.u\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">u</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\">Cnstr</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr.u","kind":"def","line":23,"name":"Lean.Meta.Grind.Arith.Offset.Cnstr.u","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Offset/Util.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\">Cnstr</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr.mk","kind":"ctor","line":22,"name":"Lean.Meta.Grind.Arith.Offset.Cnstr.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Offset/Util.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">Cnstr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"An offset constraint. ","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr","kind":"structure","line":21,"name":"Lean.Meta.Grind.Arith.Offset.Cnstr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Offset/Util.lean#L21-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.isNatOffset?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">isNatOffset?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></div></div>","info":{"doc":"Returns `some (a, k)` if `e` is of the form `a + k`.  ","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.isNatOffset?","kind":"def","line":15,"name":"Lean.Meta.Grind.Arith.Offset.isNatOffset?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Offset/Util.lean#L15-L19"}}],"imports":["Lean.Meta.Tactic.Grind.Arith.Util"],"instances":[{"className":"Inhabited","name":"Lean.Meta.Grind.Arith.Offset.instInhabitedCnstr","typeNames":["Lean.Meta.Grind.Arith.Offset.Cnstr"]},{"className":"Lean.ToMessageData","name":"Lean.Meta.Grind.Arith.Offset.instToMessageDataCnstrExpr","typeNames":["Lean.Meta.Grind.Arith.Offset.Cnstr"]}],"name":"Lean.Meta.Tactic.Grind.Arith.Offset.Util"}