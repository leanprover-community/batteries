{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.addVersoModuleDocSnippet\"><span class=\"name\">Lean</span>.<span class=\"name\">addVersoModuleDocSnippet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snippet</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">VersoModuleDocs.Snippet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.addVersoModuleDocSnippet","kind":"def","line":415,"name":"Lean.addVersoModuleDocSnippet","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L415-L419"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.getVersoModuleDocs\"><span class=\"name\">Lean</span>.<span class=\"name\">getVersoModuleDocs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs\">VersoModuleDocs</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.getVersoModuleDocs","kind":"def","line":412,"name":"Lean.getVersoModuleDocs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L412-L413"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.assemble\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">assemble</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">docs</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs\">VersoModuleDocs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/DocString/Extension.html#Lean.VersoDocString\">VersoDocString</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.assemble","kind":"def","line":391,"name":"Lean.VersoModuleDocs.assemble","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L391-L396"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.add!\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">add!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">docs</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs\">VersoModuleDocs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snippet</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs\">VersoModuleDocs</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.add!","kind":"def","line":324,"name":"Lean.VersoModuleDocs.add!","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L324-L335"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.add\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">docs</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs\">VersoModuleDocs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snippet</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs\">VersoModuleDocs</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.add","kind":"def","line":315,"name":"Lean.VersoModuleDocs.add","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L315-L322"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.canAdd\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">canAdd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">docs</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs\">VersoModuleDocs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snippet</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.canAdd","kind":"def","line":309,"name":"Lean.VersoModuleDocs.canAdd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L309-L312"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.isEmpty\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">docs</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs\">VersoModuleDocs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.isEmpty","kind":"def","line":307,"name":"Lean.VersoModuleDocs.isEmpty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L307-L307"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.instReprVersoModuleDocs\"><span class=\"name\">Lean</span>.<span class=\"name\">instReprVersoModuleDocs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs\">VersoModuleDocs</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.instReprVersoModuleDocs","kind":"instance","line":297,"name":"Lean.instReprVersoModuleDocs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L297-L303"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.instInhabitedVersoModuleDocs.default\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedVersoModuleDocs</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs\">VersoModuleDocs</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.instInhabitedVersoModuleDocs.default","kind":"def","line":295,"name":"Lean.instInhabitedVersoModuleDocs.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L295-L295"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.instInhabitedVersoModuleDocs\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedVersoModuleDocs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs\">VersoModuleDocs</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.instInhabitedVersoModuleDocs","kind":"instance","line":295,"name":"Lean.instInhabitedVersoModuleDocs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L295-L295"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.terminalNesting\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">terminalNesting</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs\">VersoModuleDocs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.terminalNesting","kind":"def","line":294,"name":"Lean.VersoModuleDocs.terminalNesting","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L294-L294"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.snippets\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">snippets</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs\">VersoModuleDocs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PersistentArray\">PersistentArray</a> <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.snippets","kind":"def","line":293,"name":"Lean.VersoModuleDocs.snippets","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L293-L293"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snippets</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PersistentArray\">PersistentArray</a> <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">terminalNesting</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs\">VersoModuleDocs</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.mk","kind":"ctor","line":292,"name":"Lean.VersoModuleDocs.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L292-L292"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs","kind":"structure","line":292,"name":"Lean.VersoModuleDocs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L292-L295"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.instToMarkdownSnippet\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMarkdownSnippet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/DocString/Markdown.html#Lean.Doc.ToMarkdown\">Doc.ToMarkdown</a> <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">VersoModuleDocs.Snippet</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.instToMarkdownSnippet","kind":"instance","line":279,"name":"Lean.instToMarkdownSnippet","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L279-L290"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.addPart\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">Snippet</span>.<span class=\"name\">addPart</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snippet</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">level</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">range</span> : <a href=\"./Lean/Data/DeclarationRange.html#Lean.DeclarationRange\">DeclarationRange</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">part</span> : <span class=\"fn\"><a href=\"./Lean/DocString/Types.html#Lean.Doc.Part\">Doc.Part</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\">ElabBlock</a> <a href=\"./Init/Prelude.html#Empty\">Empty</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.addPart","kind":"def","line":272,"name":"Lean.VersoModuleDocs.Snippet.addPart","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L272-L274"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.addBlock\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">Snippet</span>.<span class=\"name\">addBlock</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snippet</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">block</span> : <span class=\"fn\"><a href=\"./Lean/DocString/Types.html#Lean.Doc.Block\">Doc.Block</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\">ElabBlock</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.addBlock","kind":"def","line":264,"name":"Lean.VersoModuleDocs.Snippet.addBlock","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L264-L270"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.terminalNesting\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">Snippet</span>.<span class=\"name\">terminalNesting</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snippet</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.terminalNesting","kind":"def","line":260,"name":"Lean.VersoModuleDocs.Snippet.terminalNesting","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L260-L262"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.canNestIn\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">Snippet</span>.<span class=\"name\">canNestIn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">level</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snippet</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.canNestIn","kind":"def","line":257,"name":"Lean.VersoModuleDocs.Snippet.canNestIn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L257-L258"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.instReprSnippet\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">instReprSnippet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.instReprSnippet","kind":"instance","line":253,"name":"Lean.VersoModuleDocs.instReprSnippet","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L253-L253"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.instReprSnippet.repr\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">instReprSnippet</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.instReprSnippet.repr","kind":"def","line":253,"name":"Lean.VersoModuleDocs.instReprSnippet.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L253-L253"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.instInhabitedSnippet\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">instInhabitedSnippet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.instInhabitedSnippet","kind":"instance","line":253,"name":"Lean.VersoModuleDocs.instInhabitedSnippet","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L253-L253"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.instInhabitedSnippet.default\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">instInhabitedSnippet</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.instInhabitedSnippet.default","kind":"def","line":253,"name":"Lean.VersoModuleDocs.instInhabitedSnippet.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L253-L253"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.declarationRange\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">Snippet</span>.<span class=\"name\">declarationRange</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/DeclarationRange.html#Lean.DeclarationRange\">DeclarationRange</a></div></div>","info":{"doc":"The location of the snippet in the source file.\n","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.declarationRange","kind":"def","line":252,"name":"Lean.VersoModuleDocs.Snippet.declarationRange","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L252-L252"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.sections\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">Snippet</span>.<span class=\"name\">sections</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Data/DeclarationRange.html#Lean.DeclarationRange\">DeclarationRange</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/DocString/Types.html#Lean.Doc.Part\">Doc.Part</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\">ElabBlock</a> <a href=\"./Init/Prelude.html#Empty\">Empty</a></span>)</span></div></div>","info":{"doc":"A sequence of parts with their absolute document nesting levels and header positions.\nNone of these parts may contain sub-parts.\n","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.sections","kind":"def","line":248,"name":"Lean.VersoModuleDocs.Snippet.sections","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L248-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.text\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">Snippet</span>.<span class=\"name\">text</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/DocString/Types.html#Lean.Doc.Block\">Doc.Block</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\">ElabBlock</a>)</span></span></div></div>","info":{"doc":"Text to be inserted after the prior snippet's ending text. ","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.text","kind":"def","line":243,"name":"Lean.VersoModuleDocs.Snippet.text","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L243-L243"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">Snippet</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/DocString/Types.html#Lean.Doc.Block\">Doc.Block</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\">ElabBlock</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sections</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Data/DeclarationRange.html#Lean.DeclarationRange\">DeclarationRange</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/DocString/Types.html#Lean.Doc.Part\">Doc.Part</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\">ElabBlock</a> <a href=\"./Init/Prelude.html#Empty\">Empty</a></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declarationRange</span> : <a href=\"./Lean/Data/DeclarationRange.html#Lean.DeclarationRange\">DeclarationRange</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\">Snippet</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet.mk","kind":"ctor","line":241,"name":"Lean.VersoModuleDocs.Snippet.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L241-L241"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoModuleDocs</span>.<span class=\"name\">Snippet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A snippet of a Verso module text.\n\nA snippet consists of text followed by subsections. Because the sequence of snippets that occur in a\nsource file are conceptually a single document, they have a consistent header nesting structure.\nThis means that initial textual content of a snippet is a continuation of the text at the end of the\nprior snippet.\n\nThe actual hierarchical structure of the document is reconstructed from the sequence of snippets.\n\nThe _terminal nesting_ of a sequence of snippets is 0 if there are no sections in the sequence.\nOtherwise, it is one greater than the nesting of the last snippet's last section. The module\ndocstring elaborator maintains the invariant that each snippet's first section's level is at most\nthe terminal nesting of the preceding snippets, and that the level of each section within a snippet\nis at most one greater than the preceding section's level.\n","docLink":"./Lean/DocString/Extension.html#Lean.VersoModuleDocs.Snippet","kind":"structure","line":225,"name":"Lean.VersoModuleDocs.Snippet","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L225-L253"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.getDocStringText\"><span class=\"name\">Lean</span>.<span class=\"name\">getDocStringText</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Parser.Command.docComment</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.getDocStringText","kind":"def","line":210,"name":"Lean.getDocStringText","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L210-L221"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.getModuleDoc?\"><span class=\"name\">Lean</span>.<span class=\"name\">getModuleDoc?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moduleName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/DocString/Extension.html#Lean.ModuleDoc\">ModuleDoc</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.getModuleDoc?","kind":"def","line":206,"name":"Lean.getModuleDoc?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L206-L208"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.getMainModuleDoc\"><span class=\"name\">Lean</span>.<span class=\"name\">getMainModuleDoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PersistentArray\">PersistentArray</a> <a href=\"./Lean/DocString/Extension.html#Lean.ModuleDoc\">ModuleDoc</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.getMainModuleDoc","kind":"def","line":203,"name":"Lean.getMainModuleDoc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L203-L204"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.addMainModuleDoc\"><span class=\"name\">Lean</span>.<span class=\"name\">addMainModuleDoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">doc</span> : <a href=\"./Lean/DocString/Extension.html#Lean.ModuleDoc\">ModuleDoc</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.addMainModuleDoc","kind":"def","line":200,"name":"Lean.addMainModuleDoc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L200-L201"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.ModuleDoc.declarationRange\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleDoc</span>.<span class=\"name\">declarationRange</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/DocString/Extension.html#Lean.ModuleDoc\">ModuleDoc</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/DeclarationRange.html#Lean.DeclarationRange\">DeclarationRange</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.ModuleDoc.declarationRange","kind":"def","line":187,"name":"Lean.ModuleDoc.declarationRange","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L187-L187"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.ModuleDoc.doc\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleDoc</span>.<span class=\"name\">doc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/DocString/Extension.html#Lean.ModuleDoc\">ModuleDoc</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.ModuleDoc.doc","kind":"def","line":186,"name":"Lean.ModuleDoc.doc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L186-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.ModuleDoc.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleDoc</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">doc</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declarationRange</span> : <a href=\"./Lean/Data/DeclarationRange.html#Lean.DeclarationRange\">DeclarationRange</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DocString/Extension.html#Lean.ModuleDoc\">ModuleDoc</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.ModuleDoc.mk","kind":"ctor","line":185,"name":"Lean.ModuleDoc.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L185-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.ModuleDoc\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleDoc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.ModuleDoc","kind":"structure","line":185,"name":"Lean.ModuleDoc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L185-L187"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.findSimpleDocString?\"><span class=\"name\">Lean</span>.<span class=\"name\">findSimpleDocString?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeBuiltin</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>","info":{"doc":"Finds a docstring without performing any alias resolution or enrichment with extra metadata. The\nresult is rendered as Markdown.\n\nDocstrings to be shown to a user should be looked up with `Lean.findDocString?` instead.\n","docLink":"./Lean/DocString/Extension.html#Lean.findSimpleDocString?","kind":"def","line":164,"name":"Lean.findSimpleDocString?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L164-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.findInternalDocString?\"><span class=\"name\">Lean</span>.<span class=\"name\">findInternalDocString?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeBuiltin</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Core.html#Sum\">⊕</a> <a href=\"./Lean/DocString/Extension.html#Lean.VersoDocString\">VersoDocString</a>))</span></span></div></div>","info":{"doc":"Finds a docstring without performing any alias resolution or enrichment with extra metadata.\nFor Markdown docstrings, the result is a string; for Verso docstrings, it's a `VersoDocString`.\n\nDocstrings to be shown to a user should be looked up with `Lean.findDocString?` instead.\n","docLink":"./Lean/DocString/Extension.html#Lean.findInternalDocString?","kind":"opaque","line":142,"name":"Lean.findInternalDocString?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L142-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.addInheritedDocString\"><span class=\"name\">Lean</span>.<span class=\"name\">addInheritedDocString</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName </span><span class=\"fn\">target</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.addInheritedDocString","kind":"def","line":133,"name":"Lean.addInheritedDocString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L133-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.addDocStringCore'\"><span class=\"name\">Lean</span>.<span class=\"name\">addDocStringCore'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">docString?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.addDocStringCore'","kind":"def","line":128,"name":"Lean.addDocStringCore'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L128-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.removeDocStringCore\"><span class=\"name\">Lean</span>.<span class=\"name\">removeDocStringCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.removeDocStringCore","kind":"def","line":123,"name":"Lean.removeDocStringCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L123-L126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.addDocStringCore\"><span class=\"name\">Lean</span>.<span class=\"name\">addDocStringCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">docString</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.addDocStringCore","kind":"def","line":118,"name":"Lean.addDocStringCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L118-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.getBuiltinVersoDocStrings\"><span class=\"name\">Lean</span>.<span class=\"name\">getBuiltinVersoDocStrings</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">NameMap</a> <a href=\"./Lean/DocString/Extension.html#Lean.VersoDocString\">VersoDocString</a>)</span></span></div></div>","info":{"doc":"Retrieves all builtin Verso docstrings.\n","docLink":"./Lean/DocString/Extension.html#Lean.getBuiltinVersoDocStrings","kind":"def","line":112,"name":"Lean.getBuiltinVersoDocStrings","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L112-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.removeBuiltinDocString\"><span class=\"name\">Lean</span>.<span class=\"name\">removeBuiltinDocString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Removes a builtin docstring from the compiler. This is used when translating between formats.\n","docLink":"./Lean/DocString/Extension.html#Lean.removeBuiltinDocString","kind":"def","line":106,"name":"Lean.removeBuiltinDocString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L106-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.addBuiltinDocString\"><span class=\"name\">Lean</span>.<span class=\"name\">addBuiltinDocString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">docString</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Adds a builtin docstring to the compiler.\n\nLinks to the Lean manual aren't validated.\n","docLink":"./Lean/DocString/Extension.html#Lean.addBuiltinDocString","kind":"def","line":97,"name":"Lean.addBuiltinDocString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L97-L104"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.versoDocStringExt\"><span class=\"name\">Lean</span>.<span class=\"name\">versoDocStringExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/EnvExtension.html#Lean.MapDeclarationExtension\">MapDeclarationExtension</a> <a href=\"./Lean/DocString/Extension.html#Lean.VersoDocString\">VersoDocString</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.versoDocStringExt","kind":"opaque","line":88,"name":"Lean.versoDocStringExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L88-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.docStringExt\"><span class=\"name\">Lean</span>.<span class=\"name\">docStringExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/EnvExtension.html#Lean.MapDeclarationExtension\">MapDeclarationExtension</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.docStringExt","kind":"opaque","line":72,"name":"Lean.docStringExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L72-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.doc.verso\"><span class=\"name\">Lean</span>.<span class=\"name\">doc</span>.<span class=\"name\">verso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.doc.verso","kind":"opaque","line":65,"name":"Lean.doc.verso","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L65-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.instInhabitedVersoDocString.default\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedVersoDocString</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DocString/Extension.html#Lean.VersoDocString\">VersoDocString</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.instInhabitedVersoDocString.default","kind":"def","line":63,"name":"Lean.instInhabitedVersoDocString.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.instInhabitedVersoDocString\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedVersoDocString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/DocString/Extension.html#Lean.VersoDocString\">VersoDocString</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.instInhabitedVersoDocString","kind":"instance","line":63,"name":"Lean.instInhabitedVersoDocString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoDocString.subsections\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoDocString</span>.<span class=\"name\">subsections</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoDocString\">VersoDocString</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/DocString/Types.html#Lean.Doc.Part\">Doc.Part</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\">ElabBlock</a> <a href=\"./Init/Prelude.html#Empty\">Empty</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoDocString.subsections","kind":"def","line":62,"name":"Lean.VersoDocString.subsections","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoDocString.text\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoDocString</span>.<span class=\"name\">text</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/DocString/Extension.html#Lean.VersoDocString\">VersoDocString</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/DocString/Types.html#Lean.Doc.Block\">Doc.Block</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\">ElabBlock</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoDocString.text","kind":"def","line":61,"name":"Lean.VersoDocString.text","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoDocString.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoDocString</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/DocString/Types.html#Lean.Doc.Block\">Doc.Block</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\">ElabBlock</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subsections</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/DocString/Types.html#Lean.Doc.Part\">Doc.Part</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\">ElabBlock</a> <a href=\"./Init/Prelude.html#Empty\">Empty</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DocString/Extension.html#Lean.VersoDocString\">VersoDocString</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoDocString.mk","kind":"ctor","line":60,"name":"Lean.VersoDocString.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.VersoDocString\"><span class=\"name\">Lean</span>.<span class=\"name\">VersoDocString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.VersoDocString","kind":"structure","line":60,"name":"Lean.VersoDocString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L60-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.instMarkdownBlockElabInlineElabBlock\"><span class=\"name\">Lean</span>.<span class=\"name\">instMarkdownBlockElabInlineElabBlock</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/DocString/Markdown.html#Lean.Doc.MarkdownBlock\">Doc.MarkdownBlock</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\">ElabBlock</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.instMarkdownBlockElabInlineElabBlock","kind":"instance","line":57,"name":"Lean.instMarkdownBlockElabInlineElabBlock","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L57-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.instReprElabBlock\"><span class=\"name\">Lean</span>.<span class=\"name\">instReprElabBlock</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\">ElabBlock</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.instReprElabBlock","kind":"instance","line":49,"name":"Lean.instReprElabBlock","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L49-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.ElabBlock.val\"><span class=\"name\">Lean</span>.<span class=\"name\">ElabBlock</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\">ElabBlock</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.ElabBlock.val","kind":"def","line":47,"name":"Lean.ElabBlock.val","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.ElabBlock.name\"><span class=\"name\">Lean</span>.<span class=\"name\">ElabBlock</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\">ElabBlock</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.ElabBlock.name","kind":"def","line":46,"name":"Lean.ElabBlock.name","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.ElabBlock.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ElabBlock</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\">ElabBlock</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.ElabBlock.mk","kind":"ctor","line":45,"name":"Lean.ElabBlock.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.ElabBlock\"><span class=\"name\">Lean</span>.<span class=\"name\">ElabBlock</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Saved data that describes the contents. The `name` should determine both the type of the value and\nits interpretation; if in doubt, use the name of the elaborator that produces the data.\n","docLink":"./Lean/DocString/Extension.html#Lean.ElabBlock","kind":"structure","line":41,"name":"Lean.ElabBlock","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L41-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.instMarkdownInlineElabInline\"><span class=\"name\">Lean</span>.<span class=\"name\">instMarkdownInlineElabInline</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/DocString/Markdown.html#Lean.Doc.MarkdownInline\">Doc.MarkdownInline</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.instMarkdownInlineElabInline","kind":"instance","line":36,"name":"Lean.instMarkdownInlineElabInline","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L36-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.instReprElabInline\"><span class=\"name\">Lean</span>.<span class=\"name\">instReprElabInline</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a></span></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.instReprElabInline","kind":"instance","line":30,"name":"Lean.instReprElabInline","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L30-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.ElabInline.val\"><span class=\"name\">Lean</span>.<span class=\"name\">ElabInline</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.ElabInline.val","kind":"def","line":28,"name":"Lean.ElabInline.val","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.ElabInline.name\"><span class=\"name\">Lean</span>.<span class=\"name\">ElabInline</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.ElabInline.name","kind":"def","line":27,"name":"Lean.ElabInline.name","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.ElabInline.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ElabInline</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DocString/Extension.html#Lean.ElabInline\">ElabInline</a></div></div>","info":{"doc":"","docLink":"./Lean/DocString/Extension.html#Lean.ElabInline.mk","kind":"ctor","line":26,"name":"Lean.ElabInline.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DocString/Extension.html#Lean.ElabInline\"><span class=\"name\">Lean</span>.<span class=\"name\">ElabInline</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Saved data that describes the contents. The `name` should determine both the type of the value and\nits interpretation; if in doubt, use the name of the elaborator that produces the data.\n","docLink":"./Lean/DocString/Extension.html#Lean.ElabInline","kind":"structure","line":22,"name":"Lean.ElabInline","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/DocString/Extension.lean#L22-L28"}}],"imports":["Lean.DeclarationRange","Lean.DocString.Markdown"],"instances":[{"className":"Repr","name":"Lean.instReprElabInline","typeNames":["Lean.ElabInline"]},{"className":"Lean.Doc.MarkdownInline","name":"Lean.instMarkdownInlineElabInline","typeNames":["Lean.ElabInline"]},{"className":"Repr","name":"Lean.instReprElabBlock","typeNames":["Lean.ElabBlock"]},{"className":"Lean.Doc.MarkdownBlock","name":"Lean.instMarkdownBlockElabInlineElabBlock","typeNames":["Lean.ElabInline","Lean.ElabBlock"]},{"className":"Inhabited","name":"Lean.instInhabitedVersoDocString","typeNames":["Lean.VersoDocString"]},{"className":"Inhabited","name":"Lean.VersoModuleDocs.instInhabitedSnippet","typeNames":["Lean.VersoModuleDocs.Snippet"]},{"className":"Repr","name":"Lean.VersoModuleDocs.instReprSnippet","typeNames":["Lean.VersoModuleDocs.Snippet"]},{"className":"Lean.Doc.ToMarkdown","name":"Lean.instToMarkdownSnippet","typeNames":["Lean.VersoModuleDocs.Snippet"]},{"className":"Inhabited","name":"Lean.instInhabitedVersoModuleDocs","typeNames":["Lean.VersoModuleDocs"]},{"className":"Repr","name":"Lean.instReprVersoModuleDocs","typeNames":["Lean.VersoModuleDocs"]}],"name":"Lean.DocString.Extension"}