{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/PropagateEq.html#Lean.Meta.Grind.Arith.Linear.processNewDiseq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Linear</span>.<span class=\"name\">processNewDiseq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/PropagateEq.html#Lean.Meta.Grind.Arith.Linear.processNewDiseq","kind":"def","line":304,"name":"Lean.Meta.Grind.Arith.Linear.processNewDiseq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Linear/PropagateEq.lean#L304-L311"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/PropagateEq.html#Lean.Meta.Grind.Arith.Linear.processNewEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Linear</span>.<span class=\"name\">processNewEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/PropagateEq.html#Lean.Meta.Grind.Arith.Linear.processNewEq","kind":"def","line":251,"name":"Lean.Meta.Grind.Arith.Linear.processNewEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Linear/PropagateEq.lean#L251-L269"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/PropagateEq.html#Lean.Meta.Grind.Arith.Linear.DiseqCnstr.applySubsts?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Linear</span>.<span class=\"name\">DiseqCnstr</span>.<span class=\"name\">applySubsts?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">câ‚‚</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Types.html#Lean.Meta.Grind.Arith.Linear.DiseqCnstr\">DiseqCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/LinearM.html#Lean.Meta.Grind.Arith.Linear.LinearM\">LinearM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Types.html#Lean.Meta.Grind.Arith.Linear.DiseqCnstr\">DiseqCnstr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/PropagateEq.html#Lean.Meta.Grind.Arith.Linear.DiseqCnstr.applySubsts?","kind":"opaque","line":146,"name":"Lean.Meta.Grind.Arith.Linear.DiseqCnstr.applySubsts?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Linear/PropagateEq.lean#L146-L154"}}],"imports":["Lean.Meta.Tactic.Grind.Arith.Linear.LinearM","Lean.Meta.Tactic.Grind.Arith.CommRing.Reify","Lean.Meta.Tactic.Grind.Arith.CommRing.DenoteExpr","Lean.Meta.Tactic.Grind.Arith.Linear.Var","Lean.Meta.Tactic.Grind.Arith.Linear.StructId","Lean.Meta.Tactic.Grind.Arith.Linear.Reify","Lean.Meta.Tactic.Grind.Arith.Linear.IneqCnstr","Lean.Meta.Tactic.Grind.Arith.Linear.DenoteExpr","Lean.Meta.Tactic.Grind.Arith.Linear.Proof","Lean.Meta.Tactic.Grind.Arith.Linear.OfNatModule"],"instances":[],"name":"Lean.Meta.Tactic.Grind.Arith.Linear.PropagateEq"}