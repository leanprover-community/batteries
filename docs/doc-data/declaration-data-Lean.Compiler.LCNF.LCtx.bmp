{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.toLocalContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">LCtx</span>.<span class=\"name\">toLocalContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">LocalContext</a></div></div>","info":{"doc":"Convert a LCNF local context into a regular Lean local context.\n","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.toLocalContext","kind":"def","line":64,"name":"Lean.Compiler.LCNF.LCtx.toLocalContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L64-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.eraseCode\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">LCtx</span>.<span class=\"name\">eraseCode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">code</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.eraseCode","kind":"opaque","line":56,"name":"Lean.Compiler.LCNF.LCtx.eraseCode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L56-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.eraseAlts\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">LCtx</span>.<span class=\"name\">eraseAlts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">alts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Alt</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.eraseAlts","kind":"opaque","line":50,"name":"Lean.Compiler.LCNF.LCtx.eraseAlts","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L50-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.eraseFunDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">LCtx</span>.<span class=\"name\">eraseFunDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">FunDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">recursive</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.eraseFunDecl","kind":"opaque","line":43,"name":"Lean.Compiler.LCNF.LCtx.eraseFunDecl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L43-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.eraseLetDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">LCtx</span>.<span class=\"name\">eraseLetDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">LetDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.eraseLetDecl","kind":"def","line":39,"name":"Lean.Compiler.LCNF.LCtx.eraseLetDecl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L39-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.eraseParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">LCtx</span>.<span class=\"name\">eraseParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.eraseParams","kind":"def","line":36,"name":"Lean.Compiler.LCNF.LCtx.eraseParams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L36-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.eraseParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">LCtx</span>.<span class=\"name\">eraseParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">param</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Param</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.eraseParam","kind":"def","line":33,"name":"Lean.Compiler.LCNF.LCtx.eraseParam","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L33-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.addFunDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">LCtx</span>.<span class=\"name\">addFunDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funDecl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">FunDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.addFunDecl","kind":"def","line":30,"name":"Lean.Compiler.LCNF.LCtx.addFunDecl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L30-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.addLetDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">LCtx</span>.<span class=\"name\">addLetDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">letDecl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">LetDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.addLetDecl","kind":"def","line":27,"name":"Lean.Compiler.LCNF.LCtx.addLetDecl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L27-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.addParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">LCtx</span>.<span class=\"name\">addParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">param</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Param</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.addParam","kind":"def","line":24,"name":"Lean.Compiler.LCNF.LCtx.addParam","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L24-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.instInhabitedLCtx\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">instInhabitedLCtx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.instInhabitedLCtx","kind":"instance","line":22,"name":"Lean.Compiler.LCNF.instInhabitedLCtx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.instInhabitedLCtx.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">instInhabitedLCtx</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.instInhabitedLCtx.default","kind":"def","line":22,"name":"Lean.Compiler.LCNF.instInhabitedLCtx.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.funDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">LCtx</span>.<span class=\"name\">funDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">FunDecl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.funDecls","kind":"def","line":21,"name":"Lean.Compiler.LCNF.LCtx.funDecls","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.letDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">LCtx</span>.<span class=\"name\">letDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">LetDecl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.letDecls","kind":"def","line":20,"name":"Lean.Compiler.LCNF.LCtx.letDecls","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.params\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">LCtx</span>.<span class=\"name\">params</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Param</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.params","kind":"def","line":19,"name":"Lean.Compiler.LCNF.LCtx.params","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">LCtx</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">letDecls</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">LetDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funDecls</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">FunDecl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\">LCtx</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx.mk","kind":"ctor","line":18,"name":"Lean.Compiler.LCNF.LCtx.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">LCtx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"LCNF local context.\n","docLink":"./Lean/Compiler/LCNF/LCtx.html#Lean.Compiler.LCNF.LCtx","kind":"structure","line":15,"name":"Lean.Compiler.LCNF.LCtx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/LCtx.lean#L15-L22"}}],"imports":["Lean.Compiler.LCNF.Basic"],"instances":[{"className":"Inhabited","name":"Lean.Compiler.LCNF.instInhabitedLCtx","typeNames":["Lean.Compiler.LCNF.LCtx"]}],"name":"Lean.Compiler.LCNF.LCtx"}