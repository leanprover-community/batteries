{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.setOption\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">setOption</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`set_option opt val in tacs` (the tactic) acts like `set_option opt val` at the command level,\nbut it sets the option only within the tactics `tacs`. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.setOption","kind":"def","line":192,"name":"Lean.Parser.Tactic.Grind.setOption","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L192-L195"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.exposeNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">exposeNames</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`expose_names` renames all inaccessible variables with accessible names, making them available\nfor reference in generated tactics. However, this renaming introduces machine-generated names\nthat are not fully under user control. `expose_names` is primarily intended as a preamble for\ngenerated `grind` tactic scripts.\n","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.exposeNames","kind":"def","line":184,"name":"Lean.Parser.Tactic.Grind.exposeNames","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L184-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.renameI\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">renameI</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`rename_i x_1 ... x_n` renames the last `n` inaccessible names using the given names. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.renameI","kind":"def","line":181,"name":"Lean.Parser.Tactic.Grind.renameI","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L181-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindRepeat_\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grindRepeat_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`repeat tac` repeatedly applies `tac` so long as it succeeds.\nThe tactic `tac` may be a tactic sequence, and if `tac` fails at any point in its execution,\n`repeat` will revert any partial changes that `tac` made to the tactic state.\nThe tactic `tac` should eventually fail, otherwise `repeat tac` will run indefinitely.\n","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindRepeat_","kind":"def","line":170,"name":"Lean.Parser.Tactic.Grind.grindRepeat_","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L170-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.fail\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">fail</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`fail msg` is a tactic that always fails, and produces an error using the given message. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.fail","kind":"def","line":167,"name":"Lean.Parser.Tactic.Grind.fail","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L167-L168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindAdmit\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grindAdmit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`admit` is a synonym for `sorry`. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindAdmit","kind":"def","line":165,"name":"Lean.Parser.Tactic.Grind.grindAdmit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L165-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.failIfSuccess\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">failIfSuccess</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`fail_if_success t` fails if the tactic `t` succeeds. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.failIfSuccess","kind":"def","line":161,"name":"Lean.Parser.Tactic.Grind.failIfSuccess","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L161-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindTry_\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grindTry_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`try tac` runs `tac` and succeeds even if `tac` failed. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindTry_","kind":"def","line":159,"name":"Lean.Parser.Tactic.Grind.grindTry_","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L159-L159"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.first\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">first</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`first | tac | ...` runs each `tac` until one succeeds, or else fails. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.first","kind":"def","line":155,"name":"Lean.Parser.Tactic.Grind.first","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L155-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_&lt;;&gt;_»\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">«grind_&lt;;&gt;_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">TrailingParserDescr</a></div></div>","info":{"doc":"`tac <;> tac'` runs `tac` on the main goal and `tac'` on each produced goal,\nconcatenating all goals produced by `tac'`.\n","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_<;>_»","kind":"def","line":149,"name":"Lean.Parser.Tactic.Grind.«grind_<;>_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L149-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.withAnnotateState\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">withAnnotateState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`with_annotate_state stx t` annotates the lexical range of `stx : Syntax` with\nthe initial and final state of running tactic `t`.\n","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.withAnnotateState","kind":"def","line":138,"name":"Lean.Parser.Tactic.Grind.withAnnotateState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L138-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.anyGoals\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">anyGoals</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`any_goals tac` applies the tactic `tac` to every goal,\nconcatenating the resulting goals for successful tactic applications.\nIf the tactic fails on all of the goals, the entire `any_goals` tactic fails.\n\nThis tactic is like `all_goals try tac` except that it fails if none of the applications of `tac` succeeds.\n","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.anyGoals","kind":"def","line":129,"name":"Lean.Parser.Tactic.Grind.anyGoals","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L129-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.next\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">next</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.next","kind":"def","line":127,"name":"Lean.Parser.Tactic.Grind.next","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L127-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.focus\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">focus</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`focus tac` focuses on the main goal, suppressing all other goals, and runs `tac` on it.\nUsually `· tac`, which enforces that the goal is closed by `tac`, should be preferred.\n","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.focus","kind":"def","line":121,"name":"Lean.Parser.Tactic.Grind.focus","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L121-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.allGoals\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">allGoals</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`all_goals tac` runs `tac` on each goal, concatenating the resulting goals.\nIf the tactic fails on any goal, the entire `all_goals` tactic fails.\n","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.allGoals","kind":"def","line":115,"name":"Lean.Parser.Tactic.Grind.allGoals","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L115-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.nestedTacticCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">nestedTacticCore</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Executes the given tactic block to close the current goal. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.nestedTacticCore","kind":"def","line":112,"name":"Lean.Parser.Tactic.Grind.nestedTacticCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L112-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.have\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">have</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.have","kind":"def","line":110,"name":"Lean.Parser.Tactic.Grind.have","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L110-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.finishTrace\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">finishTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`finish?` tries to close the current goal using `grind`'s default strategy and suggests a tactic script. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.finishTrace","kind":"def","line":107,"name":"Lean.Parser.Tactic.Grind.finishTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L107-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.finish\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">finish</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`finish` tries to close the current goal using `grind`'s default strategy ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.finish","kind":"def","line":104,"name":"Lean.Parser.Tactic.Grind.finish","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L104-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.done\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">done</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`done` succeeds iff there are no remaining goals. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.done","kind":"def","line":101,"name":"Lean.Parser.Tactic.Grind.done","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L101-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.casesTrace\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">casesTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.casesTrace","kind":"def","line":99,"name":"Lean.Parser.Tactic.Grind.casesTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.cases\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">cases</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.cases","kind":"def","line":97,"name":"Lean.Parser.Tactic.Grind.cases","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L97-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grind_ref__1\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grind_ref__1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grind_ref__1","kind":"def","line":95,"name":"Lean.Parser.Tactic.Grind.grind_ref__1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L95-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grind_ref_\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grind_ref_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grind_ref_","kind":"def","line":94,"name":"Lean.Parser.Tactic.Grind.grind_ref_","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L94-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grind_ref.quot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grind_ref</span>.<span class=\"name\">quot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grind_ref.quot","kind":"def","line":92,"name":"Lean.Parser.Tactic.Grind.grind_ref.quot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L92-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Category.grind_ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Category</span>.<span class=\"name\">grind_ref</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Notation.html#Lean.Parser.Category\">Category</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Category.grind_ref","kind":"def","line":92,"name":"Lean.Parser.Category.grind_ref","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L92-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.showLocalThms\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">showLocalThms</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Show active local theorems and their anchors for heuristic instantiation. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.showLocalThms","kind":"def","line":89,"name":"Lean.Parser.Tactic.Grind.showLocalThms","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L89-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.showState\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">showState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Show `grind` state. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.showState","kind":"def","line":87,"name":"Lean.Parser.Tactic.Grind.showState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L87-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.showCases\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">showCases</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Show case-split candidates. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.showCases","kind":"def","line":85,"name":"Lean.Parser.Tactic.Grind.showCases","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L85-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.showEqcs\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">showEqcs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Shows equivalence classes of terms. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.showEqcs","kind":"def","line":83,"name":"Lean.Parser.Tactic.Grind.showEqcs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L83-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.showFalse\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">showFalse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Shows propositions known to be `False`. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.showFalse","kind":"def","line":81,"name":"Lean.Parser.Tactic.Grind.showFalse","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L81-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.showTrue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">showTrue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Shows propositions known to be `True`. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.showTrue","kind":"def","line":79,"name":"Lean.Parser.Tactic.Grind.showTrue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L79-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.showAsserted\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">showAsserted</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Shows asserted facts. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.showAsserted","kind":"def","line":77,"name":"Lean.Parser.Tactic.Grind.showAsserted","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L77-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.instantiate\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instantiate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Instantiates theorems using E-matching.\nThe `approx` modifier is just a marker for users to easily identify automatically generated `instantiate` tactics\nthat may have redundant arguments.\n","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.instantiate","kind":"def","line":69,"name":"Lean.Parser.Tactic.Grind.instantiate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L69-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.thm\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">thm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.thm","kind":"def","line":67,"name":"Lean.Parser.Tactic.Grind.thm","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L67-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.anchor\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">anchor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.anchor","kind":"def","line":66,"name":"Lean.Parser.Tactic.Grind.anchor","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L66-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.sorry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">sorry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"The `sorry` tactic is a temporary placeholder for an incomplete tactic proof. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.sorry","kind":"def","line":63,"name":"Lean.Parser.Tactic.Grind.sorry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L63-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.linarith\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">linarith</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`linarith` linear arithmetic. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.linarith","kind":"def","line":60,"name":"Lean.Parser.Tactic.Grind.linarith","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L60-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.ac\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ac</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`ac` associativity and commutativity procedure. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.ac","kind":"def","line":58,"name":"Lean.Parser.Tactic.Grind.ac","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L58-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.ring\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ring</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`ring` (commutative) rings and fields. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.ring","kind":"def","line":56,"name":"Lean.Parser.Tactic.Grind.ring","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L56-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.lia\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">lia</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`lia` linear integer arithmetic. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.lia","kind":"def","line":54,"name":"Lean.Parser.Tactic.Grind.lia","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L54-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.skip\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">skip</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`skip` does nothing. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.skip","kind":"def","line":52,"name":"Lean.Parser.Tactic.Grind.skip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L52-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.paren\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">paren</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"`(grindSeq)` runs the `grindSeq` in sequence on the current list of targets.\nThis is pure grouping with no added effects. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.paren","kind":"def","line":48,"name":"Lean.Parser.Tactic.Grind.paren","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L48-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindSeq\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grindSeq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindSeq","kind":"def","line":46,"name":"Lean.Parser.Tactic.Grind.grindSeq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindSeqBracketed\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grindSeqBracketed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindSeqBracketed","kind":"def","line":45,"name":"Lean.Parser.Tactic.Grind.grindSeqBracketed","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindSeq1Indented\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grindSeq1Indented</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindSeq1Indented","kind":"def","line":44,"name":"Lean.Parser.Tactic.Grind.grindSeq1Indented","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L44-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindStep\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grindStep</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindStep","kind":"def","line":42,"name":"Lean.Parser.Tactic.Grind.grindStep","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grind.quot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grind</span>.<span class=\"name\">quot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grind.quot","kind":"def","line":38,"name":"Lean.Parser.Tactic.Grind.grind.quot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L38-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Category.grind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Category</span>.<span class=\"name\">grind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Notation.html#Lean.Parser.Category\">Category</a></div></div>","info":{"doc":"`grind` is the syntax category for a \"grind interactive tactic\".\nA `grind` tactic is a program which receives a `grind` goal. ","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Category.grind","kind":"def","line":38,"name":"Lean.Parser.Category.grind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L38-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindFilter\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grindFilter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grindFilter","kind":"def","line":36,"name":"Lean.Parser.Tactic.Grind.grindFilter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grind_filter!_\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grind_filter!_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grind_filter!_","kind":"def","line":34,"name":"Lean.Parser.Tactic.Grind.grind_filter!_","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filter_||_»\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">«grind_filter_||_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">TrailingParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filter_||_»","kind":"def","line":33,"name":"Lean.Parser.Tactic.Grind.«grind_filter_||_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filter_&amp;&amp;_»\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">«grind_filter_&amp;&amp;_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">TrailingParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filter_&&_»","kind":"def","line":32,"name":"Lean.Parser.Tactic.Grind.«grind_filter_&&_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filter(_)»\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">«grind_filter(_)»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filter(_)»","kind":"def","line":31,"name":"Lean.Parser.Tactic.Grind.«grind_filter(_)»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen&gt;=_»\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">«grind_filterGen&gt;=_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen>=_»","kind":"def","line":30,"name":"Lean.Parser.Tactic.Grind.«grind_filterGen>=_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L30-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen≥_»\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">«grind_filterGen≥_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen≥_»","kind":"def","line":29,"name":"Lean.Parser.Tactic.Grind.«grind_filterGen≥_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen&gt;_»\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">«grind_filterGen&gt;_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen>_»","kind":"def","line":28,"name":"Lean.Parser.Tactic.Grind.«grind_filterGen>_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen&lt;=_»\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">«grind_filterGen&lt;=_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen<=_»","kind":"def","line":27,"name":"Lean.Parser.Tactic.Grind.«grind_filterGen<=_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen≤_»\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">«grind_filterGen≤_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen≤_»","kind":"def","line":26,"name":"Lean.Parser.Tactic.Grind.«grind_filterGen≤_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen!=_»\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">«grind_filterGen!=_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen!=_»","kind":"def","line":25,"name":"Lean.Parser.Tactic.Grind.«grind_filterGen!=_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen=_»\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">«grind_filterGen=_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen=_»","kind":"def","line":24,"name":"Lean.Parser.Tactic.Grind.«grind_filterGen=_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen&lt;_»\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">«grind_filterGen&lt;_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.«grind_filterGen<_»","kind":"def","line":23,"name":"Lean.Parser.Tactic.Grind.«grind_filterGen<_»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grind_filter_\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grind_filter_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grind_filter_","kind":"def","line":22,"name":"Lean.Parser.Tactic.Grind.grind_filter_","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Category.grind_filter\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Category</span>.<span class=\"name\">grind_filter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Notation.html#Lean.Parser.Category\">Category</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Category.grind_filter","kind":"def","line":20,"name":"Lean.Parser.Category.grind_filter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grind_filter.quot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Grind</span>.<span class=\"name\">grind_filter</span>.<span class=\"name\">quot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.Grind.grind_filter.quot","kind":"def","line":20,"name":"Lean.Parser.Tactic.Grind.grind_filter.quot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.grindLemmaMin\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">grindLemmaMin</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"The `!` modifier instructs `grind` to consider only minimal indexable subexpressions\nwhen selecting patterns.\n","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.grindLemmaMin","kind":"def","line":13,"name":"Lean.Parser.Tactic.grindLemmaMin","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L13-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Interactive.html#Lean.Parser.Tactic.grindLemma\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">grindLemma</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Init/Grind/Interactive.html#Lean.Parser.Tactic.grindLemma","kind":"def","line":12,"name":"Lean.Parser.Tactic.grindLemma","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Grind/Interactive.lean#L12-L12"}}],"imports":["Init.Grind.Attr"],"instances":[],"name":"Init.Grind.Interactive"}