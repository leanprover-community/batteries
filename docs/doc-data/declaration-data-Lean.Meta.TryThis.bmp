{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.processEdit\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">processEdit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Suggestion</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">range</span> : <a href=\"./Lean/Syntax.html#String.Range\">String.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.TextEdit\">Lsp.TextEdit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.processEdit","kind":"def","line":232,"name":"Lean.Meta.Tactic.TryThis.Suggestion.processEdit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L232-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.pretty\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">pretty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Suggestion</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indent </span><span class=\"fn\">column</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.pretty","kind":"def","line":228,"name":"Lean.Meta.Tactic.TryThis.Suggestion.pretty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L228-L230"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText.prettyExtra\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">SuggestionText</span>.<span class=\"name\">prettyExtra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText\">SuggestionText</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indent </span><span class=\"fn\">column</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Pretty-prints a `SuggestionText` as a `String` and wraps with respect to the pane width,\nindentation, and column, via `Format.prettyExtra`. If `w := none`, then\n`w := getInputWidth (← getOptions)` is used. Raw `String`s are returned as-is. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText.prettyExtra","kind":"def","line":215,"name":"Lean.Meta.Tactic.TryThis.SuggestionText.prettyExtra","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L215-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText.pretty\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">SuggestionText</span>.<span class=\"name\">pretty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText\">SuggestionText</a> → <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"Pretty-prints a `SuggestionText` as a `Format`. If the `SuggestionText` is some `TSyntax kind`,\nwe use the appropriate pretty-printer; strings are coerced to `Format`s as-is. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText.pretty","kind":"def","line":207,"name":"Lean.Meta.Tactic.TryThis.SuggestionText.pretty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L207-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.getInputWidth\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">getInputWidth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Get the input width specified in the options ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.getInputWidth","kind":"def","line":202,"name":"Lean.Meta.Tactic.TryThis.getInputWidth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L202-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.format.inputWidth\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">format</span>.<span class=\"name\">inputWidth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"An option allowing the user to customize the ideal input width. Defaults to 100.\nThis option controls output format when\nthe output is intended to be copied back into a lean file ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.format.inputWidth","kind":"opaque","line":192,"name":"Lean.Meta.Tactic.TryThis.format.inputWidth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L192-L200"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.getIndentAndColumn\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">getIndentAndColumn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">range</span> : <a href=\"./Lean/Syntax.html#String.Range\">String.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Yields `(indent, column)` given a `FileMap` and a `String.Range`, where `indent` is the number\nof spaces by which the line that first includes `range` is initially indented, and `column` is the\ncolumn `range` starts at in that line. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.getIndentAndColumn","kind":"def","line":184,"name":"Lean.Meta.Tactic.TryThis.getIndentAndColumn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L184-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instTypeNameTryThisInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">instTypeNameTryThisInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.TryThisInfo\">TryThisInfo</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instTypeNameTryThisInfo","kind":"instance","line":180,"name":"Lean.Meta.Tactic.TryThis.instTypeNameTryThisInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L180-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.TryThisInfo.suggestion\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">TryThisInfo</span>.<span class=\"name\">suggestion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.TryThisInfo\">TryThisInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Suggestion</a></div></div>","info":{"doc":"Original suggestion that this `TryThisInfo` was derived from.\nStored so that meta-code downstream can extract the suggestions\nproduced by a tactic from the `InfoTree`.\n","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.TryThisInfo.suggestion","kind":"def","line":179,"name":"Lean.Meta.Tactic.TryThis.TryThisInfo.suggestion","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L179-L179"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.TryThisInfo.codeActionTitle\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">TryThisInfo</span>.<span class=\"name\">codeActionTitle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.TryThisInfo\">TryThisInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"Title of the code action that is displayed in the code action selection dialog. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.TryThisInfo.codeActionTitle","kind":"def","line":173,"name":"Lean.Meta.Tactic.TryThis.TryThisInfo.codeActionTitle","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L173-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.TryThisInfo.edit\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">TryThisInfo</span>.<span class=\"name\">edit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.TryThisInfo\">TryThisInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.TextEdit\">Lsp.TextEdit</a></div></div>","info":{"doc":"Suggestion edit as it will be applied to the editor document. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.TryThisInfo.edit","kind":"def","line":171,"name":"Lean.Meta.Tactic.TryThis.TryThisInfo.edit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L171-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.TryThisInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">TryThisInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">edit</span> : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.TextEdit\">Lsp.TextEdit</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">codeActionTitle</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">suggestion</span> : <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Suggestion</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.TryThisInfo\">TryThisInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.TryThisInfo.mk","kind":"ctor","line":169,"name":"Lean.Meta.Tactic.TryThis.TryThisInfo.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L169-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.TryThisInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">TryThisInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A packet of information about a \"Try this\" suggestion\nthat we store in the infotree for the associated code action to retrieve.\n","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.TryThisInfo","kind":"structure","line":165,"name":"Lean.Meta.Tactic.TryThis.TryThisInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L165-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instCoeSuggestionTextSuggestion\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">instCoeSuggestionTextSuggestion</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText\">SuggestionText</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Suggestion</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instCoeSuggestionTextSuggestion","kind":"instance","line":162,"name":"Lean.Meta.Tactic.TryThis.instCoeSuggestionTextSuggestion","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L162-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instToMessageDataSuggestion\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">instToMessageDataSuggestion</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">ToMessageData</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Suggestion</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instToMessageDataSuggestion","kind":"instance","line":159,"name":"Lean.Meta.Tactic.TryThis.instToMessageDataSuggestion","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L159-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instInhabitedSuggestion\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">instInhabitedSuggestion</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Suggestion</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instInhabitedSuggestion","kind":"instance","line":154,"name":"Lean.Meta.Tactic.TryThis.instInhabitedSuggestion","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L154-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instInhabitedSuggestion.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">instInhabitedSuggestion</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Suggestion</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instInhabitedSuggestion.default","kind":"def","line":154,"name":"Lean.Meta.Tactic.TryThis.instInhabitedSuggestion.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L154-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.toCodeActionTitle?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">toCodeActionTitle?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Suggestion</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#String\">String</a> → <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>","info":{"doc":"How to construct the text that appears in the lightbulb menu from the suggestion text. If\n`none`, we use `fun ppSuggestionText => \"Try this: \" ++ ppSuggestionText`. Only the pretty-printed\n`suggestion : SuggestionText` is used here. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.toCodeActionTitle?","kind":"def","line":153,"name":"Lean.Meta.Tactic.TryThis.Suggestion.toCodeActionTitle?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L153-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.messageData?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">messageData?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Suggestion</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></span></div></div>","info":{"doc":"How to represent the suggestion as `MessageData`. This is used only in the text of the\nwidget diagnostic.\nIf `none`, we use `suggestion`. Use `toMessageData` to render a `Suggestion` in this manner. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.messageData?","kind":"def","line":149,"name":"Lean.Meta.Tactic.TryThis.Suggestion.messageData?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L149-L149"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.style?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">style?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Suggestion</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle\">SuggestionStyle</a></span></div></div>","info":{"doc":"Optional style specification for the suggestion. If `none` (the default), the suggestion is\nstyled as a text link. Otherwise, the suggestion can be styled as:\n* a status: `.error`, `.warning`, `.success`\n* a hypothesis name: `.asHypothesis`, `.asInaccessible`\n* a variable color: `.value (t : Float)`, which draws from a red-yellow-green gradient, with red\nat `0.0` and green at `1.0`.\n\nSee `SuggestionStyle` for details.\n\nNote that this property is used only by the \"try this\" widget; it is ignored by the inline hint\nwidget. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.style?","kind":"def","line":145,"name":"Lean.Meta.Tactic.TryThis.Suggestion.style?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L145-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.postInfo?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">postInfo?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Suggestion</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Optional info to be printed immediately after replacement text in a widget. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.postInfo?","kind":"def","line":133,"name":"Lean.Meta.Tactic.TryThis.Suggestion.postInfo?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L133-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.preInfo?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">preInfo?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Suggestion</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Optional info to be printed immediately before replacement text in a widget. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.preInfo?","kind":"def","line":131,"name":"Lean.Meta.Tactic.TryThis.Suggestion.preInfo?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L131-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.suggestion\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">suggestion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Suggestion</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText\">SuggestionText</a></div></div>","info":{"doc":"Text to be used as a replacement via a code action. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.suggestion","kind":"def","line":129,"name":"Lean.Meta.Tactic.TryThis.Suggestion.suggestion","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L129-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">suggestion</span> : <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText\">SuggestionText</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preInfo? </span><span class=\"fn\">postInfo?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">style?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle\">SuggestionStyle</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">messageData?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toCodeActionTitle?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#String\">String</a> → <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Suggestion</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion.mk","kind":"ctor","line":127,"name":"Lean.Meta.Tactic.TryThis.Suggestion.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L127-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">Suggestion</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Holds a `suggestion` for replacement, along with `preInfo` and `postInfo` strings to be printed\nimmediately before and after that suggestion, respectively. It also includes an optional\n`MessageData` to represent the suggestion in logs; by default, this is `none`, and `suggestion` is\nused. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion","kind":"structure","line":123,"name":"Lean.Meta.Tactic.TryThis.Suggestion","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L123-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle.value\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">SuggestionStyle</span>.<span class=\"name\">value</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Init/Data/Float.html#Float\">Float</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">showValueInHoverText</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle\">SuggestionStyle</a></div></div>","info":{"doc":"Draws the color from a red-yellow-green color gradient with red at `0.0`, yellow at `0.5`, and\ngreen at `1.0`. Values outside the range `[0.0, 1.0]` are clipped to lie within this range.\n\nWith `showValueInHoverText := true` (the default), the value `t` will be included in the `title` of\nthe HTML element (which appears on hover). ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle.value","kind":"def","line":107,"name":"Lean.Meta.Tactic.TryThis.SuggestionStyle.value","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L107-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle.asInaccessible\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">SuggestionStyle</span>.<span class=\"name\">asInaccessible</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle\">SuggestionStyle</a></div></div>","info":{"doc":"Style the same way as an inaccessible hypothesis appearing in the infoview. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle.asInaccessible","kind":"def","line":102,"name":"Lean.Meta.Tactic.TryThis.SuggestionStyle.asInaccessible","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L102-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle.asHypothesis\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">SuggestionStyle</span>.<span class=\"name\">asHypothesis</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle\">SuggestionStyle</a></div></div>","info":{"doc":"Style the same way as a hypothesis appearing in the infoview. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle.asHypothesis","kind":"def","line":97,"name":"Lean.Meta.Tactic.TryThis.SuggestionStyle.asHypothesis","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L97-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle.success\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">SuggestionStyle</span>.<span class=\"name\">success</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle\">SuggestionStyle</a></div></div>","info":{"doc":"Style as a success. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle.success","kind":"def","line":91,"name":"Lean.Meta.Tactic.TryThis.SuggestionStyle.success","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L91-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle.warning\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">SuggestionStyle</span>.<span class=\"name\">warning</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decorated</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle\">SuggestionStyle</a></div></div>","info":{"doc":"Style as a warning. By default, decorates the text with an undersquiggle; providing the\nargument `decorated := false` turns this off. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle.warning","kind":"def","line":79,"name":"Lean.Meta.Tactic.TryThis.SuggestionStyle.warning","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L79-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle.error\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">SuggestionStyle</span>.<span class=\"name\">error</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decorated</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle\">SuggestionStyle</a></div></div>","info":{"doc":"Style as an error. By default, decorates the text with an undersquiggle; providing the argument\n`decorated := false` turns this off. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle.error","kind":"def","line":66,"name":"Lean.Meta.Tactic.TryThis.SuggestionStyle.error","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L66-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instToJsonSuggestionStyle\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">instToJsonSuggestionStyle</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle\">SuggestionStyle</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instToJsonSuggestionStyle","kind":"instance","line":64,"name":"Lean.Meta.Tactic.TryThis.instToJsonSuggestionStyle","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instInhabitedSuggestionStyle\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">instInhabitedSuggestionStyle</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle\">SuggestionStyle</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instInhabitedSuggestionStyle","kind":"instance","line":64,"name":"Lean.Meta.Tactic.TryThis.instInhabitedSuggestionStyle","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">SuggestionStyle</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Style hooks for `Suggestion`s. See `SuggestionStyle.error`, `.warning`, `.success`, `.value`,\nand other definitions here for style presets. This is an arbitrary `Json` object, with the following\ninteresting fields:\n* `title`: the hover text in the suggestion link\n* `className`: the CSS classes applied to the link\n* `style`: A `Json` object with additional inline CSS styles such as `color` or `textDecoration`.\n","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionStyle","kind":"def","line":56,"name":"Lean.Meta.Tactic.TryThis.SuggestionStyle","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L56-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instCoeStringSuggestionText\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">instCoeStringSuggestionText</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText\">SuggestionText</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instCoeStringSuggestionText","kind":"instance","line":53,"name":"Lean.Meta.Tactic.TryThis.instCoeStringSuggestionText","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L53-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instCoeHeadTSyntaxConsSyntaxNodeKindNilSuggestionText\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">instCoeHeadTSyntaxConsSyntaxNodeKindNilSuggestionText</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeHead\">CoeHead</a> (<a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">kind</span>) <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText\">SuggestionText</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instCoeHeadTSyntaxConsSyntaxNodeKindNilSuggestionText","kind":"instance","line":50,"name":"Lean.Meta.Tactic.TryThis.instCoeHeadTSyntaxConsSyntaxNodeKindNilSuggestionText","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L50-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instToMessageDataSuggestionText\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">instToMessageDataSuggestionText</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">ToMessageData</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText\">SuggestionText</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instToMessageDataSuggestionText","kind":"instance","line":45,"name":"Lean.Meta.Tactic.TryThis.instToMessageDataSuggestionText","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L45-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instInhabitedSuggestionText\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">instInhabitedSuggestionText</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText\">SuggestionText</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instInhabitedSuggestionText","kind":"instance","line":43,"name":"Lean.Meta.Tactic.TryThis.instInhabitedSuggestionText","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instInhabitedSuggestionText.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">instInhabitedSuggestionText</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText\">SuggestionText</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.instInhabitedSuggestionText.default","kind":"def","line":43,"name":"Lean.Meta.Tactic.TryThis.instInhabitedSuggestionText.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText.string\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">SuggestionText</span>.<span class=\"name\">string</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText\">SuggestionText</a></span></div></div>","info":{"doc":"A raw string to be used as suggested replacement text in the infoview. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText.string","kind":"ctor","line":41,"name":"Lean.Meta.Tactic.TryThis.SuggestionText.string","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L41-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText.tsyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">SuggestionText</span>.<span class=\"name\">tsyntax</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">kind</span> → <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText\">SuggestionText</a></span></div></div>","info":{"doc":"`TSyntax kind` used as suggested replacement text in the infoview. Note that while `TSyntax`\nis in general parameterized by a list of `SyntaxNodeKind`s, we only allow one here; this\nunambiguously guides pretty-printing. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText.tsyntax","kind":"ctor","line":37,"name":"Lean.Meta.Tactic.TryThis.SuggestionText.tsyntax","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L37-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TryThis</span>.<span class=\"name\">SuggestionText</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Text to be used as a suggested replacement in the infoview. This can be either a `TSyntax kind`\nfor a single `kind : SyntaxNodeKind` or a raw `String`.\n\nInstead of using constructors directly, there are coercions available from these types to\n`SuggestionText`. ","docLink":"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.SuggestionText","kind":"inductive","line":31,"name":"Lean.Meta.Tactic.TryThis.SuggestionText","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/TryThis.lean#L31-L43"}}],"imports":["Lean.Data.Lsp.Basic","Lean.PrettyPrinter"],"instances":[{"className":"Inhabited","name":"Lean.Meta.Tactic.TryThis.instInhabitedSuggestionText","typeNames":["Lean.Meta.Tactic.TryThis.SuggestionText"]},{"className":"Lean.ToMessageData","name":"Lean.Meta.Tactic.TryThis.instToMessageDataSuggestionText","typeNames":["Lean.Meta.Tactic.TryThis.SuggestionText"]},{"className":"CoeHead","name":"Lean.Meta.Tactic.TryThis.instCoeHeadTSyntaxConsSyntaxNodeKindNilSuggestionText","typeNames":["Lean.TSyntax","Lean.Meta.Tactic.TryThis.SuggestionText"]},{"className":"Coe","name":"Lean.Meta.Tactic.TryThis.instCoeStringSuggestionText","typeNames":["String","Lean.Meta.Tactic.TryThis.SuggestionText"]},{"className":"Inhabited","name":"Lean.Meta.Tactic.TryThis.instInhabitedSuggestionStyle","typeNames":["Lean.Meta.Tactic.TryThis.SuggestionStyle"]},{"className":"Lean.ToJson","name":"Lean.Meta.Tactic.TryThis.instToJsonSuggestionStyle","typeNames":["Lean.Meta.Tactic.TryThis.SuggestionStyle"]},{"className":"Inhabited","name":"Lean.Meta.Tactic.TryThis.instInhabitedSuggestion","typeNames":["Lean.Meta.Tactic.TryThis.Suggestion"]},{"className":"Lean.ToMessageData","name":"Lean.Meta.Tactic.TryThis.instToMessageDataSuggestion","typeNames":["Lean.Meta.Tactic.TryThis.Suggestion"]},{"className":"Coe","name":"Lean.Meta.Tactic.TryThis.instCoeSuggestionTextSuggestion","typeNames":["Lean.Meta.Tactic.TryThis.SuggestionText","Lean.Meta.Tactic.TryThis.Suggestion"]},{"className":"TypeName","name":"Lean.Meta.Tactic.TryThis.instTypeNameTryThisInfo","typeNames":["Lean.Meta.Tactic.TryThis.TryThisInfo"]}],"name":"Lean.Meta.TryThis"}