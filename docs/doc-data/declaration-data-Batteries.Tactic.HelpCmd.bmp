{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Command+____»\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«command#help_Command+____»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The command `#help command` shows all commands that have been defined in the current environment.\nSee `#help cat` for more information.\n","docLink":"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Command+____»","kind":"def","line":354,"name":"Batteries.Tactic.«command#help_Command+____»","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/HelpCmd.lean#L354-L359"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Conv+____»\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«command#help_Conv+____»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The command `#help conv` shows all tactics that have been defined in the current environment.\nSee `#help cat` for more information.\n","docLink":"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Conv+____»","kind":"def","line":344,"name":"Batteries.Tactic.«command#help_Conv+____»","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/HelpCmd.lean#L344-L349"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Tactic+____»\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«command#help_Tactic+____»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The command `#help tactic` shows all tactics that have been defined in the current environment.\nSee `#help cat` for more information.\n","docLink":"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Tactic+____»","kind":"def","line":334,"name":"Batteries.Tactic.«command#help_Tactic+____»","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/HelpCmd.lean#L334-L339"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Term+____»\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«command#help_Term+____»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The command `#help term` shows all term syntaxes that have been defined in the current environment.\nSee `#help cat` for more information.\n","docLink":"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Term+____»","kind":"def","line":324,"name":"Batteries.Tactic.«command#help_Term+____»","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/HelpCmd.lean#L324-L329"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Note___»\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«command#help_Note___»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"`#help note \"foo\"` searches for all library notes whose\nlabel starts with \"foo\", then displays those library notes sorted alphabetically by label,\ngrouped by label.\nThe command only displays the library notes that are declared in\nimported files or in the same file above the line containing the command.\n","docLink":"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Note___»","kind":"def","line":292,"name":"Batteries.Tactic.«command#help_Note___»","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/HelpCmd.lean#L292-L322"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/HelpCmd.html#String.makeBullet\"><span class=\"name\">String</span>.<span class=\"name\">makeBullet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"format the string to be included in a single markdown bullet\n","docLink":"./Batteries/Tactic/HelpCmd.html#String.makeBullet","kind":"def","line":286,"name":"String.makeBullet","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/HelpCmd.lean#L286-L289"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Cat+______»\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«command#help_Cat+______»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The command `#help cat C` shows all syntaxes that have been defined in syntax category `C` in the\ncurrent environment.\nEach syntax has a format like:\n```\nsyntax \"first\"... [Parser.tactic.first]\n  `first | tac | ...` runs each `tac` until one succeeds, or else fails.\n```\nThe quoted string is the leading token of the syntax, if applicable. It is followed by the full\nname of the syntax (which you can also click to go to the definition), and the documentation.\n\n* The form `#help cat C id` will show only attributes that begin with `id`.\n* The form `#help cat+ C` will also show information about any `macro`s and `elab`s\n  associated to the listed syntaxes.\n","docLink":"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Cat+______»","kind":"def","line":208,"name":"Batteries.Tactic.«command#help_Cat+______»","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/HelpCmd.lean#L208-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Cats___»\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«command#help_Cats___»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The command `#help cats` shows all syntax categories that have been defined in the\ncurrent environment.\nEach syntax has a format like:\n```\ncategory command [Lean.Parser.initFn✝]\n```\nThe name of the syntax category in this case is `command`, and `Lean.Parser.initFn✝` is the\nname of the declaration that introduced it. (It is often an anonymous declaration like this,\nbut you can click to go to the definition.) It also shows the doc string if available.\n\nThe form `#help cats id` will show only syntax categories that begin with `id`.\n","docLink":"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Cats___»","kind":"def","line":169,"name":"Batteries.Tactic.«command#help_Cats___»","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/HelpCmd.lean#L169-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.getHeadTk\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">getHeadTk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Gets the initial string token in a parser description. For example, for a declaration like\n`syntax \"bla\" \"baz\" term : tactic`, it returns `some \"bla\"`. Returns `none` for syntax declarations\nthat don't start with a string constant. ","docLink":"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.getHeadTk","kind":"opaque","line":132,"name":"Batteries.Tactic.getHeadTk","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/HelpCmd.lean#L132-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_AttrAttribute___»\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«command#help_AttrAttribute___»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The command `#help attribute` (or the short form `#help attr`) shows all attributes that have been\ndefined in the current environment.\nEach attribute has a format like:\n```\n[inline]: mark definition to always be inlined\n```\nThis says that `inline` is an attribute that can be placed on definitions like\n`@[inline] def foo := 1`. (Individual attributes may have restrictions on where they can be\napplied; see the attribute's documentation for details.) Both the attribute's `descr` field as well\nas the docstring will be displayed here.\n\nThe form `#help attr id` will show only attributes that begin with `id`.\n","docLink":"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_AttrAttribute___»","kind":"def","line":84,"name":"Batteries.Tactic.«command#help_AttrAttribute___»","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/HelpCmd.lean#L84-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Option___»\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«command#help_Option___»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The command `#help option` shows all options that have been defined in the current environment.\nEach option has a format like:\n```\noption pp.all : Bool := false\n  (pretty printer) display coercions, implicit parameters, proof terms, fully qualified names,\n  universe, and disable beta reduction and notations during pretty printing\n```\nThis says that `pp.all` is an option which can be set to a `Bool` value, and the default value is\n`false`. If an option has been modified from the default using e.g. `set_option pp.all true`,\nit will appear as a `(currently: true)` note next to the option.\n\nThe form `#help option id` will show only options that begin with `id`.\n","docLink":"./Batteries/Tactic/HelpCmd.html#Batteries.Tactic.«command#help_Option___»","kind":"def","line":38,"name":"Batteries.Tactic.«command#help_Option___»","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Tactic/HelpCmd.lean#L38-L52"}}],"imports":["Init","Lean.Elab.Syntax","Lean.DocString","Batteries.Util.LibraryNote"],"instances":[],"name":"Batteries.Tactic.HelpCmd"}