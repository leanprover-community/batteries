{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/NameMapAttribute.html#Lean.registerNameMapAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">registerNameMapAttribute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">impl</span> : <span class=\"fn\"><a href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl\">NameMapAttributeImpl</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapExtension\">NameMapExtension</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Similar to `registerParametricAttribute` except that attributes do not\nhave to be assigned in the same file as the declaration. ","docLink":"./Batteries/Lean/NameMapAttribute.html#Lean.registerNameMapAttribute","kind":"def","line":57,"name":"Lean.registerNameMapAttribute","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/NameMapAttribute.lean#L57-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/NameMapAttribute.html#Lean.instInhabitedNameMapAttributeImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedNameMapAttributeImpl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl\">NameMapAttributeImpl</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/NameMapAttribute.html#Lean.instInhabitedNameMapAttributeImpl","kind":"instance","line":55,"name":"Lean.instInhabitedNameMapAttributeImpl","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/NameMapAttribute.lean#L55-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/NameMapAttribute.html#Lean.instInhabitedNameMapAttributeImpl.default\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedNameMapAttributeImpl</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl\">NameMapAttributeImpl</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/NameMapAttribute.html#Lean.instInhabitedNameMapAttributeImpl.default","kind":"def","line":55,"name":"Lean.instInhabitedNameMapAttributeImpl.default","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/NameMapAttribute.lean#L55-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl.add\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMapAttributeImpl</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl\">NameMapAttributeImpl</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">src</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"This function is called when the attribute is applied.\nIt should produce a value of type `α` from the given attribute syntax. ","docLink":"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl.add","kind":"def","line":54,"name":"Lean.NameMapAttributeImpl.add","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/NameMapAttribute.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl.descr\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMapAttributeImpl</span>.<span class=\"name\">descr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl\">NameMapAttributeImpl</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"The description of the attribute ","docLink":"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl.descr","kind":"def","line":51,"name":"Lean.NameMapAttributeImpl.descr","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/NameMapAttribute.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMapAttributeImpl</span>.<span class=\"name\">ref</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl\">NameMapAttributeImpl</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"The declaration which creates the attribute ","docLink":"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl.ref","kind":"def","line":49,"name":"Lean.NameMapAttributeImpl.ref","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/NameMapAttribute.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl.name\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMapAttributeImpl</span>.<span class=\"name\">name</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl\">NameMapAttributeImpl</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"The name of the attribute ","docLink":"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl.name","kind":"def","line":47,"name":"Lean.NameMapAttributeImpl.name","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/NameMapAttribute.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMapAttributeImpl</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">descr</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">add</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl\">NameMapAttributeImpl</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl.mk","kind":"ctor","line":45,"name":"Lean.NameMapAttributeImpl.mk","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/NameMapAttribute.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMapAttributeImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The inputs to `registerNameMapAttribute`. ","docLink":"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapAttributeImpl","kind":"structure","line":44,"name":"Lean.NameMapAttributeImpl","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/NameMapAttribute.lean#L44-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/NameMapAttribute.html#Lean.registerNameMapExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">registerNameMapExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapExtension\">NameMapExtension</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Registers a new extension with the given name and type. ","docLink":"./Batteries/Lean/NameMapAttribute.html#Lean.registerNameMapExtension","kind":"def","line":32,"name":"Lean.registerNameMapExtension","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/NameMapAttribute.lean#L32-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapExtension.add\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMapExtension</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">MonadError</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapExtension\">NameMapExtension</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Add the given k,v pair to the NameMapExtension. ","docLink":"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapExtension.add","kind":"def","line":24,"name":"Lean.NameMapExtension.add","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/NameMapAttribute.lean#L24-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapExtension.find?\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMapExtension</span>.<span class=\"name\">find?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapExtension\">NameMapExtension</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></span></div></div>","info":{"doc":"Look up a value in the given extension in the environment. ","docLink":"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapExtension.find?","kind":"def","line":20,"name":"Lean.NameMapExtension.find?","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/NameMapAttribute.lean#L20-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/NameMapAttribute.html#Lean.instInhabitedNameMapExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedNameMapExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapExtension\">NameMapExtension</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Lean/NameMapAttribute.html#Lean.instInhabitedNameMapExtension","kind":"instance","line":17,"name":"Lean.instInhabitedNameMapExtension","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/NameMapAttribute.lean#L17-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMapExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Maps declaration names to `α`. ","docLink":"./Batteries/Lean/NameMapAttribute.html#Lean.NameMapExtension","kind":"def","line":14,"name":"Lean.NameMapExtension","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Lean/NameMapAttribute.lean#L14-L15"}}],"imports":["Init","Lean.Attributes"],"instances":[{"className":"Inhabited","name":"Lean.instInhabitedNameMapExtension","typeNames":["Lean.NameMapExtension"]},{"className":"Inhabited","name":"Lean.instInhabitedNameMapAttributeImpl","typeNames":["Lean.NameMapAttributeImpl"]}],"name":"Batteries.Lean.NameMapAttribute"}