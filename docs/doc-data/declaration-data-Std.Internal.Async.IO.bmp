{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncStream.stop\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Async</span>.<span class=\"name\">IO</span>.<span class=\"name\">AsyncStream</span>.<span class=\"name\">stop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncStream\">AsyncStream</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncStream.stop","kind":"def","line":48,"name":"Std.Internal.Async.IO.AsyncStream.stop","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/IO.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncStream.next\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Async</span>.<span class=\"name\">IO</span>.<span class=\"name\">AsyncStream</span>.<span class=\"name\">next</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncStream\">AsyncStream</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Std/Internal/Async/Select.html#Std.Internal.IO.Async.Selector\">IO.Async.Selector</a> <span class=\"fn\">β</span></span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncStream.next","kind":"def","line":46,"name":"Std.Internal.Async.IO.AsyncStream.next","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/IO.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncStream.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Async</span>.<span class=\"name\">IO</span>.<span class=\"name\">AsyncStream</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">next</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Std/Internal/Async/Select.html#Std.Internal.IO.Async.Selector\">IO.Async.Selector</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stop</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncStream\">AsyncStream</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncStream.mk","kind":"ctor","line":45,"name":"Std.Internal.Async.IO.AsyncStream.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/IO.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncStream\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Async</span>.<span class=\"name\">IO</span>.<span class=\"name\">AsyncStream</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Interface for asynchronous streaming with selector-based iteration.\n","docLink":"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncStream","kind":"class","line":42,"name":"Std.Internal.Async.IO.AsyncStream","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/IO.lean#L42-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncWrite.flush\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Async</span>.<span class=\"name\">IO</span>.<span class=\"name\">AsyncWrite</span>.<span class=\"name\">flush</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncWrite\">AsyncWrite</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">IO.Async.Async</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncWrite.flush","kind":"def","line":39,"name":"Std.Internal.Async.IO.AsyncWrite.flush","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/IO.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncWrite.writeAll\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Async</span>.<span class=\"name\">IO</span>.<span class=\"name\">AsyncWrite</span>.<span class=\"name\">writeAll</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncWrite\">AsyncWrite</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">β</span></span> → <span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">IO.Async.Async</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncWrite.writeAll","kind":"def","line":36,"name":"Std.Internal.Async.IO.AsyncWrite.writeAll","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/IO.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncWrite.write\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Async</span>.<span class=\"name\">IO</span>.<span class=\"name\">AsyncWrite</span>.<span class=\"name\">write</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncWrite\">AsyncWrite</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">IO.Async.Async</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncWrite.write","kind":"def","line":34,"name":"Std.Internal.Async.IO.AsyncWrite.write","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/IO.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncWrite.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Async</span>.<span class=\"name\">IO</span>.<span class=\"name\">AsyncWrite</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">write</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">IO.Async.Async</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">writeAll</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">β</span></span> → <span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">IO.Async.Async</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">flush</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">IO.Async.Async</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncWrite\">AsyncWrite</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncWrite.mk","kind":"ctor","line":33,"name":"Std.Internal.Async.IO.AsyncWrite.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/IO.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncWrite\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Async</span>.<span class=\"name\">IO</span>.<span class=\"name\">AsyncWrite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Interface for asynchronous writing operations.\n","docLink":"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncWrite","kind":"class","line":30,"name":"Std.Internal.Async.IO.AsyncWrite","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/IO.lean#L30-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncRead.read\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Async</span>.<span class=\"name\">IO</span>.<span class=\"name\">AsyncRead</span>.<span class=\"name\">read</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncRead\">AsyncRead</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">IO.Async.Async</a> <span class=\"fn\">β</span></span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncRead.read","kind":"def","line":28,"name":"Std.Internal.Async.IO.AsyncRead.read","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/IO.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncRead.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Async</span>.<span class=\"name\">IO</span>.<span class=\"name\">AsyncRead</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">read</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">IO.Async.Async</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncRead\">AsyncRead</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncRead.mk","kind":"ctor","line":27,"name":"Std.Internal.Async.IO.AsyncRead.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/IO.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncRead\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Async</span>.<span class=\"name\">IO</span>.<span class=\"name\">AsyncRead</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Interface for asynchronous reading operations.\n","docLink":"./Std/Internal/Async/IO.html#Std.Internal.Async.IO.AsyncRead","kind":"class","line":24,"name":"Std.Internal.Async.IO.AsyncRead","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/IO.lean#L24-L28"}}],"imports":["Std.Internal.Async.Select"],"instances":[],"name":"Std.Internal.Async.IO"}