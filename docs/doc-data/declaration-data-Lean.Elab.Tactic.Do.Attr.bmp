{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.getSpecTheorems\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">getSpecTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecTheorems</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.getSpecTheorems","kind":"def","line":236,"name":"Lean.Elab.Tactic.Do.SpecAttr.getSpecTheorems","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L236-L237"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecExtension.getTheorems\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecExtension</span>.<span class=\"name\">getTheorems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecExtension\">SpecExtension</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecTheorems</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecExtension.getTheorems","kind":"def","line":233,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecExtension.getTheorems","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L233-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.mkSpecAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">mkSpecAttr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecExtension\">SpecExtension</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.mkSpecAttr","kind":"def","line":209,"name":"Lean.Elab.Tactic.Do.SpecAttr.mkSpecAttr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L209-L229"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.specAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">specAttr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecExtension\">SpecExtension</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.specAttr","kind":"opaque","line":207,"name":"Lean.Elab.Tactic.Do.SpecAttr.specAttr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L207-L207"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.mkSpecExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">mkSpecExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\">SimpleScopedEnvExtension.Descr</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecEntry\">SpecEntry</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecTheorems</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.mkSpecExt","kind":"def","line":202,"name":"Lean.Elab.Tactic.Do.SpecAttr.mkSpecExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L202-L205"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.addSpecTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">addSpecTheorem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecExtension\">SpecExtension</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrKind</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">AttributeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.addSpecTheorem","kind":"def","line":198,"name":"Lean.Elab.Tactic.Do.SpecAttr.addSpecTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L198-L200"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.addSpecTheoremEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">addSpecTheoremEntry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecTheorems</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecTheorems</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.addSpecTheoremEntry","kind":"def","line":195,"name":"Lean.Elab.Tactic.Do.SpecAttr.addSpecTheoremEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L195-L196"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.mkSpecTheoremFromStx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">mkSpecTheoremFromStx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">proof</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">1000</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.mkSpecTheoremFromStx","kind":"def","line":191,"name":"Lean.Elab.Tactic.Do.SpecAttr.mkSpecTheoremFromStx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L191-L193"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.mkSpecTheoremFromLocal\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">mkSpecTheoremFromLocal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvar</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">1000</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.mkSpecTheoremFromLocal","kind":"def","line":187,"name":"Lean.Elab.Tactic.Do.SpecAttr.mkSpecTheoremFromLocal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L187-L189"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.mkSpecTheoremFromConst\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">mkSpecTheoremFromConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">1000</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.mkSpecTheoremFromConst","kind":"def","line":178,"name":"Lean.Elab.Tactic.Do.SpecAttr.mkSpecTheoremFromConst","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L178-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.computeMVarBetaPotentialForSPred\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">computeMVarBetaPotentialForSPred</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σs </span><span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"If `σs : List Type`, then `e : SPred σs`.\nReturn the number of times `e` needs to be applied\nin order to assign closed solutions to meta variables. ","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.computeMVarBetaPotentialForSPred","kind":"def","line":130,"name":"Lean.Elab.Tactic.Do.SpecAttr.computeMVarBetaPotentialForSPred","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L130-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.simpSPredConfig\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">simpSPredConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.ConfigWithKey\">Meta.ConfigWithKey</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.simpSPredConfig","kind":"def","line":122,"name":"Lean.Elab.Tactic.Do.SpecAttr.simpSPredConfig","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L122-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecExtension","kind":"def","line":98,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecExtension","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L98-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems.eraseCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecTheorems</span>.<span class=\"name\">eraseCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecTheorems</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thmId</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecTheorems</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems.eraseCore","kind":"def","line":95,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems.eraseCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L95-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems.isErased\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecTheorems</span>.<span class=\"name\">isErased</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecTheorems</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thmId</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems.isErased","kind":"def","line":92,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems.isErased","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L92-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecTheorems.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">instInhabitedSpecTheorems</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecTheorems</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecTheorems.default","kind":"def","line":90,"name":"Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecTheorems.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L90-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecTheorems\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">instInhabitedSpecTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecTheorems</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecTheorems","kind":"instance","line":90,"name":"Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecTheorems","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L90-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems.erased\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecTheorems</span>.<span class=\"name\">erased</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecTheorems</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">PHashSet</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems.erased","kind":"def","line":89,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems.erased","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L89-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems.specs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecTheorems</span>.<span class=\"name\">specs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecTheorems</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Meta.DiscrTree</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems.specs","kind":"def","line":88,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems.specs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L88-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecTheorems</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">specs</span> : <span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Meta.DiscrTree</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">erased</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">PHashSet</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecTheorems</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems.mk","kind":"ctor","line":87,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L87-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems","kind":"structure","line":87,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L87-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecEntry","kind":"def","line":85,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecEntry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instBEqSpecTheorem.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">instBEqSpecTheorem</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a> → <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instBEqSpecTheorem.beq","kind":"def","line":83,"name":"Lean.Elab.Tactic.Do.SpecAttr.instBEqSpecTheorem.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instBEqSpecTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">instBEqSpecTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instBEqSpecTheorem","kind":"instance","line":83,"name":"Lean.Elab.Tactic.Do.SpecAttr.instBEqSpecTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">instInhabitedSpecTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecTheorem","kind":"instance","line":83,"name":"Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecTheorem.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">instInhabitedSpecTheorem</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecTheorem.default","kind":"def","line":83,"name":"Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecTheorem.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.priority\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecTheorem</span>.<span class=\"name\">priority</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.priority","kind":"def","line":82,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.priority","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L82-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.etaPotential\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecTheorem</span>.<span class=\"name\">etaPotential</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"If `etaPotential` is non-zero, then the precondition contains meta variables that can be\ninstantiated after applying `mintro ∀s` `etaPotential` many times.\n","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.etaPotential","kind":"def","line":81,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.etaPotential","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L81-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.proof\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecTheorem</span>.<span class=\"name\">proof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a></div></div>","info":{"doc":"The proof for the theorem. ","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.proof","kind":"def","line":76,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.proof","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L76-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.prog\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecTheorem</span>.<span class=\"name\">prog</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"Expr key tested for matching, in ∀-quantified form.\n`keys = (← mkPath (← forallMetaTelescope prog).2.2)`.\n","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.prog","kind":"def","line":74,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.prog","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L74-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.keys\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecTheorem</span>.<span class=\"name\">keys</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Meta.DiscrTree.Key</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.keys","kind":"def","line":69,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.keys","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecTheorem</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">keys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Meta.DiscrTree.Key</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prog</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">proof</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">etaPotential </span><span class=\"fn\">priority</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\">SpecTheorem</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.mk","kind":"ctor","line":68,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem","kind":"structure","line":68,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L68-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instToMessageDataSpecProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">instToMessageDataSpecProof</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">ToMessageData</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instToMessageDataSpecProof","kind":"instance","line":62,"name":"Lean.Elab.Tactic.Do.SpecAttr.instToMessageDataSpecProof","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L62-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof.instantiate\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecProof</span>.<span class=\"name\">instantiate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">proof</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof.instantiate","kind":"def","line":50,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecProof.instantiate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L50-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instHashableSpecProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">instHashableSpecProof</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instHashableSpecProof","kind":"instance","line":47,"name":"Lean.Elab.Tactic.Do.SpecAttr.instHashableSpecProof","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L47-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof.key\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecProof</span>.<span class=\"name\">key</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a> → <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"A unique identifier corresponding to the origin. ","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof.key","kind":"def","line":41,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecProof.key","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L41-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instBEqSpecProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">instBEqSpecProof</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instBEqSpecProof","kind":"instance","line":39,"name":"Lean.Elab.Tactic.Do.SpecAttr.instBEqSpecProof","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instBEqSpecProof.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">instBEqSpecProof</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a> → <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instBEqSpecProof.beq","kind":"def","line":39,"name":"Lean.Elab.Tactic.Do.SpecAttr.instBEqSpecProof.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecProof.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">instInhabitedSpecProof</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecProof.default","kind":"def","line":39,"name":"Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecProof.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">instInhabitedSpecProof</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecProof","kind":"instance","line":39,"name":"Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecProof","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecProof</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">proof</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof.stx","kind":"ctor","line":38,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecProof.stx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof.local\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecProof</span>.<span class=\"name\">local</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof.local","kind":"ctor","line":37,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecProof.local","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof.global\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecProof</span>.<span class=\"name\">global</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\">SpecProof</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof.global","kind":"ctor","line":36,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecProof.global","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">SpecProof</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecProof","kind":"inductive","line":35,"name":"Lean.Elab.Tactic.Do.SpecAttr.SpecProof","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L35-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.getSpecSimpTheorems\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">getSpecSimpTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems\">Meta.SimpTheorems</a></span></div></div>","info":{"doc":"The simp set accumulated by the `@[spec]` attribute.\n(This does not include Hoare triple specs.)\nIt is an implementation detail of the `mvcgen` tactic.\n","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.getSpecSimpTheorems","kind":"def","line":27,"name":"Lean.Elab.Tactic.Do.SpecAttr.getSpecSimpTheorems","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L27-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.mvcgenSimpExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">SpecAttr</span>.<span class=\"name\">mvcgenSimpExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpExtension\">Meta.SimpExtension</a></div></div>","info":{"doc":"This attribute should not be used directly.\nIt is an implementation detail of the `mvcgen` tactic.\n","docLink":"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.mvcgenSimpExt","kind":"opaque","line":20,"name":"Lean.Elab.Tactic.Do.SpecAttr.mvcgenSimpExt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/Attr.lean#L20-L25"}}],"imports":["Lean.Meta.Tactic.Simp","Std.Tactic.Do.Syntax"],"instances":[{"className":"Inhabited","name":"Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecProof","typeNames":["Lean.Elab.Tactic.Do.SpecAttr.SpecProof"]},{"className":"BEq","name":"Lean.Elab.Tactic.Do.SpecAttr.instBEqSpecProof","typeNames":["Lean.Elab.Tactic.Do.SpecAttr.SpecProof"]},{"className":"Hashable","name":"Lean.Elab.Tactic.Do.SpecAttr.instHashableSpecProof","typeNames":["Lean.Elab.Tactic.Do.SpecAttr.SpecProof"]},{"className":"Lean.ToMessageData","name":"Lean.Elab.Tactic.Do.SpecAttr.instToMessageDataSpecProof","typeNames":["Lean.Elab.Tactic.Do.SpecAttr.SpecProof"]},{"className":"Inhabited","name":"Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecTheorem","typeNames":["Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem"]},{"className":"BEq","name":"Lean.Elab.Tactic.Do.SpecAttr.instBEqSpecTheorem","typeNames":["Lean.Elab.Tactic.Do.SpecAttr.SpecTheorem"]},{"className":"Inhabited","name":"Lean.Elab.Tactic.Do.SpecAttr.instInhabitedSpecTheorems","typeNames":["Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems"]}],"name":"Lean.Elab.Tactic.Do.Attr"}