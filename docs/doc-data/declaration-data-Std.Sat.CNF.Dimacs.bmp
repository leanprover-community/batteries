{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Dimacs.html#Std.Sat.CNF.dimacs\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">dimacs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cnf</span> : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">CNF</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"This function turns `cnf` into a DIMACS `String`.\n\nNote: This function will add `1` to all literal identifiers by default. This is because `0` is an\nillegal identifier in the DIMACS format and we can avoid producing invalid DIMACs like this.\n","docLink":"./Std/Sat/CNF/Dimacs.html#Std.Sat.CNF.dimacs","kind":"def","line":36,"name":"Std.Sat.CNF.dimacs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Sat/CNF/Dimacs.lean#L36-L54"}}],"imports":["Std.Sat.CNF.RelabelFin"],"instances":[],"name":"Std.Sat.CNF.Dimacs"}