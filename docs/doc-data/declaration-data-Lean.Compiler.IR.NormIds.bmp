{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.FnBody.replaceVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">replaceVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></div></div>","info":{"doc":"Replace `x` with `y` in `b`. This function assumes `b` does not shadow `x` ","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.FnBody.replaceVar","kind":"def","line":175,"name":"Lean.IR.FnBody.replaceVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L175-L177"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.FnBody.mapVars\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">mapVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a> → <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.FnBody.mapVars","kind":"def","line":172,"name":"Lean.IR.FnBody.mapVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L172-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.MapVars.mapFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MapVars</span>.<span class=\"name\">mapFnBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a> → <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.MapVars.mapFnBody","kind":"opaque","line":155,"name":"Lean.IR.MapVars.mapFnBody","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L155-L168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.MapVars.mapExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MapVars</span>.<span class=\"name\">mapExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a> → <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a> → <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.MapVars.mapExpr","kind":"def","line":140,"name":"Lean.IR.MapVars.mapExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L140-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.MapVars.mapArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MapVars</span>.<span class=\"name\">mapArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a> → <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.MapVars.mapArgs","kind":"def","line":137,"name":"Lean.IR.MapVars.mapArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L137-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.MapVars.mapArg\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MapVars</span>.<span class=\"name\">mapArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a> → <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a> → <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.MapVars.mapArg","kind":"def","line":133,"name":"Lean.IR.MapVars.mapArg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L133-L135"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.Decl.normalizeIds\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Decl</span>.<span class=\"name\">normalizeIds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></div></div>","info":{"doc":"Create a declaration equivalent to `d` s.t. `d.normalizeIds.uniqueIds == true` ","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.Decl.normalizeIds","kind":"def","line":125,"name":"Lean.IR.Decl.normalizeIds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L125-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">NormalizeIds</span>.<span class=\"name\">normDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.N\">N</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normDecl","kind":"def","line":118,"name":"Lean.IR.NormalizeIds.normDecl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L118-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">NormalizeIds</span>.<span class=\"name\">normFnBody</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.N\">N</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normFnBody","kind":"opaque","line":98,"name":"Lean.IR.NormalizeIds.normFnBody","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L98-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.instMonadLiftMN\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">NormalizeIds</span>.<span class=\"name\">instMonadLiftMN</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.M\">M</a> <a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.N\">N</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.instMonadLiftMN","kind":"instance","line":95,"name":"Lean.IR.NormalizeIds.instMonadLiftMN","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L95-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.withParams\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">NormalizeIds</span>.<span class=\"name\">withParams</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.N\">N</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.N\">N</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.withParams","kind":"def","line":88,"name":"Lean.IR.NormalizeIds.withParams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L88-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.withJP\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">NormalizeIds</span>.<span class=\"name\">withJP</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.N\">N</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.N\">N</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.withJP","kind":"def","line":84,"name":"Lean.IR.NormalizeIds.withJP","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L84-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.withVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">NormalizeIds</span>.<span class=\"name\">withVar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.N\">N</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.N\">N</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.withVar","kind":"def","line":80,"name":"Lean.IR.NormalizeIds.withVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L80-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.N\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">NormalizeIds</span>.<span class=\"name\">N</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.N","kind":"def","line":78,"name":"Lean.IR.NormalizeIds.N","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L78-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">NormalizeIds</span>.<span class=\"name\">normExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normExpr","kind":"def","line":63,"name":"Lean.IR.NormalizeIds.normExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L63-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">NormalizeIds</span>.<span class=\"name\">normArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.M\">M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normArgs","kind":"def","line":60,"name":"Lean.IR.NormalizeIds.normArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L60-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normArg\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">NormalizeIds</span>.<span class=\"name\">normArg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normArg","kind":"def","line":56,"name":"Lean.IR.NormalizeIds.normArg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L56-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normJP\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">NormalizeIds</span>.<span class=\"name\">normJP</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normJP","kind":"def","line":53,"name":"Lean.IR.NormalizeIds.normJP","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L53-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">NormalizeIds</span>.<span class=\"name\">normVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normVar","kind":"def","line":50,"name":"Lean.IR.NormalizeIds.normVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L50-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">NormalizeIds</span>.<span class=\"name\">normIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normIndex","kind":"def","line":45,"name":"Lean.IR.NormalizeIds.normIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L45-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.M\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">NormalizeIds</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.M","kind":"def","line":43,"name":"Lean.IR.NormalizeIds.M","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.Decl.uniqueIds\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Decl</span>.<span class=\"name\">uniqueIds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Return true if variable, parameter and join point ids are unique ","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.Decl.uniqueIds","kind":"def","line":37,"name":"Lean.IR.Decl.uniqueIds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L37-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.checkDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UniqueIds</span>.<span class=\"name\">checkDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.checkDecl","kind":"def","line":31,"name":"Lean.IR.UniqueIds.checkDecl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L31-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.checkFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UniqueIds</span>.<span class=\"name\">checkFnBody</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.checkFnBody","kind":"opaque","line":25,"name":"Lean.IR.UniqueIds.checkFnBody","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L25-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.checkParams\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UniqueIds</span>.<span class=\"name\">checkParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.checkParams","kind":"def","line":22,"name":"Lean.IR.UniqueIds.checkParams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L22-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.checkId\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UniqueIds</span>.<span class=\"name\">checkId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.checkId","kind":"def","line":17,"name":"Lean.IR.UniqueIds.checkId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L17-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.M\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UniqueIds</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.M","kind":"def","line":15,"name":"Lean.IR.UniqueIds.M","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/NormIds.lean#L15-L15"}}],"imports":["Lean.Compiler.IR.Basic"],"instances":[{"className":"MonadLift","name":"Lean.IR.NormalizeIds.instMonadLiftMN","typeNames":["Lean.IR.NormalizeIds.M","Lean.IR.NormalizeIds.N"]}],"name":"Lean.Compiler.IR.NormIds"}