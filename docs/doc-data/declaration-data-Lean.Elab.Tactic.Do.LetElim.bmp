{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.elimLets\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">elimLets</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvar</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elimTrivial</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.elimLets","kind":"def","line":161,"name":"Lean.Elab.Tactic.Do.elimLets","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L161-L181"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.elimLetsCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">elimLetsCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elimTrivial</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.elimLetsCore","kind":"def","line":148,"name":"Lean.Elab.Tactic.Do.elimLetsCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L148-L159"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.doNotDup\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">doNotDup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rhs</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elimTrivial</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.doNotDup","kind":"def","line":145,"name":"Lean.Elab.Tactic.Do.doNotDup","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L145-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.countUsesLCtx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">countUsesLCtx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">targetUses</span> : <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\">FVarUses</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">LocalContext</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.countUsesLCtx","kind":"def","line":131,"name":"Lean.Elab.Tactic.Do.countUsesLCtx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L131-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.countUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">countUses</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\">FVarUses</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.countUses","kind":"opaque","line":98,"name":"Lean.Elab.Tactic.Do.countUses","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L98-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.countUsesDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">countUsesDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bodyUses</span> : <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\">FVarUses</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\">FVarUses</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.countUsesDecl","kind":"opaque","line":87,"name":"Lean.Elab.Tactic.Do.countUsesDecl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L87-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.addMData\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">addMData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Expr.html#Lean.MData\">MData</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.addMData","kind":"def","line":73,"name":"Lean.Elab.Tactic.Do.addMData","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L73-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.over1Of2\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">over1Of2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\">α₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.over1Of2","kind":"def","line":71,"name":"Lean.Elab.Tactic.Do.over1Of2","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L71-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instAddBVarUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instAddBVarUses</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">numBVars</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> <span class=\"fn\">numBVars</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instAddBVarUses","kind":"instance","line":68,"name":"Lean.Elab.Tactic.Do.instAddBVarUses","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L68-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.add\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">BVarUses</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">numBVars</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> <span class=\"fn\">numBVars</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> <span class=\"fn\">numBVars</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.add","kind":"def","line":63,"name":"Lean.Elab.Tactic.Do.BVarUses.add","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L63-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.pop\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">BVarUses</span>.<span class=\"name\">pop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">numBVars</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> (<span class=\"fn\">numBVars</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> → <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> <span class=\"fn\">numBVars</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.pop","kind":"def","line":59,"name":"Lean.Elab.Tactic.Do.BVarUses.pop","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L59-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.single\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">BVarUses</span>.<span class=\"name\">single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">numBVars</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">numBVars</span>) <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#_auto._@.Lean.Elab.Tactic.Do.LetElim.747321661._hygCtx._hyg.5\">_auto✝</a></span> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> <span class=\"fn\">numBVars</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.single","kind":"def","line":55,"name":"Lean.Elab.Tactic.Do.BVarUses.single","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L55-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.some\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">BVarUses</span>.<span class=\"name\">some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">uses</span> : <span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.some","kind":"ctor","line":53,"name":"Lean.Elab.Tactic.Do.BVarUses.some","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.none\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">BVarUses</span>.<span class=\"name\">none</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.none","kind":"ctor","line":52,"name":"Lean.Elab.Tactic.Do.BVarUses.none","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">BVarUses</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses","kind":"inductive","line":51,"name":"Lean.Elab.Tactic.Do.BVarUses","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L51-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instAddFVarUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instAddFVarUses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\">FVarUses</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instAddFVarUses","kind":"instance","line":48,"name":"Lean.Elab.Tactic.Do.instAddFVarUses","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L48-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses.add\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">FVarUses</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\">FVarUses</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\">FVarUses</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses.add","kind":"def","line":43,"name":"Lean.Elab.Tactic.Do.FVarUses.add","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L43-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">FVarUses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses","kind":"def","line":41,"name":"Lean.Elab.Tactic.Do.FVarUses","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instAddUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instAddUses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instAddUses","kind":"instance","line":38,"name":"Lean.Elab.Tactic.Do.instAddUses","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L38-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.fromNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Uses</span>.<span class=\"name\">fromNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.fromNat","kind":"def","line":33,"name":"Lean.Elab.Tactic.Do.Uses.fromNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L33-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.toNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Uses</span>.<span class=\"name\">toNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.toNat","kind":"def","line":28,"name":"Lean.Elab.Tactic.Do.Uses.toNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L28-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.add\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Uses</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a> → <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a> → <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.add","kind":"def","line":23,"name":"Lean.Elab.Tactic.Do.Uses.add","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L23-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instInhabitedUses.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instInhabitedUses</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instInhabitedUses.default","kind":"def","line":21,"name":"Lean.Elab.Tactic.Do.instInhabitedUses.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instInhabitedUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instInhabitedUses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instInhabitedUses","kind":"instance","line":21,"name":"Lean.Elab.Tactic.Do.instInhabitedUses","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instOrdUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instOrdUses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instOrdUses","kind":"instance","line":21,"name":"Lean.Elab.Tactic.Do.instOrdUses","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instOrdUses.ord\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instOrdUses</span>.<span class=\"name\">ord</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a> → <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a> → <a href=\"./Init/Data/Ord/Basic.html#Ordering\">Ordering</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instOrdUses.ord","kind":"def","line":21,"name":"Lean.Elab.Tactic.Do.instOrdUses.ord","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instBEqUses.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instBEqUses</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a> → <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instBEqUses.beq","kind":"def","line":21,"name":"Lean.Elab.Tactic.Do.instBEqUses.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instBEqUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instBEqUses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instBEqUses","kind":"instance","line":21,"name":"Lean.Elab.Tactic.Do.instBEqUses","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.many\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Uses</span>.<span class=\"name\">many</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.many","kind":"ctor","line":20,"name":"Lean.Elab.Tactic.Do.Uses.many","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.one\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Uses</span>.<span class=\"name\">one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.one","kind":"ctor","line":19,"name":"Lean.Elab.Tactic.Do.Uses.one","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.zero\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Uses</span>.<span class=\"name\">zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.zero","kind":"ctor","line":18,"name":"Lean.Elab.Tactic.Do.Uses.zero","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Uses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses","kind":"inductive","line":17,"name":"Lean.Elab.Tactic.Do.Uses","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/LetElim.lean#L17-L21"}}],"imports":["Lean.Meta.Tactic.Simp"],"instances":[{"className":"BEq","name":"Lean.Elab.Tactic.Do.instBEqUses","typeNames":["Lean.Elab.Tactic.Do.Uses"]},{"className":"Ord","name":"Lean.Elab.Tactic.Do.instOrdUses","typeNames":["Lean.Elab.Tactic.Do.Uses"]},{"className":"Inhabited","name":"Lean.Elab.Tactic.Do.instInhabitedUses","typeNames":["Lean.Elab.Tactic.Do.Uses"]},{"className":"Add","name":"Lean.Elab.Tactic.Do.instAddUses","typeNames":["Lean.Elab.Tactic.Do.Uses"]},{"className":"Add","name":"Lean.Elab.Tactic.Do.instAddFVarUses","typeNames":["Lean.Elab.Tactic.Do.FVarUses"]},{"className":"Add","name":"Lean.Elab.Tactic.Do.instAddBVarUses","typeNames":["Lean.Elab.Tactic.Do.BVarUses"]}],"name":"Lean.Elab.Tactic.Do.LetElim"}