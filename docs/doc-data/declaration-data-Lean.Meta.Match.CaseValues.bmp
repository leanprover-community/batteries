{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.caseValues\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">caseValues</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">values</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hNamePrefix</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := <span class=\"fn\">`h</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">substNewEqs</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\">CaseValuesSubgoal</a>)</span></span></div></div>","info":{"doc":"Split goal `... |- C x` into values.size + 1 subgoals\n1) `..., (h_1 : x = value[0])  |- C value[0]`\n...\nn) `..., (h_n : x = value[n - 1])  |- C value[n - 1]`\nn+1) `..., (h_1 : x != value[0]) ... (h_n : x != value[n-1]) |- C x`\nwhere `n = values.size`\nwhere `fvarId` is `x`s id.\nThe type of `x` must have decidable equality.\n\nRemark: the last subgoal is for the \"else\" catchall case, and its `subst` is `{}`.\nRemark: the field `newHs` has size 1 forall but the last subgoal.\n\nIf `substNewEqs = true`, then the new `h_i` equality hypotheses are substituted in the first `n` cases.\n","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.caseValues","kind":"def","line":71,"name":"Lean.Meta.caseValues","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L71-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.instInhabitedCaseValuesSubgoal.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedCaseValuesSubgoal</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\">CaseValuesSubgoal</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.instInhabitedCaseValuesSubgoal.default","kind":"def","line":69,"name":"Lean.Meta.instInhabitedCaseValuesSubgoal.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.instInhabitedCaseValuesSubgoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedCaseValuesSubgoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\">CaseValuesSubgoal</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.instInhabitedCaseValuesSubgoal","kind":"instance","line":69,"name":"Lean.Meta.instInhabitedCaseValuesSubgoal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.subst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValuesSubgoal</span>.<span class=\"name\">subst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\">CaseValuesSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst\">FVarSubst</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.subst","kind":"def","line":68,"name":"Lean.Meta.CaseValuesSubgoal.subst","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.newHs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValuesSubgoal</span>.<span class=\"name\">newHs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\">CaseValuesSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.newHs","kind":"def","line":67,"name":"Lean.Meta.CaseValuesSubgoal.newHs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L67-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.mvarId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValuesSubgoal</span>.<span class=\"name\">mvarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\">CaseValuesSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.mvarId","kind":"def","line":66,"name":"Lean.Meta.CaseValuesSubgoal.mvarId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L66-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValuesSubgoal</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newHs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subst</span> : <a href=\"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst\">FVarSubst</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\">CaseValuesSubgoal</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.mk","kind":"ctor","line":65,"name":"Lean.Meta.CaseValuesSubgoal.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValuesSubgoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal","kind":"structure","line":65,"name":"Lean.Meta.CaseValuesSubgoal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L65-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.caseValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">caseValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> (<a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\">CaseValueSubgoal</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\">CaseValueSubgoal</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.caseValue","kind":"def","line":59,"name":"Lean.Meta.caseValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L59-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.instInhabitedCaseValueSubgoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedCaseValueSubgoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\">CaseValueSubgoal</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.instInhabitedCaseValueSubgoal","kind":"instance","line":20,"name":"Lean.Meta.instInhabitedCaseValueSubgoal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.instInhabitedCaseValueSubgoal.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedCaseValueSubgoal</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\">CaseValueSubgoal</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.instInhabitedCaseValueSubgoal.default","kind":"def","line":20,"name":"Lean.Meta.instInhabitedCaseValueSubgoal.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.subst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValueSubgoal</span>.<span class=\"name\">subst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\">CaseValueSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst\">FVarSubst</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.subst","kind":"def","line":19,"name":"Lean.Meta.CaseValueSubgoal.subst","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.newH\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValueSubgoal</span>.<span class=\"name\">newH</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\">CaseValueSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.newH","kind":"def","line":18,"name":"Lean.Meta.CaseValueSubgoal.newH","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.mvarId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValueSubgoal</span>.<span class=\"name\">mvarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\">CaseValueSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.mvarId","kind":"def","line":17,"name":"Lean.Meta.CaseValueSubgoal.mvarId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValueSubgoal</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newH</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subst</span> : <a href=\"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst\">FVarSubst</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\">CaseValueSubgoal</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.mk","kind":"ctor","line":16,"name":"Lean.Meta.CaseValueSubgoal.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L16-L16"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValueSubgoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal","kind":"structure","line":16,"name":"Lean.Meta.CaseValueSubgoal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Match/CaseValues.lean#L16-L20"}}],"imports":["Lean.Meta.Tactic.Subst","Lean.Meta.Match.Value"],"instances":[{"className":"Inhabited","name":"Lean.Meta.instInhabitedCaseValueSubgoal","typeNames":["Lean.Meta.CaseValueSubgoal"]},{"className":"Inhabited","name":"Lean.Meta.instInhabitedCaseValuesSubgoal","typeNames":["Lean.Meta.CaseValuesSubgoal"]}],"name":"Lean.Meta.Match.CaseValues"}