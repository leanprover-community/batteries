{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/ShortCircuit.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.shortCircuitPass\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">shortCircuitPass</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Pass\">Pass</a></div></div>","info":{"doc":"Responsible for applying short-circuit optimizations for `*`, e.g.,\ntranslating `x1 * y == x2 * y` to `!(!x1 == x2 && !x1 * y == x2 * y)`.\n","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/ShortCircuit.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.shortCircuitPass","kind":"def","line":26,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.shortCircuitPass","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/ShortCircuit.lean#L26-L58"}}],"imports":["Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Basic","Std.Tactic.BVDecide.Normalize.BitVec"],"instances":[],"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.ShortCircuit"}