{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hours</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>","info":{"doc":"Convert `Hour.Offset` into `Day.Offset`.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofHours","kind":"def","line":235,"name":"Std.Time.Day.Offset.ofHours","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L235-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a></div></div>","info":{"doc":"Convert `Day.Offset` into `Hour.Offset`.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toHours","kind":"def","line":228,"name":"Std.Time.Day.Offset.toHours","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L228-L233"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">minutes</span> : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>","info":{"doc":"Convert `Minute.Offset` into `Day.Offset`.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofMinutes","kind":"def","line":221,"name":"Std.Time.Day.Offset.ofMinutes","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L221-L226"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a></div></div>","info":{"doc":"Convert `Day.Offset` into `Minute.Offset`.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toMinutes","kind":"def","line":214,"name":"Std.Time.Day.Offset.toMinutes","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L214-L219"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">secs</span> : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>","info":{"doc":"Convert `Second.Offset` into `Day.Offset`.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofSeconds","kind":"def","line":207,"name":"Std.Time.Day.Offset.ofSeconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L207-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a></div></div>","info":{"doc":"Convert `Day.Offset` into `Second.Offset`.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toSeconds","kind":"def","line":200,"name":"Std.Time.Day.Offset.toSeconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L200-L205"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>","info":{"doc":"Convert `Millisecond.Offset` into `Day.Offset`.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofMilliseconds","kind":"def","line":193,"name":"Std.Time.Day.Offset.ofMilliseconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L193-L198"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a></div></div>","info":{"doc":"Convert `Day.Offset` into `Millisecond.Offset`.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toMilliseconds","kind":"def","line":186,"name":"Std.Time.Day.Offset.toMilliseconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L186-L191"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ns</span> : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>","info":{"doc":"Convert `Nanosecond.Offset` into `Day.Offset`.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofNanoseconds","kind":"def","line":179,"name":"Std.Time.Day.Offset.ofNanoseconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L179-L184"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a></div></div>","info":{"doc":"Convert `Day.Offset` into `Nanosecond.Offset`.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toNanoseconds","kind":"def","line":172,"name":"Std.Time.Day.Offset.toNanoseconds","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L172-L177"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>","info":{"doc":"Creates an `Offset` from an integer.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofInt","kind":"def","line":165,"name":"Std.Time.Day.Offset.ofInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L165-L170"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>","info":{"doc":"Creates an `Offset` from a natural number.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofNat","kind":"def","line":158,"name":"Std.Time.Day.Offset.ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L158-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toOrdinal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">off</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">off</span>.<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val\">val</a></span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">off</span>.<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val\">val</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">31</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></div></div>","info":{"doc":"Converts an `Offset` to an `Ordinal`.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toOrdinal","kind":"def","line":151,"name":"Std.Time.Day.Offset.toOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L151-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear.toOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">OfYear</span>.<span class=\"name\">toOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ofYear</span> : <span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>","info":{"doc":"Converts an `OfYear` ordinal to a `Offset`.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear.toOffset","kind":"def","line":140,"name":"Std.Time.Day.Ordinal.OfYear.toOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L140-L144"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.toOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toOffset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ordinal</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>","info":{"doc":"Converts an `Ordinal` to an `Offset`.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.toOffset","kind":"def","line":131,"name":"Std.Time.Day.Ordinal.toOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L131-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofFin\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">32</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></div></div>","info":{"doc":"Creates an ordinal from a `Fin` value, ensuring it is within the valid range for days of the month (1 to 31).\nIf the `Fin` value is 0, it is converted to 1.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofFin","kind":"def","line":123,"name":"Std.Time.Day.Ordinal.ofFin","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L123-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">31</span> := by decide)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></div></div>","info":{"doc":"Creates an ordinal from a natural number, ensuring the number is within the valid range\nfor days of a month (1 to 31).\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofNat","kind":"def","line":115,"name":"Std.Time.Day.Ordinal.ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L115-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instInhabitedOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instInhabitedOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instInhabitedOfYear","kind":"instance","line":110,"name":"Std.Time.Day.Ordinal.instInhabitedOfYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L110-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instOfNatOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instOfNatOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instOfNatOfYear","kind":"instance","line":105,"name":"Std.Time.Day.Ordinal.instOfNatOfYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L105-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">OfYear</span>.<span class=\"name\">ofNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">leap</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">366</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">365</span> := by decide)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span></span></div></div>","info":{"doc":"Creates an ordinal for a specific day within the year, ensuring that the provided day (`data`)\nis within the valid range for the year, which can be 1 to 365 or 366 for leap years.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear.ofNat","kind":"def","line":95,"name":"Std.Time.Day.Ordinal.OfYear.ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L95-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instLawfulEqOrdOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instLawfulEqOrdOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instLawfulEqOrdOfYear","kind":"instance","line":91,"name":"Std.Time.Day.Ordinal.instLawfulEqOrdOfYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L91-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instTransOrdOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instTransOrdOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instTransOrdOfYear","kind":"instance","line":89,"name":"Std.Time.Day.Ordinal.instTransOrdOfYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L89-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instOrdOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instOrdOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instOrdOfYear","kind":"instance","line":87,"name":"Std.Time.Day.Ordinal.instOrdOfYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L87-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instDecidableEqOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instDecidableEqOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instDecidableEqOfYear","kind":"instance","line":85,"name":"Std.Time.Day.Ordinal.instDecidableEqOfYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instToStringOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instToStringOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instToStringOfYear","kind":"instance","line":82,"name":"Std.Time.Day.Ordinal.instToStringOfYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L82-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instReprOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instReprOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instReprOfYear","kind":"instance","line":79,"name":"Std.Time.Day.Ordinal.instReprOfYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L79-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">OfYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`OfYear` represents the day ordinal within a year, which can be bounded between 1 and 365 or 366,\ndepending on whether it's a leap year.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear","kind":"def","line":73,"name":"Std.Time.Day.Ordinal.OfYear","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L73-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">31</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></div></div>","info":{"doc":"Creates an `Ordinal` from an integer, ensuring the value is within bounds.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofInt","kind":"def","line":66,"name":"Std.Time.Day.Ordinal.ofInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L66-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLawfulEqOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instLawfulEqOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLawfulEqOrdOffset","kind":"instance","line":62,"name":"Std.Time.Day.instLawfulEqOrdOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instTransOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instTransOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instTransOrdOffset","kind":"instance","line":60,"name":"Std.Time.Day.instTransOrdOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdOffset","kind":"instance","line":58,"name":"Std.Time.Day.instOrdOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLtOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instDecidableLtOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLtOffset","kind":"instance","line":55,"name":"Std.Time.Day.instDecidableLtOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L55-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLeOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instDecidableLeOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLeOffset","kind":"instance","line":52,"name":"Std.Time.Day.instDecidableLeOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L52-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOfNatOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOfNatOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOfNatOffset","kind":"instance","line":50,"name":"Std.Time.Day.instOfNatOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instToStringOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instToStringOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instToStringOffset","kind":"instance","line":48,"name":"Std.Time.Day.instToStringOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLTOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instLTOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLTOffset","kind":"instance","line":48,"name":"Std.Time.Day.instLTOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLEOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instLEOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLEOffset","kind":"instance","line":48,"name":"Std.Time.Day.instLEOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instNegOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instNegOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instNegOffset","kind":"instance","line":48,"name":"Std.Time.Day.instNegOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instSubOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instSubOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instSubOffset","kind":"instance","line":48,"name":"Std.Time.Day.instSubOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instAddOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instAddOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instAddOffset","kind":"instance","line":48,"name":"Std.Time.Day.instAddOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instInhabitedOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instInhabitedOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instInhabitedOffset","kind":"instance","line":48,"name":"Std.Time.Day.instInhabitedOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableEqOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instDecidableEqOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableEqOffset","kind":"instance","line":48,"name":"Std.Time.Day.instDecidableEqOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instReprOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instReprOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instReprOffset","kind":"instance","line":48,"name":"Std.Time.Day.instReprOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`Offset` represents an offset in days. It is defined as an `Int` with a base unit of 86400\n(the number of seconds in a day).\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset","kind":"def","line":43,"name":"Std.Time.Day.Offset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L43-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLawfulEqOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instLawfulEqOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLawfulEqOrdOrdinal","kind":"instance","line":41,"name":"Std.Time.Day.instLawfulEqOrdOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instTransOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instTransOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instTransOrdOrdinal","kind":"instance","line":39,"name":"Std.Time.Day.instTransOrdOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdOrdinal","kind":"instance","line":37,"name":"Std.Time.Day.instOrdOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instInhabitedOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instInhabitedOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instInhabitedOrdinal","kind":"instance","line":35,"name":"Std.Time.Day.instInhabitedOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLtOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instDecidableLtOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLtOrdinal","kind":"instance","line":32,"name":"Std.Time.Day.instDecidableLtOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L32-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLeOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instDecidableLeOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLeOrdinal","kind":"instance","line":29,"name":"Std.Time.Day.instDecidableLeOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L29-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOfNatOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOfNatOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOfNatOrdinal","kind":"instance","line":26,"name":"Std.Time.Day.instOfNatOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L26-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLTOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instLTOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLTOrdinal","kind":"instance","line":24,"name":"Std.Time.Day.instLTOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLEOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instLEOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLEOrdinal","kind":"instance","line":24,"name":"Std.Time.Day.instLEOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableEqOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instDecidableEqOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableEqOrdinal","kind":"instance","line":24,"name":"Std.Time.Day.instDecidableEqOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instReprOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instReprOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instReprOrdinal","kind":"instance","line":24,"name":"Std.Time.Day.instReprOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`Ordinal` represents a bounded value for days, which ranges between 1 and 31.\n","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal","kind":"def","line":20,"name":"Std.Time.Day.Ordinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Day.lean#L20-L24"}}],"imports":["Std.Time.Time"],"instances":[{"className":"Repr","name":"Std.Time.Day.instReprOrdinal","typeNames":["Std.Time.Day.Ordinal"]},{"className":"Decidable","name":"Std.Time.Day.instDecidableEqOrdinal","typeNames":["Eq"]},{"className":"LE","name":"Std.Time.Day.instLEOrdinal","typeNames":["Std.Time.Day.Ordinal"]},{"className":"LT","name":"Std.Time.Day.instLTOrdinal","typeNames":["Std.Time.Day.Ordinal"]},{"className":"OfNat","name":"Std.Time.Day.instOfNatOrdinal","typeNames":["Std.Time.Day.Ordinal"]},{"className":"Decidable","name":"Std.Time.Day.instDecidableLeOrdinal","typeNames":["LE.le"]},{"className":"Decidable","name":"Std.Time.Day.instDecidableLtOrdinal","typeNames":["LT.lt"]},{"className":"Inhabited","name":"Std.Time.Day.instInhabitedOrdinal","typeNames":["Std.Time.Day.Ordinal"]},{"className":"Ord","name":"Std.Time.Day.instOrdOrdinal","typeNames":["Std.Time.Day.Ordinal"]},{"className":"Std.TransCmp","name":"Std.Time.Day.instTransOrdOrdinal","typeNames":["Std.Time.Day.Ordinal"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.Day.instLawfulEqOrdOrdinal","typeNames":["Std.Time.Day.Ordinal"]},{"className":"Repr","name":"Std.Time.Day.instReprOffset","typeNames":["Std.Time.Day.Offset"]},{"className":"Decidable","name":"Std.Time.Day.instDecidableEqOffset","typeNames":["Eq"]},{"className":"Inhabited","name":"Std.Time.Day.instInhabitedOffset","typeNames":["Std.Time.Day.Offset"]},{"className":"Add","name":"Std.Time.Day.instAddOffset","typeNames":["Std.Time.Day.Offset"]},{"className":"Sub","name":"Std.Time.Day.instSubOffset","typeNames":["Std.Time.Day.Offset"]},{"className":"Neg","name":"Std.Time.Day.instNegOffset","typeNames":["Std.Time.Day.Offset"]},{"className":"LE","name":"Std.Time.Day.instLEOffset","typeNames":["Std.Time.Day.Offset"]},{"className":"LT","name":"Std.Time.Day.instLTOffset","typeNames":["Std.Time.Day.Offset"]},{"className":"ToString","name":"Std.Time.Day.instToStringOffset","typeNames":["Std.Time.Day.Offset"]},{"className":"OfNat","name":"Std.Time.Day.instOfNatOffset","typeNames":["Std.Time.Day.Offset"]},{"className":"Decidable","name":"Std.Time.Day.instDecidableLeOffset","typeNames":["LE.le"]},{"className":"Decidable","name":"Std.Time.Day.instDecidableLtOffset","typeNames":["LT.lt"]},{"className":"Ord","name":"Std.Time.Day.instOrdOffset","typeNames":["Std.Time.Day.Offset"]},{"className":"Std.TransCmp","name":"Std.Time.Day.instTransOrdOffset","typeNames":["Std.Time.Day.Offset"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.Day.instLawfulEqOrdOffset","typeNames":["Std.Time.Day.Offset"]},{"className":"Repr","name":"Std.Time.Day.Ordinal.instReprOfYear","typeNames":["Std.Time.Day.Ordinal.OfYear"]},{"className":"ToString","name":"Std.Time.Day.Ordinal.instToStringOfYear","typeNames":["Std.Time.Day.Ordinal.OfYear"]},{"className":"Decidable","name":"Std.Time.Day.Ordinal.instDecidableEqOfYear","typeNames":["Eq"]},{"className":"Ord","name":"Std.Time.Day.Ordinal.instOrdOfYear","typeNames":["Std.Time.Day.Ordinal.OfYear"]},{"className":"Std.TransCmp","name":"Std.Time.Day.Ordinal.instTransOrdOfYear","typeNames":["Std.Time.Day.Ordinal.OfYear"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.Day.Ordinal.instLawfulEqOrdOfYear","typeNames":["Std.Time.Day.Ordinal.OfYear"]},{"className":"OfNat","name":"Std.Time.Day.Ordinal.instOfNatOfYear","typeNames":["Std.Time.Day.Ordinal.OfYear"]},{"className":"Inhabited","name":"Std.Time.Day.Ordinal.instInhabitedOfYear","typeNames":["Std.Time.Day.Ordinal.OfYear"]}],"name":"Std.Time.Date.Unit.Day"}