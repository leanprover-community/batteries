{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Float.html#ISize.toFloat\"><span class=\"name\">ISize</span>.<span class=\"name\">toFloat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>","info":{"doc":"Obtains a `Float` whose value is near the given `ISize`.\n\nIt will be exactly the value of the given `ISize` if such a `Float` exists. If no such `Float`\nexists, the returned value will either be the smallest `Float` that is larger than the given value,\nor the largest `Float` that is smaller than the given value.\n\nThis function does not reduce in the kernel.\n","docLink":"./Init/Data/SInt/Float.html#ISize.toFloat","kind":"opaque","line":100,"name":"ISize.toFloat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/SInt/Float.lean#L100-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Float.html#Int64.toFloat\"><span class=\"name\">Int64</span>.<span class=\"name\">toFloat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>","info":{"doc":"Obtains a `Float` whose value is near the given `Int64`.\n\nIt will be exactly the value of the given `Int64` if such a `Float` exists. If no such `Float`\nexists, the returned value will either be the smallest `Float` that is larger than the given value,\nor the largest `Float` that is smaller than the given value.\n\n\nThis function does not reduce in the kernel.\n","docLink":"./Init/Data/SInt/Float.html#Int64.toFloat","kind":"opaque","line":89,"name":"Int64.toFloat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/SInt/Float.lean#L89-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Float.html#Int32.toFloat\"><span class=\"name\">Int32</span>.<span class=\"name\">toFloat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>","info":{"doc":"Obtains the `Float` whose value is the same as the given `Int32`.\n\nThis function does not reduce in the kernel.\n","docLink":"./Init/Data/SInt/Float.html#Int32.toFloat","kind":"opaque","line":83,"name":"Int32.toFloat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/SInt/Float.lean#L83-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Float.html#Int16.toFloat\"><span class=\"name\">Int16</span>.<span class=\"name\">toFloat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>","info":{"doc":"Obtains the `Float` whose value is the same as the given `Int16`.\n\nThis function does not reduce in the kernel.\n","docLink":"./Init/Data/SInt/Float.html#Int16.toFloat","kind":"opaque","line":77,"name":"Int16.toFloat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/SInt/Float.lean#L77-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Float.html#Int8.toFloat\"><span class=\"name\">Int8</span>.<span class=\"name\">toFloat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>","info":{"doc":"Obtains the `Float` whose value is the same as the given `Int8`.\n\nThis function does not reduce in the kernel.\n","docLink":"./Init/Data/SInt/Float.html#Int8.toFloat","kind":"opaque","line":71,"name":"Int8.toFloat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/SInt/Float.lean#L71-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Float.html#Float.toISize\"><span class=\"name\">Float</span>.<span class=\"name\">toISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>","info":{"doc":"Truncates a floating-point number to the nearest word-sized signed integer, rounding towards zero.\n\nIf the `Float` is larger than the maximum value for `ISize` (including `Inf`), returns the maximum\nvalue of `ISize` (i.e. `ISize.maxValue`). If it is smaller than the minimum value for `ISize`\n(including `-Inf`), returns the minimum value of `ISize` (i.e. `ISize.minValue`). If it is `NaN`,\nreturns `0`.\n\nThis function does not reduce in the kernel.\n","docLink":"./Init/Data/SInt/Float.html#Float.toISize","kind":"opaque","line":59,"name":"Float.toISize","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/SInt/Float.lean#L59-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Float.html#Float.toInt64\"><span class=\"name\">Float</span>.<span class=\"name\">toInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>","info":{"doc":"Truncates a floating-point number to the nearest 64-bit signed integer, rounding towards zero.\n\nIf the `Float` is larger than the maximum value for `Int64` (including `Inf`), returns the maximum\nvalue of `Int64` (i.e. `Int64.maxValue`). If it is smaller than the minimum value for `Int64`\n(including `-Inf`), returns the minimum value of `Int64` (i.e. `Int64.minValue`). If it is `NaN`,\nreturns `0`.\n\nThis function does not reduce in the kernel.\n","docLink":"./Init/Data/SInt/Float.html#Float.toInt64","kind":"opaque","line":48,"name":"Float.toInt64","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/SInt/Float.lean#L48-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Float.html#Float.toInt32\"><span class=\"name\">Float</span>.<span class=\"name\">toInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>","info":{"doc":"Truncates a floating-point number to the nearest 32-bit signed integer, rounding towards zero.\n\nIf the `Float` is larger than the maximum value for `Int32` (including `Inf`), returns the maximum\nvalue of `Int32` (i.e. `Int32.maxValue`). If it is smaller than the minimum value for `Int32`\n(including `-Inf`), returns the minimum value of `Int32` (i.e. `Int32.minValue`). If it is `NaN`,\nreturns `0`.\n\nThis function does not reduce in the kernel.\n","docLink":"./Init/Data/SInt/Float.html#Float.toInt32","kind":"opaque","line":37,"name":"Float.toInt32","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/SInt/Float.lean#L37-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Float.html#Float.toInt16\"><span class=\"name\">Float</span>.<span class=\"name\">toInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>","info":{"doc":"Truncates a floating-point number to the nearest 16-bit signed integer, rounding towards zero.\n\nIf the `Float` is larger than the maximum value for `Int16` (including `Inf`), returns the maximum\nvalue of `Int16` (i.e. `Int16.maxValue`). If it is smaller than the minimum value for `Int16`\n(including `-Inf`), returns the minimum value of `Int16` (i.e. `Int16.minValue`). If it is `NaN`,\nreturns `0`.\n\nThis function does not reduce in the kernel.\n","docLink":"./Init/Data/SInt/Float.html#Float.toInt16","kind":"opaque","line":26,"name":"Float.toInt16","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/SInt/Float.lean#L26-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Float.html#Float.toInt8\"><span class=\"name\">Float</span>.<span class=\"name\">toInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>","info":{"doc":"Truncates a floating-point number to the nearest 8-bit signed integer, rounding towards zero.\n\nIf the `Float` is larger than the maximum value for `Int8` (including `Inf`), returns the maximum value of\n`Int8` (i.e. `Int8.maxValue`). If it is smaller than the minimum value for `Int8` (including `-Inf`),\nreturns the minimum value of `Int8` (i.e. `Int8.minValue`). If it is `NaN`, returns `0`.\n\nThis function does not reduce in the kernel.\n","docLink":"./Init/Data/SInt/Float.html#Float.toInt8","kind":"opaque","line":16,"name":"Float.toInt8","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/SInt/Float.lean#L16-L25"}}],"imports":["Init.Data.Float","Init.Data.SInt.Basic"],"instances":[],"name":"Init.Data.SInt.Float"}