{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolNotDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBoolNotDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"`Bool` version of `propagateNotDown` ","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolNotDown","kind":"def","line":392,"name":"Lean.Meta.Grind.propagateBoolNotDown","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L392-L400"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolNotUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBoolNotUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"`Bool` version of `propagateNotUp` ","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolNotUp","kind":"def","line":382,"name":"Lean.Meta.Grind.propagateBoolNotUp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L382-L390"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolOrDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBoolOrDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"`Bool` version of `propagateOrDown` ","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolOrDown","kind":"def","line":374,"name":"Lean.Meta.Grind.propagateBoolOrDown","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L374-L380"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolOrUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBoolOrUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"`Bool` version of `propagateOrUp` ","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolOrUp","kind":"def","line":362,"name":"Lean.Meta.Grind.propagateBoolOrUp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L362-L372"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolAndDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBoolAndDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"`Bool` version of `propagateAndDown` ","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolAndDown","kind":"def","line":354,"name":"Lean.Meta.Grind.propagateBoolAndDown","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L354-L360"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolAndUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBoolAndUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"`Bool` version of `propagateAndUp` ","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolAndUp","kind":"def","line":342,"name":"Lean.Meta.Grind.propagateBoolAndUp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L342-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateDecideUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateDecideUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateDecideUp","kind":"def","line":335,"name":"Lean.Meta.Grind.propagateDecideUp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L335-L340"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateDecideDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateDecideDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateDecideDown","kind":"def","line":326,"name":"Lean.Meta.Grind.propagateDecideDown","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L326-L333"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateDIte\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateDIte</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"Propagates `dite` upwards ","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateDIte","kind":"def","line":300,"name":"Lean.Meta.Grind.propagateDIte","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L300-L324"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateIte\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateIte</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"Propagates `ite` upwards ","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateIte","kind":"def","line":282,"name":"Lean.Meta.Grind.propagateIte","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L282-L298"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateHEqUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateHEqUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"Propagates `HEq` upwards ","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateHEqUp","kind":"def","line":252,"name":"Lean.Meta.Grind.propagateHEqUp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L252-L256"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateHEqDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateHEqDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"Propagates `HEq` downwards ","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateHEqDown","kind":"def","line":246,"name":"Lean.Meta.Grind.propagateHEqDown","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L246-L250"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateEqMatchDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateEqMatchDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"Propagates `EqMatch` downwards ","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateEqMatchDown","kind":"def","line":239,"name":"Lean.Meta.Grind.propagateEqMatchDown","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L239-L244"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBEqDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBEqDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBEqDown","kind":"def","line":226,"name":"Lean.Meta.Grind.propagateBEqDown","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L226-L237"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBEqUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBEqUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBEqUp","kind":"def","line":210,"name":"Lean.Meta.Grind.propagateBEqUp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L210-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateEqDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateEqDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"Propagates `Eq` downwards ","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateEqDown","kind":"def","line":171,"name":"Lean.Meta.Grind.propagateEqDown","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L171-L192"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateEqUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateEqUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"Propagates `Eq` upwards ","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateEqUp","kind":"def","line":134,"name":"Lean.Meta.Grind.propagateEqUp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L134-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolDiseq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBoolDiseq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eq </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolDiseq","kind":"def","line":122,"name":"Lean.Meta.Grind.propagateBoolDiseq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L122-L132"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateNotDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateNotDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"Propagates truth values downwards for a negation expression `Not a` based on the truth value of `Not a`.\nThis function performs the following:\n\n- If `(Not a) = False`, propagates `a = True`.\n- If `(Not a) = True`, propagates `a = False`.\n","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateNotDown","kind":"def","line":106,"name":"Lean.Meta.Grind.propagateNotDown","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L106-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateNotUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateNotUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"Propagates equalities for a negation `Not a` based on the truth value of `a`.\nThis function checks the truth value of `a` and propagates the following equalities:\n\n- If `a = False`, propagates `(Not a) = True`.\n- If `a = True`, propagates `(Not a) = False`.\n","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateNotUp","kind":"def","line":88,"name":"Lean.Meta.Grind.propagateNotUp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L88-L104"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateOrDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateOrDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"Propagates truth values downwards for a disjunction `a ∨ b` when the\nexpression itself is known to be `False`.\n","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateOrDown","kind":"def","line":77,"name":"Lean.Meta.Grind.propagateOrDown","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L77-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateOrUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateOrUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"Propagates equalities for a disjunction `a ∨ b` based on the truth values\nof its components `a` and `b`. This function checks the truth value of `a` and `b`,\nand propagates the following equalities:\n\n- If `a = False`, propagates `(a ∨ b) = b`.\n- If `b = False`, propagates `(a ∨ b) = a`.\n- If `a = True`, propagates `(a ∨ b) = True`.\n- If `b = True`, propagates `(a ∨ b) = True`.\n","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateOrUp","kind":"def","line":52,"name":"Lean.Meta.Grind.propagateOrUp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L52-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateAndDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateAndDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"Propagates truth values downwards for a conjunction `a ∧ b` when the\nexpression itself is known to be `True`.\n","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateAndDown","kind":"def","line":41,"name":"Lean.Meta.Grind.propagateAndDown","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L41-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateAndUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateAndUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>","info":{"doc":"Propagates equalities for a conjunction `a ∧ b` based on the truth values\nof its components `a` and `b`. This function checks the truth value of `a` and `b`,\nand propagates the following equalities:\n\n- If `a = True`, propagates `(a ∧ b) = b`.\n- If `b = True`, propagates `(a ∧ b) = a`.\n- If `a = False`, propagates `(a ∧ b) = False`.\n- If `b = False`, propagates `(a ∧ b) = False`.\n","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateAndUp","kind":"def","line":16,"name":"Lean.Meta.Grind.propagateAndUp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Propagate.lean#L16-L39"}}],"imports":["Lean.Meta.Tactic.Grind.Types","Init.Grind","Lean.Meta.Tactic.Grind.PropagatorAttr","Lean.Meta.Tactic.Grind.Simp","Lean.Meta.Tactic.Grind.Ext","Lean.Meta.Tactic.Grind.Diseq"],"instances":[],"name":"Lean.Meta.Tactic.Grind.Propagate"}