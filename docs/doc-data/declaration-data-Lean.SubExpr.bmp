{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.Expr.traverseAppWithPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">traverseAppWithPos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">visit</span> : <span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">SubExpr.Pos</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"Same as `Expr.traverseApp` but also includes a\n`SubExpr.Pos` argument for tracking subexpression position. ","docLink":"./Lean/SubExpr.html#Lean.Expr.traverseAppWithPos","kind":"def","line":215,"name":"Lean.Expr.traverseAppWithPos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L215-L223"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instToJsonGoalsLocation\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instToJsonGoalsLocation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">GoalsLocation</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instToJsonGoalsLocation","kind":"instance","line":210,"name":"Lean.SubExpr.instToJsonGoalsLocation","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L210-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instToJsonGoalsLocation.toJson\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instToJsonGoalsLocation</span>.<span class=\"name\">toJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">GoalsLocation</a> → <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instToJsonGoalsLocation.toJson","kind":"def","line":210,"name":"Lean.SubExpr.instToJsonGoalsLocation.toJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L210-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonGoalsLocation.fromJson\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instFromJsonGoalsLocation</span>.<span class=\"name\">fromJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">GoalsLocation</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonGoalsLocation.fromJson","kind":"def","line":210,"name":"Lean.SubExpr.instFromJsonGoalsLocation.fromJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L210-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonGoalsLocation\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instFromJsonGoalsLocation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">GoalsLocation</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonGoalsLocation","kind":"instance","line":210,"name":"Lean.SubExpr.instFromJsonGoalsLocation","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L210-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation.loc\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalsLocation</span>.<span class=\"name\">loc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">GoalsLocation</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">GoalLocation</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation.loc","kind":"def","line":209,"name":"Lean.SubExpr.GoalsLocation.loc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L209-L209"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation.mvarId\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalsLocation</span>.<span class=\"name\">mvarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">GoalsLocation</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></div></div>","info":{"doc":"Which goal the location is in. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation.mvarId","kind":"def","line":208,"name":"Lean.SubExpr.GoalsLocation.mvarId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L208-L208"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalsLocation</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">loc</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">GoalLocation</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">GoalsLocation</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation.mk","kind":"ctor","line":206,"name":"Lean.SubExpr.GoalsLocation.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L206-L206"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalsLocation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A location within a goal state. It identifies a specific goal together with a `GoalLocation`\nwithin it. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation","kind":"structure","line":204,"name":"Lean.SubExpr.GoalsLocation","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L204-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instToJsonGoalLocation.toJson\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instToJsonGoalLocation</span>.<span class=\"name\">toJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">GoalLocation</a> → <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instToJsonGoalLocation.toJson","kind":"def","line":202,"name":"Lean.SubExpr.instToJsonGoalLocation.toJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L202-L202"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instToJsonGoalLocation\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instToJsonGoalLocation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">GoalLocation</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instToJsonGoalLocation","kind":"instance","line":202,"name":"Lean.SubExpr.instToJsonGoalLocation","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L202-L202"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonGoalLocation\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instFromJsonGoalLocation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">GoalLocation</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonGoalLocation","kind":"instance","line":202,"name":"Lean.SubExpr.instFromJsonGoalLocation","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L202-L202"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonGoalLocation.fromJson\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instFromJsonGoalLocation</span>.<span class=\"name\">fromJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">GoalLocation</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonGoalLocation.fromJson","kind":"def","line":202,"name":"Lean.SubExpr.instFromJsonGoalLocation.fromJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L202-L202"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.target\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalLocation</span>.<span class=\"name\">target</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">GoalLocation</a></span></div></div>","info":{"doc":"A subexpression of the goal type. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.target","kind":"ctor","line":200,"name":"Lean.SubExpr.GoalLocation.target","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L200-L201"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.hypValue\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalLocation</span>.<span class=\"name\">hypValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> → <span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">GoalLocation</a></span></span></div></div>","info":{"doc":"A subexpression of the value of one of the let-bound hypotheses. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.hypValue","kind":"ctor","line":198,"name":"Lean.SubExpr.GoalLocation.hypValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L198-L199"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.hypType\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalLocation</span>.<span class=\"name\">hypType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> → <span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">GoalLocation</a></span></span></div></div>","info":{"doc":"A subexpression of the type of one of the hypotheses. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.hypType","kind":"ctor","line":196,"name":"Lean.SubExpr.GoalLocation.hypType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L196-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.hyp\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalLocation</span>.<span class=\"name\">hyp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">GoalLocation</a></span></div></div>","info":{"doc":"One of the hypotheses. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.hyp","kind":"ctor","line":194,"name":"Lean.SubExpr.GoalLocation.hyp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L194-L195"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalLocation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A location within a goal. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation","kind":"inductive","line":192,"name":"Lean.SubExpr.GoalLocation","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L192-L202"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonMVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instFromJsonMVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonMVarId","kind":"instance","line":190,"name":"Lean.SubExpr.instFromJsonMVarId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L190-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonFVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instFromJsonFVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonFVarId","kind":"instance","line":189,"name":"Lean.SubExpr.instFromJsonFVarId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L189-L189"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instToJsonMVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instToJsonMVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instToJsonMVarId","kind":"instance","line":188,"name":"Lean.SubExpr.instToJsonMVarId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L188-L188"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instToJsonFVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instToJsonFVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instToJsonFVarId","kind":"instance","line":187,"name":"Lean.SubExpr.instToJsonFVarId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L187-L187"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.bindingDomain!\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">bindingDomain!</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr\">SubExpr</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr\">SubExpr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.bindingDomain!","kind":"def","line":182,"name":"Lean.SubExpr.bindingDomain!","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L182-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.bindingBody!\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">bindingBody!</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr\">SubExpr</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr\">SubExpr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.bindingBody!","kind":"def","line":177,"name":"Lean.SubExpr.bindingBody!","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L177-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.PosMap\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">PosMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"Map from subexpr positions to values. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.PosMap","kind":"def","line":174,"name":"Lean.SubExpr.PosMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L174-L175"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.isRoot\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">isRoot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr\">SubExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Returns true if the selected subexpression is the topmost one. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.isRoot","kind":"def","line":171,"name":"Lean.SubExpr.isRoot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L171-L172"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.mkRoot\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">mkRoot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr\">SubExpr</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.mkRoot","kind":"def","line":169,"name":"Lean.SubExpr.mkRoot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L169-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.instInhabitedSubExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedSubExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr\">SubExpr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.instInhabitedSubExpr","kind":"instance","line":165,"name":"Lean.instInhabitedSubExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L165-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.instInhabitedSubExpr.default\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedSubExpr</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr\">SubExpr</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.instInhabitedSubExpr.default","kind":"def","line":165,"name":"Lean.instInhabitedSubExpr.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L165-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.pos\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr\">SubExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"The position of the subexpression within the root expression. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.pos","kind":"def","line":164,"name":"Lean.SubExpr.pos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L164-L164"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.expr\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr\">SubExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"The subexpression. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.expr","kind":"def","line":162,"name":"Lean.SubExpr.expr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L162-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr\">SubExpr</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.mk","kind":"ctor","line":160,"name":"Lean.SubExpr.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L160-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A subexpression of some root expression. Both its value and its position\nwithin the root are stored. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr","kind":"structure","line":158,"name":"Lean.SubExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L158-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instFromJson\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instFromJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instFromJson","kind":"instance","line":154,"name":"Lean.SubExpr.Pos.instFromJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L154-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instToJson\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instToJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instToJson","kind":"instance","line":153,"name":"Lean.SubExpr.Pos.instToJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L153-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instRepr\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instRepr","kind":"instance","line":147,"name":"Lean.SubExpr.Pos.instRepr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L147-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instEmptyCollection\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instEmptyCollection","kind":"instance","line":146,"name":"Lean.SubExpr.Pos.instEmptyCollection","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L146-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instToString\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instToString","kind":"instance","line":145,"name":"Lean.SubExpr.Pos.instToString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L145-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instDecidableEq\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instDecidableEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instDecidableEq","kind":"instance","line":144,"name":"Lean.SubExpr.Pos.instDecidableEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L144-L144"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instOrd\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instOrd","kind":"instance","line":143,"name":"Lean.SubExpr.Pos.instOrd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L143-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.fromString!\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">fromString!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.fromString!","kind":"def","line":138,"name":"Lean.SubExpr.Pos.fromString!","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L138-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.fromString?\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">fromString?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.fromString?","kind":"def","line":131,"name":"Lean.SubExpr.Pos.fromString?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L131-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.toString\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.toString","kind":"def","line":119,"name":"Lean.SubExpr.Pos.toString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L119-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNthBindingBody\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushNthBindingBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numBinders</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNthBindingBody","kind":"def","line":115,"name":"Lean.SubExpr.Pos.pushNthBindingBody","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L115-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNthBindingDomain\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushNthBindingDomain</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">binderIdx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNthBindingDomain","kind":"def","line":111,"name":"Lean.SubExpr.Pos.pushNthBindingDomain","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L111-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNaryArg\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushNaryArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numArgs </span><span class=\"fn\">argIdx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNaryArg","kind":"def","line":108,"name":"Lean.SubExpr.Pos.pushNaryArg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L108-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNaryFn\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushNaryFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numArgs</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNaryFn","kind":"def","line":105,"name":"Lean.SubExpr.Pos.pushNaryFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L105-L106"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushType\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushType","kind":"def","line":103,"name":"Lean.SubExpr.Pos.pushType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L103-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushProj\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushProj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushProj","kind":"def","line":102,"name":"Lean.SubExpr.Pos.pushProj","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L102-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushAppArg\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushAppArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushAppArg","kind":"def","line":101,"name":"Lean.SubExpr.Pos.pushAppArg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L101-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushAppFn\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushAppFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushAppFn","kind":"def","line":100,"name":"Lean.SubExpr.Pos.pushAppFn","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L100-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetBody\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushLetBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetBody","kind":"def","line":99,"name":"Lean.SubExpr.Pos.pushLetBody","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetValue\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushLetValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetValue","kind":"def","line":98,"name":"Lean.SubExpr.Pos.pushLetValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L98-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetVarType\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushLetVarType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetVarType","kind":"def","line":97,"name":"Lean.SubExpr.Pos.pushLetVarType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L97-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushBindingBody\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushBindingBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushBindingBody","kind":"def","line":96,"name":"Lean.SubExpr.Pos.pushBindingBody","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L96-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushBindingDomain\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushBindingDomain</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushBindingDomain","kind":"def","line":95,"name":"Lean.SubExpr.Pos.pushBindingDomain","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L95-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.toArray\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">toArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"Decodes a subexpression `Pos` as a sequence of coordinates `cs : Array Nat`. See `Pos.ofArray` for details.\n`cs[0]` is the coordinate for the root expression. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.toArray","kind":"def","line":90,"name":"Lean.SubExpr.Pos.toArray","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L90-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.ofArray\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">ofArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"Creates a subexpression `Pos` from an array of 'coordinates'.\nEach coordinate is a number {0,1,2} expressing which child subexpression should be explored.\nThe first coordinate in the array corresponds to the root of the expression tree.  ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.ofArray","kind":"def","line":84,"name":"Lean.SubExpr.Pos.ofArray","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L84-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.append\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">append</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.append","kind":"def","line":82,"name":"Lean.SubExpr.Pos.append","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L82-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.all\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">all</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pred</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Returns true if `pred` is true for each coordinate in `p`.","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.all","kind":"def","line":78,"name":"Lean.SubExpr.Pos.all","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L78-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.depth\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">depth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.depth","kind":"def","line":75,"name":"Lean.SubExpr.Pos.depth","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L75-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldrM\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">foldrM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">M</span> <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"monad-fold over the position starting at the leaf and finishing at the root. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldrM","kind":"opaque","line":71,"name":"Lean.SubExpr.Pos.foldrM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L71-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldlM\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">foldlM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><span class=\"fn\">M</span> <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"monad-fold over the position starting at the root and heading to the leaf ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldlM","kind":"opaque","line":66,"name":"Lean.SubExpr.Pos.foldlM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L66-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldr\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">foldr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"Fold over the position starting at the leaf and heading to the root","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldr","kind":"opaque","line":62,"name":"Lean.SubExpr.Pos.foldr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L62-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldl\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">foldl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"Fold over the position starting at the root and heading to the leaf","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldl","kind":"opaque","line":58,"name":"Lean.SubExpr.Pos.foldl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L58-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.push\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">push</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.push","kind":"def","line":52,"name":"Lean.SubExpr.Pos.push","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L52-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.tail\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">tail</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.tail","kind":"def","line":48,"name":"Lean.SubExpr.Pos.tail","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L48-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.head\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">head</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"The coordinate deepest in the Pos. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.head","kind":"def","line":43,"name":"Lean.SubExpr.Pos.head","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L43-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.isRoot\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">isRoot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.isRoot","kind":"def","line":41,"name":"Lean.SubExpr.Pos.isRoot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instInhabited\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instInhabited","kind":"instance","line":39,"name":"Lean.SubExpr.Pos.instInhabited","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.root\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">root</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a></div></div>","info":{"doc":"The Pos representing the root subexpression. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.root","kind":"def","line":36,"name":"Lean.SubExpr.Pos.root","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L36-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.asNat\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">asNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Pos</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.asNat","kind":"def","line":34,"name":"Lean.SubExpr.Pos.asNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.typeCoord\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">typeCoord</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"The coordinate `3 = maxChildren - 1` is\nreserved to denote the type of the expression. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.typeCoord","kind":"def","line":30,"name":"Lean.SubExpr.Pos.typeCoord","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L30-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.maxChildren\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">maxChildren</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.maxChildren","kind":"def","line":28,"name":"Lean.SubExpr.Pos.maxChildren","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A position of a subexpression in an expression.\n\nWe use a simple encoding scheme for expression positions `Pos`:\nevery `Expr` constructor has at most 3 direct expression children. Considering an expression's type\nto be one extra child as well, we can injectively map a path of `childIdxs` to a natural number\nby computing the value of the 4-ary representation `1 :: childIdxs`, since n-ary representations\nwithout leading zeros are unique. Note that `pos` is initialized to `1` (case `childIdxs == []`).\n\nSee also `SubExpr`. ","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos","kind":"def","line":15,"name":"Lean.SubExpr.Pos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/SubExpr.lean#L15-L24"}}],"imports":["Lean.Meta.Basic"],"instances":[{"className":"Inhabited","name":"Lean.SubExpr.Pos.instInhabited","typeNames":["Lean.SubExpr.Pos"]},{"className":"Ord","name":"Lean.SubExpr.Pos.instOrd","typeNames":["Lean.SubExpr.Pos"]},{"className":"Decidable","name":"Lean.SubExpr.Pos.instDecidableEq","typeNames":["Eq"]},{"className":"ToString","name":"Lean.SubExpr.Pos.instToString","typeNames":["Lean.SubExpr.Pos"]},{"className":"EmptyCollection","name":"Lean.SubExpr.Pos.instEmptyCollection","typeNames":["Lean.SubExpr.Pos"]},{"className":"Repr","name":"Lean.SubExpr.Pos.instRepr","typeNames":["Lean.SubExpr.Pos"]},{"className":"Lean.ToJson","name":"Lean.SubExpr.Pos.instToJson","typeNames":["Lean.SubExpr.Pos"]},{"className":"Lean.FromJson","name":"Lean.SubExpr.Pos.instFromJson","typeNames":["Lean.SubExpr.Pos"]},{"className":"Inhabited","name":"Lean.instInhabitedSubExpr","typeNames":["Lean.SubExpr"]},{"className":"Lean.ToJson","name":"Lean.SubExpr.instToJsonFVarId","typeNames":["Lean.FVarId"]},{"className":"Lean.ToJson","name":"Lean.SubExpr.instToJsonMVarId","typeNames":["Lean.MVarId"]},{"className":"Lean.FromJson","name":"Lean.SubExpr.instFromJsonFVarId","typeNames":["Lean.FVarId"]},{"className":"Lean.FromJson","name":"Lean.SubExpr.instFromJsonMVarId","typeNames":["Lean.MVarId"]},{"className":"Lean.FromJson","name":"Lean.SubExpr.instFromJsonGoalLocation","typeNames":["Lean.SubExpr.GoalLocation"]},{"className":"Lean.ToJson","name":"Lean.SubExpr.instToJsonGoalLocation","typeNames":["Lean.SubExpr.GoalLocation"]},{"className":"Lean.FromJson","name":"Lean.SubExpr.instFromJsonGoalsLocation","typeNames":["Lean.SubExpr.GoalsLocation"]},{"className":"Lean.ToJson","name":"Lean.SubExpr.instToJsonGoalsLocation","typeNames":["Lean.SubExpr.GoalsLocation"]}],"name":"Lean.SubExpr"}