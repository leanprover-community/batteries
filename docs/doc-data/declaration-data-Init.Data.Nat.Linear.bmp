{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.elimOffset\"><span class=\"name\">Nat</span>.<span class=\"name\">elimOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.elimOffset","kind":"def","line":541,"name":"Nat.elimOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L541-L542"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">eq_of_toNormPoly_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e </span><span class=\"fn\">e'</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : (<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\"><span class=\"fn\">e'</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e'</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly_eq","kind":"theorem","line":534,"name":"Nat.Linear.Expr.eq_of_toNormPoly_eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L534-L537"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_of_toNormPoly_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq_of_toNormPoly_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : (<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly\">toNormPoly</a></span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly\">toPoly</a></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_of_toNormPoly_eq","kind":"theorem","line":529,"name":"Nat.Linear.ExprCnstr.eq_of_toNormPoly_eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L529-L532"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_true_of_isValid\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq_true_of_isValid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly\">toNormPoly</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isValid\">isValid</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#True\">True</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_true_of_isValid","kind":"theorem","line":524,"name":"Nat.Linear.ExprCnstr.eq_true_of_isValid","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L524-L527"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_false_of_isUnsat\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq_false_of_isUnsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly\">toNormPoly</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isUnsat\">isUnsat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_false_of_isUnsat","kind":"theorem","line":519,"name":"Nat.Linear.ExprCnstr.eq_false_of_isUnsat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L519-L522"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_true_of_isValid\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">eq_true_of_isValid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isValid\">isValid</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#True\">True</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_true_of_isValid","kind":"theorem","line":510,"name":"Nat.Linear.PolyCnstr.eq_true_of_isValid","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L510-L517"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_false_of_isUnsat\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">eq_false_of_isUnsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isUnsat\">isUnsat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_false_of_isUnsat","kind":"theorem","line":499,"name":"Nat.Linear.PolyCnstr.eq_false_of_isUnsat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L499-L508"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isNonZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_isNonZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNonZero\">isNonZero</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isNonZero","kind":"theorem","line":490,"name":"Nat.Linear.Poly.of_isNonZero","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L490-L497"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_isZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isZero\">isZero</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isZero","kind":"theorem","line":484,"name":"Nat.Linear.Poly.of_isZero","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L484-L488"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">denote_toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly\">toNormPoly</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toNormPoly","kind":"theorem","line":475,"name":"Nat.Linear.ExprCnstr.denote_toNormPoly","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L475-L480"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">denote_toPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly\">toPoly</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toPoly","kind":"theorem","line":466,"name":"Nat.Linear.ExprCnstr.denote_toPoly","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L466-L471"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly_norm_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">toPoly_norm_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly\">toPoly</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.norm\">norm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly\">toNormPoly</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly_norm_eq","kind":"theorem","line":463,"name":"Nat.Linear.ExprCnstr.toPoly_norm_eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L463-L464"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_lt\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">of_cancel_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.inc\">inc</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.inc\">inc</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span>)</div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_lt","kind":"theorem","line":460,"name":"Nat.Linear.Expr.of_cancel_lt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L460-L461"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_le\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">of_cancel_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span>)</div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_le","kind":"theorem","line":454,"name":"Nat.Linear.Expr.of_cancel_le","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L454-L458"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">of_cancel_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span>)</div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_eq","kind":"theorem","line":448,"name":"Nat.Linear.Expr.of_cancel_eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L448-L452"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">eq_of_toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly","kind":"theorem","line":442,"name":"Nat.Linear.Expr.eq_of_toNormPoly","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L442-L446"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote_toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denote_toPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote_toPoly","kind":"theorem","line":437,"name":"Nat.Linear.Expr.denote_toPoly","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L437-L438"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote_toPoly_go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denote_toPoly_go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly.go\">toPoly.go</a> <span class=\"fn\">k</span> <span class=\"fn\">e</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote_toPoly_go","kind":"theorem","line":417,"name":"Nat.Linear.Expr.denote_toPoly_go","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L417-L435"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le_cancel_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\">m₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel_eq","kind":"theorem","line":412,"name":"Nat.Linear.Poly.denote_le_cancel_eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L412-L413"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_le_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\">m₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancel","kind":"theorem","line":407,"name":"Nat.Linear.Poly.of_denote_le_cancel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L407-L410"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\">m₂</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel","kind":"theorem","line":404,"name":"Nat.Linear.Poly.denote_le_cancel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L404-L405"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_le_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fuel</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">r₁ </span><span class=\"fn\">r₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancelAux","kind":"theorem","line":371,"name":"Nat.Linear.Poly.of_denote_le_cancelAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L371-L402"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fuel</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">r₁ </span><span class=\"fn\">r₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancelAux","kind":"theorem","line":337,"name":"Nat.Linear.Poly.denote_le_cancelAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L337-L369"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq_cancel_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\">m₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel_eq","kind":"theorem","line":332,"name":"Nat.Linear.Poly.denote_eq_cancel_eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L332-L333"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_eq_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\">m₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancel","kind":"theorem","line":327,"name":"Nat.Linear.Poly.of_denote_eq_cancel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L327-L330"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\">m₂</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel","kind":"theorem","line":324,"name":"Nat.Linear.Poly.denote_eq_cancel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L324-L325"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_eq_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fuel</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">r₁ </span><span class=\"fn\">r₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancelAux","kind":"theorem","line":293,"name":"Nat.Linear.Poly.of_denote_eq_cancelAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L293-L322"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fuel</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">r₁ </span><span class=\"fn\">r₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancelAux","kind":"theorem","line":259,"name":"Nat.Linear.Poly.denote_eq_cancelAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L259-L291"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_reverse\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_reverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_reverse","kind":"theorem","line":249,"name":"Nat.Linear.Poly.denote_reverse","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L249-L250"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_cons\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_cons</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> (<a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">k</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">v</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">p</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote\">Var.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_cons","kind":"theorem","line":242,"name":"Nat.Linear.Poly.denote_cons","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L242-L245"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_append\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_append</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">q</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_append","kind":"theorem","line":235,"name":"Nat.Linear.Poly.denote_append","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L235-L238"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_sort\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_sort</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm\">norm</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_sort","kind":"theorem","line":230,"name":"Nat.Linear.Poly.denote_sort","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L230-L231"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_norm_go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_norm_go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">r</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm.go\">norm.go</a> <span class=\"fn\">p</span> <span class=\"fn\">r</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">r</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_norm_go","kind":"theorem","line":223,"name":"Nat.Linear.Poly.denote_norm_go","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L223-L226"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_insert\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.insert\">insert</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote\">Var.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">v</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_insert","kind":"theorem","line":208,"name":"Nat.Linear.Poly.denote_insert","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L208-L219"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.toExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.toExpr","kind":"def","line":202,"name":"Nat.Linear.PolyCnstr.toExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L202-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr.go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">toExpr</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr.go","kind":"def","line":197,"name":"Nat.Linear.Poly.toExpr.go","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L197-L200"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr","kind":"def","line":192,"name":"Nat.Linear.Poly.toExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L192-L200"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.monomialToExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">monomialToExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.monomialToExpr","kind":"def","line":184,"name":"Nat.Linear.monomialToExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L184-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly","kind":"def","line":180,"name":"Nat.Linear.ExprCnstr.toNormPoly","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L180-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">toPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly","kind":"def","line":177,"name":"Nat.Linear.ExprCnstr.toPoly","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L177-L178"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote","kind":"def","line":171,"name":"Nat.Linear.ExprCnstr.denote","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L171-L175"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isValid\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">isValid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isValid","kind":"def","line":165,"name":"Nat.Linear.PolyCnstr.isValid","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L165-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isUnsat\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">isUnsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isUnsat","kind":"def","line":159,"name":"Nat.Linear.PolyCnstr.isUnsat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L159-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.norm\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">norm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.norm","kind":"def","line":155,"name":"Nat.Linear.PolyCnstr.norm","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L155-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote","kind":"def","line":149,"name":"Nat.Linear.PolyCnstr.denote","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L149-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.rhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">rhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.rhs","kind":"def","line":147,"name":"Nat.Linear.ExprCnstr.rhs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L147-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.lhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">lhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.lhs","kind":"def","line":146,"name":"Nat.Linear.ExprCnstr.lhs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L146-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq","kind":"def","line":145,"name":"Nat.Linear.ExprCnstr.eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L145-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.mk\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eq</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.mk","kind":"ctor","line":144,"name":"Nat.Linear.ExprCnstr.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L144-L144"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr","kind":"structure","line":144,"name":"Nat.Linear.ExprCnstr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L144-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instLawfulBEqPolyCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instLawfulBEqPolyCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instLawfulBEqPolyCnstr","kind":"instance","line":142,"name":"Nat.Linear.instLawfulBEqPolyCnstr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L142-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instReflBEqPolyCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instReflBEqPolyCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#ReflBEq\">ReflBEq</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instReflBEqPolyCnstr","kind":"instance","line":142,"name":"Nat.Linear.instReflBEqPolyCnstr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L142-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqPolyCnstr.beq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instBEqPolyCnstr</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a> → <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqPolyCnstr.beq","kind":"def","line":142,"name":"Nat.Linear.instBEqPolyCnstr.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L142-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqPolyCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instBEqPolyCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqPolyCnstr","kind":"instance","line":142,"name":"Nat.Linear.instBEqPolyCnstr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L142-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.rhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">rhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.rhs","kind":"def","line":141,"name":"Nat.Linear.PolyCnstr.rhs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L141-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.lhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">lhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.lhs","kind":"def","line":140,"name":"Nat.Linear.PolyCnstr.lhs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L140-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq","kind":"def","line":139,"name":"Nat.Linear.PolyCnstr.eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L139-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.mk\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eq</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.mk","kind":"ctor","line":138,"name":"Nat.Linear.PolyCnstr.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L138-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr","kind":"structure","line":138,"name":"Nat.Linear.PolyCnstr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L138-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.inc\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">inc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.inc","kind":"def","line":135,"name":"Nat.Linear.Expr.inc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L135-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly","kind":"def","line":132,"name":"Nat.Linear.Expr.toNormPoly","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L132-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly.go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toPoly</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">coeff</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a> → <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly.go","kind":"def","line":125,"name":"Nat.Linear.Expr.toPoly.go","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L125-L130"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly","kind":"def","line":120,"name":"Nat.Linear.Expr.toPoly","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L120-L130"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mp</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le","kind":"def","line":118,"name":"Nat.Linear.Poly.denote_le","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L118-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mp</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq","kind":"def","line":116,"name":"Nat.Linear.Poly.denote_eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L116-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNonZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isNonZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNonZero","kind":"def","line":111,"name":"Nat.Linear.Poly.isNonZero","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L111-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isZero","kind":"def","line":106,"name":"Nat.Linear.Poly.isZero","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L106-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNum?\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isNum?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNum?","kind":"def","line":100,"name":"Nat.Linear.Poly.isNum?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L100-L104"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">cancel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel","kind":"def","line":97,"name":"Nat.Linear.Poly.cancel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L97-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.hugeFuel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">hugeFuel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.hugeFuel","kind":"def","line":95,"name":"Nat.Linear.hugeFuel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L95-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fuel</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">r₁ </span><span class=\"fn\">r₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux","kind":"def","line":76,"name":"Nat.Linear.Poly.cancelAux","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L76-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm.go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">norm</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">r</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm.go","kind":"def","line":71,"name":"Nat.Linear.Poly.norm.go","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L71-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">norm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm","kind":"def","line":69,"name":"Nat.Linear.Poly.norm","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L69-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.insert\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.insert","kind":"def","line":58,"name":"Nat.Linear.Poly.insert","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L58-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote","kind":"def","line":53,"name":"Nat.Linear.Poly.denote","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L53-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly","kind":"def","line":51,"name":"Nat.Linear.Poly","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote","kind":"def","line":44,"name":"Nat.Linear.Expr.denote","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L44-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqExpr.beq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instBEqExpr</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a> → <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqExpr.beq","kind":"def","line":42,"name":"Nat.Linear.instBEqExpr.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instBEqExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqExpr","kind":"instance","line":42,"name":"Nat.Linear.instBEqExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instInhabitedExpr.default\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instInhabitedExpr</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instInhabitedExpr.default","kind":"def","line":42,"name":"Nat.Linear.instInhabitedExpr.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instInhabitedExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instInhabitedExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instInhabitedExpr","kind":"instance","line":42,"name":"Nat.Linear.instInhabitedExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulR\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">mulR</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulR","kind":"ctor","line":41,"name":"Nat.Linear.Expr.mulR","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulL\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">mulL</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulL","kind":"ctor","line":40,"name":"Nat.Linear.Expr.mulL","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.add\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.add","kind":"ctor","line":39,"name":"Nat.Linear.Expr.add","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.var\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">var</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.var","kind":"ctor","line":38,"name":"Nat.Linear.Expr.var","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.num\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">num</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.num","kind":"ctor","line":37,"name":"Nat.Linear.Expr.num","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr","kind":"inductive","line":36,"name":"Nat.Linear.Expr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L36-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Var</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote","kind":"def","line":33,"name":"Nat.Linear.Var.denote","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L33-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.fixedVar\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">fixedVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"When encoding polynomials. We use `fixedVar` for encoding numerals.\nThe denotation of `fixedVar` is always `1`. ","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.fixedVar","kind":"def","line":28,"name":"Nat.Linear.fixedVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L28-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Context","kind":"def","line":26,"name":"Nat.Linear.Context","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Var</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Var","kind":"def","line":24,"name":"Nat.Linear.Var","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Nat/Linear.lean#L24-L24"}}],"imports":["Init.ByCases","Init.Data.Prod","Init.Data.RArray","Init.LawfulBEqTactics"],"instances":[{"className":"Inhabited","name":"Nat.Linear.instInhabitedExpr","typeNames":["Nat.Linear.Expr"]},{"className":"BEq","name":"Nat.Linear.instBEqExpr","typeNames":["Nat.Linear.Expr"]},{"className":"BEq","name":"Nat.Linear.instBEqPolyCnstr","typeNames":["Nat.Linear.PolyCnstr"]},{"className":"ReflBEq","name":"Nat.Linear.instReflBEqPolyCnstr","typeNames":["Nat.Linear.PolyCnstr"]},{"className":"LawfulBEq","name":"Nat.Linear.instLawfulBEqPolyCnstr","typeNames":["Nat.Linear.PolyCnstr"]}],"name":"Init.Data.Nat.Linear"}