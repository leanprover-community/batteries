{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/EditDistance.html#Lean.EditDistance.levenshtein\"><span class=\"name\">Lean</span>.<span class=\"name\">EditDistance</span>.<span class=\"name\">levenshtein</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">str1 </span><span class=\"fn\">str2</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cutoff</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"Computes the Levenshtein distance between two strings, up to some cutoff.\n\nIf the return value is `none`, then the distance is certainly greater than the cutoff value, but a\nreturned `some` does not necessarily indicate that the edit distance is less than or equal to the\ncutoff.\n","docLink":"./Lean/Data/EditDistance.html#Lean.EditDistance.levenshtein","kind":"def","line":14,"name":"Lean.EditDistance.levenshtein","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Data/EditDistance.lean#L14-L55"}}],"imports":["Init"],"instances":[],"name":"Lean.Data.EditDistance"}