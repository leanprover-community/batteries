{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.checkAgainstTime\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">checkAgainstTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\">i</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Check if the info is up-to-date using modification time.\nThat is, check if the info is newer than this input trace's modification time.\n","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.checkAgainstTime","kind":"def","line":370,"name":"Lake.BuildTrace.checkAgainstTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L370-L377"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.checkAgainstHash\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">checkAgainstHash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">CheckExists</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\">i</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Check if the info is up-to-date using a hash.\nThat is, check that info exists and its input hash matches this trace's hash.\n","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.checkAgainstHash","kind":"def","line":362,"name":"Lake.BuildTrace.checkAgainstHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L362-L368"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.instMixTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">instMixTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.instMixTrace","kind":"instance","line":360,"name":"Lake.BuildTrace.instMixTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L360-L360"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.mix\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">mix</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t1 </span><span class=\"fn\">t2</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.mix","kind":"def","line":354,"name":"Lake.BuildTrace.mix","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L354-L358"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.instComputeTraceIOOfToStringOfComputeHashOfMonadLiftTOfGetMTime\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">instComputeTraceIOOfToStringOfComputeHashOfMonadLiftTOfGetMTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">m</span> <a href=\"./Init/System/IO.html#IO\">IO</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">α</span> <a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.instComputeTraceIOOfToStringOfComputeHashOfMonadLiftTOfGetMTime","kind":"instance","line":350,"name":"Lake.BuildTrace.instComputeTraceIOOfToStringOfComputeHashOfMonadLiftTOfGetMTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L350-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.compute\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">compute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">m</span> <a href=\"./Init/System/IO.html#IO\">IO</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.compute","kind":"def","line":341,"name":"Lake.BuildTrace.compute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L341-L348"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.instNilTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">instNilTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.instNilTrace","kind":"instance","line":339,"name":"Lake.BuildTrace.instNilTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L339-L339"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.nil\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">nil</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&lt;nil&gt;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.nil","kind":"def","line":336,"name":"Lake.BuildTrace.nil","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L336-L337"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.instCoeMTime\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">instCoeMTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.instCoeMTime","kind":"instance","line":334,"name":"Lake.BuildTrace.instCoeMTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L334-L334"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.ofMTime\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">ofMTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mtime</span> : <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&lt;mtime&gt;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.ofMTime","kind":"def","line":331,"name":"Lake.BuildTrace.ofMTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L331-L332"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.instCoeHash\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">instCoeHash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.instCoeHash","kind":"instance","line":329,"name":"Lake.BuildTrace.instCoeHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L329-L329"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.ofHash\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">ofHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&lt;hash&gt;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.ofHash","kind":"def","line":326,"name":"Lake.BuildTrace.ofHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L326-L327"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.withoutInputs\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">withoutInputs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></div></div>","info":{"doc":"Clear the inputs of the build trace.\nThis is used to remove unnecessary repetition of trace trees across multiple trace files.\n","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.withoutInputs","kind":"def","line":319,"name":"Lake.BuildTrace.withoutInputs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L319-L324"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.withCaption\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">withCaption</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></div></div>","info":{"doc":"Sets the caption of the trace. ","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.withCaption","kind":"def","line":315,"name":"Lake.BuildTrace.withCaption","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L315-L317"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instReprBuildTrace.repr\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprBuildTrace</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instReprBuildTrace.repr","kind":"opaque","line":311,"name":"Lake.instReprBuildTrace.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L311-L311"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instReprBuildTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprBuildTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instReprBuildTrace","kind":"instance","line":311,"name":"Lake.instReprBuildTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L311-L311"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.mtime\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">mtime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.mtime","kind":"def","line":310,"name":"Lake.BuildTrace.mtime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L310-L310"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.hash\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">hash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.hash","kind":"def","line":309,"name":"Lake.BuildTrace.hash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L309-L309"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.inputs\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">inputs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.inputs","kind":"def","line":308,"name":"Lake.BuildTrace.inputs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L308-L308"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.caption\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">caption</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.caption","kind":"def","line":307,"name":"Lake.BuildTrace.caption","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L307-L307"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inputs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mtime</span> : <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.mk","kind":"ctor","line":306,"name":"Lake.BuildTrace.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L306-L306"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Trace used for common Lake targets. Combines `Hash` and `MTime`. ","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace","kind":"structure","line":305,"name":"Lake.BuildTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L305-L311"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.checkUpToDate\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">checkUpToDate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\">i</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Check if `info` is up-to-date using modification time.\nThat is, check if the info is newer than `self`.\n","docLink":"./Lake/Build/Trace.html#Lake.MTime.checkUpToDate","kind":"def","line":290,"name":"Lake.MTime.checkUpToDate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L290-L299"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instGetMTimeTextFilePath\"><span class=\"name\">Lake</span>.<span class=\"name\">instGetMTimeTextFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <a href=\"./Lake/Build/Trace.html#Lake.TextFilePath\">TextFilePath</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instGetMTimeTextFilePath","kind":"instance","line":288,"name":"Lake.instGetMTimeTextFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L288-L288"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instGetMTimeFilePath\"><span class=\"name\">Lake</span>.<span class=\"name\">instGetMTimeFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instGetMTimeFilePath","kind":"instance","line":287,"name":"Lake.instGetMTimeFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L287-L287"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.getFileMTime\"><span class=\"name\">Lake</span>.<span class=\"name\">getFileMTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>","info":{"doc":"Return the modification time of a file recorded by the OS. ","docLink":"./Lake/Build/Trace.html#Lake.getFileMTime","kind":"def","line":283,"name":"Lake.getFileMTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L283-L285"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.GetMTime.getMTime\"><span class=\"name\">Lake</span>.<span class=\"name\">GetMTime</span>.<span class=\"name\">getMTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></span></div></div>","info":{"doc":"Return the modification time of an object. ","docLink":"./Lake/Build/Trace.html#Lake.GetMTime.getMTime","kind":"def","line":278,"name":"Lake.GetMTime.getMTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L278-L278"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.GetMTime.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">GetMTime</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">getMTime</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.GetMTime.mk","kind":"ctor","line":276,"name":"Lake.GetMTime.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L276-L276"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.GetMTime\"><span class=\"name\">Lake</span>.<span class=\"name\">GetMTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.GetMTime","kind":"class","line":276,"name":"Lake.GetMTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L276-L278"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instMixTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instMixTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.MTime.instMixTrace","kind":"instance","line":272,"name":"Lake.MTime.instMixTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L272-L272"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instNilTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instNilTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.MTime.instNilTrace","kind":"instance","line":271,"name":"Lake.MTime.instNilTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L271-L271"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instMax\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instMax</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Max\">Max</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.MTime.instMax","kind":"instance","line":269,"name":"Lake.MTime.instMax","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L269-L269"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instMin\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instMin</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.MTime.instMin","kind":"instance","line":268,"name":"Lake.MTime.instMin","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L268-L268"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instLE\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.MTime.instLE","kind":"instance","line":267,"name":"Lake.MTime.instLE","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L267-L267"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instLT\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.MTime.instLT","kind":"instance","line":266,"name":"Lake.MTime.instLT","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L266-L266"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instOrd\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.MTime.instOrd","kind":"instance","line":265,"name":"Lake.MTime.instOrd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L265-L265"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instRepr\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.MTime.instRepr","kind":"instance","line":263,"name":"Lake.MTime.instRepr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L263-L263"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instBEq\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.MTime.instBEq","kind":"instance","line":262,"name":"Lake.MTime.instBEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L262-L262"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instOfNat\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a> <span class=\"fn\">0</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.MTime.instOfNat","kind":"instance","line":260,"name":"Lake.MTime.instOfNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L260-L260"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A modification time (e.g., of a file). ","docLink":"./Lake/Build/Trace.html#Lake.MTime","kind":"def","line":255,"name":"Lake.MTime","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L255-L256"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeHashArrayOfMonad\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeHashArrayOfMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instComputeHashArrayOfMonad","kind":"instance","line":247,"name":"Lake.instComputeHashArrayOfMonad","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L247-L247"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeArrayHash\"><span class=\"name\">Lake</span>.<span class=\"name\">computeArrayHash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"Compute the hash of each element of an array and combine them (left-to-right). ","docLink":"./Lake/Build/Trace.html#Lake.computeArrayHash","kind":"def","line":243,"name":"Lake.computeArrayHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L243-L245"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeFileHash\"><span class=\"name\">Lake</span>.<span class=\"name\">computeFileHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"Compute the hash of a file. If `text := true`, normalize line endings. ","docLink":"./Lake/Build/Trace.html#Lake.computeFileHash","kind":"def","line":239,"name":"Lake.computeFileHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L239-L241"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instToStringTextFilePath\"><span class=\"name\">Lake</span>.<span class=\"name\">instToStringTextFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lake/Build/Trace.html#Lake.TextFilePath\">TextFilePath</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instToStringTextFilePath","kind":"instance","line":237,"name":"Lake.instToStringTextFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L237-L237"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeHashTextFilePathIO\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeHashTextFilePathIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <a href=\"./Lake/Build/Trace.html#Lake.TextFilePath\">TextFilePath</a> <a href=\"./Init/System/IO.html#IO\">IO</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instComputeHashTextFilePathIO","kind":"instance","line":236,"name":"Lake.instComputeHashTextFilePathIO","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L236-L236"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instCoeTextFilePathFilePath\"><span class=\"name\">Lake</span>.<span class=\"name\">instCoeTextFilePathFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lake/Build/Trace.html#Lake.TextFilePath\">TextFilePath</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instCoeTextFilePathFilePath","kind":"instance","line":235,"name":"Lake.instCoeTextFilePathFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L235-L235"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.TextFilePath.path\"><span class=\"name\">Lake</span>.<span class=\"name\">TextFilePath</span>.<span class=\"name\">path</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.TextFilePath\">TextFilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.TextFilePath.path","kind":"def","line":233,"name":"Lake.TextFilePath.path","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L233-L233"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.TextFilePath.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">TextFilePath</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.TextFilePath\">TextFilePath</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.TextFilePath.mk","kind":"ctor","line":232,"name":"Lake.TextFilePath.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L232-L232"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.TextFilePath\"><span class=\"name\">Lake</span>.<span class=\"name\">TextFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A wrapper around `FilePath` that adjusts its `ComputeHash` implementation\nto normalize `\\r\\n` sequences to `\\n` for cross-platform compatibility.\n","docLink":"./Lake/Build/Trace.html#Lake.TextFilePath","kind":"structure","line":228,"name":"Lake.TextFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L228-L233"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeTextFileHash\"><span class=\"name\">Lake</span>.<span class=\"name\">computeTextFileHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"Compute the hash of a text file.\nNormalizes `\\r\\n` sequences to `\\n` for cross-platform compatibility.\n","docLink":"./Lake/Build/Trace.html#Lake.computeTextFileHash","kind":"def","line":221,"name":"Lake.computeTextFileHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L221-L226"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeHashFilePathIO\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeHashFilePathIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> <a href=\"./Init/System/IO.html#IO\">IO</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instComputeHashFilePathIO","kind":"instance","line":219,"name":"Lake.instComputeHashFilePathIO","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L219-L219"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeBinFileHash\"><span class=\"name\">Lake</span>.<span class=\"name\">computeBinFileHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"Compute the hash of a binary file.\nBinary files are equivalent only if they are byte identical.\n","docLink":"./Lake/Build/Trace.html#Lake.computeBinFileHash","kind":"def","line":212,"name":"Lake.computeBinFileHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L212-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeHashStringId\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeHashStringId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Control/Id.html#Id\">Id</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instComputeHashStringId","kind":"instance","line":210,"name":"Lake.instComputeHashStringId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L210-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeHashBoolId\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeHashBoolId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Control/Id.html#Id\">Id</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instComputeHashBoolId","kind":"instance","line":209,"name":"Lake.instComputeHashBoolId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L209-L209"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeHash\"><span class=\"name\">Lake</span>.<span class=\"name\">computeHash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"Compute the hash an object in an supporting monad. ","docLink":"./Lake/Build/Trace.html#Lake.computeHash","kind":"def","line":205,"name":"Lake.computeHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L205-L207"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.pureHash\"><span class=\"name\">Lake</span>.<span class=\"name\">pureHash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">α</span> <a href=\"./Init/Control/Id.html#Id\">Id</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>","info":{"doc":"Compute the hash of object `a` in a pure context. ","docLink":"./Lake/Build/Trace.html#Lake.pureHash","kind":"def","line":201,"name":"Lake.pureHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L201-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeTraceHashOfComputeHash\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeTraceHashOfComputeHash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instComputeTraceHashOfComputeHash","kind":"instance","line":199,"name":"Lake.instComputeTraceHashOfComputeHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L199-L199"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.ComputeHash.computeHash\"><span class=\"name\">Lake</span>.<span class=\"name\">ComputeHash</span>.<span class=\"name\">computeHash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> v)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></span></div></div>","info":{"doc":"Compute the hash of an object in its preferred monad. ","docLink":"./Lake/Build/Trace.html#Lake.ComputeHash.computeHash","kind":"def","line":197,"name":"Lake.ComputeHash.computeHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L197-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.ComputeHash.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">ComputeHash</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> v)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">computeHash</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.ComputeHash.mk","kind":"ctor","line":195,"name":"Lake.ComputeHash.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L195-L195"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.ComputeHash\"><span class=\"name\">Lake</span>.<span class=\"name\">ComputeHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> v)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v)</div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.ComputeHash","kind":"class","line":195,"name":"Lake.ComputeHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L195-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.instFromJson\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">instFromJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.instFromJson","kind":"instance","line":191,"name":"Lake.Hash.instFromJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L191-L191"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.fromJson?\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">fromJson?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">json</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.fromJson?","kind":"def","line":180,"name":"Lake.Hash.fromJson?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L180-L189"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.instToJson\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">instToJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.instToJson","kind":"instance","line":178,"name":"Lake.Hash.instToJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L178-L178"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.toJson\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">toJson</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.toJson","kind":"def","line":175,"name":"Lake.Hash.toJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L175-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofBool\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofBool</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofBool","kind":"def","line":172,"name":"Lake.Hash.ofBool","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L172-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofByteArray\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofByteArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bytes</span> : <a href=\"./Init/Prelude.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofByteArray","kind":"def","line":169,"name":"Lake.Hash.ofByteArray","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L169-L170"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofText\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofText</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">str</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>","info":{"doc":"Hash of a line-ending normalized string. ","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofText","kind":"def","line":165,"name":"Lake.Hash.ofText","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L165-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofString\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">str</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofString","kind":"def","line":162,"name":"Lake.Hash.ofString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L162-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.instToString\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">instToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.instToString","kind":"instance","line":160,"name":"Lake.Hash.instToString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L160-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.toString\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.toString","kind":"def","line":157,"name":"Lake.Hash.toString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L157-L158"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.instMixTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">instMixTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.instMixTrace","kind":"instance","line":155,"name":"Lake.Hash.instMixTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L155-L155"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.mix\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">mix</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1 </span><span class=\"fn\">h2</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.mix","kind":"def","line":152,"name":"Lake.Hash.mix","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L152-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.load?\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">load?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hashFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.load?","kind":"def","line":149,"name":"Lake.Hash.load?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L149-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofString?\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofString?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofString?","kind":"def","line":146,"name":"Lake.Hash.ofString?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L146-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofDecimal?\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofDecimal?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofDecimal?","kind":"def","line":143,"name":"Lake.Hash.ofDecimal?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L143-L144"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.hex\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">hex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"Returns the hash as 16-digit lowercase hex string. ","docLink":"./Lake/Build/Trace.html#Lake.Hash.hex","kind":"def","line":139,"name":"Lake.Hash.hex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L139-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofHex?\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofHex?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"Parse a hash from a 16-digit string of hexadecimal digits. ","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofHex?","kind":"def","line":135,"name":"Lake.Hash.ofHex?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L135-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofHex\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofHex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>","info":{"doc":"Parse a hash from a string of hexadecimal digits. Does no validation. ","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofHex","kind":"def","line":123,"name":"Lake.Hash.ofHex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L123-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofJsonNumber?\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofJsonNumber?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.JsonNumber\">Lean.JsonNumber</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"Parse a hash from a JSON number. ","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofJsonNumber?","kind":"def","line":113,"name":"Lake.Hash.ofJsonNumber?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L113-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofNat\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofNat","kind":"def","line":110,"name":"Lake.Hash.ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L110-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.instNilTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">instNilTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.instNilTrace","kind":"instance","line":108,"name":"Lake.Hash.instNilTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L108-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.nil\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">nil</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.nil","kind":"def","line":105,"name":"Lake.Hash.nil","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L105-L106"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.instHashable\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">instHashable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.instHashable","kind":"instance","line":103,"name":"Lake.Hash.instHashable","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L103-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instDecidableEqHash.decEq\"><span class=\"name\">Lake</span>.<span class=\"name\">instDecidableEqHash</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instDecidableEqHash.decEq","kind":"def","line":99,"name":"Lake.instDecidableEqHash.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instDecidableEqHash\"><span class=\"name\">Lake</span>.<span class=\"name\">instDecidableEqHash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instDecidableEqHash","kind":"instance","line":99,"name":"Lake.instDecidableEqHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instReprHash\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprHash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instReprHash","kind":"instance","line":99,"name":"Lake.instReprHash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instReprHash.repr\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprHash</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instReprHash.repr","kind":"def","line":99,"name":"Lake.instReprHash.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.val\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.val","kind":"def","line":98,"name":"Lake.Hash.val","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L98-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.Hash.mk","kind":"ctor","line":97,"name":"Lake.Hash.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L97-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A content hash. ","docLink":"./Lake/Build/Trace.html#Lake.Hash","kind":"structure","line":95,"name":"Lake.Hash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L95-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeTraceArrayOfMonad\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeTraceArrayOfMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">m</span> <span class=\"fn\">τ</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instComputeTraceArrayOfMonad","kind":"instance","line":88,"name":"Lake.instComputeTraceArrayOfMonad","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L88-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeArrayTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">computeArrayTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <span class=\"fn\">τ</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.computeArrayTrace","kind":"def","line":85,"name":"Lake.computeArrayTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L85-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeTraceListOfMonad\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeTraceListOfMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">m</span> <span class=\"fn\">τ</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instComputeTraceListOfMonad","kind":"instance","line":82,"name":"Lake.instComputeTraceListOfMonad","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L82-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeListTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">computeListTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <span class=\"fn\">τ</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.computeListTrace","kind":"def","line":79,"name":"Lake.computeListTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L79-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.mixTraceArray\"><span class=\"name\">Lake</span>.<span class=\"name\">mixTraceArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traces</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">τ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">τ</span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.mixTraceArray","kind":"def","line":73,"name":"Lake.mixTraceArray","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L73-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.mixTraceList\"><span class=\"name\">Lake</span>.<span class=\"name\">mixTraceList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traces</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">τ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">τ</span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.mixTraceList","kind":"def","line":69,"name":"Lake.mixTraceList","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L69-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MixTrace.mixTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">MixTrace</span>.<span class=\"name\">mixTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Combine two traces. The result should be dirty if either of the inputs is dirty. ","docLink":"./Lake/Build/Trace.html#Lake.MixTrace.mixTrace","kind":"def","line":61,"name":"Lake.MixTrace.mixTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MixTrace.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">MixTrace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mixTrace</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.MixTrace.mk","kind":"ctor","line":59,"name":"Lake.MixTrace.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MixTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">MixTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.MixTrace","kind":"class","line":59,"name":"Lake.MixTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L59-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.inhabitedOfNilTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">inhabitedOfNilTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.inhabitedOfNilTrace","kind":"instance","line":57,"name":"Lake.inhabitedOfNilTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.NilTrace.nilTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">NilTrace</span>.<span class=\"name\">nilTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"The nil trace. Should not unduly clash with a proper trace. ","docLink":"./Lake/Build/Trace.html#Lake.NilTrace.nilTrace","kind":"def","line":53,"name":"Lake.NilTrace.nilTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.NilTrace.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">NilTrace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nilTrace</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.NilTrace.mk","kind":"ctor","line":51,"name":"Lake.NilTrace.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.NilTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">NilTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.NilTrace","kind":"class","line":51,"name":"Lake.NilTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L51-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">computeTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_2 → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_2 → <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <span class=\"fn\">τ</span></span></div></div>","info":{"doc":"Compute the trace of an object in a supporting monad. ","docLink":"./Lake/Build/Trace.html#Lake.computeTrace","kind":"def","line":47,"name":"Lake.computeTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L47-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.ComputeTrace.computeTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">ComputeTrace</span>.<span class=\"name\">computeTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./foundational_types.html\">Type</a> v → <a href=\"./foundational_types.html\">Type</a> w)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">τ</span></span></span></div></div>","info":{"doc":"Compute the trace of an object in its preferred monad. ","docLink":"./Lake/Build/Trace.html#Lake.ComputeTrace.computeTrace","kind":"def","line":45,"name":"Lake.ComputeTrace.computeTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.ComputeTrace.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">ComputeTrace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./foundational_types.html\">Type</a> v → <a href=\"./foundational_types.html\">Type</a> w)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">computeTrace</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">τ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">α</span> <span class=\"fn\">m</span> <span class=\"fn\">τ</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.ComputeTrace.mk","kind":"ctor","line":43,"name":"Lake.ComputeTrace.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">ComputeTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./foundational_types.html\">Type</a> v → <a href=\"./foundational_types.html\">Type</a> w)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u w)</div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.ComputeTrace","kind":"class","line":43,"name":"Lake.ComputeTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L43-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instCheckExistsFilePath\"><span class=\"name\">Lake</span>.<span class=\"name\">instCheckExistsFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">CheckExists</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.instCheckExistsFilePath","kind":"instance","line":36,"name":"Lake.instCheckExistsFilePath","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L36-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.CheckExists.checkExists\"><span class=\"name\">Lake</span>.<span class=\"name\">CheckExists</span>.<span class=\"name\">checkExists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">CheckExists</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">i</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></div></div>","info":{"doc":"Check whether there already exists an artifact for the given target info. ","docLink":"./Lake/Build/Trace.html#Lake.CheckExists.checkExists","kind":"def","line":32,"name":"Lake.CheckExists.checkExists","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.CheckExists.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">CheckExists</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">checkExists</span> : <span class=\"fn\"><span class=\"fn\">i</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">CheckExists</a> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.CheckExists.mk","kind":"ctor","line":30,"name":"Lake.CheckExists.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L30-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.CheckExists\"><span class=\"name\">Lake</span>.<span class=\"name\">CheckExists</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"","docLink":"./Lake/Build/Trace.html#Lake.CheckExists","kind":"class","line":30,"name":"Lake.CheckExists","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Build/Trace.lean#L30-L32"}}],"imports":["Lean.Data.Json","Init.Data.Nat.Fold","Lake.Util.String","Lake.Util.IO"],"instances":[{"className":"Lake.CheckExists","name":"Lake.instCheckExistsFilePath","typeNames":["System.FilePath"]},{"className":"Inhabited","name":"Lake.inhabitedOfNilTrace","typeNames":[]},{"className":"Lake.ComputeTrace","name":"Lake.instComputeTraceListOfMonad","typeNames":["List"]},{"className":"Lake.ComputeTrace","name":"Lake.instComputeTraceArrayOfMonad","typeNames":["Array"]},{"className":"Repr","name":"Lake.instReprHash","typeNames":["Lake.Hash"]},{"className":"Decidable","name":"Lake.instDecidableEqHash","typeNames":["Eq"]},{"className":"Hashable","name":"Lake.Hash.instHashable","typeNames":["Lake.Hash"]},{"className":"Lake.NilTrace","name":"Lake.Hash.instNilTrace","typeNames":["Lake.Hash"]},{"className":"Lake.MixTrace","name":"Lake.Hash.instMixTrace","typeNames":["Lake.Hash"]},{"className":"ToString","name":"Lake.Hash.instToString","typeNames":["Lake.Hash"]},{"className":"Lean.ToJson","name":"Lake.Hash.instToJson","typeNames":["Lake.Hash"]},{"className":"Lean.FromJson","name":"Lake.Hash.instFromJson","typeNames":["Lake.Hash"]},{"className":"Lake.ComputeTrace","name":"Lake.instComputeTraceHashOfComputeHash","typeNames":["Lake.Hash"]},{"className":"Lake.ComputeHash","name":"Lake.instComputeHashBoolId","typeNames":["Bool","Id"]},{"className":"Lake.ComputeHash","name":"Lake.instComputeHashStringId","typeNames":["String","Id"]},{"className":"Lake.ComputeHash","name":"Lake.instComputeHashFilePathIO","typeNames":["System.FilePath","IO"]},{"className":"Coe","name":"Lake.instCoeTextFilePathFilePath","typeNames":["Lake.TextFilePath","System.FilePath"]},{"className":"Lake.ComputeHash","name":"Lake.instComputeHashTextFilePathIO","typeNames":["Lake.TextFilePath","IO"]},{"className":"ToString","name":"Lake.instToStringTextFilePath","typeNames":["Lake.TextFilePath"]},{"className":"Lake.ComputeHash","name":"Lake.instComputeHashArrayOfMonad","typeNames":["Array"]},{"className":"OfNat","name":"Lake.MTime.instOfNat","typeNames":["Lake.MTime"]},{"className":"BEq","name":"Lake.MTime.instBEq","typeNames":["Lake.MTime"]},{"className":"Repr","name":"Lake.MTime.instRepr","typeNames":["Lake.MTime"]},{"className":"Ord","name":"Lake.MTime.instOrd","typeNames":["Lake.MTime"]},{"className":"LT","name":"Lake.MTime.instLT","typeNames":["Lake.MTime"]},{"className":"LE","name":"Lake.MTime.instLE","typeNames":["Lake.MTime"]},{"className":"Min","name":"Lake.MTime.instMin","typeNames":["Lake.MTime"]},{"className":"Max","name":"Lake.MTime.instMax","typeNames":["Lake.MTime"]},{"className":"Lake.NilTrace","name":"Lake.MTime.instNilTrace","typeNames":["Lake.MTime"]},{"className":"Lake.MixTrace","name":"Lake.MTime.instMixTrace","typeNames":["Lake.MTime"]},{"className":"Lake.GetMTime","name":"Lake.instGetMTimeFilePath","typeNames":["System.FilePath"]},{"className":"Lake.GetMTime","name":"Lake.instGetMTimeTextFilePath","typeNames":["Lake.TextFilePath"]},{"className":"Repr","name":"Lake.instReprBuildTrace","typeNames":["Lake.BuildTrace"]},{"className":"Coe","name":"Lake.BuildTrace.instCoeHash","typeNames":["Lake.Hash","Lake.BuildTrace"]},{"className":"Coe","name":"Lake.BuildTrace.instCoeMTime","typeNames":["Lake.MTime","Lake.BuildTrace"]},{"className":"Lake.NilTrace","name":"Lake.BuildTrace.instNilTrace","typeNames":["Lake.BuildTrace"]},{"className":"Lake.ComputeTrace","name":"Lake.BuildTrace.instComputeTraceIOOfToStringOfComputeHashOfMonadLiftTOfGetMTime","typeNames":["IO","Lake.BuildTrace"]},{"className":"Lake.MixTrace","name":"Lake.BuildTrace.instMixTrace","typeNames":["Lake.BuildTrace"]}],"name":"Lake.Build.Trace"}