{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MacroArgUtil.html#Lean.Elab.Command.expandMacroArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">expandMacroArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Parser.Command.macroArg</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">CommandElabM</a> (<a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`stx</span> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a>)</span></div></div>","info":{"doc":"Convert `macro` arg into a `syntax` command item and a pattern element ","docLink":"./Lean/Elab/MacroArgUtil.html#Lean.Elab.Command.expandMacroArg","kind":"def","line":18,"name":"Lean.Elab.Command.expandMacroArg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/MacroArgUtil.lean#L18-L80"}}],"imports":["Lean.Elab.Syntax"],"instances":[],"name":"Lean.Elab.MacroArgUtil"}