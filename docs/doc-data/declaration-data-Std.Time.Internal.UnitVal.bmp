{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.cast\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">cast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> → <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">a</span></span>) → <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">b</span></span></span></span></div></div>","info":{"doc":"Cast a UnitVal through an equality in the rational numbers. ","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.cast","kind":"def","line":149,"name":"Std.Time.Internal.UnitVal.cast","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L149-L151"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instToString\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">instToString</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">(<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instToString","kind":"instance","line":147,"name":"Std.Time.Internal.UnitVal.instToString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L147-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instNeg\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">instNeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">(<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instNeg","kind":"instance","line":145,"name":"Std.Time.Internal.UnitVal.instNeg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L145-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instSub\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">instSub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">(<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instSub","kind":"instance","line":143,"name":"Std.Time.Internal.UnitVal.instSub","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L143-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instAdd\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">instAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instAdd","kind":"instance","line":141,"name":"Std.Time.Internal.UnitVal.instAdd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L141-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instLT\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">instLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <span class=\"fn\">(<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instLT","kind":"instance","line":139,"name":"Std.Time.Internal.UnitVal.instLT","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L139-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instLE\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">instLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <span class=\"fn\">(<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instLE","kind":"instance","line":137,"name":"Std.Time.Internal.UnitVal.instLE","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L137-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instRepr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">instRepr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">(<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instRepr","kind":"instance","line":135,"name":"Std.Time.Internal.UnitVal.instRepr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L135-L135"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instOfNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">instOfNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <span class=\"fn\">(<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.instOfNat","kind":"instance","line":133,"name":"Std.Time.Internal.UnitVal.instOfNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L133-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.convert\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">convert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"Converts an `Offset` to another unit type.\n","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.convert","kind":"def","line":125,"name":"Std.Time.Internal.UnitVal.convert","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L125-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.abs\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">abs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Returns the absolute value of a `UnitVal`.\n","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.abs","kind":"def","line":118,"name":"Std.Time.Internal.UnitVal.abs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L118-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.sub\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u1 </span><span class=\"fn\">u2</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Subtracts one `UnitVal` value from another of the same ratio.\n","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.sub","kind":"def","line":111,"name":"Std.Time.Internal.UnitVal.sub","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L111-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.add\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u1 </span><span class=\"fn\">u2</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Adds two `UnitVal` values of the same ratio.\n","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.add","kind":"def","line":104,"name":"Std.Time.Internal.UnitVal.add","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L104-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.div\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unit</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">divisor</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">divisor</span></span>)</span></div></div>","info":{"doc":"Divides the `UnitVal` by an `Int`, resulting in a new `UnitVal` with an adjusted ratio.\n","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.div","kind":"def","line":97,"name":"Std.Time.Internal.UnitVal.div","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L97-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.tdiv\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">tdiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unit</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">divisor</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">divisor</span></span>)</span></div></div>","info":{"doc":"Divides the `UnitVal` by an `Int`, resulting in a new `UnitVal` with an adjusted ratio. Using the\n\"T-rounding\" (Truncation-rounding) convention\n","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.tdiv","kind":"def","line":89,"name":"Std.Time.Internal.UnitVal.tdiv","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L89-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.ediv\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">ediv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unit</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">divisor</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">divisor</span></span>)</span></div></div>","info":{"doc":"Divides the `UnitVal` by an `Int`, resulting in a new `UnitVal` with an adjusted ratio. Using the\nE-rounding convention (euclidean division)\n","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.ediv","kind":"def","line":81,"name":"Std.Time.Internal.UnitVal.ediv","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L81-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.mul\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unit</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">factor</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">factor</span></span>)</span></div></div>","info":{"doc":"Multiplies the `UnitVal` by an `Int`, resulting in a new `UnitVal` with an adjusted ratio.\n","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.mul","kind":"def","line":74,"name":"Std.Time.Internal.UnitVal.mul","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L74-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.toInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">toInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unit</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>","info":{"doc":"Converts a `UnitVal` to an `Int`.\n","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.toInt","kind":"def","line":67,"name":"Std.Time.Internal.UnitVal.toInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L67-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">ofNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Creates a `UnitVal` from a `Nat`.\n","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.ofNat","kind":"def","line":60,"name":"Std.Time.Internal.UnitVal.ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L60-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instDecidableLeUnitVal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">instDecidableLeUnitVal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">z</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instDecidableLeUnitVal","kind":"instance","line":55,"name":"Std.Time.Internal.instDecidableLeUnitVal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L55-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instLawfulEqOrdUnitVal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">instLawfulEqOrdUnitVal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <span class=\"fn\">(<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instLawfulEqOrdUnitVal","kind":"instance","line":52,"name":"Std.Time.Internal.instLawfulEqOrdUnitVal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L52-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instTransOrdUnitVal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">instTransOrdUnitVal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <span class=\"fn\">(<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instTransOrdUnitVal","kind":"instance","line":49,"name":"Std.Time.Internal.instTransOrdUnitVal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L49-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instOrientedOrdUnitVal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">instOrientedOrdUnitVal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.OrientedOrd\">OrientedOrd</a> <span class=\"fn\">(<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instOrientedOrdUnitVal","kind":"instance","line":46,"name":"Std.Time.Internal.instOrientedOrdUnitVal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L46-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.compare_def\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">compare_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">x</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord.compare\">compare</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord.compare\">compare</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val\">val</a></span> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val\">val</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.compare_def","kind":"theorem","line":43,"name":"Std.Time.Internal.UnitVal.compare_def","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L43-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instOrdUnitVal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">instOrdUnitVal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <span class=\"fn\">(<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instOrdUnitVal","kind":"instance","line":40,"name":"Std.Time.Internal.instOrdUnitVal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L40-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instLEUnitVal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">instLEUnitVal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <span class=\"fn\">(<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instLEUnitVal","kind":"instance","line":37,"name":"Std.Time.Internal.instLEUnitVal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L37-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instDecidableEqUnitVal.decEq\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">instDecidableEqUnitVal</span>.<span class=\"name\">decEq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α✝</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instDecidableEqUnitVal.decEq","kind":"def","line":35,"name":"Std.Time.Internal.instDecidableEqUnitVal.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instDecidableEqUnitVal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">instDecidableEqUnitVal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instDecidableEqUnitVal","kind":"instance","line":35,"name":"Std.Time.Internal.instDecidableEqUnitVal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instInhabitedUnitVal.default\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">instInhabitedUnitVal</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instInhabitedUnitVal.default","kind":"def","line":35,"name":"Std.Time.Internal.instInhabitedUnitVal.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instInhabitedUnitVal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">instInhabitedUnitVal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.instInhabitedUnitVal","kind":"instance","line":35,"name":"Std.Time.Internal.instInhabitedUnitVal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>","info":{"doc":"Value inside the UnitVal Value.\n","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val","kind":"def","line":34,"name":"Std.Time.Internal.UnitVal.val","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">ofInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Creates a `UnitVal` from an `Int`.\n","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.ofInt","kind":"ctor","line":29,"name":"Std.Time.Internal.UnitVal.ofInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.ext_iff\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val\">val</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val\">val</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.ext_iff","kind":"theorem","line":24,"name":"Std.Time.Internal.UnitVal.ext_iff","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.ext\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\">UnitVal</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val\">val</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val\">val</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.ext","kind":"theorem","line":24,"name":"Std.Time.Internal.UnitVal.ext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UnitVal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">Rat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A structure representing a unit of a given ratio type `α`.\n","docLink":"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal","kind":"structure","line":21,"name":"Std.Time.Internal.UnitVal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Internal/UnitVal.lean#L21-L35"}}],"imports":["Init.Data.Order.Ord","Init.Data.Rat.Basic"],"instances":[{"className":"Inhabited","name":"Std.Time.Internal.instInhabitedUnitVal","typeNames":["Std.Time.Internal.UnitVal"]},{"className":"Decidable","name":"Std.Time.Internal.instDecidableEqUnitVal","typeNames":["Eq"]},{"className":"LE","name":"Std.Time.Internal.instLEUnitVal","typeNames":["Std.Time.Internal.UnitVal"]},{"className":"Ord","name":"Std.Time.Internal.instOrdUnitVal","typeNames":["Std.Time.Internal.UnitVal"]},{"className":"Std.OrientedCmp","name":"Std.Time.Internal.instOrientedOrdUnitVal","typeNames":["Std.Time.Internal.UnitVal"]},{"className":"Std.TransCmp","name":"Std.Time.Internal.instTransOrdUnitVal","typeNames":["Std.Time.Internal.UnitVal"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.Internal.instLawfulEqOrdUnitVal","typeNames":["Std.Time.Internal.UnitVal"]},{"className":"Decidable","name":"Std.Time.Internal.instDecidableLeUnitVal","typeNames":["LE.le"]},{"className":"OfNat","name":"Std.Time.Internal.UnitVal.instOfNat","typeNames":["Std.Time.Internal.UnitVal"]},{"className":"Repr","name":"Std.Time.Internal.UnitVal.instRepr","typeNames":["Std.Time.Internal.UnitVal"]},{"className":"LE","name":"Std.Time.Internal.UnitVal.instLE","typeNames":["Std.Time.Internal.UnitVal"]},{"className":"LT","name":"Std.Time.Internal.UnitVal.instLT","typeNames":["Std.Time.Internal.UnitVal"]},{"className":"Add","name":"Std.Time.Internal.UnitVal.instAdd","typeNames":["Std.Time.Internal.UnitVal"]},{"className":"Sub","name":"Std.Time.Internal.UnitVal.instSub","typeNames":["Std.Time.Internal.UnitVal"]},{"className":"Neg","name":"Std.Time.Internal.UnitVal.instNeg","typeNames":["Std.Time.Internal.UnitVal"]},{"className":"ToString","name":"Std.Time.Internal.UnitVal.instToString","typeNames":["Std.Time.Internal.UnitVal"]}],"name":"Std.Time.Internal.UnitVal"}