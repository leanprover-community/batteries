{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/ExposeNames.html#Lean.Meta.withExposedNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">withExposedNames</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Creates a temporary local context where all names are exposed, and executes `k` ","docLink":"./Lean/Meta/Tactic/ExposeNames.html#Lean.Meta.withExposedNames","kind":"def","line":66,"name":"Lean.Meta.withExposedNames","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/ExposeNames.lean#L66-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/ExposeNames.html#Lean.MVarId.exposeNames\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">exposeNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span></div></div>","info":{"doc":"Creates a new goal whose local context has been \"exposed\" so that every local declaration has a clear, accessible name.\nIf no local declarations require renaming, the original goal is returned unchanged.\n","docLink":"./Lean/Meta/Tactic/ExposeNames.html#Lean.MVarId.exposeNames","kind":"def","line":55,"name":"Lean.MVarId.exposeNames","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/ExposeNames.lean#L55-L64"}}],"imports":["Lean.Meta.Tactic.Util"],"instances":[],"name":"Lean.Meta.Tactic.ExposeNames"}