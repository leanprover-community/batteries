{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/PropagateInj.html#Lean.Meta.Grind.mkInjEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">mkInjEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"If `e` is an application of the form `f a` where `f` is an injective function\nin `(← get).inj.fns`, asserts `f⁻¹ (f a) = a`\n","docLink":"./Lean/Meta/Tactic/Grind/PropagateInj.html#Lean.Meta.Grind.mkInjEq","kind":"def","line":14,"name":"Lean.Meta.Grind.mkInjEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/PropagateInj.lean#L14-L24"}}],"imports":["Lean.Meta.Tactic.Grind.Types","Init.Grind.Propagator","Init.Grind.Injective","Lean.Meta.Tactic.Grind.PropagatorAttr","Lean.Meta.Tactic.Grind.Simp"],"instances":[],"name":"Lean.Meta.Tactic.Grind.PropagateInj"}