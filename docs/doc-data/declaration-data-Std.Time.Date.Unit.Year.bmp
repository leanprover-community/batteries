{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.Valid\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">Valid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">day</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"Checks if the given date is valid for the specified year, month, and day.\n","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.Valid","kind":"def","line":124,"name":"Std.Time.Year.Offset.Valid","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L124-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.weeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">weeks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Internal.Bounded.LE</a> <span class=\"fn\">52</span> <span class=\"fn\">53</span></span></div></div>","info":{"doc":"Calculates the number of weeks in the specified `year`.\n","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.weeks","kind":"def","line":111,"name":"Std.Time.Year.Offset.weeks","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L111-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.days\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">days</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Internal.Bounded.LE</a> <span class=\"fn\">365</span> <span class=\"fn\">366</span></span></div></div>","info":{"doc":"Calculates the number of days in the specified `year`.\n","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.days","kind":"def","line":103,"name":"Std.Time.Year.Offset.days","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L103-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.era\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">era</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Era</a></div></div>","info":{"doc":"Returns the `Era` of the `Year`.\n","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.era","kind":"def","line":95,"name":"Std.Time.Year.Offset.era","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L95-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.isLeap\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">isLeap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Determines if a year is a leap year in the proleptic Gregorian calendar.\n","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.isLeap","kind":"def","line":88,"name":"Std.Time.Year.Offset.isLeap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L88-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.toMonths\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toMonths</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a></div></div>","info":{"doc":"Converts the `Year` offset to a `Month` offset.\n","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.toMonths","kind":"def","line":81,"name":"Std.Time.Year.Offset.toMonths","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L81-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.toInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">offset</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>","info":{"doc":"Converts the `Year` offset to an `Int`.\n","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.toInt","kind":"def","line":74,"name":"Std.Time.Year.Offset.toInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L74-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a></div></div>","info":{"doc":"Creates an `Offset` from an integer.\n","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.ofInt","kind":"def","line":67,"name":"Std.Time.Year.Offset.ofInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L67-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a></div></div>","info":{"doc":"Creates an `Offset` from a natural number.\n","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.ofNat","kind":"def","line":60,"name":"Std.Time.Year.Offset.ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L60-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instLawfulEqOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instLawfulEqOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instLawfulEqOrdOffset","kind":"instance","line":56,"name":"Std.Time.Year.instLawfulEqOrdOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instTransOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instTransOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instTransOrdOffset","kind":"instance","line":54,"name":"Std.Time.Year.instTransOrdOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOrdOffset","kind":"instance","line":52,"name":"Std.Time.Year.instOrdOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOfNatOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instOfNatOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOfNatOffset","kind":"instance","line":50,"name":"Std.Time.Year.instOfNatOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instDecidableLtOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instDecidableLtOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instDecidableLtOffset","kind":"instance","line":46,"name":"Std.Time.Year.instDecidableLtOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L46-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instDecidableLeOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instDecidableLeOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instDecidableLeOffset","kind":"instance","line":42,"name":"Std.Time.Year.instDecidableLeOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L42-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instToStringOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instToStringOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instToStringOffset","kind":"instance","line":40,"name":"Std.Time.Year.instToStringOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instLTOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instLTOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instLTOffset","kind":"instance","line":40,"name":"Std.Time.Year.instLTOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instLEOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instLEOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instLEOffset","kind":"instance","line":40,"name":"Std.Time.Year.instLEOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instNegOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instNegOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instNegOffset","kind":"instance","line":40,"name":"Std.Time.Year.instNegOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instSubOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instSubOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instSubOffset","kind":"instance","line":40,"name":"Std.Time.Year.instSubOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instAddOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instAddOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instAddOffset","kind":"instance","line":40,"name":"Std.Time.Year.instAddOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instInhabitedOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instInhabitedOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instInhabitedOffset","kind":"instance","line":40,"name":"Std.Time.Year.instInhabitedOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instDecidableEqOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instDecidableEqOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instDecidableEqOffset","kind":"instance","line":40,"name":"Std.Time.Year.instDecidableEqOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instReprOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instReprOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instReprOffset","kind":"instance","line":40,"name":"Std.Time.Year.instReprOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`Offset` represents a year offset, defined as an `Int`.\n","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset","kind":"def","line":36,"name":"Std.Time.Year.Offset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L36-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instToStringEra\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instToStringEra</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Era</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instToStringEra","kind":"instance","line":31,"name":"Std.Time.Year.instToStringEra","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L31-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instInhabitedEra\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instInhabitedEra</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Era</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instInhabitedEra","kind":"instance","line":29,"name":"Std.Time.Year.instInhabitedEra","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instInhabitedEra.default\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instInhabitedEra</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Era</a></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instInhabitedEra.default","kind":"def","line":29,"name":"Std.Time.Year.instInhabitedEra.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instReprEra.repr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instReprEra</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Era</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instReprEra.repr","kind":"def","line":29,"name":"Std.Time.Year.instReprEra.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instReprEra\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instReprEra</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Era</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instReprEra","kind":"instance","line":29,"name":"Std.Time.Year.instReprEra","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era.ce\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Era</span>.<span class=\"name\">ce</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Era</a></div></div>","info":{"doc":"The Common Era (CE), represents dates from year 0 onwards. ","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era.ce","kind":"ctor","line":27,"name":"Std.Time.Year.Era.ce","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L27-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era.bce\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Era</span>.<span class=\"name\">bce</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Era</a></div></div>","info":{"doc":"The era before the Common Era (BCE), always represents a date before year 0. ","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era.bce","kind":"ctor","line":24,"name":"Std.Time.Year.Era.bce","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L24-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Era</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Defines the different eras.\n","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era","kind":"inductive","line":20,"name":"Std.Time.Year.Era","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Date/Unit/Year.lean#L20-L29"}}],"imports":["Std.Time.Date.Unit.Month"],"instances":[{"className":"Repr","name":"Std.Time.Year.instReprEra","typeNames":["Std.Time.Year.Era"]},{"className":"Inhabited","name":"Std.Time.Year.instInhabitedEra","typeNames":["Std.Time.Year.Era"]},{"className":"ToString","name":"Std.Time.Year.instToStringEra","typeNames":["Std.Time.Year.Era"]},{"className":"Repr","name":"Std.Time.Year.instReprOffset","typeNames":["Std.Time.Year.Offset"]},{"className":"Decidable","name":"Std.Time.Year.instDecidableEqOffset","typeNames":["Eq"]},{"className":"Inhabited","name":"Std.Time.Year.instInhabitedOffset","typeNames":["Std.Time.Year.Offset"]},{"className":"Add","name":"Std.Time.Year.instAddOffset","typeNames":["Std.Time.Year.Offset"]},{"className":"Sub","name":"Std.Time.Year.instSubOffset","typeNames":["Std.Time.Year.Offset"]},{"className":"Neg","name":"Std.Time.Year.instNegOffset","typeNames":["Std.Time.Year.Offset"]},{"className":"LE","name":"Std.Time.Year.instLEOffset","typeNames":["Std.Time.Year.Offset"]},{"className":"LT","name":"Std.Time.Year.instLTOffset","typeNames":["Std.Time.Year.Offset"]},{"className":"ToString","name":"Std.Time.Year.instToStringOffset","typeNames":["Std.Time.Year.Offset"]},{"className":"Decidable","name":"Std.Time.Year.instDecidableLeOffset","typeNames":["LE.le"]},{"className":"Decidable","name":"Std.Time.Year.instDecidableLtOffset","typeNames":["LT.lt"]},{"className":"OfNat","name":"Std.Time.Year.instOfNatOffset","typeNames":["Std.Time.Year.Offset"]},{"className":"Ord","name":"Std.Time.Year.instOrdOffset","typeNames":["Std.Time.Year.Offset"]},{"className":"Std.TransCmp","name":"Std.Time.Year.instTransOrdOffset","typeNames":["Std.Time.Year.Offset"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.Year.instLawfulEqOrdOffset","typeNames":["Std.Time.Year.Offset"]}],"name":"Std.Time.Date.Unit.Year"}