{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Do/SPred/Notation/Basic.html#Std.Do.SPred.Notation.unpack\"><span class=\"name\">Std</span>.<span class=\"name\">Do</span>.<span class=\"name\">SPred</span>.<span class=\"name\">Notation</span>.<span class=\"name\">unpack</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadRef\">Lean.MonadRef</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Lean.Term</a> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Lean.Term</a></span></span></div></div>","info":{"doc":"Remove an `spred` layer from a `term` syntax object. ","docLink":"./Std/Do/SPred/Notation/Basic.html#Std.Do.SPred.Notation.unpack","kind":"opaque","line":36,"name":"Std.Do.SPred.Notation.unpack","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Do/SPred/Notation/Basic.lean#L36-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Do/SPred/Notation/Basic.html#Std.Do.«termTerm(_)»\"><span class=\"name\">Std</span>.<span class=\"name\">Do</span>.<span class=\"name\">«termTerm(_)»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Std/Do/SPred/Notation/Basic.html#Std.Do.«termTerm(_)»","kind":"def","line":22,"name":"Std.Do.«termTerm(_)»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Do/SPred/Notation/Basic.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Do/SPred/Notation/Basic.html#Std.Do.«termSpred(_)»\"><span class=\"name\">Std</span>.<span class=\"name\">Do</span>.<span class=\"name\">«termSpred(_)»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Std/Do/SPred/Notation/Basic.html#Std.Do.«termSpred(_)»","kind":"def","line":21,"name":"Std.Do.«termSpred(_)»","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Do/SPred/Notation/Basic.lean#L21-L21"}}],"imports":["Std.Do.SPred.SPred","Init.NotationExtra"],"instances":[],"name":"Std.Do.SPred.Notation.Basic"}