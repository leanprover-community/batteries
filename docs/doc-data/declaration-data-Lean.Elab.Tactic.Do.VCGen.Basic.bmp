{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.mkSpecContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">mkSpecContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">optConfig </span><span class=\"fn\">lemmas</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ignoreStarArg</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">TacticM</a> <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context\">Context</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.mkSpecContext","kind":"def","line":198,"name":"Lean.Elab.Tactic.Do.mkSpecContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L198-L269"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.reduceProjBeta?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">reduceProjBeta?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"Reduces (1) Prod projection functions and (2) Projs in application heads,\nand (3) beta reduces. Will not unfold projection functions unless further beta reduction happens. ","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.reduceProjBeta?","kind":"def","line":166,"name":"Lean.Elab.Tactic.Do.reduceProjBeta?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L166-L196"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.getNumJoinParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">getNumJoinParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">joinTy </span><span class=\"fn\">resTy</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.getNumJoinParams","kind":"opaque","line":156,"name":"Lean.Elab.Tactic.Do.getNumJoinParams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L156-L164"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.isJP\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">isJP</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"TODO: Fix this when rewriting the do elaborator ","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.isJP","kind":"def","line":153,"name":"Lean.Elab.Tactic.Do.isJP","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L153-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.withLetDeclShared\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">withLetDeclShared</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type </span><span class=\"fn\">val</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Bool\">Bool</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <span class=\"fn\">α</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">LocalDeclKind</a> := <a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind.default\">LocalDeclKind.default</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.withLetDeclShared","kind":"def","line":146,"name":"Lean.Elab.Tactic.Do.withLetDeclShared","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L146-L151"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.isDuplicable\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">isDuplicable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.isDuplicable","kind":"def","line":132,"name":"Lean.Elab.Tactic.Do.isDuplicable","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L132-L144"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.knownJP?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">knownJP?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jp</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo\">JumpSiteInfo</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.knownJP?","kind":"def","line":129,"name":"Lean.Elab.Tactic.Do.knownJP?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L129-L130"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.withJP\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">withJP</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jp</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo\">JumpSiteInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <span class=\"fn\">α</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.withJP","kind":"def","line":126,"name":"Lean.Elab.Tactic.Do.withJP","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L126-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.instMonadLiftSimpMVCGenM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instMonadLiftSimpMVCGenM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Meta.SimpM</a> <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.instMonadLiftSimpMVCGenM","kind":"instance","line":123,"name":"Lean.Elab.Tactic.Do.instMonadLiftSimpMVCGenM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L123-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.liftSimpM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">liftSimpM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Meta.SimpM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.liftSimpM","kind":"def","line":115,"name":"Lean.Elab.Tactic.Do.liftSimpM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L115-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.emitVC\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">emitVC</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subGoal</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.emitVC","kind":"def","line":110,"name":"Lean.Elab.Tactic.Do.emitVC","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L110-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.addSubGoalAsVC\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">addSubGoalAsVC</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.addSubGoalAsVC","kind":"def","line":94,"name":"Lean.Elab.Tactic.Do.addSubGoalAsVC","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L94-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.ifOutOfFuel\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ifOutOfFuel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.ifOutOfFuel","kind":"def","line":88,"name":"Lean.Elab.Tactic.Do.ifOutOfFuel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L88-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.burnOne\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">burnOne</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.burnOne","kind":"def","line":81,"name":"Lean.Elab.Tactic.Do.burnOne","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L81-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.VCGenM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">VCGenM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.VCGenM","kind":"def","line":79,"name":"Lean.Elab.Tactic.Do.VCGenM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State.vcs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">State</span>.<span class=\"name\">vcs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span></div></div>","info":{"doc":"The verification conditions that have been generated so far.\n","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State.vcs","kind":"def","line":77,"name":"Lean.Elab.Tactic.Do.State.vcs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L77-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State.invariants\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">State</span>.<span class=\"name\">invariants</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span></div></div>","info":{"doc":"Holes of type `Invariant` that have been generated so far.\n","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State.invariants","kind":"def","line":73,"name":"Lean.Elab.Tactic.Do.State.invariants","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L73-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State.simpState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">State</span>.<span class=\"name\">simpState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.State\">Meta.Simp.State</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State.simpState","kind":"def","line":69,"name":"Lean.Elab.Tactic.Do.State.simpState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State.fuel\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">State</span>.<span class=\"name\">fuel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Fuel\">Fuel</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State.fuel","kind":"def","line":68,"name":"Lean.Elab.Tactic.Do.State.fuel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fuel</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Fuel\">Fuel</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">simpState</span> : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.State\">Meta.Simp.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">invariants </span><span class=\"fn\">vcs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State.mk","kind":"ctor","line":67,"name":"Lean.Elab.Tactic.Do.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L67-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.State","kind":"structure","line":67,"name":"Lean.Elab.Tactic.Do.State","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L67-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context.initialCtxSize\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Context</span>.<span class=\"name\">initialCtxSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context.initialCtxSize","kind":"def","line":65,"name":"Lean.Elab.Tactic.Do.Context.initialCtxSize","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context.jps\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Context</span>.<span class=\"name\">jps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarIdMap\">FVarIdMap</a> <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo\">JumpSiteInfo</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context.jps","kind":"def","line":64,"name":"Lean.Elab.Tactic.Do.Context.jps","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context.simprocs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Context</span>.<span class=\"name\">simprocs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Simproc.html#Lean.Meta.Simp.SimprocsArray\">Meta.Simp.SimprocsArray</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context.simprocs","kind":"def","line":63,"name":"Lean.Elab.Tactic.Do.Context.simprocs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context.simpCtx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Context</span>.<span class=\"name\">simpCtx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context\">Meta.Simp.Context</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context.simpCtx","kind":"def","line":62,"name":"Lean.Elab.Tactic.Do.Context.simpCtx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context.specThms\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Context</span>.<span class=\"name\">specThms</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecAttr.SpecTheorems</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context.specThms","kind":"def","line":61,"name":"Lean.Elab.Tactic.Do.Context.specThms","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context.config\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Context</span>.<span class=\"name\">config</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Tactic/Do/Syntax.html#Lean.Elab.Tactic.Do.VCGen.Config\">VCGen.Config</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context.config","kind":"def","line":60,"name":"Lean.Elab.Tactic.Do.Context.config","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">config</span> : <a href=\"./Std/Tactic/Do/Syntax.html#Lean.Elab.Tactic.Do.VCGen.Config\">VCGen.Config</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">specThms</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecAttr.SpecTheorems</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">simpCtx</span> : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context\">Meta.Simp.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">simprocs</span> : <a href=\"./Lean/Meta/Tactic/Simp/Simproc.html#Lean.Meta.Simp.SimprocsArray\">Meta.Simp.SimprocsArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jps</span> : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarIdMap\">FVarIdMap</a> <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo\">JumpSiteInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initialCtxSize</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context\">Context</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context.mk","kind":"ctor","line":59,"name":"Lean.Elab.Tactic.Do.Context.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Context","kind":"structure","line":59,"name":"Lean.Elab.Tactic.Do.Context","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L59-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo.joinPrf\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">JumpSiteInfo</span>.<span class=\"name\">joinPrf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo\">JumpSiteInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"The proof that jump sites should use to discharge `Hᵢ ⊢ₛ wp[jp a b c] Q`.\n","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo.joinPrf","kind":"def","line":57,"name":"Lean.Elab.Tactic.Do.JumpSiteInfo.joinPrf","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo.hyps\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">JumpSiteInfo</span>.<span class=\"name\">hyps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo\">JumpSiteInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></div></div>","info":{"doc":"MVar to be filled with the stateful hypotheses of the match arm. This should include\nbindings from the local context `Lᵢ` of the call site and is of the form (`x,y,z ∈ Lᵢ`)\n`Σ Lᵢ, ⌜x = a ∧ y = b ∧ z = c⌝ ∧ Hᵢ`, where `..., Lᵢ ⊢ Hᵢ ⊢ₛ wp[jp x y z] Q` is the call site.\nThe `Σ Lᵢ` is short for something like\n`let x := ...; ∃ y (h : y = ...), ∃ z, ∃ (h₂ : p)`.\n","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo.hyps","kind":"def","line":53,"name":"Lean.Elab.Tactic.Do.JumpSiteInfo.hyps","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo.altLCtxIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">JumpSiteInfo</span>.<span class=\"name\">altLCtxIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo\">JumpSiteInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"The size of the local context in the alternative after the match has been split and all splitter\nparameters have been introduced.\nThis is so that we can construct the `Σ Lᵢ` part of the `hyps` field.\n","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo.altLCtxIdx","kind":"def","line":45,"name":"Lean.Elab.Tactic.Do.JumpSiteInfo.altLCtxIdx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo.altParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">JumpSiteInfo</span>.<span class=\"name\">altParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo\">JumpSiteInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"Parameter FVars of the match alternative. ","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo.altParams","kind":"def","line":39,"name":"Lean.Elab.Tactic.Do.JumpSiteInfo.altParams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo.altIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">JumpSiteInfo</span>.<span class=\"name\">altIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo\">JumpSiteInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Index of the match alternative. ","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo.altIdx","kind":"def","line":37,"name":"Lean.Elab.Tactic.Do.JumpSiteInfo.altIdx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo.numJoinParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">JumpSiteInfo</span>.<span class=\"name\">numJoinParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo\">JumpSiteInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Number of join point arguments. ","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo.numJoinParams","kind":"def","line":35,"name":"Lean.Elab.Tactic.Do.JumpSiteInfo.numJoinParams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">JumpSiteInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numJoinParams </span><span class=\"fn\">altIdx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">altParams</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">altLCtxIdx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hyps</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">joinPrf</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo\">JumpSiteInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo.mk","kind":"ctor","line":33,"name":"Lean.Elab.Tactic.Do.JumpSiteInfo.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">JumpSiteInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.JumpSiteInfo","kind":"structure","line":33,"name":"Lean.Elab.Tactic.Do.JumpSiteInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L33-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.elabConfig\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">elabConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">TacticM</a> <a href=\"./Std/Tactic/Do/Syntax.html#Lean.Elab.Tactic.Do.VCGen.Config\">VCGen.Config</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.elabConfig","kind":"def","line":31,"name":"Lean.Elab.Tactic.Do.elabConfig","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.instDecidableEqFuel\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instDecidableEqFuel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Fuel\">Fuel</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.instDecidableEqFuel","kind":"instance","line":29,"name":"Lean.Elab.Tactic.Do.instDecidableEqFuel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.instDecidableEqFuel.decEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instDecidableEqFuel</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Fuel\">Fuel</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.instDecidableEqFuel.decEq","kind":"def","line":29,"name":"Lean.Elab.Tactic.Do.instDecidableEqFuel.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Fuel.unlimited\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Fuel</span>.<span class=\"name\">unlimited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Fuel\">Fuel</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Fuel.unlimited","kind":"ctor","line":28,"name":"Lean.Elab.Tactic.Do.Fuel.unlimited","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Fuel.limited\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Fuel</span>.<span class=\"name\">limited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Fuel\">Fuel</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Fuel.limited","kind":"ctor","line":27,"name":"Lean.Elab.Tactic.Do.Fuel.limited","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Fuel\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Fuel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.Fuel","kind":"inductive","line":26,"name":"Lean.Elab.Tactic.Do.Fuel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L26-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.mvcgen.warning\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">mvcgen</span>.<span class=\"name\">warning</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Do/VCGen/Basic.html#Lean.Elab.Tactic.Do.mvcgen.warning","kind":"opaque","line":20,"name":"Lean.Elab.Tactic.Do.mvcgen.warning","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Do/VCGen/Basic.lean#L20-L24"}}],"imports":["Lean.Elab.Tactic.Simp","Lean.Elab.Tactic.Do.Attr"],"instances":[{"className":"Decidable","name":"Lean.Elab.Tactic.Do.instDecidableEqFuel","typeNames":["Eq"]},{"className":"MonadLift","name":"Lean.Elab.Tactic.Do.instMonadLiftSimpMVCGenM","typeNames":["Lean.Meta.Simp.SimpM","Lean.Elab.Tactic.Do.VCGenM"]}],"name":"Lean.Elab.Tactic.Do.VCGen.Basic"}