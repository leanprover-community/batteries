{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/DNS.html#Std.Internal.UV.DNS.getNameInfo\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">DNS</span>.<span class=\"name\">getNameInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">host</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/System/Promise.html#IO.Promise\">IO.Promise</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> (<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Init/Prelude.html#String\">String</a>))</span>)</span></span></div></div>","info":{"doc":"Performs a reverse DNS lookup on a `SocketAddress`.\n","docLink":"./Std/Internal/UV/DNS.html#Std.Internal.UV.DNS.getNameInfo","kind":"opaque","line":29,"name":"Std.Internal.UV.DNS.getNameInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/DNS.lean#L29-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/DNS.html#Std.Internal.UV.DNS.getAddrInfo\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">DNS</span>.<span class=\"name\">getAddrInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">host </span><span class=\"fn\">service</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">family</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/System/Promise.html#IO.Promise\">IO.Promise</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">Net.IPAddr</a>)</span>)</span>)</span></span></div></div>","info":{"doc":"Asynchronously resolves a hostname and service to an array of socket addresses.\n","docLink":"./Std/Internal/UV/DNS.html#Std.Internal.UV.DNS.getAddrInfo","kind":"opaque","line":22,"name":"Std.Internal.UV.DNS.getAddrInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/UV/DNS.lean#L22-L27"}}],"imports":["Init.System.Promise","Init.Data.SInt","Std.Net"],"instances":[],"name":"Std.Internal.UV.DNS"}