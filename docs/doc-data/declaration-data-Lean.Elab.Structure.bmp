{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.elabStructureCommand\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">elabStructureCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.InductiveElabDescr\">InductiveElabDescr</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.elabStructureCommand","kind":"def","line":1505,"name":"Lean.Elab.Command.Structure.elabStructureCommand","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L1505-L1569"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.structureSyntaxToView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">structureSyntaxToView</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modifiers</span> : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\">StructView</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.structureSyntaxToView","kind":"def","line":413,"name":"Lean.Elab.Command.Structure.structureSyntaxToView","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L413-L467"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.checkValidFieldModifier\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">checkValidFieldModifier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modifiers</span> : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.checkValidFieldModifier","kind":"def","line":319,"name":"Lean.Elab.Command.Structure.checkValidFieldModifier","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L319-L327"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructFieldInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instInhabitedStructFieldInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructFieldInfo","kind":"instance","line":195,"name":"Lean.Elab.Command.Structure.instInhabitedStructFieldInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L195-L195"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructFieldInfo.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instInhabitedStructFieldInfo</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructFieldInfo.default","kind":"def","line":195,"name":"Lean.Elab.Command.Structure.instInhabitedStructFieldInfo.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L195-L195"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.resolvedDefault?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">resolvedDefault?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a></span></div></div>","info":{"doc":"The default that will be used for this structure. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.resolvedDefault?","kind":"def","line":194,"name":"Lean.Elab.Command.Structure.StructFieldInfo.resolvedDefault?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L194-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.inheritedDefaults\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">inheritedDefaults</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a>)</span></div></div>","info":{"doc":"The inherited default values, as parent structure / value pairs. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.inheritedDefaults","kind":"def","line":192,"name":"Lean.Elab.Command.Structure.StructFieldInfo.inheritedDefaults","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L192-L192"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.projFn?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">projFn?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"If this is an inherited field, the name of the projection function.\nUsed for adding terminfo for fields with overridden default values. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.projFn?","kind":"def","line":190,"name":"Lean.Elab.Command.Structure.StructFieldInfo.projFn?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L190-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.default?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">default?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a></span></div></div>","info":{"doc":"The default value, as explicitly given in this `structure`. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.default?","kind":"def","line":187,"name":"Lean.Elab.Command.Structure.StructFieldInfo.default?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L187-L187"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.projExpr?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">projExpr?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"An expression representing a `.fromSubobject` field as a projection of a `.subobject` field.\nUsed when making the constructor.\nNote: `.otherParent` fields are let decls, there is no need for `projExpr?`. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.projExpr?","kind":"def","line":185,"name":"Lean.Elab.Command.Structure.StructFieldInfo.projExpr?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L185-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.fvar\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">fvar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"Local variable for the field.\nAll fields (both real fields and parent projection fields) get a local variable.\nParent fields are ldecls constructed from non-parent fields. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.fvar","kind":"def","line":181,"name":"Lean.Elab.Command.Structure.StructFieldInfo.fvar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L181-L181"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.sourceStructNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">sourceStructNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"Structure names that are responsible for this field being here.\n- Empty if the field is a `newField`.\n- Otherwise, it is a stack with the last element being a parent in the `extends` clause.\n  The first element is the (indirect) parent that is responsible for this field.\n","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.sourceStructNames","kind":"def","line":177,"name":"Lean.Elab.Command.Structure.StructFieldInfo.sourceStructNames","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L177-L177"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.paramInfoOverrides\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">paramInfoOverrides</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.ExprMap\">ExprMap</a> (<a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a>)</span></div></div>","info":{"doc":"Overrides for the parameters' binder infos when making the projections. The first component is a ref for the binder. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.paramInfoOverrides","kind":"def","line":170,"name":"Lean.Elab.Command.Structure.StructFieldInfo.paramInfoOverrides","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L170-L170"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.binfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">binfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a></div></div>","info":{"doc":"Binder info to use when making the constructor. Only applies to those fields that will appear in the constructor. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.binfo","kind":"def","line":168,"name":"Lean.Elab.Command.Structure.StructFieldInfo.binfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L168-L168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"Name of projection function.\nRemark: for fields that don't get projection functions (like `fromSubobject` fields), only relevant for the auxiliary \"default value\" functions. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.declName","kind":"def","line":166,"name":"Lean.Elab.Command.Structure.StructFieldInfo.declName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L166-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.kind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">kind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.kind","kind":"def","line":163,"name":"Lean.Elab.Command.Structure.StructFieldInfo.kind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L163-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.name\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.name","kind":"def","line":162,"name":"Lean.Elab.Command.Structure.StructFieldInfo.name","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L162-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.ref","kind":"def","line":161,"name":"Lean.Elab.Command.Structure.StructFieldInfo.ref","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L161-L161"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">binfo</span> : <a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">paramInfoOverrides</span> : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.ExprMap\">ExprMap</a> (<a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sourceStructNames</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvar</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">projExpr?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">default?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">projFn?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inheritedDefaults</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">resolvedDefault?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.mk","kind":"ctor","line":160,"name":"Lean.Elab.Command.Structure.StructFieldInfo.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L160-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Elaborated field info.\n","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo","kind":"structure","line":157,"name":"Lean.Elab.Command.Structure.StructFieldInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L157-L195"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instReprStructFieldDefault\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instReprStructFieldDefault</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instReprStructFieldDefault","kind":"instance","line":155,"name":"Lean.Elab.Command.Structure.instReprStructFieldDefault","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L155-L155"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instReprStructFieldDefault.repr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instReprStructFieldDefault</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instReprStructFieldDefault.repr","kind":"def","line":155,"name":"Lean.Elab.Command.Structure.instReprStructFieldDefault.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L155-L155"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault.autoParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldDefault</span>.<span class=\"name\">autoParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tactic</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault.autoParam","kind":"ctor","line":154,"name":"Lean.Elab.Command.Structure.StructFieldDefault.autoParam","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L154-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault.optParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldDefault</span>.<span class=\"name\">optParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault.optParam","kind":"ctor","line":153,"name":"Lean.Elab.Command.Structure.StructFieldDefault.optParam","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L153-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldDefault</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault","kind":"inductive","line":152,"name":"Lean.Elab.Command.Structure.StructFieldDefault","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L152-L155"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isInCtor\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">isInCtor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Returns `true` if the field is represented as a field in the constructor. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isInCtor","kind":"def","line":148,"name":"Lean.Elab.Command.Structure.StructFieldKind.isInCtor","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L148-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isParent\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">isParent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Returns `true` if the field represents a parent projection. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isParent","kind":"def","line":144,"name":"Lean.Elab.Command.Structure.StructFieldKind.isParent","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L144-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isSubobject\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">isSubobject</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isSubobject","kind":"def","line":141,"name":"Lean.Elab.Command.Structure.StructFieldKind.isSubobject","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L141-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isFromSubobject\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">isFromSubobject</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isFromSubobject","kind":"def","line":138,"name":"Lean.Elab.Command.Structure.StructFieldKind.isFromSubobject","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L138-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instReprStructFieldKind.repr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instReprStructFieldKind</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instReprStructFieldKind.repr","kind":"def","line":136,"name":"Lean.Elab.Command.Structure.instReprStructFieldKind.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L136-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instReprStructFieldKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instReprStructFieldKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instReprStructFieldKind","kind":"instance","line":136,"name":"Lean.Elab.Command.Structure.instReprStructFieldKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L136-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instDecidableEqStructFieldKind.decEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instDecidableEqStructFieldKind</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instDecidableEqStructFieldKind.decEq","kind":"def","line":136,"name":"Lean.Elab.Command.Structure.instDecidableEqStructFieldKind.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L136-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instDecidableEqStructFieldKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instDecidableEqStructFieldKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instDecidableEqStructFieldKind","kind":"instance","line":136,"name":"Lean.Elab.Command.Structure.instDecidableEqStructFieldKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L136-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructFieldKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instInhabitedStructFieldKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructFieldKind","kind":"instance","line":136,"name":"Lean.Elab.Command.Structure.instInhabitedStructFieldKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L136-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructFieldKind.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instInhabitedStructFieldKind</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructFieldKind.default","kind":"def","line":136,"name":"Lean.Elab.Command.Structure.instInhabitedStructFieldKind.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L136-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.otherParent\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">otherParent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">structName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></div></div>","info":{"doc":"The field represents a parent projection for a parent that is not itself embedded as a subobject.\n(Note: parents of `subobject` fields are `otherParent` fields.)\nNot represented as a constructor argument. Will only have a projection function if it is a direct parent.\nDefault values are not allowed. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.otherParent","kind":"ctor","line":131,"name":"Lean.Elab.Command.Structure.StructFieldKind.otherParent","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L131-L135"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.subobject\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">subobject</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">structName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></div></div>","info":{"doc":"The field is an embedded parent structure.\nRepresented as a constructor argument. Will have a projection function.\nDefault values are not allowed. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.subobject","kind":"ctor","line":127,"name":"Lean.Elab.Command.Structure.StructFieldKind.subobject","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L127-L130"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.fromSubobject\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">fromSubobject</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></div></div>","info":{"doc":"Field that comes from a embedded parent field, and is represented within a `subobject` field.\nNot represented as a constructor argument. Will not have a projection function.\nIts inherited default value may be overridden. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.fromSubobject","kind":"ctor","line":123,"name":"Lean.Elab.Command.Structure.StructFieldKind.fromSubobject","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L123-L126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.copiedField\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">copiedField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></div></div>","info":{"doc":"Field that comes from a parent but will be represented as a new field.\nRepresented as a constructor argument. Will have a projection function.\nIts inherited default value may be overridden. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.copiedField","kind":"ctor","line":119,"name":"Lean.Elab.Command.Structure.StructFieldKind.copiedField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L119-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.newField\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">newField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></div></div>","info":{"doc":"New field defined by the `structure`.\nRepresented as a constructor argument. Will have a projection function. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.newField","kind":"ctor","line":116,"name":"Lean.Elab.Command.Structure.StructFieldKind.newField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L116-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Records the way in which a field is represented in a structure.\n\nStandard fields are one of `.newField`, `.copiedField`, or `.fromSubobject`.\nParent fields are one of `.subobject` or `.otherParent`.\n","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind","kind":"inductive","line":109,"name":"Lean.Elab.Command.Structure.StructFieldKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L109-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructParentInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instInhabitedStructParentInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructParentInfo","kind":"instance","line":107,"name":"Lean.Elab.Command.Structure.instInhabitedStructParentInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L107-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructParentInfo.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instInhabitedStructParentInfo</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructParentInfo.default","kind":"def","line":107,"name":"Lean.Elab.Command.Structure.instInhabitedStructParentInfo.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L107-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.subobject\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">subobject</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Whether this parent corresponds to a `subobject` field. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.subobject","kind":"def","line":106,"name":"Lean.Elab.Command.Structure.StructParentInfo.subobject","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L106-L106"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"Name of the projection function. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.declName","kind":"def","line":104,"name":"Lean.Elab.Command.Structure.StructParentInfo.declName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L104-L104"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.name\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"Field name for parent. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.name","kind":"def","line":102,"name":"Lean.Elab.Command.Structure.StructParentInfo.name","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L102-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.structName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">structName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.structName","kind":"def","line":100,"name":"Lean.Elab.Command.Structure.StructParentInfo.structName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L100-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.fvar\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">fvar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"A let variable that represents this structure parent. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.fvar","kind":"def","line":99,"name":"Lean.Elab.Command.Structure.StructParentInfo.fvar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.addTermInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">addTermInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Whether to add term info to the ref. False if there's no user-provided parent projection. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.addTermInfo","kind":"def","line":97,"name":"Lean.Elab.Command.Structure.StructParentInfo.addTermInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L97-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.ref","kind":"def","line":95,"name":"Lean.Elab.Command.Structure.StructParentInfo.ref","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L95-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addTermInfo</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvar</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">structName </span><span class=\"fn\">name </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subobject</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.mk","kind":"ctor","line":94,"name":"Lean.Elab.Command.Structure.StructParentInfo.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L94-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Elaborated parent info.\n","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo","kind":"structure","line":91,"name":"Lean.Elab.Command.Structure.StructParentInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L91-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.ctor\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructView</span>.<span class=\"name\">ctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">view</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\">StructView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.CtorView\">CtorView</a></div></div>","info":{"doc":"Gets the single constructor view from the underlying `InductiveView`.\nRecall that `structure`s have exactly one constructor.\n","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.ctor","kind":"def","line":84,"name":"Lean.Elab.Command.Structure.StructView.ctor","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L84-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instInhabitedStructView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\">StructView</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructView","kind":"instance","line":82,"name":"Lean.Elab.Command.Structure.instInhabitedStructView","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L82-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructView.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instInhabitedStructView</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\">StructView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructView.default","kind":"def","line":82,"name":"Lean.Elab.Command.Structure.instInhabitedStructView.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L82-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.fields\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructView</span>.<span class=\"name\">fields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\">StructView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.fields","kind":"def","line":81,"name":"Lean.Elab.Command.Structure.StructView.fields","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L81-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.parents\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructView</span>.<span class=\"name\">parents</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\">StructView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.parents","kind":"def","line":80,"name":"Lean.Elab.Command.Structure.StructView.parents","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L80-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toInductiveView</span> : <a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.InductiveView\">InductiveView</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parents</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fields</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\">StructView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.mk","kind":"ctor","line":79,"name":"Lean.Elab.Command.Structure.StructView.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructView</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.InductiveView\">Lean.Elab.Command.InductiveView</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView","kind":"structure","line":79,"name":"Lean.Elab.Command.Structure.StructView","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L79-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.toInductiveView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructView</span>.<span class=\"name\">toInductiveView</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\">StructView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.InductiveView\">InductiveView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.toInductiveView","kind":"def","line":79,"name":"Lean.Elab.Command.Structure.StructView.toInductiveView","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L79-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.default?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">default?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault\">StructFieldViewDefault</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.default?","kind":"def","line":77,"name":"Lean.Elab.Command.Structure.StructFieldView.default?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L77-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.type?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">type?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.type?","kind":"def","line":76,"name":"Lean.Elab.Command.Structure.StructFieldView.type?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L76-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.binders\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">binders</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.binders","kind":"def","line":75,"name":"Lean.Elab.Command.Structure.StructFieldView.binders","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L75-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.rawName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">rawName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"The name of the field (with macro scopes).\nUsed when adding the field to the local context, for field elaboration. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.rawName","kind":"def","line":74,"name":"Lean.Elab.Command.Structure.StructFieldView.rawName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L74-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.name\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"The name of the field (without macro scopes). ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.name","kind":"def","line":71,"name":"Lean.Elab.Command.Structure.StructFieldView.name","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L71-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.nameId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">nameId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"Ref for the field name ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.nameId","kind":"def","line":69,"name":"Lean.Elab.Command.Structure.StructFieldView.nameId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.declName","kind":"def","line":67,"name":"Lean.Elab.Command.Structure.StructFieldView.declName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L67-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.binderInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">binderInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.binderInfo","kind":"def","line":66,"name":"Lean.Elab.Command.Structure.StructFieldView.binderInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L66-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.modifiers\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">modifiers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.modifiers","kind":"def","line":65,"name":"Lean.Elab.Command.Structure.StructFieldView.modifiers","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.ref","kind":"def","line":64,"name":"Lean.Elab.Command.Structure.StructFieldView.ref","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modifiers</span> : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">binderInfo</span> : <a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nameId</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name </span><span class=\"fn\">rawName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">binders</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">default?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault\">StructFieldViewDefault</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.mk","kind":"ctor","line":63,"name":"Lean.Elab.Command.Structure.StructFieldView.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents the data of the syntax of a structure field declaration.\n","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView","kind":"structure","line":60,"name":"Lean.Elab.Command.Structure.StructFieldView","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L60-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault.autoParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldViewDefault</span>.<span class=\"name\">autoParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tactic</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault\">StructFieldViewDefault</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault.autoParam","kind":"ctor","line":58,"name":"Lean.Elab.Command.Structure.StructFieldViewDefault.autoParam","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault.optParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldViewDefault</span>.<span class=\"name\">optParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault\">StructFieldViewDefault</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault.optParam","kind":"ctor","line":57,"name":"Lean.Elab.Command.Structure.StructFieldViewDefault.optParam","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldViewDefault</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault","kind":"inductive","line":56,"name":"Lean.Elab.Command.Structure.StructFieldViewDefault","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L56-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.type\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.type","kind":"def","line":54,"name":"Lean.Elab.Command.Structure.StructParentView.type","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.rawName?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">rawName?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"The name of the parent projection (with macro scopes). Used for local name during elaboration. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.rawName?","kind":"def","line":53,"name":"Lean.Elab.Command.Structure.StructParentView.rawName?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.name?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">name?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"The name of the parent projection (without macro scopes). ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.name?","kind":"def","line":51,"name":"Lean.Elab.Command.Structure.StructParentView.name?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.projRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">projRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"Ref to use for the parent projection. ","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.projRef","kind":"def","line":49,"name":"Lean.Elab.Command.Structure.StructParentView.projRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.ref","kind":"def","line":47,"name":"Lean.Elab.Command.Structure.StructParentView.ref","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref </span><span class=\"fn\">projRef</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name? </span><span class=\"fn\">rawName?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.mk","kind":"ctor","line":46,"name":"Lean.Elab.Command.Structure.StructParentView.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents the data of the syntax of a structure parent.\n","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView","kind":"structure","line":43,"name":"Lean.Elab.Command.Structure.StructParentView","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L43-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.structure.strictResolutionOrder\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">structure</span>.<span class=\"name\">strictResolutionOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.structure.strictResolutionOrder","kind":"opaque","line":27,"name":"Lean.Elab.Command.structure.strictResolutionOrder","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L27-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.structureDiamondWarning\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">structureDiamondWarning</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.structureDiamondWarning","kind":"opaque","line":22,"name":"Lean.Elab.Command.structureDiamondWarning","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Structure.lean#L22-L25"}}],"imports":["Lean.Meta.Structure","Lean.Elab.MutualInductive","Lean.Linter.Basic","Lean.DocString"],"instances":[{"className":"Inhabited","name":"Lean.Elab.Command.Structure.instInhabitedStructView","typeNames":["Lean.Elab.Command.Structure.StructView"]},{"className":"Inhabited","name":"Lean.Elab.Command.Structure.instInhabitedStructParentInfo","typeNames":["Lean.Elab.Command.Structure.StructParentInfo"]},{"className":"Inhabited","name":"Lean.Elab.Command.Structure.instInhabitedStructFieldKind","typeNames":["Lean.Elab.Command.Structure.StructFieldKind"]},{"className":"Decidable","name":"Lean.Elab.Command.Structure.instDecidableEqStructFieldKind","typeNames":["Eq"]},{"className":"Repr","name":"Lean.Elab.Command.Structure.instReprStructFieldKind","typeNames":["Lean.Elab.Command.Structure.StructFieldKind"]},{"className":"Repr","name":"Lean.Elab.Command.Structure.instReprStructFieldDefault","typeNames":["Lean.Elab.Command.Structure.StructFieldDefault"]},{"className":"Inhabited","name":"Lean.Elab.Command.Structure.instInhabitedStructFieldInfo","typeNames":["Lean.Elab.Command.Structure.StructFieldInfo"]}],"name":"Lean.Elab.Structure"}