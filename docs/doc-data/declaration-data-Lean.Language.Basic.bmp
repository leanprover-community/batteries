{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.mkIncrementalProcessor\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">mkIncrementalProcessor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">InitSnap</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">process</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">InitSnap</span></span> → <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingM\">ProcessingM</a> <span class=\"fn\">InitSnap</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">InitSnap</span></span>)</span></span></div></div>","info":{"doc":"Builds a function for processing a language using incremental snapshots by passing the previous\nsnapshot to `Language.process` on subsequent invocations. ","docLink":"./Lean/Language/Basic.html#Lean.Language.mkIncrementalProcessor","kind":"def","line":398,"name":"Lean.Language.mkIncrementalProcessor","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L398-L407"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.withHeaderExceptions\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">withHeaderExceptions</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ex</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">act</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingT\">ProcessingT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingM\">ProcessingM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Adds unexpected exceptions from header processing to the message log as a last resort; standard\nerrors should already have been caught earlier. ","docLink":"./Lean/Language/Basic.html#Lean.Language.withHeaderExceptions","kind":"def","line":388,"name":"Lean.Language.withHeaderExceptions","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L388-L394"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.diagnosticsOfHeaderError\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">diagnosticsOfHeaderError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingM\">ProcessingM</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics\">Snapshot.Diagnostics</a></span></div></div>","info":{"doc":"Creates diagnostics from a single error message that should span the whole file. ","docLink":"./Lean/Language/Basic.html#Lean.Language.diagnosticsOfHeaderError","kind":"def","line":378,"name":"Lean.Language.diagnosticsOfHeaderError","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L378-L386"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics.ofMessageLog\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span>.<span class=\"name\">Diagnostics</span>.<span class=\"name\">ofMessageLog</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msgLog</span> : <a href=\"./Lean/Message.html#Lean.MessageLog\">MessageLog</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics\">Diagnostics</a></span></div></div>","info":{"doc":"Creates snapshot message log from non-interactive message log, also allocating a mutable cell\nthat can be used by the server to memorize interactive diagnostics derived from the log.\n","docLink":"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics.ofMessageLog","kind":"def","line":370,"name":"Lean.Language.Snapshot.Diagnostics.ofMessageLog","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L370-L376"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instMonadLiftProcessingMProcessingTIO\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instMonadLiftProcessingMProcessingTIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingM\">ProcessingM</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingT\">ProcessingT</a> <a href=\"./Init/System/IO.html#IO\">IO</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instMonadLiftProcessingMProcessingTIO","kind":"instance","line":367,"name":"Lean.Language.instMonadLiftProcessingMProcessingTIO","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L367-L368"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingM\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">ProcessingM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Monad holding all relevant data for processing. ","docLink":"./Lean/Language/Basic.html#Lean.Language.ProcessingM","kind":"def","line":364,"name":"Lean.Language.ProcessingM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L364-L365"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingT\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">ProcessingT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>","info":{"doc":"Monad transformer holding all relevant data for processing. ","docLink":"./Lean/Language/Basic.html#Lean.Language.ProcessingT","kind":"def","line":362,"name":"Lean.Language.ProcessingT","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L362-L363"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">ProcessingContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toInputContext</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingContext\">ProcessingContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.ProcessingContext.mk","kind":"ctor","line":360,"name":"Lean.Language.ProcessingContext.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L360-L360"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingContext.toInputContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">ProcessingContext</span>.<span class=\"name\">toInputContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingContext\">ProcessingContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.ProcessingContext.toInputContext","kind":"def","line":360,"name":"Lean.Language.ProcessingContext.toInputContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L360-L360"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">ProcessingContext</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Context of an input processing invocation. ","docLink":"./Lean/Language/Basic.html#Lean.Language.ProcessingContext","kind":"structure","line":359,"name":"Lean.Language.ProcessingContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L359-L360"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.waitAll\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span>.<span class=\"name\">waitAll</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a>)</span></span></span></div></div>","info":{"doc":"Returns a task that waits on all snapshots in the tree. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.waitAll","kind":"def","line":351,"name":"Lean.Language.SnapshotTree.waitAll","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L351-L357"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.getAll\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span>.<span class=\"name\">getAll</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></span></div></div>","info":{"doc":"Waits on and returns all snapshots in the tree. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.getAll","kind":"def","line":347,"name":"Lean.Language.SnapshotTree.getAll","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L347-L349"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.runAndReport\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span>.<span class=\"name\">runAndReport</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">json</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">severityOverrides</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">NameMap</a> <a href=\"./Lean/Message.html#Lean.MessageSeverity\">MessageSeverity</a></span> := <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Runs a tree of snapshots to conclusion and incrementally report messages on stdout. Messages are\nreported in tree preorder. Returns whether any errors were reported.\nThis function is used by the cmdline driver; see `Lean.Server.FileWorker.reportSnapshots` for how\nthe language server reports snapshots asynchronously.  ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.runAndReport","kind":"def","line":336,"name":"Lean.Language.SnapshotTree.runAndReport","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L336-L345"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.maxErrors\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">maxErrors</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"Maximum number of errors to report. ","docLink":"./Lean/Language/Basic.html#Lean.Language.maxErrors","kind":"opaque","line":299,"name":"Lean.Language.maxErrors","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L299-L303"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.printMessageEndPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">printMessageEndPos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Option for printing end position of each message in addition to start position. Used for testing\nmessage ranges in the test suite. ","docLink":"./Lean/Language/Basic.html#Lean.Language.printMessageEndPos","kind":"opaque","line":292,"name":"Lean.Language.printMessageEndPos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L292-L297"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.foldM\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span>.<span class=\"name\">foldM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Runs a tree of snapshots to conclusion,\nfolding the function `f` over each snapshot in tree preorder. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.foldM","kind":"opaque","line":282,"name":"Lean.Language.SnapshotTree.foldM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L282-L290"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.forM\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span>.<span class=\"name\">forM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>","info":{"doc":"Runs a tree of snapshots to conclusion, incrementally performing `f` on each snapshot in tree\npreorder. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.forM","kind":"opaque","line":272,"name":"Lean.Language.SnapshotTree.forM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L272-L280"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instInhabitedDynamicSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instInhabitedDynamicSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">DynamicSnapshot</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instInhabitedDynamicSnapshot","kind":"instance","line":269,"name":"Lean.Language.instInhabitedDynamicSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L269-L270"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot.toTyped?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">DynamicSnapshot</span>.<span class=\"name\">toTyped?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snap</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">DynamicSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Returns the original snapshot value if it is of the given type. ","docLink":"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot.toTyped?","kind":"def","line":264,"name":"Lean.Language.DynamicSnapshot.toTyped?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L264-L267"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot.ofTyped\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">DynamicSnapshot</span>.<span class=\"name\">ofTyped</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">DynamicSnapshot</a></div></div>","info":{"doc":"Creates a `DynamicSnapshot` from a typed snapshot value. ","docLink":"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot.ofTyped","kind":"def","line":259,"name":"Lean.Language.DynamicSnapshot.ofTyped","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L259-L262"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instToSnapshotTreeDynamicSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instToSnapshotTreeDynamicSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">DynamicSnapshot</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instToSnapshotTreeDynamicSnapshot","kind":"instance","line":256,"name":"Lean.Language.instToSnapshotTreeDynamicSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L256-L257"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot.tree\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">DynamicSnapshot</span>.<span class=\"name\">tree</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">DynamicSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Thunk\">Thunk</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span></div></div>","info":{"doc":"Snapshot tree retrieved from `val` before erasure. We do thunk even the first level as accessing\nit too early can create some unnecessary tasks from `toSnapshotTree` that are otherwise avoided by\n`(sync := true)` when accessing only after elaboration has finished. Early access can even lead to\ndeadlocks when later forcing these unnecessary tasks on a starved thread pool.\n","docLink":"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot.tree","kind":"def","line":254,"name":"Lean.Language.DynamicSnapshot.tree","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L254-L254"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot.val\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">DynamicSnapshot</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">DynamicSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a></div></div>","info":{"doc":"Concrete snapshot value as `Dynamic`. ","docLink":"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot.val","kind":"def","line":247,"name":"Lean.Language.DynamicSnapshot.val","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L247-L247"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">DynamicSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tree</span> : <span class=\"fn\"><a href=\"./Init/Core.html#Thunk\">Thunk</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">DynamicSnapshot</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot.mk","kind":"ctor","line":245,"name":"Lean.Language.DynamicSnapshot.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L245-L245"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">DynamicSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Arbitrary snapshot type, used for extensibility. ","docLink":"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot","kind":"structure","line":244,"name":"Lean.Language.DynamicSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L244-L254"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instToSnapshotTreeSnapshotLeaf\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instToSnapshotTreeSnapshotLeaf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instToSnapshotTreeSnapshotLeaf","kind":"instance","line":241,"name":"Lean.Language.instToSnapshotTreeSnapshotLeaf","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L241-L242"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instTypeNameSnapshotLeaf\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instTypeNameSnapshotLeaf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instTypeNameSnapshotLeaf","kind":"instance","line":239,"name":"Lean.Language.instTypeNameSnapshotLeaf","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L239-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshotLeaf.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instInhabitedSnapshotLeaf</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshotLeaf.default","kind":"def","line":239,"name":"Lean.Language.instInhabitedSnapshotLeaf.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L239-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshotLeaf\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instInhabitedSnapshotLeaf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshotLeaf","kind":"instance","line":239,"name":"Lean.Language.instInhabitedSnapshotLeaf","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L239-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotLeaf</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshot</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf.mk","kind":"ctor","line":238,"name":"Lean.Language.SnapshotLeaf.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L238-L238"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf.toSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotLeaf</span>.<span class=\"name\">toSnapshot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf.toSnapshot","kind":"def","line":238,"name":"Lean.Language.SnapshotLeaf.toSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L238-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotLeaf</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Snapshot type without child nodes. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf","kind":"structure","line":237,"name":"Lean.Language.SnapshotLeaf","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L237-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.cancelRec\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">cancelRec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Recursively triggers all `SnapshotTask.cancelTk?` in the reachable tree, asynchronously.\n","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.cancelRec","kind":"opaque","line":229,"name":"Lean.Language.SnapshotTask.cancelRec","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L229-L235"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instToSnapshotTreeOption\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instToSnapshotTreeOption</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instToSnapshotTreeOption","kind":"instance","line":224,"name":"Lean.Language.instToSnapshotTreeOption","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L224-L227"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instToSnapshotTreeSnapshotTree\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instToSnapshotTreeSnapshotTree</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instToSnapshotTreeSnapshotTree","kind":"instance","line":221,"name":"Lean.Language.instToSnapshotTreeSnapshotTree","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L221-L222"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree.toSnapshotTree\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">ToSnapshotTree</span>.<span class=\"name\">toSnapshotTree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span></div></div>","info":{"doc":"Transforms a language-specific snapshot to a homogeneous snapshot tree. ","docLink":"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree.toSnapshotTree","kind":"def","line":218,"name":"Lean.Language.ToSnapshotTree.toSnapshotTree","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L218-L218"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">ToSnapshotTree</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshotTree</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree.mk","kind":"ctor","line":216,"name":"Lean.Language.ToSnapshotTree.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L216-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">ToSnapshotTree</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Helper class for projecting a heterogeneous hierarchy of snapshot classes to a homogeneous\nrepresentation. ","docLink":"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree","kind":"class","line":213,"name":"Lean.Language.ToSnapshotTree","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L213-L218"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instTypeNameSnapshotTree\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instTypeNameSnapshotTree</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instTypeNameSnapshotTree","kind":"instance","line":211,"name":"Lean.Language.instTypeNameSnapshotTree","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L211-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshotTree\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instInhabitedSnapshotTree</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshotTree","kind":"instance","line":211,"name":"Lean.Language.instInhabitedSnapshotTree","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L211-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshotTree.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instInhabitedSnapshotTree</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshotTree.default","kind":"def","line":211,"name":"Lean.Language.instInhabitedSnapshotTree.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L211-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.children\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span>.<span class=\"name\">children</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a>)</span></span></div></div>","info":{"doc":"The asynchronously available children of the snapshot tree node. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.children","kind":"def","line":210,"name":"Lean.Language.SnapshotTree.children","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L210-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.element\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span>.<span class=\"name\">element</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>","info":{"doc":"The immediately available element of the snapshot tree node. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.element","kind":"def","line":208,"name":"Lean.Language.SnapshotTree.element","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L208-L208"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">element</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">children</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTree.mk","kind":"ctor","line":206,"name":"Lean.Language.SnapshotTree.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L206-L206"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Tree of snapshots where each snapshot comes with an array of asynchronous further subtrees. Used\nfor asynchronously collecting information about the entirety of snapshots in the language server.\nThe involved tasks may form a DAG on the `Task` dependency level but this is not captured by this\ndata structure. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTree","kind":"structure","line":201,"name":"Lean.Language.SnapshotTree","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L201-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle.new\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotBundle</span>.<span class=\"name\">new</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">SnapshotBundle</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/Promise.html#IO.Promise\">IO.Promise</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Promise of snapshot value for the current document. When resolved, the language server will\nreport its result even before the current elaborator invocation has finished.\n","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle.new","kind":"def","line":199,"name":"Lean.Language.SnapshotBundle.new","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L199-L199"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle.old?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotBundle</span>.<span class=\"name\">old?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">SnapshotBundle</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SyntaxGuarded\">SyntaxGuarded</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">α</span>)</span>)</span></span></div></div>","info":{"doc":"Snapshot task of corresponding elaboration in previous document version if any, paired with its\nold syntax to be considered for reuse. Should be set to `none` as soon as reuse can be ruled out.\n","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle.old?","kind":"def","line":194,"name":"Lean.Language.SnapshotBundle.old?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L194-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotBundle</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">old?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SyntaxGuarded\">SyntaxGuarded</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">α</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">new</span> : <span class=\"fn\"><a href=\"./Init/System/Promise.html#IO.Promise\">IO.Promise</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">SnapshotBundle</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle.mk","kind":"ctor","line":189,"name":"Lean.Language.SnapshotBundle.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L189-L189"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotBundle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Pair of (optional) old snapshot task usable for incremental reuse and new snapshot promise for\nincremental reporting. Inside the elaborator, we build snapshots by carrying such bundles and then\nchecking if we can reuse `old?` if set or else redoing the corresponding elaboration step. In either\ncase, we derive new bundles for nested snapshots, if any, and finally `resolve` `new` to the result.\n\nNote that failing to `resolve` a created promise will block the language server indefinitely!\nWe use `withAlwaysResolvedPromise`/`withAlwaysResolvedPromises` to ensure this doesn't happen.\n\nIn the future, the 1-element history `old?` may be replaced with a global cache indexed by strong\nhashes but the promise will still need to be passed through the elaborator.\n","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle","kind":"structure","line":177,"name":"Lean.Language.SnapshotBundle","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L177-L199"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SyntaxGuarded.val\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SyntaxGuarded</span>.<span class=\"name\">val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SyntaxGuarded\">SyntaxGuarded</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"Potentially reusable value. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SyntaxGuarded.val","kind":"def","line":175,"name":"Lean.Language.SyntaxGuarded.val","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L175-L175"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SyntaxGuarded.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SyntaxGuarded</span>.<span class=\"name\">stx</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SyntaxGuarded\">SyntaxGuarded</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"Syntax to be inspected for reuse. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SyntaxGuarded.stx","kind":"def","line":173,"name":"Lean.Language.SyntaxGuarded.stx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L173-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SyntaxGuarded.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SyntaxGuarded</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SyntaxGuarded\">SyntaxGuarded</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.SyntaxGuarded.mk","kind":"ctor","line":171,"name":"Lean.Language.SyntaxGuarded.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L171-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SyntaxGuarded\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SyntaxGuarded</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Arbitrary value paired with a syntax that should be inspected when considering the value for reuse.\n","docLink":"./Lean/Language/Basic.html#Lean.Language.SyntaxGuarded","kind":"structure","line":168,"name":"Lean.Language.SyntaxGuarded","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L168-L175"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.get?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">get?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Returns task result if already finished or else `none`. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.get?","kind":"def","line":164,"name":"Lean.Language.SnapshotTask.get?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L164-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.get\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">get</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"Synchronously waits on the result of the task. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.get","kind":"def","line":160,"name":"Lean.Language.SnapshotTask.get","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L160-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.bindIO\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">bindIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">act</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">β</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span> := <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.stx?\">stx?</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">reportingRange</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange\">ReportingRange</a> := <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.reportingRange\">reportingRange</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cancelTk?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sync</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"Chains two snapshot tasks. The processed syntax and the reporting range are taken from the first\ntask if not specified; the processed syntax and the reporting range of the second task are\ndiscarded. The cancellation tokens of both tasks are discarded. They are replaced with the given\ntoken if any. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.bindIO","kind":"def","line":147,"name":"Lean.Language.SnapshotTask.bindIO","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L147-L158"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.map\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span> := <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.stx?\">stx?</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">reportingRange</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange\">ReportingRange</a> := <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.reportingRange\">reportingRange</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sync</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"Transforms a task's output without changing the processed syntax. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.map","kind":"def","line":142,"name":"Lean.Language.SnapshotTask.map","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L142-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.finished\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">finished</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Creates a finished snapshot task. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.finished","kind":"def","line":134,"name":"Lean.Language.SnapshotTask.finished","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L134-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ofIO\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">ofIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cancelTk?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">reportingRange</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange\">ReportingRange</a> := <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.defaultReportingRange\">defaultReportingRange</a> <span class=\"fn\">stx?</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">act</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Creates a snapshot task from the syntax processed by the task and a `BaseIO` action. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ofIO","kind":"def","line":125,"name":"Lean.Language.SnapshotTask.ofIO","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L125-L132"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshotTask\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instInhabitedSnapshotTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshotTask","kind":"instance","line":123,"name":"Lean.Language.instInhabitedSnapshotTask","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L123-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshotTask.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instInhabitedSnapshotTask</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshotTask.default","kind":"def","line":123,"name":"Lean.Language.instInhabitedSnapshotTask.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L123-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instNonemptySnapshotTask\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instNonemptySnapshotTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">α✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instNonemptySnapshotTask","kind":"instance","line":123,"name":"Lean.Language.instNonemptySnapshotTask","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L123-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.task\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">task</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Underlying task producing the snapshot. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.task","kind":"def","line":122,"name":"Lean.Language.SnapshotTask.task","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L122-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.cancelTk?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">cancelTk?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></span></div></div>","info":{"doc":"Cancellation token that can be set by the server to cancel the task when it detects the results\nare not needed anymore.\n","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.cancelTk?","kind":"def","line":120,"name":"Lean.Language.SnapshotTask.cancelTk?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L120-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.reportingRange\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">reportingRange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange\">ReportingRange</a></div></div>","info":{"doc":"Range that is marked as being processed by the server while the task is running. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.reportingRange","kind":"def","line":115,"name":"Lean.Language.SnapshotTask.reportingRange","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L115-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.stx?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">stx?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>","info":{"doc":"`Syntax` processed by this `SnapshotTask`.\nThe `Syntax` is used by the language server to determine whether to force this `SnapshotTask`\nwhen a request is made.\nIn general, the elaborator retains the following invariant:\nIf `stx?` is `none`, then this snapshot task (and all of its children) do not contain `InfoTree`\ninformation that can be used in the language server, and so the language server will ignore it\nwhen it is looking for an `InfoTree`.\nNonetheless, if `stx?` is `none`, then this snapshot task (and any of its children) may still\ncontain message log information.\n","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.stx?","kind":"def","line":113,"name":"Lean.Language.SnapshotTask.stx?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L113-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">reportingRange</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange\">ReportingRange</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cancelTk?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">task</span> : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.mk","kind":"ctor","line":101,"name":"Lean.Language.SnapshotTask.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L101-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A task producing some snapshot type (usually a subclass of `Snapshot`). ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask","kind":"structure","line":97,"name":"Lean.Language.SnapshotTask","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L97-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.defaultReportingRange\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">defaultReportingRange</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange\">ReportingRange</a></div></div>","info":{"doc":"Yields the default reporting range of a `Syntax`, which is just the `canonicalOnly` range\nof the syntax if any, or `inherit` otherwise.\n","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.defaultReportingRange","kind":"def","line":90,"name":"Lean.Language.SnapshotTask.defaultReportingRange","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L90-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange.ofOptionInheriting\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">ReportingRange</span>.<span class=\"name\">ofOptionInheriting</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Syntax.html#String.Range\">String.Range</a></span> → <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange\">ReportingRange</a></span></div></div>","info":{"doc":"Constructs a reporting range by replacing a missing range with `inherit`, which is a reasonable\ndefault to ensure that a range is shown in all cases.\n","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange.ofOptionInheriting","kind":"def","line":82,"name":"Lean.Language.SnapshotTask.ReportingRange.ofOptionInheriting","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L82-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.instInhabitedReportingRange\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">instInhabitedReportingRange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange\">ReportingRange</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.instInhabitedReportingRange","kind":"instance","line":80,"name":"Lean.Language.SnapshotTask.instInhabitedReportingRange","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L80-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.instInhabitedReportingRange.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">instInhabitedReportingRange</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange\">ReportingRange</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.instInhabitedReportingRange.default","kind":"def","line":80,"name":"Lean.Language.SnapshotTask.instInhabitedReportingRange.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L80-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange.skip\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">ReportingRange</span>.<span class=\"name\">skip</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange\">ReportingRange</a></div></div>","info":{"doc":"Do not mark as being processed. Child nodes are still visited. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange.skip","kind":"ctor","line":78,"name":"Lean.Language.SnapshotTask.ReportingRange.skip","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L78-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange.some\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">ReportingRange</span>.<span class=\"name\">some</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">range</span> : <a href=\"./Lean/Syntax.html#String.Range\">String.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange\">ReportingRange</a></div></div>","info":{"doc":"Use given range. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange.some","kind":"ctor","line":76,"name":"Lean.Language.SnapshotTask.ReportingRange.some","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L76-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange.inherit\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">ReportingRange</span>.<span class=\"name\">inherit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange\">ReportingRange</a></div></div>","info":{"doc":"Inherit range from outer task if any, or else the entire file. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange.inherit","kind":"ctor","line":74,"name":"Lean.Language.SnapshotTask.ReportingRange.inherit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L74-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTask</span>.<span class=\"name\">ReportingRange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Range that is marked as being processed by the server while a task is running. ","docLink":"./Lean/Language/Basic.html#Lean.Language.SnapshotTask.ReportingRange","kind":"inductive","line":72,"name":"Lean.Language.SnapshotTask.ReportingRange","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L72-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshot.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instInhabitedSnapshot</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshot.default","kind":"def","line":70,"name":"Lean.Language.instInhabitedSnapshot.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">instInhabitedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.instInhabitedSnapshot","kind":"instance","line":70,"name":"Lean.Language.instInhabitedSnapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.isFatal\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span>.<span class=\"name\">isFatal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Whether it should be indicated to the user that a fatal error (which should be part of\n`diagnostics`) occurred that prevents processing of the remainder of the file.\n","docLink":"./Lean/Language/Basic.html#Lean.Language.Snapshot.isFatal","kind":"def","line":69,"name":"Lean.Language.Snapshot.isFatal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.traces\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span>.<span class=\"name\">traces</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/Trace.html#Lean.TraceState\">TraceState</a></div></div>","info":{"doc":"Trace data produced by this step. Currently used only by `trace.profiler.output`, otherwise we\ndepend on the elaborator adding traces to `diagnostics` eventually.\n","docLink":"./Lean/Language/Basic.html#Lean.Language.Snapshot.traces","kind":"def","line":64,"name":"Lean.Language.Snapshot.traces","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.infoTree?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span>.<span class=\"name\">infoTree?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Elab.InfoTree</a></span></div></div>","info":{"doc":"General elaboration metadata produced by this step. ","docLink":"./Lean/Language/Basic.html#Lean.Language.Snapshot.infoTree?","kind":"def","line":59,"name":"Lean.Language.Snapshot.infoTree?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.diagnostics\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span>.<span class=\"name\">diagnostics</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics\">Diagnostics</a></div></div>","info":{"doc":"The messages produced by this step. The union of message logs of all finished snapshots is\nreported to the user. ","docLink":"./Lean/Language/Basic.html#Lean.Language.Snapshot.diagnostics","kind":"def","line":57,"name":"Lean.Language.Snapshot.diagnostics","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.desc\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span>.<span class=\"name\">desc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"Debug description shown by `trace.Elab.snapshotTree`, defaults to the caller's decl name. ","docLink":"./Lean/Language/Basic.html#Lean.Language.Snapshot.desc","kind":"def","line":53,"name":"Lean.Language.Snapshot.desc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">desc</span> : <a href=\"./Init/Prelude.html#String\">String</a> := by exact decl_name%.toString)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diagnostics</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics\">Diagnostics</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">infoTree?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Elab.InfoTree</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traces</span> : <a href=\"./Lean/Util/Trace.html#Lean.TraceState\">TraceState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isFatal</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.Snapshot.mk","kind":"ctor","line":51,"name":"Lean.Language.Snapshot.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The base class of all snapshots: all the generic information the language server needs about a\nsnapshot. ","docLink":"./Lean/Language/Basic.html#Lean.Language.Snapshot","kind":"structure","line":48,"name":"Lean.Language.Snapshot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L48-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span>.<span class=\"name\">Diagnostics</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics\">Diagnostics</a></div></div>","info":{"doc":"The empty set of diagnostics. ","docLink":"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics.empty","kind":"def","line":42,"name":"Lean.Language.Snapshot.Diagnostics.empty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L42-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.instInhabitedDiagnostics.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span>.<span class=\"name\">instInhabitedDiagnostics</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics\">Diagnostics</a></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.Snapshot.instInhabitedDiagnostics.default","kind":"def","line":40,"name":"Lean.Language.Snapshot.instInhabitedDiagnostics.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.instInhabitedDiagnostics\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span>.<span class=\"name\">instInhabitedDiagnostics</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics\">Diagnostics</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Language/Basic.html#Lean.Language.Snapshot.instInhabitedDiagnostics","kind":"instance","line":40,"name":"Lean.Language.Snapshot.instInhabitedDiagnostics","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics.interactiveDiagsRef?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span>.<span class=\"name\">Diagnostics</span>.<span class=\"name\">interactiveDiagsRef?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics\">Diagnostics</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a>)</span>)</span></span></div></div>","info":{"doc":"Dynamic mutable slot usable by the language server for memorizing interactive diagnostics. If\n`none`, interactive diagnostics are not remembered, which should only be used for messages not\ncontaining any interactive elements as client-side state will be lost on recreating a diagnostic.\n\nSee also section \"Communication\" in Lean/Server/README.md.\n","docLink":"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics.interactiveDiagsRef?","kind":"def","line":39,"name":"Lean.Language.Snapshot.Diagnostics.interactiveDiagsRef?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics.msgLog\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span>.<span class=\"name\">Diagnostics</span>.<span class=\"name\">msgLog</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics\">Diagnostics</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageLog\">MessageLog</a></div></div>","info":{"doc":"Non-interactive message log. ","docLink":"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics.msgLog","kind":"def","line":31,"name":"Lean.Language.Snapshot.Diagnostics.msgLog","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span>.<span class=\"name\">Diagnostics</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`MessageLog` with interactive diagnostics.\n\nCan be created using `Diagnostics.empty` or `Diagnostics.ofMessageLog`.\n","docLink":"./Lean/Language/Basic.html#Lean.Language.Snapshot.Diagnostics","kind":"structure","line":23,"name":"Lean.Language.Snapshot.Diagnostics","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Language/Basic.lean#L23-L40"}}],"imports":["Lean.Parser.Types","Lean.Util.Trace"],"instances":[{"className":"Inhabited","name":"Lean.Language.Snapshot.instInhabitedDiagnostics","typeNames":["Lean.Language.Snapshot.Diagnostics"]},{"className":"Inhabited","name":"Lean.Language.instInhabitedSnapshot","typeNames":["Lean.Language.Snapshot"]},{"className":"Inhabited","name":"Lean.Language.SnapshotTask.instInhabitedReportingRange","typeNames":["Lean.Language.SnapshotTask.ReportingRange"]},{"className":"Nonempty","name":"Lean.Language.instNonemptySnapshotTask","typeNames":["Lean.Language.SnapshotTask"]},{"className":"Inhabited","name":"Lean.Language.instInhabitedSnapshotTask","typeNames":["Lean.Language.SnapshotTask"]},{"className":"Inhabited","name":"Lean.Language.instInhabitedSnapshotTree","typeNames":["Lean.Language.SnapshotTree"]},{"className":"TypeName","name":"Lean.Language.instTypeNameSnapshotTree","typeNames":["Lean.Language.SnapshotTree"]},{"className":"Lean.Language.ToSnapshotTree","name":"Lean.Language.instToSnapshotTreeSnapshotTree","typeNames":["Lean.Language.SnapshotTree"]},{"className":"Lean.Language.ToSnapshotTree","name":"Lean.Language.instToSnapshotTreeOption","typeNames":["Option"]},{"className":"Inhabited","name":"Lean.Language.instInhabitedSnapshotLeaf","typeNames":["Lean.Language.SnapshotLeaf"]},{"className":"TypeName","name":"Lean.Language.instTypeNameSnapshotLeaf","typeNames":["Lean.Language.SnapshotLeaf"]},{"className":"Lean.Language.ToSnapshotTree","name":"Lean.Language.instToSnapshotTreeSnapshotLeaf","typeNames":["Lean.Language.SnapshotLeaf"]},{"className":"Lean.Language.ToSnapshotTree","name":"Lean.Language.instToSnapshotTreeDynamicSnapshot","typeNames":["Lean.Language.DynamicSnapshot"]},{"className":"Inhabited","name":"Lean.Language.instInhabitedDynamicSnapshot","typeNames":["Lean.Language.DynamicSnapshot"]},{"className":"MonadLift","name":"Lean.Language.instMonadLiftProcessingMProcessingTIO","typeNames":["Lean.Language.ProcessingM","Lean.Language.ProcessingT"]}],"name":"Lean.Language.Basic"}