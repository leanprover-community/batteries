{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.ofTimeZone\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">ZoneRules</span>.<span class=\"name\">ofTimeZone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tz</span> : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules\">ZoneRules</a></div></div>","info":{"doc":"Creates `ZoneRules` for the given `TimeZone`.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.ofTimeZone","kind":"def","line":219,"name":"Std.Time.TimeZone.ZoneRules.ofTimeZone","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L219-L225"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.timezoneAt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">ZoneRules</span>.<span class=\"name\">timezoneAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zr</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules\">ZoneRules</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tm</span> : <a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Timestamp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a></div></div>","info":{"doc":"Find the current `TimeZone` out of a `Transition` in a `ZoneRules`\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.timezoneAt","kind":"def","line":210,"name":"Std.Time.TimeZone.ZoneRules.timezoneAt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L210-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.findLocalTimeTypeForTimestamp\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">ZoneRules</span>.<span class=\"name\">findLocalTimeTypeForTimestamp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zr</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules\">ZoneRules</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">timestamp</span> : <a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Timestamp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a></div></div>","info":{"doc":"Finds the `LocalTimeType` corresponding to a given `Timestamp` in `ZoneRules`.\nIf the timestamp falls between two transitions, it returns the most recent transition before the timestamp.\nIf no transition is found, it falls back to `initialLocalTimeType`.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.findLocalTimeTypeForTimestamp","kind":"def","line":199,"name":"Std.Time.TimeZone.ZoneRules.findLocalTimeTypeForTimestamp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L199-L208"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.UTC\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">ZoneRules</span>.<span class=\"name\">UTC</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules\">ZoneRules</a></div></div>","info":{"doc":"Creates ZoneRules with a fixed offset of UTC (GMT+0).\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.UTC","kind":"def","line":192,"name":"Std.Time.TimeZone.ZoneRules.UTC","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L192-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.fixedOffsetZone\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">ZoneRules</span>.<span class=\"name\">fixedOffsetZone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">second</span> : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">identifier </span><span class=\"fn\">abbreviation</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules\">ZoneRules</a></div></div>","info":{"doc":"Creates ZoneRules with a fixed GMT offset.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.fixedOffsetZone","kind":"def","line":176,"name":"Std.Time.TimeZone.ZoneRules.fixedOffsetZone","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L176-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.timezoneAt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">Transition</span>.<span class=\"name\">timezoneAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">transitions</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\">Transition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tm</span> : <a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Timestamp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a></span></div></div>","info":{"doc":"Find the current `TimeZone` out of a `Transition` in a `Array Transition`\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.timezoneAt","kind":"def","line":165,"name":"Std.Time.TimeZone.Transition.timezoneAt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L165-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.findTransitionForTimestamp\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">Transition</span>.<span class=\"name\">findTransitionForTimestamp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">transitions</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\">Transition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">timestamp</span> : <a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Timestamp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\">Transition</a></span></div></div>","info":{"doc":"Finds the transition corresponding to a given timestamp in `Array Transition`.\nIf the timestamp falls between two transitions, it returns the most recent transition before the timestamp.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.findTransitionForTimestamp","kind":"def","line":156,"name":"Std.Time.TimeZone.Transition.findTransitionForTimestamp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L156-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.findTransitionIndexForTimestamp\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">Transition</span>.<span class=\"name\">findTransitionIndexForTimestamp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">transitions</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\">Transition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">timestamp</span> : <a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Timestamp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"Finds the transition corresponding to a given timestamp in `Array Transition`.\nIf the timestamp falls between two transitions, it returns the most recent transition before the timestamp.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.findTransitionIndexForTimestamp","kind":"def","line":148,"name":"Std.Time.TimeZone.Transition.findTransitionIndexForTimestamp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L148-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.apply\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">Transition</span>.<span class=\"name\">apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">timestamp</span> : <a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Timestamp</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">transition</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\">Transition</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Timestamp</a></div></div>","info":{"doc":"Applies the transition to a Timestamp.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.apply","kind":"def","line":141,"name":"Std.Time.TimeZone.Transition.apply","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L141-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.createTimeZoneFromTransition\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">Transition</span>.<span class=\"name\">createTimeZoneFromTransition</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">transition</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\">Transition</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a></div></div>","info":{"doc":"Create a TimeZone from a Transition.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.createTimeZoneFromTransition","kind":"def","line":132,"name":"Std.Time.TimeZone.Transition.createTimeZoneFromTransition","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L132-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedZoneRules\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instInhabitedZoneRules</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules\">ZoneRules</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedZoneRules","kind":"instance","line":128,"name":"Std.Time.TimeZone.instInhabitedZoneRules","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L128-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedZoneRules.default\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instInhabitedZoneRules</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules\">ZoneRules</a></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedZoneRules.default","kind":"def","line":128,"name":"Std.Time.TimeZone.instInhabitedZoneRules.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L128-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprZoneRules\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instReprZoneRules</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules\">ZoneRules</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprZoneRules","kind":"instance","line":128,"name":"Std.Time.TimeZone.instReprZoneRules","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L128-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprZoneRules.repr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instReprZoneRules</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules\">ZoneRules</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprZoneRules.repr","kind":"def","line":128,"name":"Std.Time.TimeZone.instReprZoneRules.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L128-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.transitions\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">ZoneRules</span>.<span class=\"name\">transitions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules\">ZoneRules</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\">Transition</a></span></div></div>","info":{"doc":"The array of transitions for the time zone.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.transitions","kind":"def","line":126,"name":"Std.Time.TimeZone.ZoneRules.transitions","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L126-L126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.initialLocalTimeType\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">ZoneRules</span>.<span class=\"name\">initialLocalTimeType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules\">ZoneRules</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a></div></div>","info":{"doc":"The first `LocalTimeType` used as a fallback when no matching transition is found.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.initialLocalTimeType","kind":"def","line":121,"name":"Std.Time.TimeZone.ZoneRules.initialLocalTimeType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L121-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">ZoneRules</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initialLocalTimeType</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">transitions</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\">Transition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules\">ZoneRules</a></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules.mk","kind":"ctor","line":116,"name":"Std.Time.TimeZone.ZoneRules.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L116-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">ZoneRules</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents the rules for a time zone.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules","kind":"structure","line":113,"name":"Std.Time.TimeZone.ZoneRules","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L113-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedTransition\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instInhabitedTransition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\">Transition</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedTransition","kind":"instance","line":111,"name":"Std.Time.TimeZone.instInhabitedTransition","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L111-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedTransition.default\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instInhabitedTransition</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\">Transition</a></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedTransition.default","kind":"def","line":111,"name":"Std.Time.TimeZone.instInhabitedTransition.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L111-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprTransition\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instReprTransition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\">Transition</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprTransition","kind":"instance","line":111,"name":"Std.Time.TimeZone.instReprTransition","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L111-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprTransition.repr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instReprTransition</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\">Transition</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprTransition.repr","kind":"def","line":111,"name":"Std.Time.TimeZone.instReprTransition.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L111-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.localTimeType\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">Transition</span>.<span class=\"name\">localTimeType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\">Transition</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a></div></div>","info":{"doc":"The local time type associated with this transition.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.localTimeType","kind":"def","line":110,"name":"Std.Time.TimeZone.Transition.localTimeType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L110-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.time\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">Transition</span>.<span class=\"name\">time</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\">Transition</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a></div></div>","info":{"doc":"The specific time of the transition event.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.time","kind":"def","line":105,"name":"Std.Time.TimeZone.Transition.time","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L105-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">Transition</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">time</span> : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">localTimeType</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\">Transition</a></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition.mk","kind":"ctor","line":100,"name":"Std.Time.TimeZone.Transition.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L100-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">Transition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents a time zone transition, mapping a time to a local time type.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.Transition","kind":"structure","line":97,"name":"Std.Time.TimeZone.Transition","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L97-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.getTimeZone\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">LocalTimeType</span>.<span class=\"name\">getTimeZone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">time</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">TimeZone</a></div></div>","info":{"doc":"Gets the `TimeZone` offset from a `LocalTimeType`.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.getTimeZone","kind":"def","line":89,"name":"Std.Time.TimeZone.LocalTimeType.getTimeZone","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L89-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedLocalTimeType\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instInhabitedLocalTimeType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedLocalTimeType","kind":"instance","line":85,"name":"Std.Time.TimeZone.instInhabitedLocalTimeType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedLocalTimeType.default\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instInhabitedLocalTimeType</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedLocalTimeType.default","kind":"def","line":85,"name":"Std.Time.TimeZone.instInhabitedLocalTimeType.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprLocalTimeType\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instReprLocalTimeType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprLocalTimeType","kind":"instance","line":85,"name":"Std.Time.TimeZone.instReprLocalTimeType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprLocalTimeType.repr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instReprLocalTimeType</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprLocalTimeType.repr","kind":"def","line":85,"name":"Std.Time.TimeZone.instReprLocalTimeType.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.identifier\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">LocalTimeType</span>.<span class=\"name\">identifier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"ID of the timezone\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.identifier","kind":"def","line":84,"name":"Std.Time.TimeZone.LocalTimeType.identifier","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L84-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.utLocal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">LocalTimeType</span>.<span class=\"name\">utLocal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.UTLocal\">UTLocal</a></div></div>","info":{"doc":"Distinguishes between universal time and local time.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.utLocal","kind":"def","line":79,"name":"Std.Time.TimeZone.LocalTimeType.utLocal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.wall\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">LocalTimeType</span>.<span class=\"name\">wall</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.StdWall\">StdWall</a></div></div>","info":{"doc":"Indicates if the time is wall clock or standard time.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.wall","kind":"def","line":74,"name":"Std.Time.TimeZone.LocalTimeType.wall","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L74-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.abbreviation\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">LocalTimeType</span>.<span class=\"name\">abbreviation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"The abbreviation for this local time type (e.g., \"EST\", \"PDT\").\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.abbreviation","kind":"def","line":69,"name":"Std.Time.TimeZone.LocalTimeType.abbreviation","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.isDst\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">LocalTimeType</span>.<span class=\"name\">isDst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Indicates if daylight saving time is observed.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.isDst","kind":"def","line":64,"name":"Std.Time.TimeZone.LocalTimeType.isDst","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.gmtOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">LocalTimeType</span>.<span class=\"name\">gmtOffset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/Offset.html#Std.Time.TimeZone.Offset\">Offset</a></div></div>","info":{"doc":"The offset from GMT for this local time.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.gmtOffset","kind":"def","line":59,"name":"Std.Time.TimeZone.LocalTimeType.gmtOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">LocalTimeType</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">gmtOffset</span> : <a href=\"./Std/Time/Zoned/Offset.html#Std.Time.TimeZone.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isDst</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">abbreviation</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wall</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.StdWall\">StdWall</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">utLocal</span> : <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.UTLocal\">UTLocal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">identifier</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">LocalTimeType</a></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType.mk","kind":"ctor","line":54,"name":"Std.Time.TimeZone.LocalTimeType.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">LocalTimeType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents a type of local time, including offset and daylight saving information.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType","kind":"structure","line":51,"name":"Std.Time.TimeZone.LocalTimeType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L51-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedStdWall\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instInhabitedStdWall</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.StdWall\">StdWall</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedStdWall","kind":"instance","line":49,"name":"Std.Time.TimeZone.instInhabitedStdWall","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedStdWall.default\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instInhabitedStdWall</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.StdWall\">StdWall</a></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedStdWall.default","kind":"def","line":49,"name":"Std.Time.TimeZone.instInhabitedStdWall.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprStdWall.repr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instReprStdWall</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.StdWall\">StdWall</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprStdWall.repr","kind":"def","line":49,"name":"Std.Time.TimeZone.instReprStdWall.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprStdWall\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instReprStdWall</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.StdWall\">StdWall</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprStdWall","kind":"instance","line":49,"name":"Std.Time.TimeZone.instReprStdWall","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.StdWall.standard\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">StdWall</span>.<span class=\"name\">standard</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.StdWall\">StdWall</a></div></div>","info":{"doc":"Standard time without adjustments for daylight saving.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.StdWall.standard","kind":"ctor","line":45,"name":"Std.Time.TimeZone.StdWall.standard","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L45-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.StdWall.wall\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">StdWall</span>.<span class=\"name\">wall</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.StdWall\">StdWall</a></div></div>","info":{"doc":"Time based on a wall clock, which can include daylight saving adjustments.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.StdWall.wall","kind":"ctor","line":40,"name":"Std.Time.TimeZone.StdWall.wall","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L40-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.StdWall\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">StdWall</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents types of wall clocks or standard times.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.StdWall","kind":"inductive","line":36,"name":"Std.Time.TimeZone.StdWall","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L36-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedUTLocal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instInhabitedUTLocal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.UTLocal\">UTLocal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedUTLocal","kind":"instance","line":34,"name":"Std.Time.TimeZone.instInhabitedUTLocal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedUTLocal.default\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instInhabitedUTLocal</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.UTLocal\">UTLocal</a></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instInhabitedUTLocal.default","kind":"def","line":34,"name":"Std.Time.TimeZone.instInhabitedUTLocal.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprUTLocal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instReprUTLocal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.UTLocal\">UTLocal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprUTLocal","kind":"instance","line":34,"name":"Std.Time.TimeZone.instReprUTLocal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprUTLocal.repr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">instReprUTLocal</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.UTLocal\">UTLocal</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.instReprUTLocal.repr","kind":"def","line":34,"name":"Std.Time.TimeZone.instReprUTLocal.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.UTLocal.local\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">UTLocal</span>.<span class=\"name\">local</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.UTLocal\">UTLocal</a></div></div>","info":{"doc":"Local time that is not necessarily UTC.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.UTLocal.local","kind":"ctor","line":30,"name":"Std.Time.TimeZone.UTLocal.local","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L30-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.UTLocal.ut\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">UTLocal</span>.<span class=\"name\">ut</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.UTLocal\">UTLocal</a></div></div>","info":{"doc":"Universal Time (UT), often referred to as UTC.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.UTLocal.ut","kind":"ctor","line":25,"name":"Std.Time.TimeZone.UTLocal.ut","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L25-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.UTLocal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">TimeZone</span>.<span class=\"name\">UTLocal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents the type of local time in relation to UTC.\n","docLink":"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.UTLocal","kind":"inductive","line":21,"name":"Std.Time.TimeZone.UTLocal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Zoned/ZoneRules.lean#L21-L34"}}],"imports":["Std.Time.DateTime","Std.Time.Zoned.TimeZone"],"instances":[{"className":"Repr","name":"Std.Time.TimeZone.instReprUTLocal","typeNames":["Std.Time.TimeZone.UTLocal"]},{"className":"Inhabited","name":"Std.Time.TimeZone.instInhabitedUTLocal","typeNames":["Std.Time.TimeZone.UTLocal"]},{"className":"Repr","name":"Std.Time.TimeZone.instReprStdWall","typeNames":["Std.Time.TimeZone.StdWall"]},{"className":"Inhabited","name":"Std.Time.TimeZone.instInhabitedStdWall","typeNames":["Std.Time.TimeZone.StdWall"]},{"className":"Repr","name":"Std.Time.TimeZone.instReprLocalTimeType","typeNames":["Std.Time.TimeZone.LocalTimeType"]},{"className":"Inhabited","name":"Std.Time.TimeZone.instInhabitedLocalTimeType","typeNames":["Std.Time.TimeZone.LocalTimeType"]},{"className":"Repr","name":"Std.Time.TimeZone.instReprTransition","typeNames":["Std.Time.TimeZone.Transition"]},{"className":"Inhabited","name":"Std.Time.TimeZone.instInhabitedTransition","typeNames":["Std.Time.TimeZone.Transition"]},{"className":"Repr","name":"Std.Time.TimeZone.instReprZoneRules","typeNames":["Std.Time.TimeZone.ZoneRules"]},{"className":"Inhabited","name":"Std.Time.TimeZone.instInhabitedZoneRules","typeNames":["Std.Time.TimeZone.ZoneRules"]}],"name":"Std.Time.Zoned.ZoneRules"}