{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Sorry.html#Lean.Declaration.hasNonSyntheticSorry\"><span class=\"name\">Lean</span>.<span class=\"name\">Declaration</span>.<span class=\"name\">hasNonSyntheticSorry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Declaration.html#Lean.Declaration\">Declaration</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/Sorry.html#Lean.Declaration.hasNonSyntheticSorry","kind":"def","line":43,"name":"Lean.Declaration.hasNonSyntheticSorry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Sorry.lean#L43-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Sorry.html#Lean.Declaration.hasSyntheticSorry\"><span class=\"name\">Lean</span>.<span class=\"name\">Declaration</span>.<span class=\"name\">hasSyntheticSorry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Declaration.html#Lean.Declaration\">Declaration</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/Sorry.html#Lean.Declaration.hasSyntheticSorry","kind":"def","line":40,"name":"Lean.Declaration.hasSyntheticSorry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Sorry.lean#L40-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Sorry.html#Lean.Declaration.hasSorry\"><span class=\"name\">Lean</span>.<span class=\"name\">Declaration</span>.<span class=\"name\">hasSorry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Declaration.html#Lean.Declaration\">Declaration</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/Sorry.html#Lean.Declaration.hasSorry","kind":"def","line":37,"name":"Lean.Declaration.hasSorry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Sorry.lean#L37-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Sorry.html#Lean.Expr.hasNonSyntheticSorry\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">hasNonSyntheticSorry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/Sorry.html#Lean.Expr.hasNonSyntheticSorry","kind":"def","line":34,"name":"Lean.Expr.hasNonSyntheticSorry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Sorry.lean#L34-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Sorry.html#Lean.Expr.hasSyntheticSorry\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">hasSyntheticSorry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/Sorry.html#Lean.Expr.hasSyntheticSorry","kind":"def","line":31,"name":"Lean.Expr.hasSyntheticSorry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Sorry.lean#L31-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Sorry.html#Lean.Expr.hasSorry\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">hasSorry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/Sorry.html#Lean.Expr.hasSorry","kind":"def","line":28,"name":"Lean.Expr.hasSorry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Sorry.lean#L28-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Sorry.html#Lean.Expr.isNonSyntheticSorry\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">isNonSyntheticSorry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Returns `true` if the expression is of the form `sorryAx _ false ..`. ","docLink":"./Lean/Util/Sorry.html#Lean.Expr.isNonSyntheticSorry","kind":"def","line":24,"name":"Lean.Expr.isNonSyntheticSorry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Sorry.lean#L24-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Sorry.html#Lean.Expr.isSyntheticSorry\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">isSyntheticSorry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Returns `true` if the expression is of the form `sorryAx _ true ..`. ","docLink":"./Lean/Util/Sorry.html#Lean.Expr.isSyntheticSorry","kind":"def","line":20,"name":"Lean.Expr.isSyntheticSorry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Sorry.lean#L20-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Sorry.html#Lean.Expr.isSorry\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">isSorry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Returns `true` if the expression is an application of `sorryAx`. ","docLink":"./Lean/Util/Sorry.html#Lean.Expr.isSorry","kind":"def","line":16,"name":"Lean.Expr.isSorry","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/Sorry.lean#L16-L18"}}],"imports":["Lean.Util.FindExpr","Lean.Declaration"],"instances":[],"name":"Lean.Util.Sorry"}