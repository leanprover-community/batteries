{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRefOfTypeName.rpcDecode\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableWithRpcRefOfTypeName</span>.<span class=\"name\">rpcDecode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Except.html#ExceptT\">ExceptT</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Init/Control/Id.html#Id\">Id</a>)</span> <span class=\"fn\">(<a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">WithRpcRef</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRefOfTypeName.rpcDecode","kind":"def","line":204,"name":"Lean.Server.instRpcEncodableWithRpcRefOfTypeName.rpcDecode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L204-L204"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRefOfTypeName.rpcEncode\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableWithRpcRefOfTypeName</span>.<span class=\"name\">rpcEncode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">WithRpcRef</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRefOfTypeName.rpcEncode","kind":"def","line":203,"name":"Lean.Server.instRpcEncodableWithRpcRefOfTypeName.rpcEncode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L203-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRefOfTypeName\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableWithRpcRefOfTypeName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">(<a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">WithRpcRef</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRefOfTypeName","kind":"instance","line":199,"name":"Lean.Server.instRpcEncodableWithRpcRefOfTypeName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L199-L204"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableStateMRpcObjectStore\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableStateMRpcObjectStore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">(<a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableStateMRpcObjectStore","kind":"instance","line":193,"name":"Lean.Server.instRpcEncodableStateMRpcObjectStore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L193-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableProd\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableProd","kind":"instance","line":187,"name":"Lean.Server.instRpcEncodableProd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L187-L191"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableArray\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableArray","kind":"instance","line":183,"name":"Lean.Server.instRpcEncodableArray","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L183-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableOption\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableOption</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableOption","kind":"instance","line":177,"name":"Lean.Server.instRpcEncodableOption","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L177-L179"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableOfFromJsonOfToJson\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableOfFromJsonOfToJson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableOfFromJsonOfToJson","kind":"instance","line":173,"name":"Lean.Server.instRpcEncodableOfFromJsonOfToJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L173-L175"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instNonemptyRpcEncodable\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instNonemptyRpcEncodable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instNonemptyRpcEncodable","kind":"instance","line":170,"name":"Lean.Server.instNonemptyRpcEncodable","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L170-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.rpcDecode\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span>.<span class=\"name\">rpcDecode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Control/Except.html#ExceptT\">ExceptT</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Init/Control/Id.html#Id\">Id</a>)</span> <span class=\"fn\">α</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.rpcDecode","kind":"def","line":167,"name":"Lean.Server.RpcEncodable.rpcDecode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L167-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.rpcEncode\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span>.<span class=\"name\">rpcEncode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.rpcEncode","kind":"def","line":166,"name":"Lean.Server.RpcEncodable.rpcEncode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L166-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rpcEncode</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rpcDecode</span> : <span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Control/Except.html#ExceptT\">ExceptT</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Init/Control/Id.html#Id\">Id</a>)</span> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.mk","kind":"ctor","line":165,"name":"Lean.Server.RpcEncodable.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L165-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`RpcEncodable α` means that `α` can be deserialized from and serialized into JSON\nfor the purpose of receiving arguments to and sending return values from\nRemote Procedure Calls (RPCs).\n\nAny type with `FromJson` and `ToJson` instances is `RpcEncodable`.\n\nFurthermore, types that do not have these instances may still be `RpcEncodable`.\nUse `deriving RpcEncodable` to automatically derive instances for such types.\n\nThis occurs when `α` contains data that should not or cannot be serialized:\nfor instance, heavy objects such as `Lean.Environment`, or closures.\nFor such data, we use the `WithRpcRef` marker.\nNote that for `WithRpcRef α` to be `RpcEncodable`,\n`α` must have a `TypeName` instance\n\nOn the server side, `WithRpcRef α` is a structure containing a value of type `α` and an associated\n`id`.\nOn the client side, it is an opaque reference of (structural) type `Lsp.RpcRef`.\nThus, `WithRpcRef α` is cheap to transmit over the network\nbut may only be accessed on the server side.\nIn practice, it is used by the client to pass data\nbetween various RPC methods provided by the server.\nTwo `WithRpcRef`s with the same `id` will yield the same client-side reference.\n","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable","kind":"class","line":139,"name":"Lean.Server.RpcEncodable","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L139-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcReleaseRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">rpcReleaseRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lsp.RpcRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcReleaseRef","kind":"def","line":125,"name":"Lean.Server.rpcReleaseRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L125-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcGetRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">rpcGetRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lsp.RpcRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <span class=\"fn\">(<a href=\"./Init/Control/Except.html#ExceptT\">ExceptT</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Control/Id.html#Id\">Id</a>)</span> <span class=\"fn\">(<a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">WithRpcRef</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcGetRef","kind":"def","line":116,"name":"Lean.Server.rpcGetRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L116-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcStoreRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">rpcStoreRef</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">obj</span> : <span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">WithRpcRef</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lsp.RpcRef</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcStoreRef","kind":"def","line":94,"name":"Lean.Server.rpcStoreRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L94-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.nextRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcObjectStore</span>.<span class=\"name\">nextRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"Value to use for the next fresh `RpcRef`, monotonically increasing.\n","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.nextRef","kind":"def","line":92,"name":"Lean.Server.RpcObjectStore.nextRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L92-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.refsById\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcObjectStore</span>.<span class=\"name\">refsById</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <a href=\"./Init/Prelude.html#USize\">USize</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lsp.RpcRef</a></span></div></div>","info":{"doc":"Unique `RpcRef` for the ID of an object that is being referenced through RPC.\nWe store this mapping so that we can reuse `RpcRef`s for the same object.\nReusing `RpcRef`s is helpful because it enables clients to reuse their UI state.\n","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.refsById","kind":"def","line":88,"name":"Lean.Server.RpcObjectStore.refsById","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L88-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.aliveRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcObjectStore</span>.<span class=\"name\">aliveRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lsp.RpcRef</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject\">ReferencedObject</a></span></div></div>","info":{"doc":"Objects that are being kept alive for the RPC client, together with their type names,\nmapped to by their RPC reference.\n","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.aliveRefs","kind":"def","line":82,"name":"Lean.Server.RpcObjectStore.aliveRefs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L82-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcObjectStore</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliveRefs</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lsp.RpcRef</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject\">ReferencedObject</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refsById</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <a href=\"./Init/Prelude.html#USize\">USize</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lsp.RpcRef</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nextRef</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.mk","kind":"ctor","line":77,"name":"Lean.Server.RpcObjectStore.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L77-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcObjectStore</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore","kind":"structure","line":77,"name":"Lean.Server.RpcObjectStore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L77-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject.rc\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ReferencedObject</span>.<span class=\"name\">rc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject\">ReferencedObject</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject.rc","kind":"def","line":75,"name":"Lean.Server.ReferencedObject.rc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L75-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject.id\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ReferencedObject</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject\">ReferencedObject</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject.id","kind":"def","line":74,"name":"Lean.Server.ReferencedObject.id","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L74-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject.obj\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ReferencedObject</span>.<span class=\"name\">obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject\">ReferencedObject</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject.obj","kind":"def","line":73,"name":"Lean.Server.ReferencedObject.obj","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L73-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ReferencedObject</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">obj</span> : <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rc</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject\">ReferencedObject</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject.mk","kind":"ctor","line":72,"name":"Lean.Server.ReferencedObject.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L72-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ReferencedObject</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.ReferencedObject","kind":"structure","line":72,"name":"Lean.Server.ReferencedObject","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L72-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">WithRpcRef</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">WithRpcRef</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Creates an `WithRpcRef` instance with a unique `id`.\nAs long as the client holds at least one reference to this `WithRpcRef`,\nserving it again will yield the same client-side reference.\nThus, when used as React deps,\nclient-side references can help preserve UI state across RPC requests.\n","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef.mk","kind":"def","line":61,"name":"Lean.Server.WithRpcRef.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L61-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.freshWithRpcRefId\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">freshWithRpcRefId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.freshWithRpcRefId","kind":"opaque","line":59,"name":"Lean.Server.freshWithRpcRefId","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instInhabitedWithRpcRef.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instInhabitedWithRpcRef</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">WithRpcRef</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instInhabitedWithRpcRef.default","kind":"def","line":57,"name":"Lean.Server.instInhabitedWithRpcRef.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instInhabitedWithRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instInhabitedWithRpcRef</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">WithRpcRef</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instInhabitedWithRpcRef","kind":"instance","line":57,"name":"Lean.Server.instInhabitedWithRpcRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef.val\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">WithRpcRef</span>.<span class=\"name\">val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">WithRpcRef</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef.val","kind":"def","line":55,"name":"Lean.Server.WithRpcRef.val","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L55-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">WithRpcRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"Marks values to be encoded as opaque references in RPC packets.\nTwo `WithRpcRef`s with the same `id` will yield the same client-side reference.\n\nSee also the docstring for `RpcEncodable`.\n","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef","kind":"structure","line":47,"name":"Lean.Server.WithRpcRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L47-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instToStringRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToStringRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instToStringRpcRef","kind":"instance","line":40,"name":"Lean.Lsp.instToStringRpcRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L40-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instToJsonRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToJsonRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instToJsonRpcRef","kind":"instance","line":38,"name":"Lean.Lsp.instToJsonRpcRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instToJsonRpcRef.toJson\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToJsonRpcRef</span>.<span class=\"name\">toJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a> → <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instToJsonRpcRef.toJson","kind":"def","line":38,"name":"Lean.Lsp.instToJsonRpcRef.toJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instFromJsonRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instFromJsonRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instFromJsonRpcRef","kind":"instance","line":38,"name":"Lean.Lsp.instFromJsonRpcRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instFromJsonRpcRef.fromJson\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instFromJsonRpcRef</span>.<span class=\"name\">fromJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instFromJsonRpcRef.fromJson","kind":"def","line":38,"name":"Lean.Lsp.instFromJsonRpcRef.fromJson","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instHashableRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instHashableRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instHashableRpcRef","kind":"instance","line":38,"name":"Lean.Lsp.instHashableRpcRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instHashableRpcRef.hash\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instHashableRpcRef</span>.<span class=\"name\">hash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a> → <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instHashableRpcRef.hash","kind":"def","line":38,"name":"Lean.Lsp.instHashableRpcRef.hash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instBEqRpcRef.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instBEqRpcRef</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a> → <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instBEqRpcRef.beq","kind":"def","line":38,"name":"Lean.Lsp.instBEqRpcRef.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instBEqRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instBEqRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instBEqRpcRef","kind":"instance","line":38,"name":"Lean.Lsp.instBEqRpcRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instInhabitedRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instInhabitedRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instInhabitedRpcRef","kind":"instance","line":38,"name":"Lean.Lsp.instInhabitedRpcRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instInhabitedRpcRef.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instInhabitedRpcRef</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instInhabitedRpcRef.default","kind":"def","line":38,"name":"Lean.Lsp.instInhabitedRpcRef.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef.p\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RpcRef</span>.<span class=\"name\">p</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef.p","kind":"def","line":37,"name":"Lean.Lsp.RpcRef.p","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RpcRef</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a></div></div>","info":{"doc":"","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef.mk","kind":"ctor","line":34,"name":"Lean.Lsp.RpcRef.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"An object which RPC clients can refer to without marshalling.\n\nThe language server may serve the same `RpcRef` multiple times and maintains a reference count\nto track how many times it has served the reference.\nIf clients want to release the object associated with an `RpcRef`,\nthey must release the reference as many times as they have received it from the server.\n","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef","kind":"structure","line":26,"name":"Lean.Lsp.RpcRef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Server/Rpc/Basic.lean#L26-L38"}}],"imports":["Init.Dynamic","Lean.Data.Json.FromToJson.Basic"],"instances":[{"className":"Inhabited","name":"Lean.Lsp.instInhabitedRpcRef","typeNames":["Lean.Lsp.RpcRef"]},{"className":"BEq","name":"Lean.Lsp.instBEqRpcRef","typeNames":["Lean.Lsp.RpcRef"]},{"className":"Hashable","name":"Lean.Lsp.instHashableRpcRef","typeNames":["Lean.Lsp.RpcRef"]},{"className":"Lean.FromJson","name":"Lean.Lsp.instFromJsonRpcRef","typeNames":["Lean.Lsp.RpcRef"]},{"className":"Lean.ToJson","name":"Lean.Lsp.instToJsonRpcRef","typeNames":["Lean.Lsp.RpcRef"]},{"className":"ToString","name":"Lean.Lsp.instToStringRpcRef","typeNames":["Lean.Lsp.RpcRef"]},{"className":"Inhabited","name":"Lean.Server.instInhabitedWithRpcRef","typeNames":["Lean.Server.WithRpcRef"]},{"className":"Nonempty","name":"Lean.Server.instNonemptyRpcEncodable","typeNames":["Lean.Server.RpcEncodable"]},{"className":"Lean.Server.RpcEncodable","name":"Lean.Server.instRpcEncodableOfFromJsonOfToJson","typeNames":[]},{"className":"Lean.Server.RpcEncodable","name":"Lean.Server.instRpcEncodableOption","typeNames":["Option"]},{"className":"Lean.Server.RpcEncodable","name":"Lean.Server.instRpcEncodableArray","typeNames":["Array"]},{"className":"Lean.Server.RpcEncodable","name":"Lean.Server.instRpcEncodableProd","typeNames":["Prod"]},{"className":"Lean.Server.RpcEncodable","name":"Lean.Server.instRpcEncodableStateMRpcObjectStore","typeNames":["StateM"]},{"className":"Lean.Server.RpcEncodable","name":"Lean.Server.instRpcEncodableWithRpcRefOfTypeName","typeNames":["Lean.Server.WithRpcRef"]}],"name":"Lean.Server.Rpc.Basic"}