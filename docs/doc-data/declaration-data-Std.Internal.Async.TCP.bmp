{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.keepAlive\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Client</span>.<span class=\"name\">keepAlive</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">enable</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">delay</span> : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Time.Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> (<span class=\"fn\"><span class=\"fn\">delay</span>.<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val\">val</a></span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">0</span>) <a href=\"./Std/Internal/Async/TCP.html#_auto._@.Std.Internal.Async.TCP.2897352523._hygCtx._hyg.6\">_auto✝</a></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>","info":{"doc":"Enables TCP keep-alive with a specified delay for the client socket.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.keepAlive","kind":"def","line":250,"name":"Std.Internal.IO.Async.TCP.Socket.Client.keepAlive","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L250-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.noDelay\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Client</span>.<span class=\"name\">noDelay</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Enables the Nagle algorithm for the client socket.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.noDelay","kind":"def","line":243,"name":"Std.Internal.IO.Async.TCP.Socket.Client.noDelay","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L243-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.getSockName\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Client</span>.<span class=\"name\">getSockName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a></span></div></div>","info":{"doc":"Gets the local address of the client socket.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.getSockName","kind":"def","line":236,"name":"Std.Internal.IO.Async.TCP.Socket.Client.getSockName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L236-L241"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.getPeerName\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Client</span>.<span class=\"name\">getPeerName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a></span></div></div>","info":{"doc":"Gets the remote address of the client socket.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.getPeerName","kind":"def","line":229,"name":"Std.Internal.IO.Async.TCP.Socket.Client.getPeerName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L229-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.shutdown\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Client</span>.<span class=\"name\">shutdown</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">Async</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Shuts down the write side of the client socket.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.shutdown","kind":"def","line":222,"name":"Std.Internal.IO.Async.TCP.Socket.Client.shutdown","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L222-L227"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.recvSelector\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Client</span>.<span class=\"name\">recvSelector</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">size</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Async/Select.html#Std.Internal.IO.Async.Selector\">Selector</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#ByteArray\">ByteArray</a>)</span></span></div></div>","info":{"doc":"Creates a `Selector` that resolves once `s` has data available, up to at most `size` bytes,\nand provides that data. Calling this function does not starts the data wait, so it must not be called\nin parallel with `recv?`.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.recvSelector","kind":"def","line":182,"name":"Std.Internal.IO.Async.TCP.Socket.Client.recvSelector","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L182-L220"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.recv?\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Client</span>.<span class=\"name\">recv?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">size</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">Async</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#ByteArray\">ByteArray</a>)</span></span></div></div>","info":{"doc":"Receives data from the client socket. If data is received, it’s wrapped in .some. If EOF is reached,\nthe result is .none, indicating no more data is available. Receiving data in parallel on the same\nsocket is not supported. Instead, we recommend binding multiple sockets to the same address.\nFurthermore calling this function in parallel with `recvSelector` is not supported.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.recv?","kind":"def","line":172,"name":"Std.Internal.IO.Async.TCP.Socket.Client.recv?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L172-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.send\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Client</span>.<span class=\"name\">send</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Prelude.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">Async</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Sends data through the client socket.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.send","kind":"def","line":165,"name":"Std.Internal.IO.Async.TCP.Socket.Client.send","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L165-L170"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.sendAll\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Client</span>.<span class=\"name\">sendAll</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#ByteArray\">ByteArray</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">Async</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Sends multiple data buffers through the client socket.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.sendAll","kind":"def","line":158,"name":"Std.Internal.IO.Async.TCP.Socket.Client.sendAll","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L158-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.connect\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Client</span>.<span class=\"name\">connect</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">Async</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Connects the client socket to the given address.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.connect","kind":"def","line":151,"name":"Std.Internal.IO.Async.TCP.Socket.Client.connect","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L151-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.bind\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Client</span>.<span class=\"name\">bind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Binds the server socket to the specified address. Address reuse is enabled to allow rebinding the\nsame address.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.bind","kind":"def","line":143,"name":"Std.Internal.IO.Async.TCP.Socket.Client.bind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L143-L149"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Client</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a></span></div></div>","info":{"doc":"Creates a new TCP client socket.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.mk","kind":"def","line":135,"name":"Std.Internal.IO.Async.TCP.Socket.Client.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L135-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.keepAlive\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Server</span>.<span class=\"name\">keepAlive</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server\">Server</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">enable</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">delay</span> : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Time.Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> (<span class=\"fn\"><span class=\"fn\">delay</span>.<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val\">val</a></span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">1</span>) <a href=\"./Std/Internal/Async/TCP.html#_auto._@.Std.Internal.Async.TCP.2897352522._hygCtx._hyg.6\">_auto✝</a></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>","info":{"doc":"Enables TCP keep-alive for all client sockets accepted by this server socket.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.keepAlive","kind":"def","line":124,"name":"Std.Internal.IO.Async.TCP.Socket.Server.keepAlive","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L124-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.noDelay\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Server</span>.<span class=\"name\">noDelay</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server\">Server</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Enables the Nagle algorithm for all client sockets accepted by this server socket.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.noDelay","kind":"def","line":117,"name":"Std.Internal.IO.Async.TCP.Socket.Server.noDelay","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L117-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.getSockName\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Server</span>.<span class=\"name\">getSockName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server\">Server</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a></span></div></div>","info":{"doc":"Gets the local address of the server socket.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.getSockName","kind":"def","line":110,"name":"Std.Internal.IO.Async.TCP.Socket.Server.getSockName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L110-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.acceptSelector\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Server</span>.<span class=\"name\">acceptSelector</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server\">Server</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Async/Select.html#Std.Internal.IO.Async.Selector\">Selector</a> <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a></span></div></div>","info":{"doc":"Creates a `Selector` that resolves once `s` has a connection available. Calling this function\ndoes not start the connection wait, so it must not be called in parallel with `accept`.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.acceptSelector","kind":"def","line":81,"name":"Std.Internal.IO.Async.TCP.Socket.Server.acceptSelector","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L81-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.tryAccept\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Server</span>.<span class=\"name\">tryAccept</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server\">Server</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a>)</span></span></div></div>","info":{"doc":"Tries to accept an incoming connection.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.tryAccept","kind":"def","line":72,"name":"Std.Internal.IO.Async.TCP.Socket.Server.tryAccept","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L72-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.accept\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Server</span>.<span class=\"name\">accept</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server\">Server</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">Async</a> <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a></span></div></div>","info":{"doc":"Accepts an incoming connection.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.accept","kind":"def","line":63,"name":"Std.Internal.IO.Async.TCP.Socket.Server.accept","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L63-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.listen\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Server</span>.<span class=\"name\">listen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server\">Server</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">backlog</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Listens for incoming connections with the given backlog.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.listen","kind":"def","line":56,"name":"Std.Internal.IO.Async.TCP.Socket.Server.listen","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L56-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.bind\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Server</span>.<span class=\"name\">bind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server\">Server</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Binds the server socket to the specified address. Address reuse is enabled to allow rebinding the\nsame address.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.bind","kind":"def","line":48,"name":"Std.Internal.IO.Async.TCP.Socket.Server.bind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L48-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Server</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server\">Server</a></span></div></div>","info":{"doc":"Creates a new TCP server socket.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.mk","kind":"def","line":40,"name":"Std.Internal.IO.Async.TCP.Socket.Server.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L40-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.native\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Client</span>.<span class=\"name\">native</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\">Client</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">UV.TCP.Socket</a></div></div>","info":{"doc":"","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client.native","kind":"def","line":36,"name":"Std.Internal.IO.Async.TCP.Socket.Client.native","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Client</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents a TCP client socket, used to connect to a server.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Client","kind":"structure","line":31,"name":"Std.Internal.IO.Async.TCP.Socket.Client","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L31-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.native\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Server</span>.<span class=\"name\">native</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server\">Server</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Internal/UV/TCP.html#Std.Internal.UV.TCP.Socket\">UV.TCP.Socket</a></div></div>","info":{"doc":"","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server.native","kind":"def","line":29,"name":"Std.Internal.IO.Async.TCP.Socket.Server.native","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">TCP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">Server</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents a TCP server socket, managing incoming client connections.\n","docLink":"./Std/Internal/Async/TCP.html#Std.Internal.IO.Async.TCP.Socket.Server","kind":"structure","line":24,"name":"Std.Internal.IO.Async.TCP.Socket.Server","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/TCP.lean#L24-L29"}}],"imports":["Std.Time","Std.Internal.UV.TCP","Std.Internal.Async.Select"],"instances":[],"name":"Std.Internal.Async.TCP"}