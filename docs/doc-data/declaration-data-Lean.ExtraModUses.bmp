{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.recordExtraRevUseOfCurrentModule\"><span class=\"name\">Lean</span>.<span class=\"name\">recordExtraRevUseOfCurrentModule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Records this module to be preserved as an import by `shake`. ","docLink":"./Lean/ExtraModUses.html#Lean.recordExtraRevUseOfCurrentModule","kind":"def","line":93,"name":"Lean.recordExtraRevUseOfCurrentModule","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L93-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.isExtraRevModUse\"><span class=\"name\">Lean</span>.<span class=\"name\">isExtraRevModUse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modIdx</span> : <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">ModuleIdx</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Checks whether this module should be preserved as an import by `shake`. ","docLink":"./Lean/ExtraModUses.html#Lean.isExtraRevModUse","kind":"def","line":89,"name":"Lean.isExtraRevModUse","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L89-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.recordExtraModUseFromDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">recordExtraModUseFromDecl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Util/Trace.html#Lean.MonadTrace\">MonadTrace</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.MonadOptions\">MonadOptions</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadRef\">MonadRef</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Message.html#Lean.AddMessageContext\">AddMessageContext</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isMeta</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Records the module of the given declaration as an additional import dependency for the current\nmodule, using `Environment.isExporting` as the visibility level. If the declaration itself is\nalready `meta`, the module dependency is recorded as a non-`meta` dependency.\n","docLink":"./Lean/ExtraModUses.html#Lean.recordExtraModUseFromDecl","kind":"def","line":70,"name":"Lean.recordExtraModUseFromDecl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L70-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.recordExtraModUse\"><span class=\"name\">Lean</span>.<span class=\"name\">recordExtraModUse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Util/Trace.html#Lean.MonadTrace\">MonadTrace</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.MonadOptions\">MonadOptions</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadRef\">MonadRef</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Message.html#Lean.AddMessageContext\">AddMessageContext</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isMeta</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Records an additional import dependency for the current module, using `Environment.isExporting` as\nthe visibility level.\n","docLink":"./Lean/ExtraModUses.html#Lean.recordExtraModUse","kind":"def","line":62,"name":"Lean.recordExtraModUse","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L62-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.copyExtraModUses\"><span class=\"name\">Lean</span>.<span class=\"name\">copyExtraModUses</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">src </span><span class=\"fn\">dest</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"Copies additional recorded import dependencies from one environment to another. ","docLink":"./Lean/ExtraModUses.html#Lean.copyExtraModUses","kind":"def","line":44,"name":"Lean.copyExtraModUses","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L44-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.getExtraModUses\"><span class=\"name\">Lean</span>.<span class=\"name\">getExtraModUses</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modIdx</span> : <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">ModuleIdx</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse\">ExtraModUse</a></span></div></div>","info":{"doc":"Returns additional recorded import dependencies of the given module. ","docLink":"./Lean/ExtraModUses.html#Lean.getExtraModUses","kind":"def","line":40,"name":"Lean.getExtraModUses","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L40-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.instReprExtraModUse.repr\"><span class=\"name\">Lean</span>.<span class=\"name\">instReprExtraModUse</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse\">ExtraModUse</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/ExtraModUses.html#Lean.instReprExtraModUse.repr","kind":"def","line":27,"name":"Lean.instReprExtraModUse.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.instReprExtraModUse\"><span class=\"name\">Lean</span>.<span class=\"name\">instReprExtraModUse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse\">ExtraModUse</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ExtraModUses.html#Lean.instReprExtraModUse","kind":"instance","line":27,"name":"Lean.instReprExtraModUse","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.instHashableExtraModUse\"><span class=\"name\">Lean</span>.<span class=\"name\">instHashableExtraModUse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse\">ExtraModUse</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ExtraModUses.html#Lean.instHashableExtraModUse","kind":"instance","line":27,"name":"Lean.instHashableExtraModUse","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.instHashableExtraModUse.hash\"><span class=\"name\">Lean</span>.<span class=\"name\">instHashableExtraModUse</span>.<span class=\"name\">hash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse\">ExtraModUse</a> → <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ExtraModUses.html#Lean.instHashableExtraModUse.hash","kind":"def","line":27,"name":"Lean.instHashableExtraModUse.hash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.instBEqExtraModUse\"><span class=\"name\">Lean</span>.<span class=\"name\">instBEqExtraModUse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse\">ExtraModUse</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ExtraModUses.html#Lean.instBEqExtraModUse","kind":"instance","line":27,"name":"Lean.instBEqExtraModUse","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.instBEqExtraModUse.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">instBEqExtraModUse</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse\">ExtraModUse</a> → <a href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse\">ExtraModUse</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/ExtraModUses.html#Lean.instBEqExtraModUse.beq","kind":"def","line":27,"name":"Lean.instBEqExtraModUse.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse.isMeta\"><span class=\"name\">Lean</span>.<span class=\"name\">ExtraModUse</span>.<span class=\"name\">isMeta</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse\">ExtraModUse</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Whether dependency must be imported as `meta`. ","docLink":"./Lean/ExtraModUses.html#Lean.ExtraModUse.isMeta","kind":"def","line":26,"name":"Lean.ExtraModUse.isMeta","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse.isExported\"><span class=\"name\">Lean</span>.<span class=\"name\">ExtraModUse</span>.<span class=\"name\">isExported</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse\">ExtraModUse</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Whether dependency must be imported as `public`. ","docLink":"./Lean/ExtraModUses.html#Lean.ExtraModUse.isExported","kind":"def","line":24,"name":"Lean.ExtraModUse.isExported","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse.module\"><span class=\"name\">Lean</span>.<span class=\"name\">ExtraModUse</span>.<span class=\"name\">module</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse\">ExtraModUse</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"Dependency's module name. ","docLink":"./Lean/ExtraModUses.html#Lean.ExtraModUse.module","kind":"def","line":22,"name":"Lean.ExtraModUse.module","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ExtraModUse</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">module</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isExported </span><span class=\"fn\">isMeta</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse\">ExtraModUse</a></div></div>","info":{"doc":"","docLink":"./Lean/ExtraModUses.html#Lean.ExtraModUse.mk","kind":"ctor","line":20,"name":"Lean.ExtraModUse.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ExtraModUses.html#Lean.ExtraModUse\"><span class=\"name\">Lean</span>.<span class=\"name\">ExtraModUse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Additional import dependency for elaboration. ","docLink":"./Lean/ExtraModUses.html#Lean.ExtraModUse","kind":"structure","line":19,"name":"Lean.ExtraModUse","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/ExtraModUses.lean#L19-L27"}}],"imports":["Lean.CoreM","Lean.Compiler.MetaAttr"],"instances":[{"className":"BEq","name":"Lean.instBEqExtraModUse","typeNames":["Lean.ExtraModUse"]},{"className":"Hashable","name":"Lean.instHashableExtraModUse","typeNames":["Lean.ExtraModUse"]},{"className":"Repr","name":"Lean.instReprExtraModUse","typeNames":["Lean.ExtraModUse"]}],"name":"Lean.ExtraModUses"}