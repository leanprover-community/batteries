{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.collect\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">collect</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">needle</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.collect","kind":"def","line":116,"name":"Lean.Meta.FunInd.collect","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L116-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.main\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Collector</span>.<span class=\"name\">main</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">needle</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.main","kind":"def","line":101,"name":"Lean.Meta.FunInd.Collector.main","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L101-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.visit\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Collector</span>.<span class=\"name\">visit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.Cache\">Cache</a> <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.visit","kind":"def","line":81,"name":"Lean.Meta.FunInd.Collector.visit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L81-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.Cache\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Collector</span>.<span class=\"name\">Cache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.Cache","kind":"def","line":79,"name":"Lean.Meta.FunInd.Collector.Cache","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.visitApp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Collector</span>.<span class=\"name\">visitApp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funIndInfo</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.visitApp","kind":"def","line":76,"name":"Lean.Meta.FunInd.Collector.visitApp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L76-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.saveFunInd\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Collector</span>.<span class=\"name\">saveFunInd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funIndInfo</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.saveFunInd","kind":"def","line":73,"name":"Lean.Meta.FunInd.Collector.saveFunInd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L73-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Collector</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.M","kind":"def","line":71,"name":"Lean.Meta.FunInd.Collector.M","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L71-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.uniques\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">SeenCalls</span>.<span class=\"name\">uniques</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">calls</span> : <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameSet\">NameSet</a></div></div>","info":{"doc":"Which functions have exactly one candidate application. Used by `try?` to determine whether\nwe can use `fun_induction foo` or need `fun_induction foo x y z`.\n","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.uniques","kind":"def","line":54,"name":"Lean.Meta.FunInd.SeenCalls.uniques","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L54-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.push\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">SeenCalls</span>.<span class=\"name\">push</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funIndInfo</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">calls</span> : <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.push","kind":"def","line":41,"name":"Lean.Meta.FunInd.SeenCalls.push","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L41-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.isEmpty\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">SeenCalls</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sc</span> : <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.isEmpty","kind":"def","line":38,"name":"Lean.Meta.FunInd.SeenCalls.isEmpty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L38-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instEmptyCollectionSeenCalls\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">instEmptyCollectionSeenCalls</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instEmptyCollectionSeenCalls","kind":"instance","line":35,"name":"Lean.Meta.FunInd.instEmptyCollectionSeenCalls","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L35-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.seen\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">SeenCalls</span>.<span class=\"name\">seen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">Ã</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></div></div>","info":{"doc":"only function name and relevant arguments ","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.seen","kind":"def","line":33,"name":"Lean.Meta.FunInd.SeenCalls.seen","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.calls\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">SeenCalls</span>.<span class=\"name\">calls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"the full calls ","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.calls","kind":"def","line":31,"name":"Lean.Meta.FunInd.SeenCalls.calls","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">SeenCalls</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">calls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">seen</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">Ã</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.mk","kind":"ctor","line":29,"name":"Lean.Meta.FunInd.SeenCalls.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">SeenCalls</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls","kind":"structure","line":29,"name":"Lean.Meta.FunInd.SeenCalls","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L29-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instBEqCall\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">instBEqCall</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call\">Call</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instBEqCall","kind":"instance","line":27,"name":"Lean.Meta.FunInd.instBEqCall","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instBEqCall.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">instBEqCall</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call\">Call</a> â <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call\">Call</a> â <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instBEqCall.beq","kind":"def","line":27,"name":"Lean.Meta.FunInd.instBEqCall.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instHashableCall\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">instHashableCall</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call\">Call</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instHashableCall","kind":"instance","line":27,"name":"Lean.Meta.FunInd.instHashableCall","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instHashableCall.hash\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">instHashableCall</span>.<span class=\"name\">hash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call\">Call</a> â <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instHashableCall.hash","kind":"def","line":27,"name":"Lean.Meta.FunInd.instHashableCall.hash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call.relevantArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Call</span>.<span class=\"name\">relevantArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call\">Call</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call.relevantArgs","kind":"def","line":26,"name":"Lean.Meta.FunInd.Call.relevantArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call.expr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Call</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call\">Call</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call.expr","kind":"def","line":24,"name":"Lean.Meta.FunInd.Call.expr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Call</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr </span><span class=\"fn\">relevantArgs</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call\">Call</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call.mk","kind":"ctor","line":22,"name":"Lean.Meta.FunInd.Call.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Call</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call","kind":"structure","line":22,"name":"Lean.Meta.FunInd.Call","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/FunIndCollect.lean#L22-L27"}}],"imports":["Lean.Meta.Tactic.Util","Lean.Meta.Tactic.FunIndInfo"],"instances":[{"className":"Hashable","name":"Lean.Meta.FunInd.instHashableCall","typeNames":["Lean.Meta.FunInd.Call"]},{"className":"BEq","name":"Lean.Meta.FunInd.instBEqCall","typeNames":["Lean.Meta.FunInd.Call"]},{"className":"EmptyCollection","name":"Lean.Meta.FunInd.instEmptyCollectionSeenCalls","typeNames":["Lean.Meta.FunInd.SeenCalls"]}],"name":"Lean.Meta.Tactic.FunIndCollect"}