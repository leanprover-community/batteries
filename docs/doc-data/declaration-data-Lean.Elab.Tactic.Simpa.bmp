{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Simpa.html#Lean.Elab.Tactic.Simpa.evalSimpa\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Simpa</span>.<span class=\"name\">evalSimpa</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Tactic</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Simpa.html#Lean.Elab.Tactic.Simpa.evalSimpa","kind":"def","line":32,"name":"Lean.Elab.Tactic.Simpa.evalSimpa","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Simpa.lean#L32-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Simpa.html#Lean.Elab.Tactic.Simpa.getLinterUnnecessarySimpa\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Simpa</span>.<span class=\"name\">getLinterUnnecessarySimpa</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Lean/Linter/Basic.html#Lean.Linter.LinterOptions\">Linter.LinterOptions</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Gets the value of the `linter.unnecessarySimpa` option. ","docLink":"./Lean/Elab/Tactic/Simpa.html#Lean.Elab.Tactic.Simpa.getLinterUnnecessarySimpa","kind":"def","line":28,"name":"Lean.Elab.Tactic.Simpa.getLinterUnnecessarySimpa","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Simpa.lean#L28-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Simpa.html#linter.unnecessarySimpa\"><span class=\"name\">linter</span>.<span class=\"name\">unnecessarySimpa</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Enables the 'unnecessary `simpa`' linter. This will report if a use of\n`simpa` could be proven using `simp` or `simp at h` instead.\n","docLink":"./Lean/Elab/Tactic/Simpa.html#linter.unnecessarySimpa","kind":"opaque","line":15,"name":"linter.unnecessarySimpa","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Simpa.lean#L15-L22"}}],"imports":["Lean.Meta.Tactic.TryThis","Lean.Elab.Tactic.Simp","Lean.Elab.App"],"instances":[],"name":"Lean.Elab.Tactic.Simpa"}