{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems.erase\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">ExtTheorems</span>.<span class=\"name\">erase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> â†’ <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems\">ExtTheorems</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems\">ExtTheorems</a></span></div></div>","info":{"doc":"Erases a name marked as a `ext` attribute.\nCheck that it does in fact have the `ext` attribute by making sure it names a `ExtTheorem`\nfound somewhere in the state's tree, and is not erased.\n","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems.erase","kind":"def","line":78,"name":"Lean.Meta.Ext.ExtTheorems.erase","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L78-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.isExtTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">isExtTheorem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Returns `true` if `declName` is tagged with `[ext]` attribute. ","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.isExtTheorem","kind":"def","line":73,"name":"Lean.Meta.Ext.isExtTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L73-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">ExtTheorems</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems\">ExtTheorems</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Returns `true` if `d` contains theorem with name `declName`. ","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems.contains","kind":"def","line":69,"name":"Lean.Meta.Ext.ExtTheorems.contains","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L69-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems.eraseCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">ExtTheorems</span>.<span class=\"name\">eraseCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems\">ExtTheorems</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems\">ExtTheorems</a></div></div>","info":{"doc":"Erases a name marked `ext` by adding it to the state's `erased` field and\nremoving it from the state's list of `Entry`s.\n\nThis is triggered by `attribute [-ext] name`.\n","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems.eraseCore","kind":"def","line":60,"name":"Lean.Meta.Ext.ExtTheorems.eraseCore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L60-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.getExtTheorems\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">getExtTheorems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a>)</span></span></div></div>","info":{"doc":"Gets the list of `@[ext]` theorems corresponding to the key `ty`,\nordered from high priority to low. ","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.getExtTheorems","kind":"def","line":50,"name":"Lean.Meta.Ext.getExtTheorems","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L50-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.extExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">extExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension\">SimpleScopedEnvExtension</a> <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a> <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems\">ExtTheorems</a></span></div></div>","info":{"doc":"The environment extension to track `@[ext]` theorems. ","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.extExtension","kind":"opaque","line":41,"name":"Lean.Meta.Ext.extExtension","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L41-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instInhabitedExtTheorems.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">instInhabitedExtTheorems</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems\">ExtTheorems</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instInhabitedExtTheorems.default","kind":"def","line":39,"name":"Lean.Meta.Ext.instInhabitedExtTheorems.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instInhabitedExtTheorems\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">instInhabitedExtTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems\">ExtTheorems</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instInhabitedExtTheorems","kind":"instance","line":39,"name":"Lean.Meta.Ext.instInhabitedExtTheorems","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems.erased\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">ExtTheorems</span>.<span class=\"name\">erased</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems\">ExtTheorems</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">PHashSet</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"Erased `ext`s via `attribute [-ext]`. ","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems.erased","kind":"def","line":38,"name":"Lean.Meta.Ext.ExtTheorems.erased","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems.tree\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">ExtTheorems</span>.<span class=\"name\">tree</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems\">ExtTheorems</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">DiscrTree</a> <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a></span></div></div>","info":{"doc":"The tree of `ext` extensions. ","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems.tree","kind":"def","line":36,"name":"Lean.Meta.Ext.ExtTheorems.tree","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">ExtTheorems</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tree</span> : <span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">DiscrTree</a> <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">erased</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">PHashSet</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems\">ExtTheorems</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems.mk","kind":"ctor","line":34,"name":"Lean.Meta.Ext.ExtTheorems.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">ExtTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The state of the `ext` extension environment ","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorems","kind":"structure","line":33,"name":"Lean.Meta.Ext.ExtTheorems","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L33-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instHashableExtTheorem.hash\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">instHashableExtTheorem</span>.<span class=\"name\">hash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a> â†’ <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instHashableExtTheorem.hash","kind":"def","line":31,"name":"Lean.Meta.Ext.instHashableExtTheorem.hash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instHashableExtTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">instHashableExtTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instHashableExtTheorem","kind":"instance","line":31,"name":"Lean.Meta.Ext.instHashableExtTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instBEqExtTheorem.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">instBEqExtTheorem</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a> â†’ <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a> â†’ <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instBEqExtTheorem.beq","kind":"def","line":31,"name":"Lean.Meta.Ext.instBEqExtTheorem.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instBEqExtTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">instBEqExtTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instBEqExtTheorem","kind":"instance","line":31,"name":"Lean.Meta.Ext.instBEqExtTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instReprExtTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">instReprExtTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instReprExtTheorem","kind":"instance","line":31,"name":"Lean.Meta.Ext.instReprExtTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instReprExtTheorem.repr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">instReprExtTheorem</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a> â†’ <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> â†’ <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instReprExtTheorem.repr","kind":"def","line":31,"name":"Lean.Meta.Ext.instReprExtTheorem.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instInhabitedExtTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">instInhabitedExtTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instInhabitedExtTheorem","kind":"instance","line":31,"name":"Lean.Meta.Ext.instInhabitedExtTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instInhabitedExtTheorem.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">instInhabitedExtTheorem</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.instInhabitedExtTheorem.default","kind":"def","line":31,"name":"Lean.Meta.Ext.instInhabitedExtTheorem.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem.keys\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">ExtTheorem</span>.<span class=\"name\">keys</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">DiscrTree.Key</a></span></div></div>","info":{"doc":"Key in the discrimination tree,\nfor the type in which the extensionality theorem holds.\n","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem.keys","kind":"def","line":30,"name":"Lean.Meta.Ext.ExtTheorem.keys","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L30-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem.priority\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">ExtTheorem</span>.<span class=\"name\">priority</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Priority of the extensionality theorem. ","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem.priority","kind":"def","line":25,"name":"Lean.Meta.Ext.ExtTheorem.priority","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">ExtTheorem</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"Declaration name of the extensionality theorem. ","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem.declName","kind":"def","line":23,"name":"Lean.Meta.Ext.ExtTheorem.declName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">ExtTheorem</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">priority</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">keys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">DiscrTree.Key</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\">ExtTheorem</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem.mk","kind":"ctor","line":21,"name":"Lean.Meta.Ext.ExtTheorem.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Ext</span>.<span class=\"name\">ExtTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Information about an extensionality theorem, stored in the environment extension. ","docLink":"./Lean/Meta/Tactic/Ext.html#Lean.Meta.Ext.ExtTheorem","kind":"structure","line":20,"name":"Lean.Meta.Ext.ExtTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Ext.lean#L20-L31"}}],"imports":["Init.Data.Array.InsertionSort","Lean.Meta.DiscrTree"],"instances":[{"className":"Inhabited","name":"Lean.Meta.Ext.instInhabitedExtTheorem","typeNames":["Lean.Meta.Ext.ExtTheorem"]},{"className":"Repr","name":"Lean.Meta.Ext.instReprExtTheorem","typeNames":["Lean.Meta.Ext.ExtTheorem"]},{"className":"BEq","name":"Lean.Meta.Ext.instBEqExtTheorem","typeNames":["Lean.Meta.Ext.ExtTheorem"]},{"className":"Hashable","name":"Lean.Meta.Ext.instHashableExtTheorem","typeNames":["Lean.Meta.Ext.ExtTheorem"]},{"className":"Inhabited","name":"Lean.Meta.Ext.instInhabitedExtTheorems","typeNames":["Lean.Meta.Ext.ExtTheorems"]}],"name":"Lean.Meta.Tactic.Ext"}