{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUSizeUintNumBits\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instPowUSizeUintNumBits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/ToInt.html#Lean.Grind.ToInt.Pow\">ToInt.Pow</a> <a href=\"./Init/Prelude.html#USize\">USize</a> <span class=\"fn\">(<a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval.uint\">IntInterval.uint</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUSizeUintNumBits","kind":"instance","line":359,"name":"Lean.Grind.instPowUSizeUintNumBits","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L359-L360"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUSizeHPowNatOfNatNumBits\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPUSizeHPowNatOfNatNumBits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Prelude.html#USize\">USize</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUSizeHPowNatOfNatNumBits","kind":"instance","line":349,"name":"Lean.Grind.instIsCharPUSizeHPowNatOfNatNumBits","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L349-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUSize\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingUSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUSize","kind":"instance","line":321,"name":"Lean.Grind.instCommRingUSize","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L321-L345"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt64UintOfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instPowUInt64UintOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/ToInt.html#Lean.Grind.ToInt.Pow\">ToInt.Pow</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a> <span class=\"fn\">(<a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval.uint\">IntInterval.uint</a> <span class=\"fn\">64</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt64UintOfNatNat","kind":"instance","line":318,"name":"Lean.Grind.instPowUInt64UintOfNatNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L318-L318"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt64OfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPUInt64OfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a> <span class=\"fn\">18446744073709551616</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt64OfNatNat","kind":"instance","line":308,"name":"Lean.Grind.instIsCharPUInt64OfNatNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L308-L311"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt64\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingUInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt64","kind":"instance","line":282,"name":"Lean.Grind.instCommRingUInt64","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L282-L306"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt32UintOfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instPowUInt32UintOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/ToInt.html#Lean.Grind.ToInt.Pow\">ToInt.Pow</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a> <span class=\"fn\">(<a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval.uint\">IntInterval.uint</a> <span class=\"fn\">32</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt32UintOfNatNat","kind":"instance","line":279,"name":"Lean.Grind.instPowUInt32UintOfNatNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L279-L279"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt32OfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPUInt32OfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a> <span class=\"fn\">4294967296</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt32OfNatNat","kind":"instance","line":269,"name":"Lean.Grind.instIsCharPUInt32OfNatNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L269-L272"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt32\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingUInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt32","kind":"instance","line":243,"name":"Lean.Grind.instCommRingUInt32","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L243-L267"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt16UintOfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instPowUInt16UintOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/ToInt.html#Lean.Grind.ToInt.Pow\">ToInt.Pow</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a> <span class=\"fn\">(<a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval.uint\">IntInterval.uint</a> <span class=\"fn\">16</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt16UintOfNatNat","kind":"instance","line":240,"name":"Lean.Grind.instPowUInt16UintOfNatNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L240-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt16OfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPUInt16OfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a> <span class=\"fn\">65536</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt16OfNatNat","kind":"instance","line":230,"name":"Lean.Grind.instIsCharPUInt16OfNatNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L230-L233"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt16\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingUInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt16","kind":"instance","line":204,"name":"Lean.Grind.instCommRingUInt16","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L204-L228"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt8UintOfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instPowUInt8UintOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/ToInt.html#Lean.Grind.ToInt.Pow\">ToInt.Pow</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a> <span class=\"fn\">(<a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval.uint\">IntInterval.uint</a> <span class=\"fn\">8</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt8UintOfNatNat","kind":"instance","line":201,"name":"Lean.Grind.instPowUInt8UintOfNatNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L201-L201"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt8OfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPUInt8OfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a> <span class=\"fn\">256</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt8OfNatNat","kind":"instance","line":191,"name":"Lean.Grind.instIsCharPUInt8OfNatNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L191-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt8\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingUInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt8","kind":"instance","line":165,"name":"Lean.Grind.instCommRingUInt8","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L165-L189"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#USize.intCast_ofNat\"><span class=\"name\">USize</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#USize.intCast_ofNat","kind":"theorem","line":150,"name":"USize.intCast_ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L150-L159"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#USize.intCast_neg\"><span class=\"name\">USize</span>.<span class=\"name\">intCast_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#USize.intCast_neg","kind":"theorem","line":147,"name":"USize.intCast_neg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L147-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#USize.intCast\"><span class=\"name\">USize</span>.<span class=\"name\">intCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#USize.intCast","kind":"def","line":141,"name":"USize.intCast","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L141-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#USize.natCast\"><span class=\"name\">USize</span>.<span class=\"name\">natCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#USize.natCast","kind":"def","line":137,"name":"USize.natCast","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L137-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt64.intCast_ofNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt64.intCast_ofNat","kind":"theorem","line":123,"name":"UInt64.intCast_ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L123-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt64.intCast_neg\"><span class=\"name\">UInt64</span>.<span class=\"name\">intCast_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt64.intCast_neg","kind":"theorem","line":120,"name":"UInt64.intCast_neg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L120-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt64.intCast\"><span class=\"name\">UInt64</span>.<span class=\"name\">intCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt64.intCast","kind":"def","line":114,"name":"UInt64.intCast","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L114-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt64.natCast\"><span class=\"name\">UInt64</span>.<span class=\"name\">natCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt64.natCast","kind":"def","line":110,"name":"UInt64.natCast","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L110-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt64.ofNat_mod_size'\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNat_mod_size'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">18446744073709551616</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"Variant of `UInt64.ofNat_mod_size` replacing `2 ^ 64` with `18446744073709551616`.","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt64.ofNat_mod_size'","kind":"theorem","line":107,"name":"UInt64.ofNat_mod_size'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L107-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt32.intCast_ofNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt32.intCast_ofNat","kind":"theorem","line":93,"name":"UInt32.intCast_ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L93-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt32.intCast_neg\"><span class=\"name\">UInt32</span>.<span class=\"name\">intCast_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt32.intCast_neg","kind":"theorem","line":90,"name":"UInt32.intCast_neg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L90-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt32.intCast\"><span class=\"name\">UInt32</span>.<span class=\"name\">intCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt32.intCast","kind":"def","line":84,"name":"UInt32.intCast","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L84-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt32.natCast\"><span class=\"name\">UInt32</span>.<span class=\"name\">natCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt32.natCast","kind":"def","line":80,"name":"UInt32.natCast","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L80-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt32.ofNat_mod_size'\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNat_mod_size'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4294967296</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"Variant of `UInt32.ofNat_mod_size` replacing `2 ^ 32` with `4294967296`.","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt32.ofNat_mod_size'","kind":"theorem","line":77,"name":"UInt32.ofNat_mod_size'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L77-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt16.intCast_ofNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt16.intCast_ofNat","kind":"theorem","line":63,"name":"UInt16.intCast_ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L63-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt16.intCast_neg\"><span class=\"name\">UInt16</span>.<span class=\"name\">intCast_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt16.intCast_neg","kind":"theorem","line":60,"name":"UInt16.intCast_neg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L60-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt16.intCast\"><span class=\"name\">UInt16</span>.<span class=\"name\">intCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt16.intCast","kind":"def","line":54,"name":"UInt16.intCast","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L54-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt16.natCast\"><span class=\"name\">UInt16</span>.<span class=\"name\">natCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt16.natCast","kind":"def","line":50,"name":"UInt16.natCast","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L50-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt16.ofNat_mod_size'\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNat_mod_size'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"Variant of `UInt16.ofNat_mod_size` replacing `2 ^ 16` with `65536`.","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt16.ofNat_mod_size'","kind":"theorem","line":47,"name":"UInt16.ofNat_mod_size'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L47-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt8.intCast_ofNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt8.intCast_ofNat","kind":"theorem","line":33,"name":"UInt8.intCast_ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L33-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt8.intCast_neg\"><span class=\"name\">UInt8</span>.<span class=\"name\">intCast_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt8.intCast_neg","kind":"theorem","line":30,"name":"UInt8.intCast_neg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L30-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt8.intCast\"><span class=\"name\">UInt8</span>.<span class=\"name\">intCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt8.intCast","kind":"def","line":24,"name":"UInt8.intCast","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L24-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt8.natCast\"><span class=\"name\">UInt8</span>.<span class=\"name\">natCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt8.natCast","kind":"def","line":20,"name":"UInt8.natCast","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L20-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt8.ofNat_mod_size'\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNat_mod_size'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNat\">ofNat</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"Variant of `UInt8.ofNat_mod_size` replacing `2 ^ 8` with `256`.","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt8.ofNat_mod_size'","kind":"theorem","line":17,"name":"UInt8.ofNat_mod_size'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/GrindInstances/Ring/UInt.lean#L17-L18"}}],"imports":["Init.GrindInstances.ToInt","Init.GrindInstances.ToInt","Init.Data.UInt.Basic"],"instances":[{"className":"Lean.Grind.CommRing","name":"Lean.Grind.instCommRingUInt8","typeNames":["UInt8"]},{"className":"Lean.Grind.IsCharP","name":"Lean.Grind.instIsCharPUInt8OfNatNat","typeNames":["UInt8","OfNat.ofNat"]},{"className":"Lean.Grind.ToInt.Pow","name":"Lean.Grind.instPowUInt8UintOfNatNat","typeNames":["UInt8","Lean.Grind.IntInterval.uint"]},{"className":"Lean.Grind.CommRing","name":"Lean.Grind.instCommRingUInt16","typeNames":["UInt16"]},{"className":"Lean.Grind.IsCharP","name":"Lean.Grind.instIsCharPUInt16OfNatNat","typeNames":["UInt16","OfNat.ofNat"]},{"className":"Lean.Grind.ToInt.Pow","name":"Lean.Grind.instPowUInt16UintOfNatNat","typeNames":["UInt16","Lean.Grind.IntInterval.uint"]},{"className":"Lean.Grind.CommRing","name":"Lean.Grind.instCommRingUInt32","typeNames":["UInt32"]},{"className":"Lean.Grind.IsCharP","name":"Lean.Grind.instIsCharPUInt32OfNatNat","typeNames":["UInt32","OfNat.ofNat"]},{"className":"Lean.Grind.ToInt.Pow","name":"Lean.Grind.instPowUInt32UintOfNatNat","typeNames":["UInt32","Lean.Grind.IntInterval.uint"]},{"className":"Lean.Grind.CommRing","name":"Lean.Grind.instCommRingUInt64","typeNames":["UInt64"]},{"className":"Lean.Grind.IsCharP","name":"Lean.Grind.instIsCharPUInt64OfNatNat","typeNames":["UInt64","OfNat.ofNat"]},{"className":"Lean.Grind.ToInt.Pow","name":"Lean.Grind.instPowUInt64UintOfNatNat","typeNames":["UInt64","Lean.Grind.IntInterval.uint"]},{"className":"Lean.Grind.CommRing","name":"Lean.Grind.instCommRingUSize","typeNames":["USize"]},{"className":"Lean.Grind.IsCharP","name":"Lean.Grind.instIsCharPUSizeHPowNatOfNatNumBits","typeNames":["USize","HPow.hPow"]},{"className":"Lean.Grind.ToInt.Pow","name":"Lean.Grind.instPowUSizeUintNumBits","typeNames":["USize","Lean.Grind.IntInterval.uint"]}],"name":"Init.GrindInstances.Ring.UInt"}