{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.msgToInteractiveDiagnostic\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">msgToInteractiveDiagnostic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Lean/Message.html#Lean.Message\">Message</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hasWidgets</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.InteractiveDiagnostic\">InteractiveDiagnostic</a></span></div></div>","info":{"doc":"Transform a Lean Message concerning the given text into an LSP Diagnostic. ","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.msgToInteractiveDiagnostic","kind":"def","line":226,"name":"Lean.Widget.msgToInteractiveDiagnostic","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L226-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.msgToInteractive\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">msgToInteractive</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msgData</span> : <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hasWidgets</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indent</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.InteractiveMessage\">InteractiveMessage</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.msgToInteractive","kind":"def","line":197,"name":"Lean.Widget.msgToInteractive","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L197-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.InteractiveDiagnostic.toDiagnostic\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">InteractiveDiagnostic</span>.<span class=\"name\">toDiagnostic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diag</span> : <a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.InteractiveDiagnostic\">InteractiveDiagnostic</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.Diagnostic\">Lsp.Diagnostic</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.InteractiveDiagnostic.toDiagnostic","kind":"def","line":66,"name":"Lean.Widget.InteractiveDiagnostic.toDiagnostic","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L66-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instRpcEncodableDiagnosticWith\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">instRpcEncodableDiagnosticWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Server.RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Server.RpcEncodable</a> <span class=\"fn\">(<a href=\"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.DiagnosticWith\">Lsp.DiagnosticWith</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instRpcEncodableDiagnosticWith","kind":"instance","line":61,"name":"Lean.Widget.instRpcEncodableDiagnosticWith","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.InteractiveDiagnostic\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">InteractiveDiagnostic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The `message` field is the text of a message\npossibly containing interactive *embeds* of type `MsgEmbed`.\nWe maintain the invariant that embeds are stored in `.tag`s with empty `.text` subtrees,\ni.e., `.tag embed (.text \"\")`.\n\nClient-side display algorithms render tags in a custom way,\nignoring the nested text. ","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.InteractiveDiagnostic","kind":"def","line":52,"name":"Lean.Widget.InteractiveDiagnostic","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L52-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instTypeNameInteractiveMessage\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">instTypeNameInteractiveMessage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.InteractiveMessage\">InteractiveMessage</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instTypeNameInteractiveMessage","kind":"instance","line":50,"name":"Lean.Widget.instTypeNameInteractiveMessage","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.InteractiveMessage\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">InteractiveMessage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.InteractiveMessage","kind":"def","line":48,"name":"Lean.Widget.InteractiveMessage","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instRpcEncodableMsgEmbed\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">instRpcEncodableMsgEmbed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Server.RpcEncodable</a> <a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed\">MsgEmbed</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instRpcEncodableMsgEmbed","kind":"instance","line":46,"name":"Lean.Widget.instRpcEncodableMsgEmbed","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instInhabitedMsgEmbed.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">instInhabitedMsgEmbed</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed\">MsgEmbed</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instInhabitedMsgEmbed.default","kind":"def","line":46,"name":"Lean.Widget.instInhabitedMsgEmbed.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instInhabitedMsgEmbed\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">instInhabitedMsgEmbed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed\">MsgEmbed</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instInhabitedMsgEmbed","kind":"instance","line":46,"name":"Lean.Widget.instInhabitedMsgEmbed","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed.trace\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">MsgEmbed</span>.<span class=\"name\">trace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indent</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cls</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <span class=\"fn\"><a href=\"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText\">TaggedText</a> <a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed\">MsgEmbed</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">collapsed</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">children</span> : <span class=\"fn\"><a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.StrictOrLazy\">StrictOrLazy</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText\">TaggedText</a> <a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed\">MsgEmbed</a>)</span>)</span> <span class=\"fn\">(<a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">Server.WithRpcRef</a> <a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.LazyTraceChildren\">LazyTraceChildren</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed\">MsgEmbed</a></div></div>","info":{"doc":"Some messages (in particular, traces) are too costly to print eagerly.\nInstead, we allow the user to expand sub-traces interactively. ","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed.trace","kind":"ctor","line":42,"name":"Lean.Widget.MsgEmbed.trace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L42-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed.widget\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">MsgEmbed</span>.<span class=\"name\">widget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wi</span> : <a href=\"./Lean/Widget/Types.html#Lean.Widget.WidgetInstance\">WidgetInstance</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">alt</span> : <span class=\"fn\"><a href=\"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText\">TaggedText</a> <a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed\">MsgEmbed</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed\">MsgEmbed</a></div></div>","info":{"doc":"A widget instance.\n\n`alt` is a fallback rendering of the widget\nthat can be shown in standard, non-interactive LSP diagnostics,\nas well as when user widgets are not supported by the client. ","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed.widget","kind":"ctor","line":36,"name":"Lean.Widget.MsgEmbed.widget","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L36-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed.goal\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">MsgEmbed</span>.<span class=\"name\">goal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Widget/InteractiveGoal.html#Lean.Widget.InteractiveGoal\">InteractiveGoal</a> → <a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed\">MsgEmbed</a></span></div></div>","info":{"doc":"An interactive goal display. ","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed.goal","kind":"ctor","line":34,"name":"Lean.Widget.MsgEmbed.goal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L34-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed.expr\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">MsgEmbed</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Widget/InteractiveCode.html#Lean.Widget.CodeWithInfos\">CodeWithInfos</a> → <a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed\">MsgEmbed</a></span></div></div>","info":{"doc":"A piece of Lean code with elaboration/typing data.\nNote: does not necessarily correspond to an `Expr`, the name is for RPC API compatibility. ","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed.expr","kind":"ctor","line":31,"name":"Lean.Widget.MsgEmbed.expr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L31-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">MsgEmbed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed","kind":"inductive","line":30,"name":"Lean.Widget.MsgEmbed","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L30-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instTypeNameLazyTraceChildren\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">instTypeNameLazyTraceChildren</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.LazyTraceChildren\">LazyTraceChildren</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instTypeNameLazyTraceChildren","kind":"instance","line":28,"name":"Lean.Widget.instTypeNameLazyTraceChildren","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.LazyTraceChildren.children\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">LazyTraceChildren</span>.<span class=\"name\">children</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.LazyTraceChildren\">LazyTraceChildren</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">Server.WithRpcRef</a> <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.LazyTraceChildren.children","kind":"def","line":27,"name":"Lean.Widget.LazyTraceChildren.children","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.LazyTraceChildren.indent\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">LazyTraceChildren</span>.<span class=\"name\">indent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.LazyTraceChildren\">LazyTraceChildren</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.LazyTraceChildren.indent","kind":"def","line":26,"name":"Lean.Widget.LazyTraceChildren.indent","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.LazyTraceChildren.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">LazyTraceChildren</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indent</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">children</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">Server.WithRpcRef</a> <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.LazyTraceChildren\">LazyTraceChildren</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.LazyTraceChildren.mk","kind":"ctor","line":25,"name":"Lean.Widget.LazyTraceChildren.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.LazyTraceChildren\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">LazyTraceChildren</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.LazyTraceChildren","kind":"structure","line":25,"name":"Lean.Widget.LazyTraceChildren","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L25-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instRpcEncodableStrictOrLazy\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">instRpcEncodableStrictOrLazy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Server.RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Server.RpcEncodable</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Server.RpcEncodable</a> <span class=\"fn\">(<a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.StrictOrLazy\">StrictOrLazy</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instRpcEncodableStrictOrLazy","kind":"instance","line":23,"name":"Lean.Widget.instRpcEncodableStrictOrLazy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instInhabitedStrictOrLazy\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">instInhabitedStrictOrLazy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝¹</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.StrictOrLazy\">StrictOrLazy</a> <span class=\"fn\">a✝</span> <span class=\"fn\">a✝¹</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instInhabitedStrictOrLazy","kind":"instance","line":23,"name":"Lean.Widget.instInhabitedStrictOrLazy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instInhabitedStrictOrLazy.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">instInhabitedStrictOrLazy</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝¹</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.StrictOrLazy\">StrictOrLazy</a> <span class=\"fn\">a✝</span> <span class=\"fn\">a✝¹</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instInhabitedStrictOrLazy.default","kind":"def","line":23,"name":"Lean.Widget.instInhabitedStrictOrLazy.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.StrictOrLazy.lazy\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">StrictOrLazy</span>.<span class=\"name\">lazy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.StrictOrLazy\">StrictOrLazy</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.StrictOrLazy.lazy","kind":"ctor","line":22,"name":"Lean.Widget.StrictOrLazy.lazy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.StrictOrLazy.strict\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">StrictOrLazy</span>.<span class=\"name\">strict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.StrictOrLazy\">StrictOrLazy</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.StrictOrLazy.strict","kind":"ctor","line":21,"name":"Lean.Widget.StrictOrLazy.strict","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.StrictOrLazy\"><span class=\"name\">Lean</span>.<span class=\"name\">Widget</span>.<span class=\"name\">StrictOrLazy</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.StrictOrLazy","kind":"inductive","line":20,"name":"Lean.Widget.StrictOrLazy","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Widget/InteractiveDiagnostic.lean#L20-L23"}}],"imports":["Lean.Server.Utils","Lean.Widget.InteractiveGoal","Init.Data.Array.Subarray.Split","Lean.Linter.UnusedVariables"],"instances":[{"className":"Inhabited","name":"Lean.Widget.instInhabitedStrictOrLazy","typeNames":["Lean.Widget.StrictOrLazy"]},{"className":"Lean.Server.RpcEncodable","name":"Lean.Widget.instRpcEncodableStrictOrLazy","typeNames":["Lean.Widget.StrictOrLazy"]},{"className":"TypeName","name":"Lean.Widget.instTypeNameLazyTraceChildren","typeNames":["Lean.Widget.LazyTraceChildren"]},{"className":"Inhabited","name":"Lean.Widget.instInhabitedMsgEmbed","typeNames":["Lean.Widget.MsgEmbed"]},{"className":"Lean.Server.RpcEncodable","name":"Lean.Widget.instRpcEncodableMsgEmbed","typeNames":["Lean.Widget.MsgEmbed"]},{"className":"TypeName","name":"Lean.Widget.instTypeNameInteractiveMessage","typeNames":["Lean.Widget.InteractiveMessage"]},{"className":"Lean.Server.RpcEncodable","name":"Lean.Widget.instRpcEncodableDiagnosticWith","typeNames":["Lean.Lsp.DiagnosticWith"]}],"name":"Lean.Widget.InteractiveDiagnostic"}