{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToStringDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringDecl","kind":"instance","line":143,"name":"Lean.IR.instToStringDecl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L143-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.declToString\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">declToString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.declToString","kind":"def","line":140,"name":"Lean.IR.declToString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L140-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatDecl","kind":"instance","line":138,"name":"Lean.IR.instToFormatDecl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L138-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indent</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatDecl","kind":"def","line":133,"name":"Lean.IR.formatDecl","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L133-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToStringFnBody</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringFnBody","kind":"instance","line":131,"name":"Lean.IR.instToStringFnBody","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L131-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatFnBody</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatFnBody","kind":"instance","line":130,"name":"Lean.IR.instToFormatFnBody","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L130-L130"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatFnBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fnBody</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indent</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBody","kind":"def","line":113,"name":"Lean.IR.formatFnBody","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L113-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBodyHead\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatFnBodyHead</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBodyHead","kind":"def","line":94,"name":"Lean.IR.formatFnBodyHead","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L94-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatParams\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatParams","kind":"def","line":91,"name":"Lean.IR.formatParams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L91-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatAlt\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatAlt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fmt</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indent</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt\">Alt</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatAlt","kind":"def","line":87,"name":"Lean.IR.formatAlt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L87-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatParam\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatParam</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatParam","kind":"instance","line":85,"name":"Lean.IR.instToFormatParam","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringIRType\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToStringIRType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringIRType","kind":"instance","line":80,"name":"Lean.IR.instToStringIRType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L80-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatIRType\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatIRType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatIRType","kind":"instance","line":79,"name":"Lean.IR.instToFormatIRType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToStringExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringExpr","kind":"instance","line":58,"name":"Lean.IR.instToStringExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatExpr","kind":"instance","line":57,"name":"Lean.IR.instToFormatExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatCtorInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatCtorInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo\">CtorInfo</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatCtorInfo","kind":"instance","line":40,"name":"Lean.IR.instToFormatCtorInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatLitVal\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatLitVal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.LitVal\">LitVal</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatLitVal","kind":"instance","line":29,"name":"Lean.IR.instToFormatLitVal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatArray\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatArray","kind":"def","line":22,"name":"Lean.IR.formatArray","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L22-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatArg\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatArg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatArg","kind":"instance","line":20,"name":"Lean.IR.instToFormatArg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/Format.lean#L20-L20"}}],"imports":["Lean.Compiler.IR.Basic"],"instances":[{"className":"Std.ToFormat","name":"Lean.IR.instToFormatArg","typeNames":["Lean.IR.Arg"]},{"className":"Std.ToFormat","name":"Lean.IR.instToFormatLitVal","typeNames":["Lean.IR.LitVal"]},{"className":"Std.ToFormat","name":"Lean.IR.instToFormatCtorInfo","typeNames":["Lean.IR.CtorInfo"]},{"className":"Std.ToFormat","name":"Lean.IR.instToFormatExpr","typeNames":["Lean.IR.Expr"]},{"className":"ToString","name":"Lean.IR.instToStringExpr","typeNames":["Lean.IR.Expr"]},{"className":"Std.ToFormat","name":"Lean.IR.instToFormatIRType","typeNames":["Lean.IR.IRType"]},{"className":"ToString","name":"Lean.IR.instToStringIRType","typeNames":["Lean.IR.IRType"]},{"className":"Std.ToFormat","name":"Lean.IR.instToFormatParam","typeNames":["Lean.IR.Param"]},{"className":"Std.ToFormat","name":"Lean.IR.instToFormatFnBody","typeNames":["Lean.IR.FnBody"]},{"className":"ToString","name":"Lean.IR.instToStringFnBody","typeNames":["Lean.IR.FnBody"]},{"className":"Std.ToFormat","name":"Lean.IR.instToFormatDecl","typeNames":["Lean.IR.Decl"]},{"className":"ToString","name":"Lean.IR.instToStringDecl","typeNames":["Lean.IR.Decl"]}],"name":"Lean.Compiler.IR.Format"}