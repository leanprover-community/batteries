{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.getNameInfo\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">DNS</span>.<span class=\"name\">getNameInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">host</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">Async</a> <a href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo\">NameInfo</a></span></div></div>","info":{"doc":"Performs a reverse DNS lookup on a `SocketAddress`.\n","docLink":"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.getNameInfo","kind":"def","line":50,"name":"Std.Internal.IO.Async.DNS.getNameInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/DNS.lean#L50-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.getAddrInfo\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">DNS</span>.<span class=\"name\">getAddrInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">host </span><span class=\"fn\">service</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addrFamily</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Net/Addr.html#Std.Net.AddressFamily\">Net.AddressFamily</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.Async\">Async</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">Net.IPAddr</a>)</span></span></div></div>","info":{"doc":"Asynchronously resolves a hostname and service to an array of socket addresses.\n","docLink":"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.getAddrInfo","kind":"def","line":37,"name":"Std.Internal.IO.Async.DNS.getAddrInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/DNS.lean#L37-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo.service\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">DNS</span>.<span class=\"name\">NameInfo</span>.<span class=\"name\">service</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo\">NameInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"The service name (e.g., \"http\" for port 80).\n","docLink":"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo.service","kind":"def","line":35,"name":"Std.Internal.IO.Async.DNS.NameInfo.service","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/DNS.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo.host\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">DNS</span>.<span class=\"name\">NameInfo</span>.<span class=\"name\">host</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo\">NameInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"The resolved hostname (e.g., \"example.com\").\n","docLink":"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo.host","kind":"def","line":30,"name":"Std.Internal.IO.Async.DNS.NameInfo.host","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/DNS.lean#L30-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">DNS</span>.<span class=\"name\">NameInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">host </span><span class=\"fn\">service</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo\">NameInfo</a></div></div>","info":{"doc":"","docLink":"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo.mk","kind":"ctor","line":26,"name":"Std.Internal.IO.Async.DNS.NameInfo.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/DNS.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">DNS</span>.<span class=\"name\">NameInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Represents a resolved hostname and service name from a socket address.\n","docLink":"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo","kind":"structure","line":23,"name":"Std.Internal.IO.Async.DNS.NameInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Internal/Async/DNS.lean#L23-L35"}}],"imports":["Std.Time","Std.Internal.UV","Std.Internal.Async.Basic"],"instances":[],"name":"Std.Internal.Async.DNS"}