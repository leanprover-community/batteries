{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Util/ProofWanted.html#elabProofWanted\"><span class=\"name\">elabProofWanted</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>","info":{"doc":"Elaborate a `proof_wanted` declaration. The declaration is translated to an axiom during\nelaboration, but it's then removed from the environment.\n","docLink":"./Batteries/Util/ProofWanted.html#elabProofWanted","kind":"def","line":33,"name":"elabProofWanted","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Util/ProofWanted.lean#L33-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Util/ProofWanted.html#proof_wanted\"><span class=\"name\">proof_wanted</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>","info":{"doc":"This proof would be a welcome contribution to the library!\n\nThe syntax of `proof_wanted` declarations is just like that of `theorem`, but without `:=` or the\nproof. Lean checks that `proof_wanted` declarations are well-formed (e.g. it ensures that all the\nmentioned names are in scope, and that the theorem statement is a valid proposition), but they are\ndiscarded afterwards. This means that they cannot be used as axioms.\n\nTypical usage:\n```\n@[simp] proof_wanted empty_find? [BEq α] [Hashable α] {a : α} :\n    (∅ : HashMap α β).find? a = none\n```\n","docLink":"./Batteries/Util/ProofWanted.html#proof_wanted","kind":"def","line":16,"name":"proof_wanted","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Util/ProofWanted.lean#L16-L31"}}],"imports":["Init","Lean.Elab.Exception","Lean.Elab.Command"],"instances":[],"name":"Batteries.Util.ProofWanted"}