{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instReprLeanConfig\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprLeanConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.instReprLeanConfig","kind":"instance","line":262,"name":"Lake.instReprLeanConfig","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L262-L262"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instReprLeanConfig.repr\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprLeanConfig</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.instReprLeanConfig.repr","kind":"def","line":262,"name":"Lake.instReprLeanConfig.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L262-L262"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instInhabitedLeanConfig.default\"><span class=\"name\">Lake</span>.<span class=\"name\">instInhabitedLeanConfig</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.instInhabitedLeanConfig.default","kind":"def","line":262,"name":"Lake.instInhabitedLeanConfig.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L262-L262"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instInhabitedLeanConfig\"><span class=\"name\">Lake</span>.<span class=\"name\">instInhabitedLeanConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.instInhabitedLeanConfig","kind":"instance","line":262,"name":"Lake.instInhabitedLeanConfig","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L262-L262"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.plugins\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">plugins</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.plugins","kind":"def","line":261,"name":"Lake.LeanConfig.plugins","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L261-L261"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.dynlibs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">dynlibs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.dynlibs","kind":"def","line":256,"name":"Lake.LeanConfig.dynlibs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L256-L256"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.platformIndependent\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">platformIndependent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Asserts whether Lake should assume Lean modules are platform-independent.\n\n* If `false`, Lake will add `System.Platform.target` to the module traces\nwithin the code unit (e.g., package or library). This will force Lean code\nto be re-elaborated on different platforms.\n\n* If `true`, Lake will exclude platform-dependent elements\n(e.g., precompiled modules, external libraries) from a module's trace,\npreventing re-elaboration on different platforms. Note that this will not\neffect  modules outside the code unit in question. For example, a\nplatform-independent package which depends on a platform-dependent library\nwill still be platform-dependent.\n\n* If `none`, Lake will construct traces as natural. That is, it will include\nplatform-dependent artifacts in the trace if they module depends on them,\nbut otherwise not force modules to be platform-dependent.\n\nThere is no check  for correctness here, so a configuration can lie\nand Lake will not catch it. Defaults to `none`.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.platformIndependent","kind":"def","line":251,"name":"Lake.LeanConfig.platformIndependent","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L251-L251"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.backend\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">backend</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></div></div>","info":{"doc":"Compiler backend that modules should be built using (e.g., `C`, `LLVM`).\nDefaults to `C`.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.backend","kind":"def","line":229,"name":"Lake.LeanConfig.backend","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L229-L229"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLinkArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">weakLinkArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Additional arguments to pass to `leanc` when linking (e.g., for shared\nlibraries or binary executables). These will come *after* the paths of\nthe linked objects.\n\nUnlike `moreLinkArgs`, these arguments do not affect the trace\nof the build result, so they can be changed without triggering a rebuild.\nThey come *before* `moreLinkArgs`.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLinkArgs","kind":"def","line":224,"name":"Lake.LeanConfig.weakLinkArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L224-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLinkArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Additional arguments to pass to `leanc` when linking (e.g., for shared\nlibraries or binary executables). These will come *after* the paths of\nthe linked objects.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkArgs","kind":"def","line":214,"name":"Lake.LeanConfig.moreLinkArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L214-L214"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkLibs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLinkLibs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a></span></div></div>","info":{"doc":"Additional target libraries to pass to `leanc` when linking\n(e.g., for shared libraries or binary executables).\nThese will come *after* the paths of other link objects.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkLibs","kind":"def","line":208,"name":"Lake.LeanConfig.moreLinkLibs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L208-L208"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkObjs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLinkObjs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>","info":{"doc":"Additional target objects to use when linking (both static and shared).\nThese will come *after* the paths of native facets.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkObjs","kind":"def","line":202,"name":"Lake.LeanConfig.moreLinkObjs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L202-L202"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeancArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">weakLeancArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Additional arguments to pass to `leanc`\nwhen compiling a module's C source files generated by `lean`.\n\nUnlike `moreLeancArgs`, these arguments do not affect the trace\nof the build result, so they can be changed without triggering a rebuild.\nThey come *before* `moreLeancArgs`.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeancArgs","kind":"def","line":197,"name":"Lake.LeanConfig.weakLeancArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L197-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreServerOptions\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreServerOptions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Util/LeanOptions.html#Lean.LeanOption\">LeanOption</a></span></div></div>","info":{"doc":"Additional options to pass to the Lean language server\n(i.e., `lean --server`) launched by `lake serve`.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreServerOptions","kind":"def","line":188,"name":"Lake.LeanConfig.moreServerOptions","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L188-L188"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeancArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLeancArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Additional arguments to pass to `leanc`\nwhen compiling a module's C source files generated by `lean`.\n\nLake already passes some flags based on the `buildType`,\nbut you can change this by, for example, adding `-O0` and `-UNDEBUG`.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeancArgs","kind":"def","line":183,"name":"Lake.LeanConfig.moreLeancArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L183-L183"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeanArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">weakLeanArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Additional arguments to pass to `lean`\nwhen compiling a module's Lean source files.\n\nUnlike `moreLeanArgs`, these arguments do not affect the trace\nof the build result, so they can be changed without triggering a rebuild.\nThey come *before* `moreLeanArgs`.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeanArgs","kind":"def","line":175,"name":"Lake.LeanConfig.weakLeanArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L175-L175"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeanArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLeanArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"Additional arguments to pass to `lean`\nwhen compiling a module's Lean source files.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeanArgs","kind":"def","line":166,"name":"Lake.LeanConfig.moreLeanArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L166-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.leanOptions\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">leanOptions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Util/LeanOptions.html#Lean.LeanOption\">LeanOption</a></span></div></div>","info":{"doc":"An `Array` of additional options to pass to both the Lean language server\n(i.e., `lean --server`) launched by `lake serve` and to `lean` when compiling\na module's Lean source files.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.leanOptions","kind":"def","line":161,"name":"Lake.LeanConfig.leanOptions","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L161-L161"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.buildType\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">buildType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></div></div>","info":{"doc":"The mode in which the modules should be built (e.g., `debug`, `release`).\nDefaults to `release`.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.buildType","kind":"def","line":155,"name":"Lake.LeanConfig.buildType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L155-L155"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">buildType</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leanOptions</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Util/LeanOptions.html#Lean.LeanOption\">LeanOption</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moreLeanArgs </span><span class=\"fn\">weakLeanArgs </span><span class=\"fn\">moreLeancArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moreServerOptions</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Util/LeanOptions.html#Lean.LeanOption\">LeanOption</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weakLeancArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moreLinkObjs</span> : <span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moreLinkLibs</span> : <span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moreLinkArgs </span><span class=\"fn\">weakLinkArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">backend</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">platformIndependent</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dynlibs </span><span class=\"fn\">plugins</span> : <span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.mk","kind":"ctor","line":150,"name":"Lake.LeanConfig.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.plugins.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">plugins</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`plugins</span> <span class=\"fn\">(<a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.plugins.instConfigField","kind":"instance","line":150,"name":"Lake.LeanConfig.plugins.instConfigField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.instConfigInfo\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">instConfigInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigInfo\">ConfigInfo</a> <span class=\"fn\">`Lake.LeanConfig</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.instConfigInfo","kind":"instance","line":150,"name":"Lake.LeanConfig.instConfigInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.dynlibs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">dynlibs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`dynlibs</span> <span class=\"fn\">(<a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.dynlibs.instConfigField","kind":"instance","line":150,"name":"Lake.LeanConfig.dynlibs.instConfigField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.buildType.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">buildType</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`buildType</span> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.buildType.instConfigField","kind":"instance","line":150,"name":"Lake.LeanConfig.buildType.instConfigField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeancArgs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">weakLeancArgs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`weakLeancArgs</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeancArgs.instConfigField","kind":"instance","line":150,"name":"Lake.LeanConfig.weakLeancArgs.instConfigField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLinkArgs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">weakLinkArgs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`weakLinkArgs</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLinkArgs.instConfigField","kind":"instance","line":150,"name":"Lake.LeanConfig.weakLinkArgs.instConfigField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkArgs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLinkArgs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`moreLinkArgs</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkArgs.instConfigField","kind":"instance","line":150,"name":"Lake.LeanConfig.moreLinkArgs.instConfigField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.instEmptyCollection\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.instEmptyCollection","kind":"instance","line":150,"name":"Lake.LeanConfig.instEmptyCollection","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.leanOptions.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">leanOptions</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`leanOptions</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Util/LeanOptions.html#Lean.LeanOption\">LeanOption</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.leanOptions.instConfigField","kind":"instance","line":150,"name":"Lake.LeanConfig.leanOptions.instConfigField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.backend.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">backend</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`backend</span> <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.backend.instConfigField","kind":"instance","line":150,"name":"Lake.LeanConfig.backend.instConfigField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeanArgs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">weakLeanArgs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`weakLeanArgs</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeanArgs.instConfigField","kind":"instance","line":150,"name":"Lake.LeanConfig.weakLeanArgs.instConfigField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeancArgs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLeancArgs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`moreLeancArgs</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeancArgs.instConfigField","kind":"instance","line":150,"name":"Lake.LeanConfig.moreLeancArgs.instConfigField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkObjs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLinkObjs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`moreLinkObjs</span> <span class=\"fn\">(<a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkObjs.instConfigField","kind":"instance","line":150,"name":"Lake.LeanConfig.moreLinkObjs.instConfigField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreServerOptions.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreServerOptions</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`moreServerOptions</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Util/LeanOptions.html#Lean.LeanOption\">LeanOption</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreServerOptions.instConfigField","kind":"instance","line":150,"name":"Lake.LeanConfig.moreServerOptions.instConfigField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.instConfigFields\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">instConfigFields</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigFields\">ConfigFields</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.instConfigFields","kind":"instance","line":150,"name":"Lake.LeanConfig.instConfigFields","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkLibs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLinkLibs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`moreLinkLibs</span> <span class=\"fn\">(<a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkLibs.instConfigField","kind":"instance","line":150,"name":"Lake.LeanConfig.moreLinkLibs.instConfigField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeanArgs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLeanArgs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`moreLeanArgs</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeanArgs.instConfigField","kind":"instance","line":150,"name":"Lake.LeanConfig.moreLeanArgs.instConfigField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.platformIndependent.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">platformIndependent</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/MetaClasses.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`platformIndependent</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.platformIndependent.instConfigField","kind":"instance","line":150,"name":"Lake.LeanConfig.platformIndependent.instConfigField","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L150-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Configuration options common to targets that build modules. ","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig","kind":"structure","line":149,"name":"Lake.LeanConfig","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L149-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.leanArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">leanArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"The arguments to pass to `lean` based on the build type. ","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.leanArgs","kind":"def","line":142,"name":"Lake.BuildType.leanArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L142-L144"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.leanOptions\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">leanOptions</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a> → <a href=\"./Lean/Util/LeanOptions.html#Lean.LeanOptions\">Lean.LeanOptions</a></span></div></div>","info":{"doc":"The options to pass to `lean` based on the build type. ","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.leanOptions","kind":"def","line":136,"name":"Lake.BuildType.leanOptions","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L136-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.instToString\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">instToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.instToString","kind":"instance","line":134,"name":"Lake.BuildType.instToString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L134-L134"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.toString\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bt</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.toString","kind":"def","line":127,"name":"Lake.BuildType.toString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L127-L132"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.ofString?\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">ofString?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.ofString?","kind":"def","line":119,"name":"Lake.BuildType.ofString?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L119-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.leancArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">leancArgs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></span></div></div>","info":{"doc":"The arguments to pass to `leanc` based on the build type. ","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.leancArgs","kind":"def","line":112,"name":"Lake.BuildType.leancArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L112-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.instMax\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">instMax</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Max\">Max</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.instMax","kind":"instance","line":110,"name":"Lake.BuildType.instMax","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L110-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.instMin\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">instMin</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.instMin","kind":"instance","line":109,"name":"Lake.BuildType.instMin","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L109-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.instLE\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">instLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.instLE","kind":"instance","line":108,"name":"Lake.BuildType.instLE","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L108-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.instLT\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">instLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>","info":{"doc":"Ordering on build types. The ordering is used to determine\nthe *minimum* build version that is necessary for a build.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.instLT","kind":"instance","line":103,"name":"Lake.BuildType.instLT","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L103-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instOrdBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instOrdBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.instOrdBuildType","kind":"instance","line":99,"name":"Lake.instOrdBuildType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instOrdBuildType.ord\"><span class=\"name\">Lake</span>.<span class=\"name\">instOrdBuildType</span>.<span class=\"name\">ord</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a> → <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a> → <a href=\"./Init/Data/Ord/Basic.html#Ordering\">Ordering</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.instOrdBuildType.ord","kind":"def","line":99,"name":"Lake.instOrdBuildType.ord","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instDecidableEqBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instDecidableEqBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.instDecidableEqBuildType","kind":"instance","line":99,"name":"Lake.instDecidableEqBuildType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instReprBuildType.repr\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprBuildType</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.instReprBuildType.repr","kind":"def","line":99,"name":"Lake.instReprBuildType.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instReprBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.instReprBuildType","kind":"instance","line":99,"name":"Lake.instReprBuildType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instInhabitedBuildType.default\"><span class=\"name\">Lake</span>.<span class=\"name\">instInhabitedBuildType</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.instInhabitedBuildType.default","kind":"def","line":99,"name":"Lake.instInhabitedBuildType.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instInhabitedBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instInhabitedBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.instInhabitedBuildType","kind":"instance","line":99,"name":"Lake.instInhabitedBuildType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.release\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">release</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></div></div>","info":{"doc":"High optimization level and no debug info, code, or asserts\n(e.g., passes `-O3 -DNDEBUG` when compiling C code).\n","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.release","kind":"ctor","line":94,"name":"Lake.BuildType.release","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L94-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.minSizeRel\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">minSizeRel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></div></div>","info":{"doc":"Same as `release` but optimizing for size rather than speed\n(e.g., passes `-Os -DNDEBUG` when compiling C code).\n","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.minSizeRel","kind":"ctor","line":89,"name":"Lake.BuildType.minSizeRel","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L89-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.relWithDebInfo\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">relWithDebInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></div></div>","info":{"doc":"Optimized, *with* debug info, but no debug code or asserts\n(e.g., passes `-O3 -g -DNDEBUG` when compiling C code).\n","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.relWithDebInfo","kind":"ctor","line":84,"name":"Lake.BuildType.relWithDebInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L84-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.debug\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">debug</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></div></div>","info":{"doc":"Debug optimization, asserts enabled, custom debug code enabled, and\ndebug info included in executable (so you can step through the code with a\ndebugger and have address to source-file:line-number translation).\nFor example, passes `-Og -g` when compiling C code.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.debug","kind":"ctor","line":77,"name":"Lake.BuildType.debug","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L77-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Lake equivalent of CMake's\n[`CMAKE_BUILD_TYPE`](https://stackoverflow.com/a/59314670).\n","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType","kind":"inductive","line":72,"name":"Lake.BuildType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L72-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.Backend.orPreferLeft\"><span class=\"name\">Lake</span>.<span class=\"name\">Backend</span>.<span class=\"name\">orPreferLeft</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a> → <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a> → <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></span></div></div>","info":{"doc":"If the left backend is default, choose the right one.\nOtherwise, keep the left one.\nThis is used to implement preferential choice of backends,\nwhere the library config can refine the package config.\nFormally, a left absorbing monoid on {`C`, `LLVM`} with `Default` as the unit.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.Backend.orPreferLeft","kind":"def","line":59,"name":"Lake.Backend.orPreferLeft","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L59-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.Backend.toString\"><span class=\"name\">Lake</span>.<span class=\"name\">Backend</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bt</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.Backend.toString","kind":"def","line":51,"name":"Lake.Backend.toString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L51-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.Backend.ofString?\"><span class=\"name\">Lake</span>.<span class=\"name\">Backend</span>.<span class=\"name\">ofString?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.Backend.ofString?","kind":"def","line":44,"name":"Lake.Backend.ofString?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L44-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.Backend.instInhabited\"><span class=\"name\">Lake</span>.<span class=\"name\">Backend</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.Backend.instInhabited","kind":"instance","line":42,"name":"Lake.Backend.instInhabited","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instDecidableEqBackend\"><span class=\"name\">Lake</span>.<span class=\"name\">instDecidableEqBackend</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.instDecidableEqBackend","kind":"instance","line":38,"name":"Lake.instDecidableEqBackend","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instReprBackend\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprBackend</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.instReprBackend","kind":"instance","line":38,"name":"Lake.instReprBackend","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instReprBackend.repr\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprBackend</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lake/Config/LeanConfig.html#Lake.instReprBackend.repr","kind":"def","line":38,"name":"Lake.instReprBackend.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.Backend.default\"><span class=\"name\">Lake</span>.<span class=\"name\">Backend</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></div></div>","info":{"doc":"Use the default backend. Can be overridden by more specific configuration.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.Backend.default","kind":"ctor","line":34,"name":"Lake.Backend.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L34-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.Backend.llvm\"><span class=\"name\">Lake</span>.<span class=\"name\">Backend</span>.<span class=\"name\">llvm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></div></div>","info":{"doc":"Force the LLVM backend.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.Backend.llvm","kind":"ctor","line":30,"name":"Lake.Backend.llvm","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L30-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.Backend.c\"><span class=\"name\">Lake</span>.<span class=\"name\">Backend</span>.<span class=\"name\">c</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></div></div>","info":{"doc":"Force the C backend.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.Backend.c","kind":"ctor","line":26,"name":"Lake.Backend.c","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L26-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.Backend\"><span class=\"name\">Lake</span>.<span class=\"name\">Backend</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Compiler backend with which to compile Lean.\n","docLink":"./Lake/Config/LeanConfig.html#Lake.Backend","kind":"inductive","line":22,"name":"Lake.Backend","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/lake/Lake/Config/LeanConfig.lean#L22-L38"}}],"imports":["Lake.Build.Target.Basic","Lake.Config.Dynlib","Lake.Config.MetaClasses","Lake.Config.Meta","Lake.Util.Name"],"instances":[{"className":"Repr","name":"Lake.instReprBackend","typeNames":["Lake.Backend"]},{"className":"Decidable","name":"Lake.instDecidableEqBackend","typeNames":["Eq"]},{"className":"Inhabited","name":"Lake.Backend.instInhabited","typeNames":["Lake.Backend"]},{"className":"Inhabited","name":"Lake.instInhabitedBuildType","typeNames":["Lake.BuildType"]},{"className":"Repr","name":"Lake.instReprBuildType","typeNames":["Lake.BuildType"]},{"className":"Decidable","name":"Lake.instDecidableEqBuildType","typeNames":["Eq"]},{"className":"Ord","name":"Lake.instOrdBuildType","typeNames":["Lake.BuildType"]},{"className":"LT","name":"Lake.BuildType.instLT","typeNames":["Lake.BuildType"]},{"className":"LE","name":"Lake.BuildType.instLE","typeNames":["Lake.BuildType"]},{"className":"Min","name":"Lake.BuildType.instMin","typeNames":["Lake.BuildType"]},{"className":"Max","name":"Lake.BuildType.instMax","typeNames":["Lake.BuildType"]},{"className":"ToString","name":"Lake.BuildType.instToString","typeNames":["Lake.BuildType"]},{"className":"Lake.ConfigField","name":"Lake.LeanConfig.platformIndependent.instConfigField","typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Option"]},{"className":"Lake.ConfigField","name":"Lake.LeanConfig.moreLeanArgs.instConfigField","typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"]},{"className":"Lake.ConfigField","name":"Lake.LeanConfig.moreLinkLibs.instConfigField","typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Lake.TargetArray"]},{"className":"Lake.ConfigFields","name":"Lake.LeanConfig.instConfigFields","typeNames":["Lake.LeanConfig"]},{"className":"Lake.ConfigField","name":"Lake.LeanConfig.moreServerOptions.instConfigField","typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"]},{"className":"Lake.ConfigField","name":"Lake.LeanConfig.moreLinkObjs.instConfigField","typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Lake.TargetArray"]},{"className":"Lake.ConfigField","name":"Lake.LeanConfig.moreLeancArgs.instConfigField","typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"]},{"className":"Lake.ConfigField","name":"Lake.LeanConfig.weakLeanArgs.instConfigField","typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"]},{"className":"Lake.ConfigField","name":"Lake.LeanConfig.backend.instConfigField","typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Lake.Backend"]},{"className":"Lake.ConfigField","name":"Lake.LeanConfig.leanOptions.instConfigField","typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"]},{"className":"EmptyCollection","name":"Lake.LeanConfig.instEmptyCollection","typeNames":["Lake.LeanConfig"]},{"className":"Lake.ConfigField","name":"Lake.LeanConfig.moreLinkArgs.instConfigField","typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"]},{"className":"Lake.ConfigField","name":"Lake.LeanConfig.weakLinkArgs.instConfigField","typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"]},{"className":"Lake.ConfigField","name":"Lake.LeanConfig.weakLeancArgs.instConfigField","typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"]},{"className":"Lake.ConfigField","name":"Lake.LeanConfig.buildType.instConfigField","typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Lake.BuildType"]},{"className":"Lake.ConfigField","name":"Lake.LeanConfig.dynlibs.instConfigField","typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Lake.TargetArray"]},{"className":"Lake.ConfigInfo","name":"Lake.LeanConfig.instConfigInfo","typeNames":["Lean.Name.mkStr2"]},{"className":"Lake.ConfigField","name":"Lake.LeanConfig.plugins.instConfigField","typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Lake.TargetArray"]},{"className":"Inhabited","name":"Lake.instInhabitedLeanConfig","typeNames":["Lake.LeanConfig"]},{"className":"Repr","name":"Lake.instReprLeanConfig","typeNames":["Lake.LeanConfig"]}],"name":"Lake.Config.LeanConfig"}