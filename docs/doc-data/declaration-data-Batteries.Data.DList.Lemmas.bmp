{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Lemmas.html#Batteries.DList.ofThunk_coe\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">ofThunk_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.ofThunk\">ofThunk</a> <a href=\"./Init/Core.html#Thunk.mk\">{</a> <span class=\"fn\">fn</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Unit\">Unit</a>) =&gt; <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Thunk.mk\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.ofList\">ofList</a> <span class=\"fn\">l</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/DList/Lemmas.html#Batteries.DList.ofThunk_coe","kind":"theorem","line":55,"name":"Batteries.DList.ofThunk_coe","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/DList/Lemmas.lean#L55-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Lemmas.html#Batteries.DList.singleton_eq_ofThunk\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">singleton_eq_ofThunk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.singleton\">singleton</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.ofThunk\">ofThunk</a> <a href=\"./Init/Core.html#Thunk.mk\">{</a> <span class=\"fn\">fn</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Unit\">Unit</a>) =&gt; <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#List.cons\">]</a></span> <a href=\"./Init/Core.html#Thunk.mk\">}</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/DList/Lemmas.html#Batteries.DList.singleton_eq_ofThunk","kind":"theorem","line":51,"name":"Batteries.DList.singleton_eq_ofThunk","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/DList/Lemmas.lean#L51-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Lemmas.html#Batteries.DList.toList_push\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">toList_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.push\">push</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.toList\">toList</a></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#List.cons\">]</a></div></div>","info":{"doc":"","docLink":"./Batteries/Data/DList/Lemmas.html#Batteries.DList.toList_push","kind":"theorem","line":48,"name":"Batteries.DList.toList_push","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/DList/Lemmas.lean#L48-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Lemmas.html#Batteries.DList.toList_cons\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">toList_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.cons\">cons</a> <span class=\"fn\">x</span> <span class=\"fn\">l</span>)</span>.<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.toList\">toList</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/DList/Lemmas.html#Batteries.DList.toList_cons","kind":"theorem","line":45,"name":"Batteries.DList.toList_cons","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/DList/Lemmas.lean#L45-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Lemmas.html#Batteries.DList.toList_append\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">toList_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">l₂</span>).<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.toList\">toList</a></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.toList\">toList</a></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/DList/Lemmas.html#Batteries.DList.toList_append","kind":"theorem","line":42,"name":"Batteries.DList.toList_append","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/DList/Lemmas.lean#L42-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Lemmas.html#Batteries.DList.toList_singleton\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">toList_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.singleton\">singleton</a> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#List.cons\">]</a></div></div>","info":{"doc":"","docLink":"./Batteries/Data/DList/Lemmas.html#Batteries.DList.toList_singleton","kind":"theorem","line":40,"name":"Batteries.DList.toList_singleton","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/DList/Lemmas.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Lemmas.html#Batteries.DList.toList_empty\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">toList_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.empty\">empty</a>.<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></div></div>","info":{"doc":"","docLink":"./Batteries/Data/DList/Lemmas.html#Batteries.DList.toList_empty","kind":"theorem","line":38,"name":"Batteries.DList.toList_empty","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/DList/Lemmas.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Lemmas.html#Batteries.DList.ofList_toList\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">ofList_toList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.ofList\">ofList</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.toList\">toList</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">l</span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/DList/Lemmas.html#Batteries.DList.ofList_toList","kind":"theorem","line":32,"name":"Batteries.DList.ofList_toList","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/DList/Lemmas.lean#L32-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Lemmas.html#Batteries.DList.toList_ofList\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">toList_ofList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.ofList\">ofList</a> <span class=\"fn\">l</span>)</span>.<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">l</span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/DList/Lemmas.html#Batteries.DList.toList_ofList","kind":"theorem","line":29,"name":"Batteries.DList.toList_ofList","sourceLink":"https://github.com/leanprover-community/batteries/blob/5da171049c81931a2110303c9d547f5ab2955b06/Batteries/Data/DList/Lemmas.lean#L29-L30"}}],"imports":["Init","Batteries.Data.DList.Basic"],"instances":[],"name":"Batteries.Data.DList.Lemmas"}