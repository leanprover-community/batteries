{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectLooseBVars.html#Lean.Expr.collectLooseBVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">collectLooseBVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">offset</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"Collects the loose bound variables in `e` with indices at least `offset`.\nReturns a set of indices relative to `offset`.\n\nSpecification: `i ∈ e.collectLooseBVars offset ↔ e.hasLooseBVar (i + offset)`.\n","docLink":"./Lean/Util/CollectLooseBVars.html#Lean.Expr.collectLooseBVars","kind":"def","line":47,"name":"Lean.Expr.collectLooseBVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/CollectLooseBVars.lean#L47-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.main\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">CollectLooseBVars</span>.<span class=\"name\">main</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">offset</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.main","kind":"opaque","line":30,"name":"Lean.Expr.CollectLooseBVars.main","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/CollectLooseBVars.lean#L30-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">CollectLooseBVars</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.M","kind":"def","line":28,"name":"Lean.Expr.CollectLooseBVars.M","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/CollectLooseBVars.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.State.bvars\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">CollectLooseBVars</span>.<span class=\"name\">State</span>.<span class=\"name\">bvars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.State.bvars","kind":"def","line":26,"name":"Lean.Expr.CollectLooseBVars.State.bvars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/CollectLooseBVars.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.State.visited\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">CollectLooseBVars</span>.<span class=\"name\">State</span>.<span class=\"name\">visited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> (<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.State.visited","kind":"def","line":25,"name":"Lean.Expr.CollectLooseBVars.State.visited","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/CollectLooseBVars.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">CollectLooseBVars</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">visited</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> (<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bvars</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.State.mk","kind":"ctor","line":24,"name":"Lean.Expr.CollectLooseBVars.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/CollectLooseBVars.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">CollectLooseBVars</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/CollectLooseBVars.html#Lean.Expr.CollectLooseBVars.State","kind":"structure","line":24,"name":"Lean.Expr.CollectLooseBVars.State","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Util/CollectLooseBVars.lean#L24-L26"}}],"imports":["Lean.Expr"],"instances":[],"name":"Lean.Util.CollectLooseBVars"}