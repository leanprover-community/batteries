{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reducePred\"><span class=\"name\">Fin</span>.<span class=\"name\">reducePred</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reducePred","kind":"def","line":169,"name":"Fin.reducePred","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L169-L175"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceSubNat\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceSubNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceSubNat","kind":"def","line":160,"name":"Fin.reduceSubNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L160-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceCastLE\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceCastLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceCastLE","kind":"def","line":149,"name":"Fin.reduceCastLE","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L149-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceCastLT\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceCastLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceCastLT","kind":"def","line":140,"name":"Fin.reduceCastLT","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L140-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceNatAdd\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceNatAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceNatAdd","kind":"def","line":134,"name":"Fin.reduceNatAdd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L134-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceAddNat\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceAddNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceAddNat","kind":"def","line":128,"name":"Fin.reduceAddNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L128-L132"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceCastAdd\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceCastAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceCastAdd","kind":"def","line":122,"name":"Fin.reduceCastAdd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L122-L126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceCastSucc\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceCastSucc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceCastSucc","kind":"def","line":117,"name":"Fin.reduceCastSucc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L117-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceOfNat\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceOfNat","kind":"def","line":111,"name":"Fin.reduceOfNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L111-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceFinMk\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceFinMk</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceFinMk","kind":"def","line":101,"name":"Fin.reduceFinMk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L101-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.isValue\"><span class=\"name\">Fin</span>.<span class=\"name\">isValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"Simplification procedure for ensuring `Fin n` literals are normalized. ","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.isValue","kind":"def","line":90,"name":"Fin.isValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L90-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceBNe\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceBNe</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceBNe","kind":"def","line":88,"name":"Fin.reduceBNe","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L88-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceBEq\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceBEq","kind":"def","line":87,"name":"Fin.reduceBEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L87-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceNe\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceNe</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Lean.Meta.Simp.Simproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceNe","kind":"def","line":86,"name":"Fin.reduceNe","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L86-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceEq\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Lean.Meta.Simp.Simproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceEq","kind":"def","line":85,"name":"Fin.reduceEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceGE\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceGE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Lean.Meta.Simp.Simproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceGE","kind":"def","line":84,"name":"Fin.reduceGE","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L84-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceGT\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceGT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Lean.Meta.Simp.Simproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceGT","kind":"def","line":83,"name":"Fin.reduceGT","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceLE\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Lean.Meta.Simp.Simproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceLE","kind":"def","line":82,"name":"Fin.reduceLE","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L82-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceLT\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Lean.Meta.Simp.Simproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceLT","kind":"def","line":81,"name":"Fin.reduceLT","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L81-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceShiftRight\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceShiftRight</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceShiftRight","kind":"def","line":79,"name":"Fin.reduceShiftRight","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceShiftLeft\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceShiftLeft</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceShiftLeft","kind":"def","line":78,"name":"Fin.reduceShiftLeft","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L78-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceXor\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceXor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceXor","kind":"def","line":76,"name":"Fin.reduceXor","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L76-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceOr\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceOr","kind":"def","line":75,"name":"Fin.reduceOr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L75-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceAnd\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceAnd","kind":"def","line":74,"name":"Fin.reduceAnd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L74-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceMod\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceMod</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceMod","kind":"def","line":72,"name":"Fin.reduceMod","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L72-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceDiv\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceDiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceDiv","kind":"def","line":71,"name":"Fin.reduceDiv","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L71-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceSub\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceSub</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceSub","kind":"def","line":70,"name":"Fin.reduceSub","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceMul\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceMul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceMul","kind":"def","line":69,"name":"Fin.reduceMul","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceAdd\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceAdd","kind":"def","line":68,"name":"Fin.reduceAdd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceLast\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceLast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceLast","kind":"def","line":66,"name":"Fin.reduceLast","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L66-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceRev\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceRev</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceRev","kind":"def","line":65,"name":"Fin.reduceRev","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceSucc\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceSucc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceSucc","kind":"def","line":64,"name":"Fin.reduceSucc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceBoolPred\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceBoolPred</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arity</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Lean.Meta.SimpM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DStep\">Lean.Meta.Simp.DStep</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceBoolPred","kind":"def","line":53,"name":"Fin.reduceBoolPred","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L53-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceBinPred\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceBinPred</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arity</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Lean.Meta.SimpM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Step\">Lean.Meta.Simp.Step</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceBinPred","kind":"def","line":47,"name":"Fin.reduceBinPred","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L47-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceBin\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceBin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arity</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>} → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Lean.Meta.SimpM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DStep\">Lean.Meta.Simp.DStep</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceBin","kind":"def","line":37,"name":"Fin.reduceBin","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L37-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceNatOp\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceNatOp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arity</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Lean.Meta.SimpM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DStep\">Lean.Meta.Simp.DStep</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceNatOp","kind":"def","line":31,"name":"Fin.reduceNatOp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L31-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceOp\"><span class=\"name\">Fin</span>.<span class=\"name\">reduceOp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arity</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>} → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">n</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Lean.Meta.SimpM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DStep\">Lean.Meta.Simp.DStep</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.reduceOp","kind":"def","line":25,"name":"Fin.reduceOp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L25-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.fromExpr?\"><span class=\"name\">Fin</span>.<span class=\"name\">fromExpr?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Lean.Meta.SimpM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value\">Value</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.fromExpr?","kind":"def","line":21,"name":"Fin.fromExpr?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L21-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.instReprValue.repr\"><span class=\"name\">Fin</span>.<span class=\"name\">instReprValue</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value\">Value</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.instReprValue.repr","kind":"def","line":19,"name":"Fin.instReprValue.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.instReprValue\"><span class=\"name\">Fin</span>.<span class=\"name\">instReprValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value\">Value</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.instReprValue","kind":"instance","line":19,"name":"Fin.instReprValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.instDecidableEqValue.decEq\"><span class=\"name\">Fin</span>.<span class=\"name\">instDecidableEqValue</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value\">Value</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x✝¹</span>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.instDecidableEqValue.decEq","kind":"def","line":19,"name":"Fin.instDecidableEqValue.decEq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.instDecidableEqValue\"><span class=\"name\">Fin</span>.<span class=\"name\">instDecidableEqValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value\">Value</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.instDecidableEqValue","kind":"instance","line":19,"name":"Fin.instDecidableEqValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value.value\"><span class=\"name\">Fin</span>.<span class=\"name\">Value</span>.<span class=\"name\">value</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value\">Value</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value.n\">n</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value.value","kind":"def","line":18,"name":"Fin.Value.value","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value.n\"><span class=\"name\">Fin</span>.<span class=\"name\">Value</span>.<span class=\"name\">n</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value\">Value</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value.n","kind":"def","line":17,"name":"Fin.Value.n","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value.mk\"><span class=\"name\">Fin</span>.<span class=\"name\">Value</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value\">Value</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value.mk","kind":"ctor","line":16,"name":"Fin.Value.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L16-L16"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value\"><span class=\"name\">Fin</span>.<span class=\"name\">Value</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.html#Fin.Value","kind":"structure","line":16,"name":"Fin.Value","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Fin.lean#L16-L19"}}],"imports":["Lean.Meta.Tactic.Simp.BuiltinSimprocs.Nat"],"instances":[{"className":"Decidable","name":"Fin.instDecidableEqValue","typeNames":["Eq"]},{"className":"Repr","name":"Fin.instReprValue","typeNames":["Fin.Value"]}],"name":"Lean.Meta.Tactic.Simp.BuiltinSimprocs.Fin"}