{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Ord/String.html#Char.instLawfulEqOrd\"><span class=\"name\">Char</span>.<span class=\"name\">instLawfulEqOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">Std.LawfulEqOrd</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Ord/String.html#Char.instLawfulEqOrd","kind":"instance","line":44,"name":"Char.instLawfulEqOrd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Ord/String.lean#L44-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Ord/String.html#Char.instTransOrd\"><span class=\"name\">Char</span>.<span class=\"name\">instTransOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">Std.TransOrd</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Ord/String.html#Char.instTransOrd","kind":"instance","line":40,"name":"Char.instTransOrd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Ord/String.lean#L40-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Ord/String.html#String.instLawfulEqOrd\"><span class=\"name\">String</span>.<span class=\"name\">instLawfulEqOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">Std.LawfulEqOrd</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Ord/String.html#String.instLawfulEqOrd","kind":"instance","line":33,"name":"String.instLawfulEqOrd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Ord/String.lean#L33-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Ord/String.html#String.instTransOrd\"><span class=\"name\">String</span>.<span class=\"name\">instTransOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">Std.TransOrd</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Ord/String.html#String.instTransOrd","kind":"instance","line":29,"name":"String.instTransOrd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Ord/String.lean#L29-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Ord/String.html#String.instOrd\"><span class=\"name\">String</span>.<span class=\"name\">instOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Ord/String.html#String.instOrd","kind":"instance","line":26,"name":"String.instOrd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Ord/String.lean#L26-L27"}}],"imports":["Init.Data.Order.Ord","Init.Data.String.Lemmas"],"instances":[{"className":"Ord","name":"String.instOrd","typeNames":["String"]},{"className":"Std.TransCmp","name":"String.instTransOrd","typeNames":["String"]},{"className":"Std.LawfulEqCmp","name":"String.instLawfulEqOrd","typeNames":["String"]},{"className":"Std.TransCmp","name":"Char.instTransOrd","typeNames":["Char"]},{"className":"Std.LawfulEqCmp","name":"Char.instLawfulEqOrd","typeNames":["Char"]}],"name":"Init.Data.Ord.String"}