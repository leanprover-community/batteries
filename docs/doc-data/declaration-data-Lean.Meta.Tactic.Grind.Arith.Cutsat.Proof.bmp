{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof.collectDecVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">UnsatProof</span>.<span class=\"name\">collectDecVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof\">UnsatProof</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Util.html#Lean.Meta.Grind.Arith.CollectDecVars.CollectDecVarsM\">CollectDecVarsM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof.collectDecVars","kind":"def","line":672,"name":"Lean.Meta.Grind.Arith.Cutsat.UnsatProof.collectDecVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L672-L675"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr.collectDecVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DiseqCnstr</span>.<span class=\"name\">collectDecVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Util.html#Lean.Meta.Grind.Arith.CollectDecVars.CollectDecVarsM\">CollectDecVarsM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr.collectDecVars","kind":"opaque","line":664,"name":"Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr.collectDecVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L664-L668"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr.collectDecVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">LeCnstr</span>.<span class=\"name\">collectDecVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Util.html#Lean.Meta.Grind.Arith.CollectDecVars.CollectDecVarsM\">CollectDecVarsM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr.collectDecVars","kind":"opaque","line":653,"name":"Lean.Meta.Grind.Arith.Cutsat.LeCnstr.collectDecVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L653-L662"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr.collectDecVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdCnstr</span>.<span class=\"name\">collectDecVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Util.html#Lean.Meta.Grind.Arith.CollectDecVars.CollectDecVarsM\">CollectDecVarsM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr.collectDecVars","kind":"opaque","line":646,"name":"Lean.Meta.Grind.Arith.Cutsat.DvdCnstr.collectDecVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L646-L651"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CooperSplit.collectDecVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">CooperSplit</span>.<span class=\"name\">collectDecVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.CooperSplit\">CooperSplit</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Util.html#Lean.Meta.Grind.Arith.CollectDecVars.CollectDecVarsM\">CollectDecVarsM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CooperSplit.collectDecVars","kind":"opaque","line":637,"name":"Lean.Meta.Grind.Arith.Cutsat.CooperSplit.collectDecVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L637-L644"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.EqCnstr.collectDecVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">EqCnstr</span>.<span class=\"name\">collectDecVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.EqCnstr\">EqCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Util.html#Lean.Meta.Grind.Arith.CollectDecVars.CollectDecVarsM\">CollectDecVarsM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.EqCnstr.collectDecVars","kind":"opaque","line":628,"name":"Lean.Meta.Grind.Arith.Cutsat.EqCnstr.collectDecVars","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L628-L635"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.setInconsistent\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">setInconsistent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof\">UnsatProof</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.setInconsistent","kind":"def","line":613,"name":"Lean.Meta.Grind.Arith.Cutsat.setInconsistent","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L613-L619"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof.toExprProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">UnsatProof</span>.<span class=\"name\">toExprProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof\">UnsatProof</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof.toExprProof","kind":"def","line":610,"name":"Lean.Meta.Grind.Arith.Cutsat.UnsatProof.toExprProof","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L610-L611"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.instHashableExpr_lean.hash\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">instHashableExpr_lean</span>.<span class=\"name\">hash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Linear.html#Int.Linear.Expr\">Int.Linear.Expr</a> → <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.instHashableExpr_lean.hash","kind":"def","line":21,"name":"Lean.Meta.Grind.Arith.Cutsat.instHashableExpr_lean.hash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.instHashableExpr_lean\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">instHashableExpr_lean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Expr\">Int.Linear.Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.instHashableExpr_lean","kind":"instance","line":21,"name":"Lean.Meta.Grind.Arith.Cutsat.instHashableExpr_lean","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L21-L21"}}],"imports":["Lean.Meta.Tactic.Grind.Arith.Cutsat.Types","Init.Data.Int.OfNat","Lean.Meta.Tactic.Grind.Diseq","Lean.Meta.Tactic.Grind.ProofUtil","Lean.Meta.Tactic.Simp.Arith.Int.Simp","Lean.Meta.Tactic.Grind.Arith.Cutsat.CommRing","Lean.Meta.Tactic.Grind.Arith.Cutsat.Util","Lean.Meta.Tactic.Grind.Arith.Cutsat.Nat","Lean.Meta.Tactic.Grind.Arith.Cutsat.VarRename","Lean.Meta.Tactic.Grind.Arith.CommRing.VarRename","Lean.Meta.Tactic.Grind.Arith.CommRing.ToExpr"],"instances":[{"className":"Hashable","name":"Lean.Meta.Grind.Arith.Cutsat.instHashableExpr_lean","typeNames":["Int.Linear.Expr"]}],"name":"Lean.Meta.Tactic.Grind.Arith.Cutsat.Proof"}