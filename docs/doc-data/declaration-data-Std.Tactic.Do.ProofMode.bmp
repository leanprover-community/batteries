{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Do/ProofMode.html#Std.Tactic.Do.MGoalHypMarker\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">MGoalHypMarker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ﾏピ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./foundational_types.html\">(Type</a> u)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_A</span> : <span class=\"fn\"><a href=\"./Std/Do/SPred/SPred.html#Std.Do.SPred\">Do.SPred</a> <span class=\"fn\">ﾏピ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"This is only used for delaboration purposes, so that we can render context variables that appear\nto have type `A : PROP` even though `PROP` is not a type. ","docLink":"./Std/Tactic/Do/ProofMode.html#Std.Tactic.Do.MGoalHypMarker","kind":"def","line":26,"name":"Std.Tactic.Do.MGoalHypMarker","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/Do/ProofMode.lean#L26-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Do/ProofMode.html#Std.Tactic.Do.MGoalEntails\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">MGoalEntails</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ﾏピ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Std/Do/SPred/SPred.html#Std.Do.SPred\">Do.SPred</a> <span class=\"fn\">ﾏピ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"This is the same as `SPred.entails`.\nThis constant is used to detect `SPred` proof mode goals. ","docLink":"./Std/Tactic/Do/ProofMode.html#Std.Tactic.Do.MGoalEntails","kind":"def","line":22,"name":"Std.Tactic.Do.MGoalEntails","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/Do/ProofMode.lean#L22-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Do/ProofMode.html#Std.Tactic.Do.mgoalStx\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">mgoalStx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Std/Tactic/Do/ProofMode.html#Std.Tactic.Do.mgoalStx","kind":"def","line":20,"name":"Std.Tactic.Do.mgoalStx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/Do/ProofMode.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Do/ProofMode.html#Std.Tactic.Do.mgoalHyp\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">mgoalHyp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Std/Tactic/Do/ProofMode.html#Std.Tactic.Do.mgoalHyp","kind":"def","line":18,"name":"Std.Tactic.Do.mgoalHyp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Tactic/Do/ProofMode.lean#L18-L18"}}],"imports":["Std.Do.SPred.SPred"],"instances":[],"name":"Std.Tactic.Do.ProofMode"}