{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.runFrontend\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">runFrontend</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fileName</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainModuleName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trustLevel</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oleanFileName? </span><span class=\"fn\">ileanFileName?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jsonOutput</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">errorOnKinds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">plugins</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">printStats</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">setup?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Setup.html#Lean.ModuleSetup\">ModuleSetup</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.runFrontend","kind":"def","line":135,"name":"Lean.Elab.runFrontend","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L135-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.process\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">process</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fileName</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Message.html#Lean.MessageLog\">MessageLog</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.process","kind":"def","line":129,"name":"Lean.Elab.process","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L129-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.IO.processCommands\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">IO</span>.<span class=\"name\">processCommands</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inputCtx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserState</span> : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">commandState</span> : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State\">Frontend.State</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.IO.processCommands","kind":"def","line":124,"name":"Lean.Elab.IO.processCommands","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L124-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.IO.processCommandsIncrementally\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">IO</span>.<span class=\"name\">processCommandsIncrementally</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inputCtx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserState</span> : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">commandState</span> : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Command.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">old?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState\">IncrementalState</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState\">IncrementalState</a></span></div></div>","info":{"doc":"Variant of `IO.processCommands` that allows for potential incremental reuse. Pass in the result of a\nprevious invocation done with the same state (but usually different input context) to allow for\nreuse.\n","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.IO.processCommandsIncrementally","kind":"def","line":89,"name":"Lean.Elab.IO.processCommandsIncrementally","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L89-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.instNonemptyIncrementalState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instNonemptyIncrementalState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState\">IncrementalState</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.instNonemptyIncrementalState","kind":"instance","line":86,"name":"Lean.Elab.instNonemptyIncrementalState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L86-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState.initialSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">IncrementalState</span>.<span class=\"name\">initialSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState\">IncrementalState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Language.Lean.CommandParsedSnapshot</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState.initialSnap","kind":"def","line":85,"name":"Lean.Elab.IncrementalState.initialSnap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState.inputCtx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">IncrementalState</span>.<span class=\"name\">inputCtx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState\">IncrementalState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState.inputCtx","kind":"def","line":84,"name":"Lean.Elab.IncrementalState.inputCtx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L84-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">IncrementalState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toState</span> : <a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State\">Frontend.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inputCtx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initialSnap</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Language.Lean.CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState\">IncrementalState</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState.mk","kind":"ctor","line":83,"name":"Lean.Elab.IncrementalState.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState.toState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">IncrementalState</span>.<span class=\"name\">toState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState\">IncrementalState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State\">Frontend.State</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState.toState","kind":"def","line":83,"name":"Lean.Elab.IncrementalState.toState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L83-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">IncrementalState</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State\">Lean.Elab.Frontend.State</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.IncrementalState","kind":"structure","line":83,"name":"Lean.Elab.IncrementalState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L83-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.processCommands\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">processCommands</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.FrontendM\">FrontendM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.processCommands","kind":"opaque","line":74,"name":"Lean.Elab.Frontend.processCommands","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L74-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.processCommand\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">processCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.FrontendM\">FrontendM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.processCommand","kind":"def","line":59,"name":"Lean.Elab.Frontend.processCommand","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L59-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.getInputContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">getInputContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.FrontendM\">FrontendM</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.getInputContext","kind":"def","line":57,"name":"Lean.Elab.Frontend.getInputContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.setMessages\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">setMessages</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msgs</span> : <a href=\"./Lean/Message.html#Lean.MessageLog\">MessageLog</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.FrontendM\">FrontendM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.setMessages","kind":"def","line":56,"name":"Lean.Elab.Frontend.setMessages","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.setParserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">setParserState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.FrontendM\">FrontendM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.setParserState","kind":"def","line":55,"name":"Lean.Elab.Frontend.setParserState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L55-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.getCommandState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">getCommandState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.FrontendM\">FrontendM</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Command.State</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.getCommandState","kind":"def","line":54,"name":"Lean.Elab.Frontend.getCommandState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.getParserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">getParserState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.FrontendM\">FrontendM</a> <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.getParserState","kind":"def","line":53,"name":"Lean.Elab.Frontend.getParserState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.updateCmdPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">updateCmdPos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.FrontendM\">FrontendM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.updateCmdPos","kind":"def","line":50,"name":"Lean.Elab.Frontend.updateCmdPos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L50-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.elabCommandAtFrontend\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">elabCommandAtFrontend</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.FrontendM\">FrontendM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.elabCommandAtFrontend","kind":"def","line":46,"name":"Lean.Elab.Frontend.elabCommandAtFrontend","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L46-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.runCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">runCommandElabM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Command.CommandElabM</a> <span class=\"fn\">Î±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.FrontendM\">FrontendM</a> <span class=\"fn\">Î±</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.runCommandElabM","kind":"def","line":32,"name":"Lean.Elab.Frontend.runCommandElabM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L32-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.setCommandState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">setCommandState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">commandState</span> : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.FrontendM\">FrontendM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.setCommandState","kind":"def","line":29,"name":"Lean.Elab.Frontend.setCommandState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L29-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.FrontendM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">FrontendM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.FrontendM","kind":"def","line":27,"name":"Lean.Elab.Frontend.FrontendM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.Context.inputCtx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Context</span>.<span class=\"name\">inputCtx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.Context.inputCtx","kind":"def","line":25,"name":"Lean.Elab.Frontend.Context.inputCtx","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inputCtx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.Context\">Context</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.Context.mk","kind":"ctor","line":24,"name":"Lean.Elab.Frontend.Context.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.Context","kind":"structure","line":24,"name":"Lean.Elab.Frontend.Context","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L24-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.instNonemptyState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">instNonemptyState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State\">State</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.instNonemptyState","kind":"instance","line":22,"name":"Lean.Elab.Frontend.instNonemptyState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State.commands\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">State</span>.<span class=\"name\">commands</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State.commands","kind":"def","line":21,"name":"Lean.Elab.Frontend.State.commands","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State.cmdPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">State</span>.<span class=\"name\">cmdPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State.cmdPos","kind":"def","line":20,"name":"Lean.Elab.Frontend.State.cmdPos","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State.parserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">State</span>.<span class=\"name\">parserState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State.parserState","kind":"def","line":19,"name":"Lean.Elab.Frontend.State.parserState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State.commandState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">State</span>.<span class=\"name\">commandState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Command.State</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State.commandState","kind":"def","line":18,"name":"Lean.Elab.Frontend.State.commandState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">commandState</span> : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Command.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserState</span> : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cmdPos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">String.Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">commands</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State.mk","kind":"ctor","line":17,"name":"Lean.Elab.Frontend.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State","kind":"structure","line":17,"name":"Lean.Elab.Frontend.State","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Frontend.lean#L17-L22"}}],"imports":["Lean.Language.Lean","Lean.Server.References","Lean.Util.Profiler"],"instances":[{"className":"Nonempty","name":"Lean.Elab.Frontend.instNonemptyState","typeNames":["Lean.Elab.Frontend.State"]},{"className":"Nonempty","name":"Lean.Elab.instNonemptyIncrementalState","typeNames":["Lean.Elab.IncrementalState"]}],"name":"Lean.Elab.Frontend"}