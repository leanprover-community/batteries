{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.nextGoal?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">nextGoal?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">SearchM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span></div></div>","info":{"doc":"Select the next goal to be processed from the `choiceStack`.\nThis function assumes the current goal has been closed (i.e., `inconsistent` is `true`)\nReturns `some gen` if a new goal was found for a choice point with generation `gen`,\nand returns `none` otherwise.\n","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.nextGoal?","kind":"def","line":176,"name":"Lean.Meta.Grind.nextGoal?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L176-L232"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.mkChoice\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">mkChoice</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">proof</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subgoals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">generation</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.SplitInfo\">SplitInfo</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Given a proof containing meta-variables corresponding to the given subgoals,\ncreate a choice point.\n- If there are no choice points, we just close the current goal using `proof`.\n- If there is only one subgoal `s`, we close the current goal using `proof`, and\nupdate current goal using `s`.\n- If there are more than one `s :: ss`, we create a choice point using the current\ngoal as the pending goal, and update the current goal with `s`.\n","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.mkChoice","kind":"def","line":79,"name":"Lean.Meta.Grind.mkChoice","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L79-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">SearchM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GrindM\">GrindM</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State\">State</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.run","kind":"def","line":76,"name":"Lean.Meta.Grind.SearchM.run","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L76-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.instMonadLiftGoalMSearchM\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instMonadLiftGoalMSearchM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">SearchM</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.instMonadLiftGoalMSearchM","kind":"instance","line":73,"name":"Lean.Meta.Grind.instMonadLiftGoalMSearchM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L73-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.liftGoalM\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">liftGoalM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">SearchM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.liftGoalM","kind":"def","line":68,"name":"Lean.Meta.Grind.liftGoalM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L68-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.withCurrGoalContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">withCurrGoalContext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">SearchM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">SearchM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.withCurrGoalContext","kind":"def","line":65,"name":"Lean.Meta.Grind.withCurrGoalContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L65-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.setGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">setGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.setGoal","kind":"def","line":62,"name":"Lean.Meta.Grind.setGoal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L62-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.getGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">getGoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">SearchM</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.getGoal","kind":"def","line":59,"name":"Lean.Meta.Grind.getGoal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L59-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SearchM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM","kind":"def","line":57,"name":"Lean.Meta.Grind.SearchM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State.choiceStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">choiceStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice\">Choice</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State.choiceStack","kind":"def","line":55,"name":"Lean.Meta.Grind.SearchM.State.choiceStack","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L55-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State.trace?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">trace?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace\">ProofTrace</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State.trace?","kind":"def","line":54,"name":"Lean.Meta.Grind.SearchM.State.trace?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State.steps\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">steps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep\">ProofStep</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State.steps","kind":"def","line":53,"name":"Lean.Meta.Grind.SearchM.State.steps","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State.goal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">goal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State.goal","kind":"def","line":52,"name":"Lean.Meta.Grind.SearchM.State.goal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">steps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep\">ProofStep</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trace?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace\">ProofTrace</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">choiceStack</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice\">Choice</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State.mk","kind":"ctor","line":51,"name":"Lean.Meta.Grind.SearchM.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM.State","kind":"structure","line":51,"name":"Lean.Meta.Grind.SearchM.State","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L51-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.instInhabitedChoice.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instInhabitedChoice</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice\">Choice</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.instInhabitedChoice.default","kind":"def","line":49,"name":"Lean.Meta.Grind.instInhabitedChoice.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.instInhabitedChoice\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instInhabitedChoice</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice\">Choice</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.instInhabitedChoice","kind":"instance","line":49,"name":"Lean.Meta.Grind.instInhabitedChoice","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice.generation\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Choice</span>.<span class=\"name\">generation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice\">Choice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice.generation","kind":"def","line":48,"name":"Lean.Meta.Grind.Choice.generation","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice.traces\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Choice</span>.<span class=\"name\">traces</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice\">Choice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace\">ProofTrace</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice.traces","kind":"def","line":47,"name":"Lean.Meta.Grind.Choice.traces","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice.todo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Choice</span>.<span class=\"name\">todo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice\">Choice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a></span></div></div>","info":{"doc":"Subgoals that still need to be processed.\n","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice.todo","kind":"def","line":46,"name":"Lean.Meta.Grind.Choice.todo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice.proof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Choice</span>.<span class=\"name\">proof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice\">Choice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"Expression to be assigned to `goalPending.mvarId` if it is not possible to perform\nnon-chronological backtracking.\n`proof` is often a `casesOn` application containing meta-variables.\n","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice.proof","kind":"def","line":42,"name":"Lean.Meta.Grind.Choice.proof","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice.goalPending\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Choice</span>.<span class=\"name\">goalPending</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice\">Choice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a></div></div>","info":{"doc":"Goal where the case-split was performed.\nInvariant: `goalPending.mvarId` is not assigned.\n","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice.goalPending","kind":"def","line":36,"name":"Lean.Meta.Grind.Choice.goalPending","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice.info?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Choice</span>.<span class=\"name\">info?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice\">Choice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.SplitInfo\">SplitInfo</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice.info?","kind":"def","line":31,"name":"Lean.Meta.Grind.Choice.info?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Choice</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.SplitInfo\">SplitInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goalPending</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">proof</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">todo</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traces</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace\">ProofTrace</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">generation</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice\">Choice</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice.mk","kind":"ctor","line":30,"name":"Lean.Meta.Grind.Choice.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L30-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Choice</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A `choice` (aka backtracking) point in the search tree.\n","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.Choice","kind":"structure","line":27,"name":"Lean.Meta.Grind.Choice","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L27-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.instInhabitedProofTrace\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instInhabitedProofTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace\">ProofTrace</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.instInhabitedProofTrace","kind":"instance","line":25,"name":"Lean.Meta.Grind.instInhabitedProofTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.instInhabitedProofTrace.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instInhabitedProofTrace</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace\">ProofTrace</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.instInhabitedProofTrace.default","kind":"def","line":25,"name":"Lean.Meta.Grind.instInhabitedProofTrace.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace.cases\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ProofTrace</span>.<span class=\"name\">cases</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.SplitInfo\">SplitInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">alts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace\">ProofTrace</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace\">ProofTrace</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace.cases","kind":"ctor","line":24,"name":"Lean.Meta.Grind.ProofTrace.cases","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace.sep\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ProofTrace</span>.<span class=\"name\">sep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep\">ProofStep</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace\">ProofTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace\">ProofTrace</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace.sep","kind":"ctor","line":23,"name":"Lean.Meta.Grind.ProofTrace.sep","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace.done\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ProofTrace</span>.<span class=\"name\">done</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace\">ProofTrace</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace.done","kind":"ctor","line":22,"name":"Lean.Meta.Grind.ProofTrace.done","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ProofTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Helper type for implementing `finish?` and `grind?` ","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofTrace","kind":"inductive","line":20,"name":"Lean.Meta.Grind.ProofTrace","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L20-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.instInhabitedProofStep\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instInhabitedProofStep</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep\">ProofStep</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.instInhabitedProofStep","kind":"instance","line":18,"name":"Lean.Meta.Grind.instInhabitedProofStep","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.instInhabitedProofStep.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instInhabitedProofStep</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep\">ProofStep</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.instInhabitedProofStep.default","kind":"def","line":18,"name":"Lean.Meta.Grind.instInhabitedProofStep.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep.instantiate\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ProofStep</span>.<span class=\"name\">instantiate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thms </span><span class=\"fn\">usedThms</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/EMatchTheorem.html#Lean.Meta.Grind.EMatchTheorem\">EMatchTheorem</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep\">ProofStep</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep.instantiate","kind":"ctor","line":17,"name":"Lean.Meta.Grind.ProofStep.instantiate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep.mbtc\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ProofStep</span>.<span class=\"name\">mbtc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep\">ProofStep</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep.mbtc","kind":"ctor","line":16,"name":"Lean.Meta.Grind.ProofStep.mbtc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L16-L16"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep.lookahead\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ProofStep</span>.<span class=\"name\">lookahead</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep\">ProofStep</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep.lookahead","kind":"ctor","line":16,"name":"Lean.Meta.Grind.ProofStep.lookahead","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L16-L16"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep.solver\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ProofStep</span>.<span class=\"name\">solver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep\">ProofStep</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep.solver","kind":"ctor","line":15,"name":"Lean.Meta.Grind.ProofStep.solver","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L15-L15"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ProofStep</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Helper type for implementing `finish?` and `grind?` ","docLink":"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.ProofStep","kind":"inductive","line":13,"name":"Lean.Meta.Grind.ProofStep","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/SearchM.lean#L13-L18"}}],"imports":["Lean.Meta.Tactic.Grind.Types","Lean.Util.ForEachExpr"],"instances":[{"className":"Inhabited","name":"Lean.Meta.Grind.instInhabitedProofStep","typeNames":["Lean.Meta.Grind.ProofStep"]},{"className":"Inhabited","name":"Lean.Meta.Grind.instInhabitedProofTrace","typeNames":["Lean.Meta.Grind.ProofTrace"]},{"className":"Inhabited","name":"Lean.Meta.Grind.instInhabitedChoice","typeNames":["Lean.Meta.Grind.Choice"]},{"className":"MonadLift","name":"Lean.Meta.Grind.instMonadLiftGoalMSearchM","typeNames":["Lean.Meta.Grind.GoalM","Lean.Meta.Grind.SearchM"]}],"name":"Lean.Meta.Tactic.Grind.SearchM"}