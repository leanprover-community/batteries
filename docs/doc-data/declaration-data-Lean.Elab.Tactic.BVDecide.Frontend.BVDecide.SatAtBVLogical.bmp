{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.proveFalse\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">SatAtBVLogical</span>.<span class=\"name\">proveFalse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">SatAtBVLogical</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"Given a proof that `x.expr.Unsat`, produce a proof of `False`. ","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.proveFalse","kind":"def","line":66,"name":"Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.proveFalse","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.lean#L66-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.and\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">SatAtBVLogical</span>.<span class=\"name\">and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">SatAtBVLogical</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">SatAtBVLogical</a></div></div>","info":{"doc":"Logical conjunction of two `ReifiedBVLogical`.\n","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.and","kind":"def","line":51,"name":"Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.and","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.lean#L51-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.of\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">SatAtBVLogical</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaM\">LemmaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">SatAtBVLogical</a>)</span></span></div></div>","info":{"doc":"Reify an `Expr` that is a proof of some boolean structure on top of predicates about `BitVec`s.\n","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.of","kind":"def","line":28,"name":"Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.of","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.lean#L28-L49"}}],"imports":["Lean.Elab.Tactic.BVDecide.Frontend.BVDecide.Reify"],"instances":[],"name":"Lean.Elab.Tactic.BVDecide.Frontend.BVDecide.SatAtBVLogical"}