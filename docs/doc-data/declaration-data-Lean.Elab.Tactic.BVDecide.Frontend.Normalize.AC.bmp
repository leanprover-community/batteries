{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNormalizePass\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">bvAcNormalizePass</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Pass\">Pass</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNormalizePass","kind":"def","line":349,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNormalizePass","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L349-L360"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfHypMeta\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">bvAcNfHypMeta</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">maxSteps</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <a href=\"./Init/MetaTypes.html#Lean.Meta.Simp.defaultMaxSteps\">Meta.Simp.defaultMaxSteps</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfHypMeta","kind":"def","line":338,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfHypMeta","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L338-L347"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfTarget\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">bvAcNfTarget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">maxSteps</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <a href=\"./Init/MetaTypes.html#Lean.Meta.Simp.defaultMaxSteps\">Meta.Simp.defaultMaxSteps</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfTarget","kind":"def","line":327,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfTarget","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L327-L335"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfpost\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">bvAcNfpost</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Meta.Simp.Simproc</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfpost","kind":"def","line":306,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfpost","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L306-L321"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.canonicalizeWithSharing\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">canonicalizeWithSharing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Meta.SimpM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Step\">Meta.Simp.Step</a></span></div></div>","info":{"doc":"Given an expression `P lhs rhs`, where `lhs, rhs : ty` and `P : $ty → $ty → _`,\ncanonicalize top-level applications of a recognized associative and commutative\noperation on both the `lhs` and the `rhs` such that the final expression is:\n  `P ($common ⊕ $lhs') ($common ⊕ $rhs')`\nThat is, in a way that exposes terms that are shared between the lhs and rhs.\n\nFor example, `x₁ * (y₁ * z) == x₂ * (y₂ * z)` is normalized to\n`z * (x₁ * y₁) == z * (x₂ * y₂)`, pulling the shared variable `z` to the front on\nboth sides.\n\nSee `Op.fromExpr?` to see which operations are recognized.\nOther operations are ignored, even if they are associative and commutative.\n","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.canonicalizeWithSharing","kind":"def","line":248,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.canonicalizeWithSharing","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L248-L304"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.proveEqualityByAC\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">proveEqualityByAC</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"Given two expressions `x, y` which are equal up to associativity and commutativity,\nconstruct and return a proof of `x = y`.\n\nUses `ac_rfl` internally to construct said proof. ","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.proveEqualityByAC","kind":"def","line":236,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.proveEqualityByAC","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L236-L245"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">CoefficientsMap</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">coeff</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\">VarStateM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"Compute the canonical expression for a given set of coefficients.\nReturns `none` if all coefficients are zero.\n","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap.toExpr","kind":"def","line":216,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap.toExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L216-L231"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.compute\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">SharedCoefficients</span>.<span class=\"name\">compute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\">VarStateM</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients\">SharedCoefficients</a></span></div></div>","info":{"doc":"Given two sets of coefficients `x` and `y` (computed with the same variable\nmapping), extract the shared coefficients, such that `x` (resp. `y`) is the sum of\ncoefficients in `common` and `x` (resp `y`) of the result.\n\nThat is, if `{ common, x', y' } ← SharedCoefficients.compute x y`, then\n  `x[idx] = common[idx] + x'[idx]` and\n  `y[idx] = common[idx] + y'[idx]`\nfor all valid variable indices `idx`.\n","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.compute","kind":"def","line":189,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.compute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L189-L214"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.y\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">SharedCoefficients</span>.<span class=\"name\">y</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients\">SharedCoefficients</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.y","kind":"def","line":187,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.y","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L187-L187"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.x\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">SharedCoefficients</span>.<span class=\"name\">x</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients\">SharedCoefficients</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.x","kind":"def","line":186,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.x","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L186-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.common\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">SharedCoefficients</span>.<span class=\"name\">common</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients\">SharedCoefficients</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.common","kind":"def","line":185,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.common","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L185-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">SharedCoefficients</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">common </span><span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients\">SharedCoefficients</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.mk","kind":"ctor","line":184,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L184-L184"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">SharedCoefficients</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients","kind":"structure","line":184,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L184-L187"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.computeCoefficients\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarStateM</span>.<span class=\"name\">computeCoefficients</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\">VarStateM</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a></span></div></div>","info":{"doc":"Given a binary, associative and commutative operation `op`,\ndecompose expression `e` into its variable coefficients.\n\nFor example `a ⊕ b ⊕ (a ⊕ c)` will give the coefficients:\n```\na => 2\nb => 1\nc => 1\n```\n\nAny compound expression which is not an application of the given `op` will be\nabstracted away and treated as a variable (see `VarStateM.exprToVar`).\n","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.computeCoefficients","kind":"def","line":153,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.computeCoefficients","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L153-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.varToExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarStateM</span>.<span class=\"name\">varToExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarIndex\">VarIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\">VarStateM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"Return the expression that is represented by a specific variable index. ","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.varToExpr","kind":"def","line":143,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.varToExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L143-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.exprToVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarStateM</span>.<span class=\"name\">exprToVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\">VarStateM</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarIndex\">VarIndex</a></span></div></div>","info":{"doc":"Return the unique variable index for an expression, or `none` if the expression\nis a neutral element (see `isNeutral`).\n\nModifies the monadic state to add a new mapping, if needed. ","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.exprToVar","kind":"def","line":128,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.exprToVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L128-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.run'\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarStateM</span>.<span class=\"name\">run'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\">VarStateM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState\">VarState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.run'","kind":"def","line":123,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.run'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L123-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarStateM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM","kind":"def","line":121,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L121-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">CoefficientsMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A representation of an expression as a map from variable index to the number\nof occurrences of the expression represented by that variable.\n\nSee `CoefficientsMap.toExpr` for the explicit conversion. ","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap","kind":"def","line":113,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L113-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.varToExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarState</span>.<span class=\"name\">varToExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState\">VarState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"Inverse of `exprToVarIndex`, which maps a `VarIndex` to the expression it represents. ","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.varToExpr","kind":"def","line":100,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.varToExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L100-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.exprToVarIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarState</span>.<span class=\"name\">exprToVarIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState\">VarState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarIndex\">VarIndex</a></span></div></div>","info":{"doc":"Map from atomic expressions to an index. ","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.exprToVarIndex","kind":"def","line":98,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.exprToVarIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L98-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.op\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarState</span>.<span class=\"name\">op</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState\">VarState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a></div></div>","info":{"doc":"The associative and commutative operator we are currently canonicalizing with respect to. ","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.op","kind":"def","line":96,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.op","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L96-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exprToVarIndex</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarIndex\">VarIndex</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">varToExpr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState\">VarState</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.mk","kind":"ctor","line":94,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L94-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState","kind":"structure","line":94,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L94-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.instToMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span>.<span class=\"name\">instToMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">ToMessageData</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.instToMessageData","kind":"instance","line":89,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.instToMessageData","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L89-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.isSameKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span>.<span class=\"name\">isSameKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op'</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Parse `op'` using `ofExpr?` and return true if the resulting operation is\nof the same kind as `op` (i.e., both are multiplications).\nReturns false if `op'` fails to parse.\n\nNote that the width of the operation is *not* compared.\n ","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.isSameKind","kind":"def","line":78,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.isSameKind","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L78-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.neutralElement\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span>.<span class=\"name\">neutralElement</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a> → <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"The identity / neutral element of given operation ","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.neutralElement","kind":"def","line":74,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.neutralElement","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L74-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a> → <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.toExpr","kind":"def","line":68,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.toExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L68-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.ofApp2?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span>.<span class=\"name\">ofApp2?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a></span></span></div></div>","info":{"doc":"Given an *application* of a recognized binary operation (to two arguments),\nreturn the decoded `Op`.\n\nReturn `none` if the expression is not an application of a recognized operation.\n","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.ofApp2?","kind":"def","line":59,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.ofApp2?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L59-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.ofExpr?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span>.<span class=\"name\">ofExpr?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a></span></div></div>","info":{"doc":"Given an expression of an (unapplied) operation, return the decoded `Op`.\nReturn `none` if the expression is not a recognized operation. ","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.ofExpr?","kind":"def","line":50,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.ofExpr?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L50-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instReprOp.repr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">instReprOp</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instReprOp.repr","kind":"def","line":46,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instReprOp.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instReprOp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">instReprOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instReprOp","kind":"instance","line":46,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instReprOp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instBEqOp.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">instBEqOp</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a> → <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instBEqOp.beq","kind":"def","line":46,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instBEqOp.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instBEqOp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">instBEqOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instBEqOp","kind":"instance","line":46,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instBEqOp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.mul\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.mul","kind":"ctor","line":45,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.mul","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Bitvector operations that we perform AC canonicalization on. ","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op","kind":"inductive","line":43,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L43-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarIndex","kind":"def","line":41,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.mkBitVecLit\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">mkBitVecLit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"Construct a literal of type `BitVec w`, with value `n`. ","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.mkBitVecLit","kind":"def","line":33,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.mkBitVecLit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L33-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkInstHMul\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">BitVec</span>.<span class=\"name\">mkInstHMul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkInstHMul","kind":"def","line":28,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkInstHMul","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L28-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkInstMul\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">BitVec</span>.<span class=\"name\">mkInstMul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkInstMul","kind":"def","line":26,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkInstMul","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">BitVec</span>.<span class=\"name\">mkType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkType","kind":"def","line":24,"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L24-L24"}}],"imports":["Lean.Meta.Tactic.AC.Main","Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Basic"],"instances":[{"className":"BEq","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instBEqOp","typeNames":["Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op"]},{"className":"Repr","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instReprOp","typeNames":["Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op"]},{"className":"Lean.ToMessageData","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.instToMessageData","typeNames":["Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op"]}],"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.AC"}