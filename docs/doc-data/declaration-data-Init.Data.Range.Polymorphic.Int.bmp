{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instIsAlwaysFiniteInt_1\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">instIsAlwaysFiniteInt_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.Rxo.IsAlwaysFinite\">Rxo.IsAlwaysFinite</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instIsAlwaysFiniteInt_1","kind":"instance","line":60,"name":"Std.PRange.instIsAlwaysFiniteInt_1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/Int.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instLawfulHasSizeInt_1\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">instLawfulHasSizeInt_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.Rxo.LawfulHasSize\">Rxo.LawfulHasSize</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instLawfulHasSizeInt_1","kind":"instance","line":59,"name":"Std.PRange.instLawfulHasSizeInt_1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/Int.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instHasSizeInt_1\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">instHasSizeInt_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.Rxo.HasSize\">Rxo.HasSize</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instHasSizeInt_1","kind":"instance","line":58,"name":"Std.PRange.instHasSizeInt_1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/Int.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instIsAlwaysFiniteInt\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">instIsAlwaysFiniteInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.Rxc.IsAlwaysFinite\">Rxc.IsAlwaysFinite</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instIsAlwaysFiniteInt","kind":"instance","line":56,"name":"Std.PRange.instIsAlwaysFiniteInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/Int.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instLawfulHasSizeInt\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">instLawfulHasSizeInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.Rxc.LawfulHasSize\">Rxc.LawfulHasSize</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instLawfulHasSizeInt","kind":"instance","line":45,"name":"Std.PRange.instLawfulHasSizeInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/Int.lean#L45-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instHasSizeInt\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">instHasSizeInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.Rxc.HasSize\">Rxc.HasSize</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instHasSizeInt","kind":"instance","line":42,"name":"Std.PRange.instHasSizeInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/Int.lean#L42-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instLawfulUpwardEnumerableLTInt_1\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">instLawfulUpwardEnumerableLTInt_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLT\">LawfulUpwardEnumerableLT</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instLawfulUpwardEnumerableLTInt_1","kind":"instance","line":40,"name":"Std.PRange.instLawfulUpwardEnumerableLTInt_1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/Int.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instLawfulUpwardEnumerableLTInt\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">instLawfulUpwardEnumerableLTInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLT\">LawfulUpwardEnumerableLT</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instLawfulUpwardEnumerableLTInt","kind":"instance","line":39,"name":"Std.PRange.instLawfulUpwardEnumerableLTInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/Int.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instLawfulUpwardEnumerableLEInt\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">instLawfulUpwardEnumerableLEInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLE\">LawfulUpwardEnumerableLE</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instLawfulUpwardEnumerableLEInt","kind":"instance","line":34,"name":"Std.PRange.instLawfulUpwardEnumerableLEInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/Int.lean#L34-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instInfinitelyUpwardEnumerableInt\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">instInfinitelyUpwardEnumerableInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.InfinitelyUpwardEnumerable\">InfinitelyUpwardEnumerable</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instInfinitelyUpwardEnumerableInt","kind":"instance","line":31,"name":"Std.PRange.instInfinitelyUpwardEnumerableInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/Int.lean#L31-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instLawfulUpwardEnumerableInt\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">instLawfulUpwardEnumerableInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerable\">LawfulUpwardEnumerable</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instLawfulUpwardEnumerableInt","kind":"instance","line":21,"name":"Std.PRange.instLawfulUpwardEnumerableInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/Int.lean#L21-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instUpwardEnumerableInt\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">instUpwardEnumerableInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable\">UpwardEnumerable</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/Int.html#Std.PRange.instUpwardEnumerableInt","kind":"instance","line":17,"name":"Std.PRange.instUpwardEnumerableInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/Int.lean#L17-L19"}}],"imports":["Init.Data.Range.Polymorphic.Instances","Init.Data.Int.Order","Init.Omega"],"instances":[{"className":"Std.PRange.UpwardEnumerable","name":"Std.PRange.instUpwardEnumerableInt","typeNames":["Int"]},{"className":"Std.PRange.LawfulUpwardEnumerable","name":"Std.PRange.instLawfulUpwardEnumerableInt","typeNames":["Int"]},{"className":"Std.PRange.InfinitelyUpwardEnumerable","name":"Std.PRange.instInfinitelyUpwardEnumerableInt","typeNames":["Int"]},{"className":"Std.PRange.LawfulUpwardEnumerableLE","name":"Std.PRange.instLawfulUpwardEnumerableLEInt","typeNames":["Int"]},{"className":"Std.PRange.LawfulUpwardEnumerableLT","name":"Std.PRange.instLawfulUpwardEnumerableLTInt","typeNames":["Int"]},{"className":"Std.PRange.LawfulUpwardEnumerableLT","name":"Std.PRange.instLawfulUpwardEnumerableLTInt_1","typeNames":["Int"]},{"className":"Std.Rxc.HasSize","name":"Std.PRange.instHasSizeInt","typeNames":["Int"]},{"className":"Std.Rxc.LawfulHasSize","name":"Std.PRange.instLawfulHasSizeInt","typeNames":["Int"]},{"className":"Std.Rxc.IsAlwaysFinite","name":"Std.PRange.instIsAlwaysFiniteInt","typeNames":["Int"]},{"className":"Std.Rxo.HasSize","name":"Std.PRange.instHasSizeInt_1","typeNames":["Int"]},{"className":"Std.Rxo.LawfulHasSize","name":"Std.PRange.instLawfulHasSizeInt_1","typeNames":["Int"]},{"className":"Std.Rxo.IsAlwaysFinite","name":"Std.PRange.instIsAlwaysFiniteInt_1","typeNames":["Int"]}],"name":"Init.Data.Range.Polymorphic.Int"}