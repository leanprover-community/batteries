{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/LawfulEqCmp.html#Lean.Meta.Grind.propagateLawfulEqCmp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateLawfulEqCmp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/LawfulEqCmp.html#Lean.Meta.Grind.propagateLawfulEqCmp","kind":"def","line":46,"name":"Lean.Meta.Grind.propagateLawfulEqCmp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/LawfulEqCmp.lean#L46-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/LawfulEqCmp.html#Lean.Meta.Grind.getLawfulEqCmpThm?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">getLawfulEqCmpThm?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GrindM\">GrindM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>","info":{"doc":"If `op` implements `LawfulEqCmp`, then returns the proof term for\n`∀ a b, op a b = .eq → a = b`\n","docLink":"./Lean/Meta/Tactic/Grind/LawfulEqCmp.html#Lean.Meta.Grind.getLawfulEqCmpThm?","kind":"def","line":21,"name":"Lean.Meta.Grind.getLawfulEqCmpThm?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Meta/Tactic/Grind/LawfulEqCmp.lean#L21-L44"}}],"imports":["Lean.Meta.Tactic.Grind.Types","Lean.Meta.Tactic.Grind.Util","Lean.Meta.Tactic.Grind.SynthInstance"],"instances":[],"name":"Lean.Meta.Tactic.Grind.LawfulEqCmp"}