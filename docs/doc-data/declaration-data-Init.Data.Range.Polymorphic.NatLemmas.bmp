{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.size_Rio\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">Nat</span>.<span class=\"name\">size_Rio</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(*...<span class=\"fn\">b</span>)</span>.<a href=\"./Init/Data/Range/Polymorphic/Iterators.html#Std.Rio.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.size_Rio","kind":"theorem","line":60,"name":"Std.PRange.Nat.size_Rio","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/NatLemmas.lean#L60-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.size_Ric\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">Nat</span>.<span class=\"name\">size_Ric</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(*...=<span class=\"fn\">b</span>)</span>.<a href=\"./Init/Data/Range/Polymorphic/Iterators.html#Std.Ric.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.size_Ric","kind":"theorem","line":54,"name":"Std.PRange.Nat.size_Ric","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/NatLemmas.lean#L54-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.size_Roo\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">Nat</span>.<span class=\"name\">size_Roo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">a</span>&lt;...<span class=\"fn\">b</span>)</span>.<a href=\"./Init/Data/Range/Polymorphic/Iterators.html#Std.Roo.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.size_Roo","kind":"theorem","line":47,"name":"Std.PRange.Nat.size_Roo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/NatLemmas.lean#L47-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.size_Roc\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">Nat</span>.<span class=\"name\">size_Roc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">a</span>&lt;...=<span class=\"fn\">b</span>)</span>.<a href=\"./Init/Data/Range/Polymorphic/Iterators.html#Std.Roc.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.size_Roc","kind":"theorem","line":41,"name":"Std.PRange.Nat.size_Roc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/NatLemmas.lean#L41-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.size_Rco\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">Nat</span>.<span class=\"name\">size_Rco</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">a</span>...<span class=\"fn\">b</span>)</span>.<a href=\"./Init/Data/Range/Polymorphic/Iterators.html#Std.Rco.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.size_Rco","kind":"theorem","line":34,"name":"Std.PRange.Nat.size_Rco","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/NatLemmas.lean#L34-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.size_Rcc\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">Nat</span>.<span class=\"name\">size_Rcc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">a</span>...=<span class=\"fn\">b</span>)</span>.<a href=\"./Init/Data/Range/Polymorphic/Iterators.html#Std.Rcc.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.size_Rcc","kind":"theorem","line":28,"name":"Std.PRange.Nat.size_Rcc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/NatLemmas.lean#L28-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.ClosedOpen.toList_succ_succ\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ClosedOpen</span>.<span class=\"name\">toList_succ_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)...<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Init/Data/Range/Polymorphic/Iterators.html#Std.Rco.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">m</span>...<span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/Range/Polymorphic/Iterators.html#Std.Rco.toList\">toList</a></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.ClosedOpen.toList_succ_succ","kind":"theorem","line":24,"name":"Std.PRange.Nat.ClosedOpen.toList_succ_succ","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/NatLemmas.lean#L24-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.toList_Rco_succ_succ\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">Nat</span>.<span class=\"name\">toList_Rco_succ_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)...<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Init/Data/Range/Polymorphic/Iterators.html#Std.Rco.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">m</span>...<span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/Range/Polymorphic/Iterators.html#Std.Rco.toList\">toList</a></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.toList_Rco_succ_succ","kind":"theorem","line":19,"name":"Std.PRange.Nat.toList_Rco_succ_succ","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/NatLemmas.lean#L19-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.succ_eq\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">Nat</span>.<span class=\"name\">succ_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succ\">succ</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/NatLemmas.html#Std.PRange.Nat.succ_eq","kind":"theorem","line":16,"name":"Std.PRange.Nat.succ_eq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/Range/Polymorphic/NatLemmas.lean#L16-L17"}}],"imports":["Init.Data.Range.Polymorphic.Nat","Init.Data.Range.Polymorphic.Lemmas"],"instances":[],"name":"Init.Data.Range.Polymorphic.NatLemmas"}