{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.Expr.toHeadIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toHeadIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></div></div>","info":{"doc":"Convert the given expression into a `HeadIndex`.\n","docLink":"./Lean/HeadIndex.html#Lean.Expr.toHeadIndex","kind":"def","line":106,"name":"Lean.Expr.toHeadIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L106-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.Expr.headNumArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">headNumArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Return the number of arguments in the given expression with respect to its `HeadIndex` ","docLink":"./Lean/HeadIndex.html#Lean.Expr.headNumArgs","kind":"def","line":54,"name":"Lean.Expr.headNumArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L54-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.instHashableHeadIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">instHashableHeadIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></span></div></div>","info":{"doc":"","docLink":"./Lean/HeadIndex.html#Lean.instHashableHeadIndex","kind":"instance","line":50,"name":"Lean.instHashableHeadIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.HeadIndex.hash\"><span class=\"name\">Lean</span>.<span class=\"name\">HeadIndex</span>.<span class=\"name\">hash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a> → <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"Hash code for a `HeadIndex` value. ","docLink":"./Lean/HeadIndex.html#Lean.HeadIndex.hash","kind":"def","line":39,"name":"Lean.HeadIndex.hash","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L39-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.instReprHeadIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">instReprHeadIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></span></div></div>","info":{"doc":"","docLink":"./Lean/HeadIndex.html#Lean.instReprHeadIndex","kind":"instance","line":37,"name":"Lean.instReprHeadIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.instReprHeadIndex.repr\"><span class=\"name\">Lean</span>.<span class=\"name\">instReprHeadIndex</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/HeadIndex.html#Lean.instReprHeadIndex.repr","kind":"def","line":37,"name":"Lean.instReprHeadIndex.repr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.instBEqHeadIndex.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">instBEqHeadIndex</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a> → <a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/HeadIndex.html#Lean.instBEqHeadIndex.beq","kind":"def","line":37,"name":"Lean.instBEqHeadIndex.beq","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.instBEqHeadIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">instBEqHeadIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></span></div></div>","info":{"doc":"","docLink":"./Lean/HeadIndex.html#Lean.instBEqHeadIndex","kind":"instance","line":37,"name":"Lean.instBEqHeadIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.instInhabitedHeadIndex.default\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedHeadIndex</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></div></div>","info":{"doc":"","docLink":"./Lean/HeadIndex.html#Lean.instInhabitedHeadIndex.default","kind":"def","line":37,"name":"Lean.instInhabitedHeadIndex.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.instInhabitedHeadIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedHeadIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></span></div></div>","info":{"doc":"","docLink":"./Lean/HeadIndex.html#Lean.instInhabitedHeadIndex","kind":"instance","line":37,"name":"Lean.instInhabitedHeadIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.HeadIndex.forallE\"><span class=\"name\">Lean</span>.<span class=\"name\">HeadIndex</span>.<span class=\"name\">forallE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></div></div>","info":{"doc":"","docLink":"./Lean/HeadIndex.html#Lean.HeadIndex.forallE","kind":"ctor","line":36,"name":"Lean.HeadIndex.forallE","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.HeadIndex.lam\"><span class=\"name\">Lean</span>.<span class=\"name\">HeadIndex</span>.<span class=\"name\">lam</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></div></div>","info":{"doc":"","docLink":"./Lean/HeadIndex.html#Lean.HeadIndex.lam","kind":"ctor","line":35,"name":"Lean.HeadIndex.lam","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.HeadIndex.sort\"><span class=\"name\">Lean</span>.<span class=\"name\">HeadIndex</span>.<span class=\"name\">sort</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></div></div>","info":{"doc":"","docLink":"./Lean/HeadIndex.html#Lean.HeadIndex.sort","kind":"ctor","line":34,"name":"Lean.HeadIndex.sort","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.HeadIndex.lit\"><span class=\"name\">Lean</span>.<span class=\"name\">HeadIndex</span>.<span class=\"name\">lit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">litVal</span> : <a href=\"./Lean/Expr.html#Lean.Literal\">Literal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></div></div>","info":{"doc":"","docLink":"./Lean/HeadIndex.html#Lean.HeadIndex.lit","kind":"ctor","line":33,"name":"Lean.HeadIndex.lit","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.HeadIndex.proj\"><span class=\"name\">Lean</span>.<span class=\"name\">HeadIndex</span>.<span class=\"name\">proj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">structName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></div></div>","info":{"doc":"","docLink":"./Lean/HeadIndex.html#Lean.HeadIndex.proj","kind":"ctor","line":32,"name":"Lean.HeadIndex.proj","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.HeadIndex.const\"><span class=\"name\">Lean</span>.<span class=\"name\">HeadIndex</span>.<span class=\"name\">const</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">constName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></div></div>","info":{"doc":"","docLink":"./Lean/HeadIndex.html#Lean.HeadIndex.const","kind":"ctor","line":31,"name":"Lean.HeadIndex.const","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.HeadIndex.mvar\"><span class=\"name\">Lean</span>.<span class=\"name\">HeadIndex</span>.<span class=\"name\">mvar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></div></div>","info":{"doc":"","docLink":"./Lean/HeadIndex.html#Lean.HeadIndex.mvar","kind":"ctor","line":30,"name":"Lean.HeadIndex.mvar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L30-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.HeadIndex.fvar\"><span class=\"name\">Lean</span>.<span class=\"name\">HeadIndex</span>.<span class=\"name\">fvar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/HeadIndex.html#Lean.HeadIndex\">HeadIndex</a></div></div>","info":{"doc":"","docLink":"./Lean/HeadIndex.html#Lean.HeadIndex.fvar","kind":"ctor","line":29,"name":"Lean.HeadIndex.fvar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/HeadIndex.html#Lean.HeadIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">HeadIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Datastructure for representing the \"head symbol\" of an expression.\nIt is the key of `KExprMap`.\nExamples:\n- The head of `f a` is `.const f`\n- The head of `let x := 1; f x` is `.const f`\n- The head of `fun x => fun` is `.lam`\n\n`HeadIndex` is a very simple index, and is used in situations where\nwe want to find definitionally equal terms, but we want to minimize\nthe search by checking only pairs of terms that have the same\n`HeadIndex`.\n","docLink":"./Lean/HeadIndex.html#Lean.HeadIndex","kind":"inductive","line":15,"name":"Lean.HeadIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/HeadIndex.lean#L15-L37"}}],"imports":["Lean.Expr"],"instances":[{"className":"Inhabited","name":"Lean.instInhabitedHeadIndex","typeNames":["Lean.HeadIndex"]},{"className":"BEq","name":"Lean.instBEqHeadIndex","typeNames":["Lean.HeadIndex"]},{"className":"Repr","name":"Lean.instReprHeadIndex","typeNames":["Lean.HeadIndex"]},{"className":"Hashable","name":"Lean.instHashableHeadIndex","typeNames":["Lean.HeadIndex"]}],"name":"Lean.HeadIndex"}