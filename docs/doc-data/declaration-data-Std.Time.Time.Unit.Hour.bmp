{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a></div></div>","info":{"doc":"Creates an `Offset` from an integer.\n","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset.ofInt","kind":"def","line":119,"name":"Std.Time.Hour.Offset.ofInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L119-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a></div></div>","info":{"doc":"Creates an `Offset` from a natural number.\n","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset.ofNat","kind":"def","line":112,"name":"Std.Time.Hour.Offset.ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L112-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.toOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toOffset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ordinal</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a></div></div>","info":{"doc":"Converts an `Ordinal` to an `Offset`, which represents the duration in hours as an integer value.\n","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.toOffset","kind":"def","line":102,"name":"Std.Time.Hour.Ordinal.toOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L102-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.ofFin\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">24</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a></div></div>","info":{"doc":"Creates an `Ordinal` from a `Fin` value.\n","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.ofFin","kind":"def","line":95,"name":"Std.Time.Hour.Ordinal.ofFin","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L95-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">23</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a></div></div>","info":{"doc":"Creates an `Ordinal` from a natural number, ensuring the value is within the valid bounds for hours.\n","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.ofNat","kind":"def","line":88,"name":"Std.Time.Hour.Ordinal.ofNat","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L88-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.shiftTo1BasedHour\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">shiftTo1BasedHour</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ordinal</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">24</span></span></div></div>","info":{"doc":"Converts an Ordinal into a 1-based hour representation within the range of 1 to 24.\n","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.shiftTo1BasedHour","kind":"def","line":81,"name":"Std.Time.Hour.Ordinal.shiftTo1BasedHour","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L81-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.toRelative\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toRelative</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ordinal</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">12</span></span></div></div>","info":{"doc":"Converts an `Ordinal` into a relative hour in the range of 1 to 12.\n","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.toRelative","kind":"def","line":75,"name":"Std.Time.Hour.Ordinal.toRelative","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L75-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">23</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a></div></div>","info":{"doc":"Creates an `Ordinal` from an integer, ensuring the value is within bounds.\n","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.ofInt","kind":"def","line":68,"name":"Std.Time.Hour.Ordinal.ofInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L68-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instLawfulEqOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instLawfulEqOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instLawfulEqOrdOffset","kind":"instance","line":64,"name":"Std.Time.Hour.instLawfulEqOrdOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instTransOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instTransOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instTransOrdOffset","kind":"instance","line":62,"name":"Std.Time.Hour.instTransOrdOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOrdOffset","kind":"instance","line":60,"name":"Std.Time.Hour.instOrdOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOfNatOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOfNatOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOfNatOffset","kind":"instance","line":57,"name":"Std.Time.Hour.instOfNatOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L57-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableLtOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instDecidableLtOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableLtOffset","kind":"instance","line":54,"name":"Std.Time.Hour.instDecidableLtOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L54-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableLeOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instDecidableLeOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableLeOffset","kind":"instance","line":51,"name":"Std.Time.Hour.instDecidableLeOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L51-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instLEOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instLEOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instLEOffset","kind":"instance","line":49,"name":"Std.Time.Hour.instLEOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instLTOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instLTOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instLTOffset","kind":"instance","line":49,"name":"Std.Time.Hour.instLTOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instToStringOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instToStringOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instToStringOffset","kind":"instance","line":49,"name":"Std.Time.Hour.instToStringOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instNegOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instNegOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instNegOffset","kind":"instance","line":49,"name":"Std.Time.Hour.instNegOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instSubOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instSubOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instSubOffset","kind":"instance","line":49,"name":"Std.Time.Hour.instSubOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instAddOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instAddOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instAddOffset","kind":"instance","line":49,"name":"Std.Time.Hour.instAddOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instInhabitedOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instInhabitedOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instInhabitedOffset","kind":"instance","line":49,"name":"Std.Time.Hour.instInhabitedOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableEqOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instDecidableEqOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableEqOffset","kind":"instance","line":49,"name":"Std.Time.Hour.instDecidableEqOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instReprOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instReprOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Offset</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instReprOffset","kind":"instance","line":49,"name":"Std.Time.Hour.instReprOffset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Offset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`Offset` represents an offset in hours, defined as an `Int`. This can be used to express durations\nor differences in hours.\n","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset","kind":"def","line":44,"name":"Std.Time.Hour.Offset","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L44-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instLawfulEqOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instLawfulEqOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instLawfulEqOrdOrdinal","kind":"instance","line":42,"name":"Std.Time.Hour.instLawfulEqOrdOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instTransOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instTransOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instTransOrdOrdinal","kind":"instance","line":40,"name":"Std.Time.Hour.instTransOrdOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOrdOrdinal","kind":"instance","line":38,"name":"Std.Time.Hour.instOrdOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableLtOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instDecidableLtOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableLtOrdinal","kind":"instance","line":35,"name":"Std.Time.Hour.instDecidableLtOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L35-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableLeOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instDecidableLeOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableLeOrdinal","kind":"instance","line":32,"name":"Std.Time.Hour.instDecidableLeOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L32-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instInhabitedOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instInhabitedOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instInhabitedOrdinal","kind":"instance","line":29,"name":"Std.Time.Hour.instInhabitedOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L29-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOfNatOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOfNatOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOfNatOrdinal","kind":"instance","line":26,"name":"Std.Time.Hour.instOfNatOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L26-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instLTOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instLTOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instLTOrdinal","kind":"instance","line":24,"name":"Std.Time.Hour.instLTOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instLEOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instLEOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instLEOrdinal","kind":"instance","line":24,"name":"Std.Time.Hour.instLEOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableEqOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instDecidableEqOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableEqOrdinal","kind":"instance","line":24,"name":"Std.Time.Hour.instDecidableEqOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instReprOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instReprOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Ordinal</a></span></div></div>","info":{"doc":"","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instReprOrdinal","kind":"instance","line":24,"name":"Std.Time.Hour.instReprOrdinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Ordinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`Ordinal` represents a bounded value for hours, ranging from 0 to 23.\n","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal","kind":"def","line":20,"name":"Std.Time.Hour.Ordinal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Std/Time/Time/Unit/Hour.lean#L20-L24"}}],"imports":["Std.Time.Time.Unit.Minute"],"instances":[{"className":"Repr","name":"Std.Time.Hour.instReprOrdinal","typeNames":["Std.Time.Hour.Ordinal"]},{"className":"Decidable","name":"Std.Time.Hour.instDecidableEqOrdinal","typeNames":["Eq"]},{"className":"LE","name":"Std.Time.Hour.instLEOrdinal","typeNames":["Std.Time.Hour.Ordinal"]},{"className":"LT","name":"Std.Time.Hour.instLTOrdinal","typeNames":["Std.Time.Hour.Ordinal"]},{"className":"OfNat","name":"Std.Time.Hour.instOfNatOrdinal","typeNames":["Std.Time.Hour.Ordinal"]},{"className":"Inhabited","name":"Std.Time.Hour.instInhabitedOrdinal","typeNames":["Std.Time.Hour.Ordinal"]},{"className":"Decidable","name":"Std.Time.Hour.instDecidableLeOrdinal","typeNames":["LE.le"]},{"className":"Decidable","name":"Std.Time.Hour.instDecidableLtOrdinal","typeNames":["LT.lt"]},{"className":"Ord","name":"Std.Time.Hour.instOrdOrdinal","typeNames":["Std.Time.Hour.Ordinal"]},{"className":"Std.TransCmp","name":"Std.Time.Hour.instTransOrdOrdinal","typeNames":["Std.Time.Hour.Ordinal"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.Hour.instLawfulEqOrdOrdinal","typeNames":["Std.Time.Hour.Ordinal"]},{"className":"Repr","name":"Std.Time.Hour.instReprOffset","typeNames":["Std.Time.Hour.Offset"]},{"className":"Decidable","name":"Std.Time.Hour.instDecidableEqOffset","typeNames":["Eq"]},{"className":"Inhabited","name":"Std.Time.Hour.instInhabitedOffset","typeNames":["Std.Time.Hour.Offset"]},{"className":"Add","name":"Std.Time.Hour.instAddOffset","typeNames":["Std.Time.Hour.Offset"]},{"className":"Sub","name":"Std.Time.Hour.instSubOffset","typeNames":["Std.Time.Hour.Offset"]},{"className":"Neg","name":"Std.Time.Hour.instNegOffset","typeNames":["Std.Time.Hour.Offset"]},{"className":"ToString","name":"Std.Time.Hour.instToStringOffset","typeNames":["Std.Time.Hour.Offset"]},{"className":"LT","name":"Std.Time.Hour.instLTOffset","typeNames":["Std.Time.Hour.Offset"]},{"className":"LE","name":"Std.Time.Hour.instLEOffset","typeNames":["Std.Time.Hour.Offset"]},{"className":"Decidable","name":"Std.Time.Hour.instDecidableLeOffset","typeNames":["LE.le"]},{"className":"Decidable","name":"Std.Time.Hour.instDecidableLtOffset","typeNames":["LT.lt"]},{"className":"OfNat","name":"Std.Time.Hour.instOfNatOffset","typeNames":["Std.Time.Hour.Offset"]},{"className":"Ord","name":"Std.Time.Hour.instOrdOffset","typeNames":["Std.Time.Hour.Offset"]},{"className":"Std.TransCmp","name":"Std.Time.Hour.instTransOrdOffset","typeNames":["Std.Time.Hour.Offset"]},{"className":"Std.LawfulEqCmp","name":"Std.Time.Hour.instLawfulEqOrdOffset","typeNames":["Std.Time.Hour.Offset"]}],"name":"Std.Time.Time.Unit.Hour"}