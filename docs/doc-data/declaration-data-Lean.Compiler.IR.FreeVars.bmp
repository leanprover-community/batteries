{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.hasFreeVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">hasFreeVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.hasFreeVar","kind":"def","line":243,"name":"Lean.IR.FnBody.hasFreeVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L243-L243"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Expr.hasFreeVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Expr</span>.<span class=\"name\">hasFreeVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Expr.hasFreeVar","kind":"def","line":242,"name":"Lean.IR.Expr.hasFreeVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L242-L242"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Arg.hasFreeVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Arg</span>.<span class=\"name\">hasFreeVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arg</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Arg.hasFreeVar","kind":"def","line":241,"name":"Lean.IR.Arg.hasFreeVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L241-L241"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitFnBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitFnBody","kind":"opaque","line":220,"name":"Lean.IR.HasIndex.visitFnBody","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L220-L237"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitExpr","kind":"def","line":211,"name":"Lean.IR.HasIndex.visitExpr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L211-L218"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitParams\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitParams","kind":"def","line":208,"name":"Lean.IR.HasIndex.visitParams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L208-L209"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitArgs","kind":"def","line":205,"name":"Lean.IR.HasIndex.visitArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L205-L206"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitArg\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitArg","kind":"def","line":201,"name":"Lean.IR.HasIndex.visitArg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L201-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitJP\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitJP</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitJP","kind":"def","line":199,"name":"Lean.IR.HasIndex.visitJP","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L199-L199"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitVar","kind":"def","line":198,"name":"Lean.IR.HasIndex.visitVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L198-L198"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.freeIndices\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">freeIndices</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet\">IndexSet</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.freeIndices","kind":"def","line":190,"name":"Lean.IR.FnBody.freeIndices","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L190-L191"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.collectFreeIndices\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">collectFreeIndices</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet\">IndexSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet\">IndexSet</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.collectFreeIndices","kind":"def","line":186,"name":"Lean.IR.FnBody.collectFreeIndices","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L186-L188"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.visitFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FreeIndices</span>.<span class=\"name\">visitFnBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fnBody</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.visitFnBody","kind":"opaque","line":144,"name":"Lean.IR.FreeIndices.visitFnBody","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L144-L174"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.M\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FreeIndices</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.M","kind":"def","line":114,"name":"Lean.IR.FreeIndices.M","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L114-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.State.freeIndices\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FreeIndices</span>.<span class=\"name\">State</span>.<span class=\"name\">freeIndices</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet\">IndexSet</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.State.freeIndices","kind":"def","line":112,"name":"Lean.IR.FreeIndices.State.freeIndices","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L112-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FreeIndices</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">freeIndices</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet\">IndexSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.State.mk","kind":"ctor","line":111,"name":"Lean.IR.FreeIndices.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L111-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.State\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FreeIndices</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.State","kind":"structure","line":111,"name":"Lean.IR.FreeIndices.State","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L111-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Decl.maxIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Decl</span>.<span class=\"name\">maxIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Decl.maxIndex","kind":"def","line":103,"name":"Lean.IR.Decl.maxIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L103-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.maxIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">maxIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.maxIndex","kind":"def","line":99,"name":"Lean.IR.FnBody.maxIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L99-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.visitFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MaxIndex</span>.<span class=\"name\">visitFnBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fnBody</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.visitFnBody","kind":"opaque","line":57,"name":"Lean.IR.MaxIndex.visitFnBody","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L57-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.M\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MaxIndex</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.M","kind":"def","line":27,"name":"Lean.IR.MaxIndex.M","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.State.currentMax\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MaxIndex</span>.<span class=\"name\">State</span>.<span class=\"name\">currentMax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.State.currentMax","kind":"def","line":25,"name":"Lean.IR.MaxIndex.State.currentMax","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MaxIndex</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">currentMax</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.State.mk","kind":"ctor","line":24,"name":"Lean.IR.MaxIndex.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.State\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MaxIndex</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.State","kind":"structure","line":24,"name":"Lean.IR.MaxIndex.State","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/FreeVars.lean#L24-L25"}}],"imports":["Lean.Compiler.IR.Basic"],"instances":[],"name":"Lean.Compiler.IR.FreeVars"}