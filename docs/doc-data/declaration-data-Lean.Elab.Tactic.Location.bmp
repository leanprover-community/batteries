{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.withLocation\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">withLocation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">loc</span> : <a href=\"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.Location\">Location</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">atLocal</span> : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">TacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">atTarget</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">TacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">failed</span> : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">TacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">TacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Runs the given `atLocal` and `atTarget` methods on each of the locations selected by the given `loc`.\n* If `loc` is a list of locations, runs at each specified hypothesis (and finally the goal if `⊢` is included),\n  and fails if any of the tactic applications fail.\n* If `loc` is `*`, runs at the target first and then the hypotheses in reverse order.\n  If `atTarget` closes the main goal, `withLocation` does not run `atLocal`.\n  If all tactic applications fail, `withLocation` with call `failed` with the main goal mvar.\n","docLink":"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.withLocation","kind":"def","line":50,"name":"Lean.Elab.Tactic.withLocation","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Location.lean#L50-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.expandOptLocation\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">expandOptLocation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.Location\">Location</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.expandOptLocation","kind":"def","line":42,"name":"Lean.Elab.Tactic.expandOptLocation","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Location.lean#L42-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.expandLocation\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">expandLocation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.Location\">Location</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.expandLocation","kind":"def","line":32,"name":"Lean.Elab.Tactic.expandLocation","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Location.lean#L32-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.Location.targets\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Location</span>.<span class=\"name\">targets</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hypotheses</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.Location\">Location</a></div></div>","info":{"doc":"`hypotheses` are hypothesis names in the main goal that the tactic should be applied to.\nIf `type` is true, then the tactic should also be applied to the target type. ","docLink":"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.Location.targets","kind":"ctor","line":19,"name":"Lean.Elab.Tactic.Location.targets","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Location.lean#L19-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.Location.wildcard\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Location</span>.<span class=\"name\">wildcard</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.Location\">Location</a></div></div>","info":{"doc":"Apply the tactic everywhere. ","docLink":"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.Location.wildcard","kind":"ctor","line":17,"name":"Lean.Elab.Tactic.Location.wildcard","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Location.lean#L17-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.Location\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Location</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Denotes a set of locations where a tactic should be applied for the main goal. See also `withLocation`. ","docLink":"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.Location","kind":"inductive","line":15,"name":"Lean.Elab.Tactic.Location","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Elab/Tactic/Location.lean#L15-L21"}}],"imports":["Lean.Elab.Tactic.ElabTerm"],"instances":[],"name":"Lean.Elab.Tactic.Location"}