{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.Code.alphaEqv\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Code</span>.<span class=\"name\">alphaEqv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Return `true` if `c₁` and `c₂` are alpha equivalent.\n","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.Code.alphaEqv","kind":"def","line":135,"name":"Lean.Compiler.LCNF.Code.alphaEqv","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/AlphaEqv.lean#L135-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqv\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">code₁ </span><span class=\"fn\">code₂</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqv","kind":"opaque","line":111,"name":"Lean.Compiler.LCNF.AlphaEqv.eqv","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/AlphaEqv.lean#L111-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvAlts\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqvAlts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">alts₁ </span><span class=\"fn\">alts₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Alt</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvAlts","kind":"opaque","line":96,"name":"Lean.Compiler.LCNF.AlphaEqv.eqvAlts","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/AlphaEqv.lean#L96-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.sortAlts\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">sortAlts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">alts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Alt</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Alt</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.sortAlts","kind":"def","line":88,"name":"Lean.Compiler.LCNF.AlphaEqv.sortAlts","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/AlphaEqv.lean#L88-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.withParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">withParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params₁ </span><span class=\"fn\">params₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.withParams","kind":"def","line":71,"name":"Lean.Compiler.LCNF.AlphaEqv.withParams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/AlphaEqv.lean#L71-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.withFVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">withFVar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId₁ </span><span class=\"fn\">fvarId₂</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">EqvM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">EqvM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.withFVar","kind":"def","line":68,"name":"Lean.Compiler.LCNF.AlphaEqv.withFVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/AlphaEqv.lean#L68-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvLetValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqvLetValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e₁ </span><span class=\"fn\">e₂</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue\">LetValue</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvLetValue","kind":"def","line":59,"name":"Lean.Compiler.LCNF.AlphaEqv.eqvLetValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/AlphaEqv.lean#L59-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqvArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as₁ </span><span class=\"fn\">as₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvArgs","kind":"def","line":50,"name":"Lean.Compiler.LCNF.AlphaEqv.eqvArgs","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/AlphaEqv.lean#L50-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqvArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvArg","kind":"def","line":43,"name":"Lean.Compiler.LCNF.AlphaEqv.eqvArg","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/AlphaEqv.lean#L43-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvTypes\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqvTypes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">es₁ </span><span class=\"fn\">es₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvTypes","kind":"def","line":34,"name":"Lean.Compiler.LCNF.AlphaEqv.eqvTypes","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/AlphaEqv.lean#L34-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvType\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqvType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e₁ </span><span class=\"fn\">e₂</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvType","kind":"def","line":27,"name":"Lean.Compiler.LCNF.AlphaEqv.eqvType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/AlphaEqv.lean#L27-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvFVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqvFVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId₁ </span><span class=\"fn\">fvarId₂</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvFVar","kind":"def","line":23,"name":"Lean.Compiler.LCNF.AlphaEqv.eqvFVar","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/AlphaEqv.lean#L23-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">EqvM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM","kind":"def","line":21,"name":"Lean.Compiler.LCNF.AlphaEqv.EqvM","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/LCNF/AlphaEqv.lean#L21-L21"}}],"imports":["Lean.Compiler.LCNF.Basic"],"instances":[],"name":"Lean.Compiler.LCNF.AlphaEqv"}