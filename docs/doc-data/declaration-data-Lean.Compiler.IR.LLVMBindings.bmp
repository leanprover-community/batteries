{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constIntUnsigned\"><span class=\"name\">LLVM</span>.<span class=\"name\">constIntUnsigned</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constIntUnsigned","kind":"def","line":471,"name":"LLVM.constIntUnsigned","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L471-L473"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constIntSizeT\"><span class=\"name\">LLVM</span>.<span class=\"name\">constIntSizeT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constIntSizeT","kind":"def","line":467,"name":"LLVM.constIntSizeT","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L467-L469"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt64\"><span class=\"name\">LLVM</span>.<span class=\"name\">constInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt64","kind":"def","line":464,"name":"LLVM.constInt64","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L464-L465"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt32\"><span class=\"name\">LLVM</span>.<span class=\"name\">constInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt32","kind":"def","line":461,"name":"LLVM.constInt32","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L461-L462"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt8\"><span class=\"name\">LLVM</span>.<span class=\"name\">constInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt8","kind":"def","line":458,"name":"LLVM.constInt8","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L458-L459"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt1\"><span class=\"name\">LLVM</span>.<span class=\"name\">constInt1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt1","kind":"def","line":455,"name":"LLVM.constInt1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L455-L456"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt'\"><span class=\"name\">LLVM</span>.<span class=\"name\">constInt'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">width </span><span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt'","kind":"def","line":452,"name":"LLVM.constInt'","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L452-L453"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constFalse\"><span class=\"name\">LLVM</span>.<span class=\"name\">constFalse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constFalse","kind":"def","line":449,"name":"LLVM.constFalse","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L449-L450"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constTrue\"><span class=\"name\">LLVM</span>.<span class=\"name\">constTrue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constTrue","kind":"def","line":446,"name":"LLVM.constTrue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L446-L447"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i8PtrType\"><span class=\"name\">LLVM</span>.<span class=\"name\">i8PtrType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i8PtrType","kind":"def","line":443,"name":"LLVM.i8PtrType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L443-L444"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.voidPtrType\"><span class=\"name\">LLVM</span>.<span class=\"name\">voidPtrType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.voidPtrType","kind":"def","line":440,"name":"LLVM.voidPtrType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L440-L441"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i64Type\"><span class=\"name\">LLVM</span>.<span class=\"name\">i64Type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i64Type","kind":"def","line":437,"name":"LLVM.i64Type","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L437-L438"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i32Type\"><span class=\"name\">LLVM</span>.<span class=\"name\">i32Type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i32Type","kind":"def","line":434,"name":"LLVM.i32Type","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L434-L435"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i16Type\"><span class=\"name\">LLVM</span>.<span class=\"name\">i16Type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i16Type","kind":"def","line":431,"name":"LLVM.i16Type","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L431-L432"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i8Type\"><span class=\"name\">LLVM</span>.<span class=\"name\">i8Type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i8Type","kind":"def","line":428,"name":"LLVM.i8Type","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L428-L429"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i1Type\"><span class=\"name\">LLVM</span>.<span class=\"name\">i1Type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i1Type","kind":"def","line":425,"name":"LLVM.i1Type","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L425-L426"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setLinkage\"><span class=\"name\">LLVM</span>.<span class=\"name\">setLinkage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">linkage</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setLinkage","kind":"opaque","line":421,"name":"LLVM.setLinkage","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L421-L422"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkerPrivateWeak\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">linkerPrivateWeak</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"Like LinkerPrivate, but is weak. ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkerPrivateWeak","kind":"def","line":418,"name":"LLVM.Linkage.linkerPrivateWeak","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L418-L419"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkerPrivate\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">linkerPrivate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"Like Private, but linker removes. ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkerPrivate","kind":"def","line":416,"name":"LLVM.Linkage.linkerPrivate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L416-L417"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.common\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">common</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"Tentative definitions ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.common","kind":"def","line":414,"name":"LLVM.Linkage.common","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L414-L415"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.ghost\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">ghost</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"Obsolete ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.ghost","kind":"def","line":412,"name":"LLVM.Linkage.ghost","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L412-L413"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.externalWeak\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">externalWeak</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"ExternalWeak linkage description ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.externalWeak","kind":"def","line":410,"name":"LLVM.Linkage.externalWeak","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L410-L411"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.dllExport\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">dllExport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"Obsolete ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.dllExport","kind":"def","line":408,"name":"LLVM.Linkage.dllExport","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L408-L409"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.dllImport\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">dllImport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"Obsolete ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.dllImport","kind":"def","line":406,"name":"LLVM.Linkage.dllImport","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L406-L407"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.private\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">private</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"Like Internal, but omit from symbol table ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.private","kind":"def","line":404,"name":"LLVM.Linkage.private","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L404-L405"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.internal\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">internal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"Rename collisions when linking (static functions) ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.internal","kind":"def","line":402,"name":"LLVM.Linkage.internal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L402-L403"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.appending\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">appending</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"Special purpose, only applies to global arrays ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.appending","kind":"def","line":400,"name":"LLVM.Linkage.appending","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L400-L401"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.weakODR\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">weakODR</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"Same, but only replaced by something equivalent ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.weakODR","kind":"def","line":398,"name":"LLVM.Linkage.weakODR","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L398-L399"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.weakAny\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">weakAny</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"Keep one copy of function when linking (weak) ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.weakAny","kind":"def","line":396,"name":"LLVM.Linkage.weakAny","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L396-L397"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkOnceODRAutoHide\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">linkOnceODRAutoHide</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"Obsolete ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkOnceODRAutoHide","kind":"def","line":394,"name":"LLVM.Linkage.linkOnceODRAutoHide","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L394-L395"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkOnceODR\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">linkOnceODR</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"Same, but only replaced by something equivalent  ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkOnceODR","kind":"def","line":392,"name":"LLVM.Linkage.linkOnceODR","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L392-L393"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkOnceAny\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">linkOnceAny</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"Keep one copy of function when linking (inline) ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkOnceAny","kind":"def","line":390,"name":"LLVM.Linkage.linkOnceAny","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L390-L391"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.availableExternally\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">availableExternally</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.availableExternally","kind":"def","line":389,"name":"LLVM.Linkage.availableExternally","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L389-L389"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.external\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">external</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>","info":{"doc":"Externally visible function ","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.external","kind":"def","line":387,"name":"LLVM.Linkage.external","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L387-L388"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.val\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.val","kind":"def","line":385,"name":"LLVM.Linkage.val","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L385-L385"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage","kind":"structure","line":384,"name":"LLVM.Linkage","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L384-L385"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setDLLStorageClass\"><span class=\"name\">LLVM</span>.<span class=\"name\">setDLLStorageClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dllStorageClass</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass\">DLLStorageClass</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setDLLStorageClass","kind":"opaque","line":380,"name":"LLVM.setDLLStorageClass","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L380-L381"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.export\"><span class=\"name\">LLVM</span>.<span class=\"name\">DLLStorageClass</span>.<span class=\"name\">export</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass\">DLLStorageClass</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.export","kind":"def","line":378,"name":"LLVM.DLLStorageClass.export","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L378-L378"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.import\"><span class=\"name\">LLVM</span>.<span class=\"name\">DLLStorageClass</span>.<span class=\"name\">import</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass\">DLLStorageClass</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.import","kind":"def","line":377,"name":"LLVM.DLLStorageClass.import","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L377-L377"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.default\"><span class=\"name\">LLVM</span>.<span class=\"name\">DLLStorageClass</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass\">DLLStorageClass</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.default","kind":"def","line":376,"name":"LLVM.DLLStorageClass.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L376-L376"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.val\"><span class=\"name\">LLVM</span>.<span class=\"name\">DLLStorageClass</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass\">DLLStorageClass</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.val","kind":"def","line":374,"name":"LLVM.DLLStorageClass.val","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L374-L374"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass\"><span class=\"name\">LLVM</span>.<span class=\"name\">DLLStorageClass</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass","kind":"structure","line":373,"name":"LLVM.DLLStorageClass","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L373-L374"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setVisibility\"><span class=\"name\">LLVM</span>.<span class=\"name\">setVisibility</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">visibility</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility\">Visibility</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setVisibility","kind":"opaque","line":369,"name":"LLVM.setVisibility","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L369-L370"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.protected\"><span class=\"name\">LLVM</span>.<span class=\"name\">Visibility</span>.<span class=\"name\">protected</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility\">Visibility</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.protected","kind":"def","line":367,"name":"LLVM.Visibility.protected","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L367-L367"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.hidden\"><span class=\"name\">LLVM</span>.<span class=\"name\">Visibility</span>.<span class=\"name\">hidden</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility\">Visibility</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.hidden","kind":"def","line":366,"name":"LLVM.Visibility.hidden","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L366-L366"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.default\"><span class=\"name\">LLVM</span>.<span class=\"name\">Visibility</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility\">Visibility</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.default","kind":"def","line":365,"name":"LLVM.Visibility.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L365-L365"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.val\"><span class=\"name\">LLVM</span>.<span class=\"name\">Visibility</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility\">Visibility</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.val","kind":"def","line":363,"name":"LLVM.Visibility.val","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L363-L363"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility\"><span class=\"name\">LLVM</span>.<span class=\"name\">Visibility</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility","kind":"structure","line":362,"name":"LLVM.Visibility","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L362-L363"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addAttributeAtIndex\"><span class=\"name\">LLVM</span>.<span class=\"name\">addAttributeAtIndex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex\">AttributeIndex</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute\">Attribute</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addAttributeAtIndex","kind":"opaque","line":357,"name":"LLVM.addAttributeAtIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L357-L358"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createStringAttribute\"><span class=\"name\">LLVM</span>.<span class=\"name\">createStringAttribute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">key </span><span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute\">Attribute</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createStringAttribute","kind":"opaque","line":354,"name":"LLVM.createStringAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L354-L355"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.verifyModule\"><span class=\"name\">LLVM</span>.<span class=\"name\">verifyModule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.verifyModule","kind":"opaque","line":351,"name":"LLVM.verifyModule","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L351-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.disposeModule\"><span class=\"name\">LLVM</span>.<span class=\"name\">disposeModule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.disposeModule","kind":"opaque","line":348,"name":"LLVM.disposeModule","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L348-L349"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.disposeTargetMachine\"><span class=\"name\">LLVM</span>.<span class=\"name\">disposeTargetMachine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tm</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine\">TargetMachine</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.disposeTargetMachine","kind":"opaque","line":345,"name":"LLVM.disposeTargetMachine","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L345-L346"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.targetMachineEmitToFile\"><span class=\"name\">LLVM</span>.<span class=\"name\">targetMachineEmitToFile</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">targetMachine</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine\">TargetMachine</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">module</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filepath</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">codegenType</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType\">CodegenFileType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.targetMachineEmitToFile","kind":"opaque","line":319,"name":"LLVM.targetMachineEmitToFile","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L319-L320"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createTargetMachine\"><span class=\"name\">LLVM</span>.<span class=\"name\">createTargetMachine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">target</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target\">Target</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tripleStr </span><span class=\"fn\">cpu </span><span class=\"fn\">features</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine\">TargetMachine</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createTargetMachine","kind":"opaque","line":316,"name":"LLVM.createTargetMachine","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L316-L317"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getTargetFromTriple\"><span class=\"name\">LLVM</span>.<span class=\"name\">getTargetFromTriple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">triple</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target\">Target</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getTargetFromTriple","kind":"opaque","line":313,"name":"LLVM.getTargetFromTriple","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L313-L314"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getDefaultTargetTriple\"><span class=\"name\">LLVM</span>.<span class=\"name\">getDefaultTargetTriple</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getDefaultTargetTriple","kind":"opaque","line":310,"name":"LLVM.getDefaultTargetTriple","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L310-L311"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.linkModules\"><span class=\"name\">LLVM</span>.<span class=\"name\">linkModules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dest </span><span class=\"fn\">src</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.linkModules","kind":"opaque","line":307,"name":"LLVM.linkModules","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L307-L308"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.parseBitcode\"><span class=\"name\">LLVM</span>.<span class=\"name\">parseBitcode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">membuf</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer\">MemoryBuffer</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.parseBitcode","kind":"opaque","line":304,"name":"LLVM.parseBitcode","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L304-L305"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createMemoryBufferWithContentsOfFile\"><span class=\"name\">LLVM</span>.<span class=\"name\">createMemoryBufferWithContentsOfFile</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer\">MemoryBuffer</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createMemoryBufferWithContentsOfFile","kind":"opaque","line":301,"name":"LLVM.createMemoryBufferWithContentsOfFile","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L301-L302"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getParam\"><span class=\"name\">LLVM</span>.<span class=\"name\">getParam</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ix</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getParam","kind":"opaque","line":298,"name":"LLVM.getParam","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L298-L299"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.countParams\"><span class=\"name\">LLVM</span>.<span class=\"name\">countParams</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.countParams","kind":"opaque","line":295,"name":"LLVM.countParams","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L295-L296"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.printModuletoFile\"><span class=\"name\">LLVM</span>.<span class=\"name\">printModuletoFile</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.printModuletoFile","kind":"opaque","line":292,"name":"LLVM.printModuletoFile","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L292-L293"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.printModuletoString\"><span class=\"name\">LLVM</span>.<span class=\"name\">printModuletoString</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.printModuletoString","kind":"opaque","line":289,"name":"LLVM.printModuletoString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L289-L290"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt\"><span class=\"name\">LLVM</span>.<span class=\"name\">constInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">intty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt","kind":"opaque","line":286,"name":"LLVM.constInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L286-L287"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.typeOf\"><span class=\"name\">LLVM</span>.<span class=\"name\">typeOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.typeOf","kind":"opaque","line":283,"name":"LLVM.typeOf","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L283-L284"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getBasicBlockParent\"><span class=\"name\">LLVM</span>.<span class=\"name\">getBasicBlockParent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bb</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getBasicBlockParent","kind":"opaque","line":280,"name":"LLVM.getBasicBlockParent","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L280-L281"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.clearInsertionPosition\"><span class=\"name\">LLVM</span>.<span class=\"name\">clearInsertionPosition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context✝</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <span class=\"fn\">Context✝</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.clearInsertionPosition","kind":"opaque","line":277,"name":"LLVM.clearInsertionPosition","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L277-L278"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getInsertBlock\"><span class=\"name\">LLVM</span>.<span class=\"name\">getInsertBlock</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context✝</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <span class=\"fn\">Context✝</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getInsertBlock","kind":"opaque","line":274,"name":"LLVM.getInsertBlock","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L274-L275"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addCase\"><span class=\"name\">LLVM</span>.<span class=\"name\">addCase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">switch </span><span class=\"fn\">onVal</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">destBB</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addCase","kind":"opaque","line":271,"name":"LLVM.addCase","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L271-L272"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildICmp\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildICmp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">predicate</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate\">IntPredicate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildICmp","kind":"opaque","line":268,"name":"LLVM.buildICmp","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L268-L269"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildNot\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildNot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildNot","kind":"opaque","line":265,"name":"LLVM.buildNot","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L265-L266"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSub\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildSub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSub","kind":"opaque","line":262,"name":"LLVM.buildSub","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L262-L263"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildAdd\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildAdd","kind":"opaque","line":259,"name":"LLVM.buildAdd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L259-L260"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildMul\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildMul","kind":"opaque","line":256,"name":"LLVM.buildMul","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L256-L257"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildPtrToInt\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildPtrToInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ptr</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">destTy</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildPtrToInt","kind":"opaque","line":253,"name":"LLVM.buildPtrToInt","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L253-L254"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSwitch\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildSwitch</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elseBB</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numCasesHint</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSwitch","kind":"opaque","line":250,"name":"LLVM.buildSwitch","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L250-L251"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSextOrTrunc\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildSextOrTrunc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">destTy</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSextOrTrunc","kind":"opaque","line":247,"name":"LLVM.buildSextOrTrunc","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L247-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildZext\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildZext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">destTy</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildZext","kind":"opaque","line":244,"name":"LLVM.buildZext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L244-L245"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSext\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildSext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">destTy</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSext","kind":"opaque","line":241,"name":"LLVM.buildSext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L241-L242"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildInBoundsGEP2\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildInBoundsGEP2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">base</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ixs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildInBoundsGEP2","kind":"opaque","line":238,"name":"LLVM.buildInBoundsGEP2","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L238-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildGEP2\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildGEP2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">base</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ixs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildGEP2","kind":"opaque","line":235,"name":"LLVM.buildGEP2","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L235-L236"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildUnreachable\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildUnreachable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildUnreachable","kind":"opaque","line":232,"name":"LLVM.buildUnreachable","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L232-L233"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildRet\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildRet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildRet","kind":"opaque","line":229,"name":"LLVM.buildRet","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L229-L230"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildStore\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildStore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val </span><span class=\"fn\">store_loc_ptr</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildStore","kind":"opaque","line":226,"name":"LLVM.buildStore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L226-L227"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildLoad2\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildLoad2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildLoad2","kind":"opaque","line":223,"name":"LLVM.buildLoad2","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L223-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildAlloca\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildAlloca</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildAlloca","kind":"opaque","line":220,"name":"LLVM.buildAlloca","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L220-L221"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildBr\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildBr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bb</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildBr","kind":"opaque","line":217,"name":"LLVM.buildBr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L217-L218"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildCondBr\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildCondBr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">if_</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thenbb </span><span class=\"fn\">elsebb</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildCondBr","kind":"opaque","line":214,"name":"LLVM.buildCondBr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L214-L215"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setTailCall\"><span class=\"name\">LLVM</span>.<span class=\"name\">setTailCall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">istail</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setTailCall","kind":"opaque","line":211,"name":"LLVM.setTailCall","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L211-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildCall2\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildCall2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildCall2","kind":"opaque","line":208,"name":"LLVM.buildCall2","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L208-L209"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.positionBuilderAtEnd\"><span class=\"name\">LLVM</span>.<span class=\"name\">positionBuilderAtEnd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context✝</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <span class=\"fn\">Context✝</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bb</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.positionBuilderAtEnd","kind":"opaque","line":205,"name":"LLVM.positionBuilderAtEnd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L205-L206"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.positionBuilderBefore\"><span class=\"name\">LLVM</span>.<span class=\"name\">positionBuilderBefore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">instr</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.positionBuilderBefore","kind":"opaque","line":202,"name":"LLVM.positionBuilderBefore","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L202-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getFirstInstruction\"><span class=\"name\">LLVM</span>.<span class=\"name\">getFirstInstruction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bb</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getFirstInstruction","kind":"opaque","line":199,"name":"LLVM.getFirstInstruction","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L199-L200"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getEntryBasicBlock\"><span class=\"name\">LLVM</span>.<span class=\"name\">getEntryBasicBlock</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getEntryBasicBlock","kind":"opaque","line":196,"name":"LLVM.getEntryBasicBlock","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L196-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.countBasicBlocks\"><span class=\"name\">LLVM</span>.<span class=\"name\">countBasicBlocks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.countBasicBlocks","kind":"opaque","line":193,"name":"LLVM.countBasicBlocks","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L193-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.appendBasicBlockInContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">appendBasicBlockInContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.appendBasicBlockInContext","kind":"opaque","line":190,"name":"LLVM.appendBasicBlockInContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L190-L191"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createBuilderInContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">createBuilderInContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createBuilderInContext","kind":"opaque","line":187,"name":"LLVM.createBuilderInContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L187-L188"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getUndef\"><span class=\"name\">LLVM</span>.<span class=\"name\">getUndef</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elemty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getUndef","kind":"opaque","line":184,"name":"LLVM.getUndef","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L184-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constPointerNull\"><span class=\"name\">LLVM</span>.<span class=\"name\">constPointerNull</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elemty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constPointerNull","kind":"opaque","line":181,"name":"LLVM.constPointerNull","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L181-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constString\"><span class=\"name\">LLVM</span>.<span class=\"name\">constString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">str</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constString","kind":"opaque","line":178,"name":"LLVM.constString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L178-L179"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constArray\"><span class=\"name\">LLVM</span>.<span class=\"name\">constArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elemty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constArray","kind":"opaque","line":174,"name":"LLVM.constArray","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L174-L175"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.arrayType\"><span class=\"name\">LLVM</span>.<span class=\"name\">arrayType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elemty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nelem</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.arrayType","kind":"opaque","line":171,"name":"LLVM.arrayType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L171-L172"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.pointerType\"><span class=\"name\">LLVM</span>.<span class=\"name\">pointerType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elemty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.pointerType","kind":"opaque","line":168,"name":"LLVM.pointerType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L168-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.doubleTypeInContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">doubleTypeInContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.doubleTypeInContext","kind":"opaque","line":165,"name":"LLVM.doubleTypeInContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L165-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.floatTypeInContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">floatTypeInContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.floatTypeInContext","kind":"opaque","line":162,"name":"LLVM.floatTypeInContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L162-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.opaquePointerTypeInContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">opaquePointerTypeInContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addrspace</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.opaquePointerTypeInContext","kind":"opaque","line":159,"name":"LLVM.opaquePointerTypeInContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L159-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.intTypeInContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">intTypeInContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">width</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.intTypeInContext","kind":"opaque","line":156,"name":"LLVM.intTypeInContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L156-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.voidType\"><span class=\"name\">LLVM</span>.<span class=\"name\">voidType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.voidType","kind":"opaque","line":153,"name":"LLVM.voidType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L153-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.functionType\"><span class=\"name\">LLVM</span>.<span class=\"name\">functionType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isVarArg</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.functionType","kind":"opaque","line":150,"name":"LLVM.functionType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L150-L151"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setInitializer\"><span class=\"name\">LLVM</span>.<span class=\"name\">setInitializer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">glbl </span><span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setInitializer","kind":"opaque","line":147,"name":"LLVM.setInitializer","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L147-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.isDeclaration\"><span class=\"name\">LLVM</span>.<span class=\"name\">isDeclaration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">global</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.isDeclaration","kind":"opaque","line":144,"name":"LLVM.isDeclaration","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L144-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildGlobalString\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildGlobalString</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildGlobalString","kind":"opaque","line":141,"name":"LLVM.buildGlobalString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L141-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNextGlobal\"><span class=\"name\">LLVM</span>.<span class=\"name\">getNextGlobal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">glbl</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNextGlobal","kind":"opaque","line":138,"name":"LLVM.getNextGlobal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L138-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getFirstGlobal\"><span class=\"name\">LLVM</span>.<span class=\"name\">getFirstGlobal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getFirstGlobal","kind":"opaque","line":135,"name":"LLVM.getFirstGlobal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L135-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNamedGlobal\"><span class=\"name\">LLVM</span>.<span class=\"name\">getNamedGlobal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNamedGlobal","kind":"opaque","line":132,"name":"LLVM.getNamedGlobal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L132-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addGlobal\"><span class=\"name\">LLVM</span>.<span class=\"name\">addGlobal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addGlobal","kind":"opaque","line":129,"name":"LLVM.addGlobal","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L129-L130"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNamedFunction\"><span class=\"name\">LLVM</span>.<span class=\"name\">getNamedFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNamedFunction","kind":"opaque","line":126,"name":"LLVM.getNamedFunction","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L126-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNextFunction\"><span class=\"name\">LLVM</span>.<span class=\"name\">getNextFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">glbl</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNextFunction","kind":"opaque","line":123,"name":"LLVM.getNextFunction","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L123-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getFirstFunction\"><span class=\"name\">LLVM</span>.<span class=\"name\">getFirstFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getFirstFunction","kind":"opaque","line":120,"name":"LLVM.getFirstFunction","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L120-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addFunction\"><span class=\"name\">LLVM</span>.<span class=\"name\">addFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addFunction","kind":"opaque","line":117,"name":"LLVM.addFunction","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L117-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.writeBitcodeToFile\"><span class=\"name\">LLVM</span>.<span class=\"name\">writeBitcodeToFile</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.writeBitcodeToFile","kind":"opaque","line":114,"name":"LLVM.writeBitcodeToFile","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L114-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.moduleToString\"><span class=\"name\">LLVM</span>.<span class=\"name\">moduleToString</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.moduleToString","kind":"opaque","line":111,"name":"LLVM.moduleToString","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L111-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createModule\"><span class=\"name\">LLVM</span>.<span class=\"name\">createModule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createModule","kind":"opaque","line":108,"name":"LLVM.createModule","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L108-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">createContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createContext","kind":"opaque","line":105,"name":"LLVM.createContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L105-L106"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.llvmInitializeTargetInfo\"><span class=\"name\">LLVM</span>.<span class=\"name\">llvmInitializeTargetInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.llvmInitializeTargetInfo","kind":"opaque","line":102,"name":"LLVM.llvmInitializeTargetInfo","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L102-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyAttribute\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyAttribute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute\">Attribute</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyAttribute","kind":"instance","line":100,"name":"LLVM.instNonemptyAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L100-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute\">Attribute</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute.ptr","kind":"def","line":99,"name":"LLVM.Attribute.ptr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute\"><span class=\"name\">LLVM</span>.<span class=\"name\">Attribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute","kind":"structure","line":98,"name":"LLVM.Attribute","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L98-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value.getName\"><span class=\"name\">LLVM</span>.<span class=\"name\">Value</span>.<span class=\"name\">getName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value.getName","kind":"opaque","line":95,"name":"LLVM.Value.getName","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L95-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value.isNull\"><span class=\"name\">LLVM</span>.<span class=\"name\">Value</span>.<span class=\"name\">isNull</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Check if the value is a null pointer. -","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value.isNull","kind":"def","line":92,"name":"LLVM.Value.isNull","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L92-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyValue\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyValue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyValue","kind":"instance","line":90,"name":"LLVM.instNonemptyValue","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L90-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">Value</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value.ptr","kind":"def","line":89,"name":"LLVM.Value.ptr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L89-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\"><span class=\"name\">LLVM</span>.<span class=\"name\">Value</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value","kind":"structure","line":88,"name":"LLVM.Value","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L88-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyTargetMachine\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyTargetMachine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine\">TargetMachine</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyTargetMachine","kind":"instance","line":86,"name":"LLVM.instNonemptyTargetMachine","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L86-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">TargetMachine</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine\">TargetMachine</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine.ptr","kind":"def","line":85,"name":"LLVM.TargetMachine.ptr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine\"><span class=\"name\">LLVM</span>.<span class=\"name\">TargetMachine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine","kind":"structure","line":84,"name":"LLVM.TargetMachine","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L84-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyTarget\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyTarget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target\">Target</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyTarget","kind":"instance","line":82,"name":"LLVM.instNonemptyTarget","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L82-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">Target</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target\">Target</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target.ptr","kind":"def","line":81,"name":"LLVM.Target.ptr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L81-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target\"><span class=\"name\">LLVM</span>.<span class=\"name\">Target</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target","kind":"structure","line":80,"name":"LLVM.Target","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L80-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyModule\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyModule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyModule","kind":"instance","line":68,"name":"LLVM.instNonemptyModule","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">Module</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module.ptr","kind":"def","line":67,"name":"LLVM.Module.ptr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L67-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\"><span class=\"name\">LLVM</span>.<span class=\"name\">Module</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module","kind":"structure","line":66,"name":"LLVM.Module","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L66-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyMemoryBuffer\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyMemoryBuffer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer\">MemoryBuffer</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyMemoryBuffer","kind":"instance","line":64,"name":"LLVM.instNonemptyMemoryBuffer","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">MemoryBuffer</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer\">MemoryBuffer</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer.ptr","kind":"def","line":63,"name":"LLVM.MemoryBuffer.ptr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer\"><span class=\"name\">LLVM</span>.<span class=\"name\">MemoryBuffer</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer","kind":"structure","line":62,"name":"LLVM.MemoryBuffer","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L62-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyLLVMType\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyLLVMType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyLLVMType","kind":"instance","line":60,"name":"LLVM.instNonemptyLLVMType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">LLVMType</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType.ptr","kind":"def","line":59,"name":"LLVM.LLVMType.ptr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\"><span class=\"name\">LLVM</span>.<span class=\"name\">LLVMType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType","kind":"structure","line":58,"name":"LLVM.LLVMType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L58-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyContext","kind":"instance","line":56,"name":"LLVM.instNonemptyContext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">Context</span>.<span class=\"name\">ptr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context.ptr","kind":"def","line":55,"name":"LLVM.Context.ptr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L55-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\"><span class=\"name\">LLVM</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context","kind":"structure","line":54,"name":"LLVM.Context","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L54-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyBuilder\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyBuilder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context✝</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <span class=\"fn\">Context✝</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyBuilder","kind":"instance","line":52,"name":"LLVM.instNonemptyBuilder","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">Builder</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <span class=\"fn\">Context</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder.ptr","kind":"def","line":51,"name":"LLVM.Builder.ptr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\"><span class=\"name\">LLVM</span>.<span class=\"name\">Builder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\">Context</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder","kind":"structure","line":50,"name":"LLVM.Builder","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L50-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyBasicBlock\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyBasicBlock</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context✝</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <span class=\"fn\">Context✝</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyBasicBlock","kind":"instance","line":48,"name":"LLVM.instNonemptyBasicBlock","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">BasicBlock</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <span class=\"fn\">Context</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock.ptr","kind":"def","line":47,"name":"LLVM.BasicBlock.ptr","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\"><span class=\"name\">LLVM</span>.<span class=\"name\">BasicBlock</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\">Context</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock","kind":"structure","line":46,"name":"LLVM.BasicBlock","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L46-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex.AttributeFunctionIndex\"><span class=\"name\">LLVM</span>.<span class=\"name\">AttributeIndex</span>.<span class=\"name\">AttributeFunctionIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex\">AttributeIndex</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex.AttributeFunctionIndex","kind":"def","line":44,"name":"LLVM.AttributeIndex.AttributeFunctionIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L44-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex.AttributeReturnIndex\"><span class=\"name\">LLVM</span>.<span class=\"name\">AttributeIndex</span>.<span class=\"name\">AttributeReturnIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex\">AttributeIndex</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex.AttributeReturnIndex","kind":"def","line":42,"name":"LLVM.AttributeIndex.AttributeReturnIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex.val\"><span class=\"name\">LLVM</span>.<span class=\"name\">AttributeIndex</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex\">AttributeIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex.val","kind":"def","line":40,"name":"LLVM.AttributeIndex.val","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex\"><span class=\"name\">LLVM</span>.<span class=\"name\">AttributeIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex","kind":"structure","line":39,"name":"LLVM.AttributeIndex","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L39-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.UGT\"><span class=\"name\">LLVM</span>.<span class=\"name\">IntPredicate</span>.<span class=\"name\">UGT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate\">IntPredicate</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.UGT","kind":"def","line":36,"name":"LLVM.IntPredicate.UGT","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.NE\"><span class=\"name\">LLVM</span>.<span class=\"name\">IntPredicate</span>.<span class=\"name\">NE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate\">IntPredicate</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.NE","kind":"def","line":35,"name":"LLVM.IntPredicate.NE","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.EQ\"><span class=\"name\">LLVM</span>.<span class=\"name\">IntPredicate</span>.<span class=\"name\">EQ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate\">IntPredicate</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.EQ","kind":"def","line":34,"name":"LLVM.IntPredicate.EQ","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.val\"><span class=\"name\">LLVM</span>.<span class=\"name\">IntPredicate</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate\">IntPredicate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.val","kind":"def","line":32,"name":"LLVM.IntPredicate.val","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate\"><span class=\"name\">LLVM</span>.<span class=\"name\">IntPredicate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate","kind":"structure","line":31,"name":"LLVM.IntPredicate","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L31-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType.ObjectFile\"><span class=\"name\">LLVM</span>.<span class=\"name\">CodegenFileType</span>.<span class=\"name\">ObjectFile</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType\">CodegenFileType</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType.ObjectFile","kind":"def","line":28,"name":"LLVM.CodegenFileType.ObjectFile","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType.AssemblyFile\"><span class=\"name\">LLVM</span>.<span class=\"name\">CodegenFileType</span>.<span class=\"name\">AssemblyFile</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType\">CodegenFileType</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType.AssemblyFile","kind":"def","line":27,"name":"LLVM.CodegenFileType.AssemblyFile","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType.val\"><span class=\"name\">LLVM</span>.<span class=\"name\">CodegenFileType</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType\">CodegenFileType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType.val","kind":"def","line":25,"name":"LLVM.CodegenFileType.val","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType\"><span class=\"name\">LLVM</span>.<span class=\"name\">CodegenFileType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType","kind":"structure","line":24,"name":"LLVM.CodegenFileType","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Lean/Compiler/IR/LLVMBindings.lean#L24-L25"}}],"imports":["Init.System.IO"],"instances":[{"className":"Nonempty","name":"LLVM.instNonemptyBasicBlock","typeNames":["LLVM.BasicBlock"]},{"className":"Nonempty","name":"LLVM.instNonemptyBuilder","typeNames":["LLVM.Builder"]},{"className":"Nonempty","name":"LLVM.instNonemptyContext","typeNames":["LLVM.Context"]},{"className":"Nonempty","name":"LLVM.instNonemptyLLVMType","typeNames":["LLVM.LLVMType"]},{"className":"Nonempty","name":"LLVM.instNonemptyMemoryBuffer","typeNames":["LLVM.MemoryBuffer"]},{"className":"Nonempty","name":"LLVM.instNonemptyModule","typeNames":["LLVM.Module"]},{"className":"Nonempty","name":"LLVM.instNonemptyTarget","typeNames":["LLVM.Target"]},{"className":"Nonempty","name":"LLVM.instNonemptyTargetMachine","typeNames":["LLVM.TargetMachine"]},{"className":"Nonempty","name":"LLVM.instNonemptyValue","typeNames":["LLVM.Value"]},{"className":"Nonempty","name":"LLVM.instNonemptyAttribute","typeNames":["LLVM.Attribute"]}],"name":"Lean.Compiler.IR.LLVMBindings"}