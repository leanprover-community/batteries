{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.BackwardSliceSearcher.instBackwardPattern_1\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">BackwardSliceSearcher</span>.<span class=\"name\">instBackwardPattern_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/String/Pattern/Basic.html#String.Slice.Pattern.BackwardPattern\">BackwardPattern</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.BackwardSliceSearcher.instBackwardPattern_1","kind":"instance","line":267,"name":"String.Slice.Pattern.BackwardSliceSearcher.instBackwardPattern_1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L267-L269"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.BackwardSliceSearcher.instBackwardPattern\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">BackwardSliceSearcher</span>.<span class=\"name\">instBackwardPattern</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/String/Pattern/Basic.html#String.Slice.Pattern.BackwardPattern\">BackwardPattern</a> <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.BackwardSliceSearcher.instBackwardPattern","kind":"instance","line":263,"name":"String.Slice.Pattern.BackwardSliceSearcher.instBackwardPattern","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L263-L265"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.BackwardSliceSearcher.dropSuffix?\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">BackwardSliceSearcher</span>.<span class=\"name\">dropSuffix?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">pat</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Data/String/Basic.html#String.Slice.Pos\">Pos</a></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.BackwardSliceSearcher.dropSuffix?","kind":"def","line":256,"name":"String.Slice.Pattern.BackwardSliceSearcher.dropSuffix?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L256-L261"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.BackwardSliceSearcher.endsWith\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">BackwardSliceSearcher</span>.<span class=\"name\">endsWith</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">pat</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.BackwardSliceSearcher.endsWith","kind":"def","line":242,"name":"String.Slice.Pattern.BackwardSliceSearcher.endsWith","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L242-L254"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instForwardPattern_1\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">instForwardPattern_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/String/Pattern/Basic.html#String.Slice.Pattern.ForwardPattern\">ForwardPattern</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instForwardPattern_1","kind":"instance","line":234,"name":"String.Slice.Pattern.ForwardSliceSearcher.instForwardPattern_1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L234-L236"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instToForwardSearcher_1\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">instToForwardSearcher_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/String/Pattern/Basic.html#String.Slice.Pattern.ToForwardSearcher\">ToForwardSearcher</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher\">ForwardSliceSearcher</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instToForwardSearcher_1","kind":"instance","line":231,"name":"String.Slice.Pattern.ForwardSliceSearcher.instToForwardSearcher_1","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L231-L232"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instForwardPattern\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">instForwardPattern</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/String/Pattern/Basic.html#String.Slice.Pattern.ForwardPattern\">ForwardPattern</a> <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instForwardPattern","kind":"instance","line":227,"name":"String.Slice.Pattern.ForwardSliceSearcher.instForwardPattern","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L227-L229"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.dropPrefix?\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">dropPrefix?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">pat</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Data/String/Basic.html#String.Slice.Pos\">Pos</a></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.dropPrefix?","kind":"def","line":220,"name":"String.Slice.Pattern.ForwardSliceSearcher.dropPrefix?","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L220-L225"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.startsWith\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">startsWith</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">pat</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.startsWith","kind":"def","line":208,"name":"String.Slice.Pattern.ForwardSliceSearcher.startsWith","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L208-L218"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instToForwardSearcher\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">instToForwardSearcher</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/String/Pattern/Basic.html#String.Slice.Pattern.ToForwardSearcher\">ToForwardSearcher</a> <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a> <a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher\">ForwardSliceSearcher</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instToForwardSearcher","kind":"instance","line":205,"name":"String.Slice.Pattern.ForwardSliceSearcher.instToForwardSearcher","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L205-L206"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instIteratorLoopIdSearchStep\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">instIteratorLoopIdSearchStep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Iterators/Consumers/Monadic/Loop.html#Std.Iterators.IteratorLoop\">Std.Iterators.IteratorLoop</a> <span class=\"fn\">(<a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher\">ForwardSliceSearcher</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Control/Id.html#Id\">Id</a> <a href=\"./Init/Control/Id.html#Id\">Id</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instIteratorLoopIdSearchStep","kind":"instance","line":202,"name":"String.Slice.Pattern.ForwardSliceSearcher.instIteratorLoopIdSearchStep","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L202-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instFiniteIdSearchStep\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">instFiniteIdSearchStep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.Finite\">Std.Iterators.Finite</a> <span class=\"fn\">(<a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher\">ForwardSliceSearcher</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Control/Id.html#Id\">Id</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instFiniteIdSearchStep","kind":"instance","line":198,"name":"String.Slice.Pattern.ForwardSliceSearcher.instFiniteIdSearchStep","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L198-L200"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instIteratorIdSearchStep.findNext\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">instIteratorIdSearchStep</span>.<span class=\"name\">findNext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">needle</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">table</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String.Pos.Raw\">Pos.Raw</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stackPos </span><span class=\"fn\">needlePos </span><span class=\"fn\">startPos </span><span class=\"fn\">currStackPos </span><span class=\"fn\">needlePos✝</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">Pos.Raw</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">stackPos</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">currStackPos</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Id.html#Id\">Id</a>\n  <span class=\"fn\">(<a href=\"./Init/Data/Iterators/Basic.html#Std.Shrink\">Std.Shrink</a>\n    <span class=\"fn\">(<a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.PlausibleIterStep\">Std.Iterators.PlausibleIterStep</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.IterStep\">Std.Iterators.IterStep</a> <span class=\"fn\">(<a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.IterM\">Std.IterM</a> <a href=\"./Init/Control/Id.html#Id\">Id</a> <span class=\"fn\">(<a href=\"./Init/Data/String/Pattern/Basic.html#String.Slice.Pattern.SearchStep\">SearchStep</a> <span class=\"fn\">s</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Init/Data/String/Pattern/Basic.html#String.Slice.Pattern.SearchStep\">SearchStep</a> <span class=\"fn\">s</span>)</span></span>) =&gt;\n      <span class=\"fn\">match <span class=\"fn\">x</span> with\n      | <span class=\"fn\"><a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.IterStep.yield\">Std.Iterators.IterStep.yield</a> <span class=\"fn\">it'</span> <span class=\"fn\">out</span></span> =&gt;\n        <span class=\"fn\">match <span class=\"fn\"><a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.IterM.mk\">{</a> <span class=\"fn\">internalState</span> := <span class=\"fn\"><a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.proper\">proper</a> <span class=\"fn\">needle</span> <span class=\"fn\">table</span> <span class=\"fn\">stackPos</span> <span class=\"fn\">needlePos</span></span> <a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.IterM.mk\">}</a>.<a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.IterM.internalState\">internalState</a></span> with\n        | <span class=\"fn\"><a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.empty\">empty</a> <span class=\"fn\">pos</span></span> =&gt; (<a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">newPos</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Data/String/Basic.html#String.Slice.Pos\">Pos</a></span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\">pos</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">newPos</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">it'</span>.<a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.IterM.internalState\">internalState</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.empty\">empty</a> <span class=\"fn\">newPos</span></span>) <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">it'</span>.<a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.IterM.internalState\">internalState</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.atEnd\">atEnd</a>\n        | <span class=\"fn\"><a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.proper\">proper</a> <span class=\"fn\">needle</span> <span class=\"fn\">table</span> <span class=\"fn\">stackPos</span> <span class=\"fn\">needlePos</span></span> =&gt;\n          (<a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">newStackPos</span> <a href=\"./Init/Core.html#Exists\">:</a> <a href=\"./Init/Prelude.html#String.Pos.Raw\">Pos.Raw</a><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a>               <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">newNeedlePos</span> <a href=\"./Init/Core.html#Exists\">:</a> <a href=\"./Init/Prelude.html#String.Pos.Raw\">Pos.Raw</a><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a>                 <span class=\"fn\">stackPos</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">newStackPos</span> <a href=\"./Init/Prelude.html#And\">∧</a>                   <span class=\"fn\">newStackPos</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Data/String/Basic.html#String.Slice.rawEndPos\">rawEndPos</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">it'</span>.<a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.IterM.internalState\">internalState</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.proper\">proper</a> <span class=\"fn\">needle</span> <span class=\"fn\">table</span> <span class=\"fn\">newStackPos</span> <span class=\"fn\">newNeedlePos</span></span>) <a href=\"./Init/Prelude.html#Or\">∨</a>             <span class=\"fn\"><span class=\"fn\">it'</span>.<a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.IterM.internalState\">internalState</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.atEnd\">atEnd</a>\n        | <a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.atEnd\">atEnd</a> =&gt; <a href=\"./Init/Prelude.html#False\">False</a></span>\n      | <span class=\"fn\"><a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.IterStep.skip\">Std.Iterators.IterStep.skip</a> <span class=\"fn\">it</span></span> =&gt; <a href=\"./Init/Prelude.html#False\">False</a>\n      | <a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.IterStep.done\">Std.Iterators.IterStep.done</a> =&gt; <a href=\"./Init/Prelude.html#True\">True</a></span></span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instIteratorIdSearchStep.findNext","kind":"def","line":95,"name":"String.Slice.Pattern.ForwardSliceSearcher.instIteratorIdSearchStep.findNext","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L95-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instIteratorIdSearchStep\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">instIteratorIdSearchStep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.Iterator\">Std.Iterators.Iterator</a> <span class=\"fn\">(<a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher\">ForwardSliceSearcher</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Control/Id.html#Id\">Id</a> <span class=\"fn\">(<a href=\"./Init/Data/String/Pattern/Basic.html#String.Slice.Pattern.SearchStep\">SearchStep</a> <span class=\"fn\">s</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.instIteratorIdSearchStep","kind":"instance","line":70,"name":"String.Slice.Pattern.ForwardSliceSearcher.instIteratorIdSearchStep","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L70-L149"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.backtrackIfNecessary\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">backtrackIfNecessary</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pat</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">table</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String.Pos.Raw\">Pos.Raw</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stackByte</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">needlePos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos.Raw\">Pos.Raw</a></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.backtrackIfNecessary","kind":"opaque","line":63,"name":"String.Slice.Pattern.ForwardSliceSearcher.backtrackIfNecessary","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L63-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.iter\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">iter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">pat</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.Iter\">Std.Iter</a> <span class=\"fn\">(<a href=\"./Init/Data/String/Pattern/Basic.html#String.Slice.Pattern.SearchStep\">SearchStep</a> <span class=\"fn\">s</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.iter","kind":"def","line":56,"name":"String.Slice.Pattern.ForwardSliceSearcher.iter","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L56-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.buildTable\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">buildTable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pat</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String.Pos.Raw\">Pos.Raw</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.buildTable","kind":"def","line":32,"name":"String.Slice.Pattern.ForwardSliceSearcher.buildTable","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L32-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.instInhabitedForwardSliceSearcher.default\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">instInhabitedForwardSliceSearcher</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher\">ForwardSliceSearcher</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.instInhabitedForwardSliceSearcher.default","kind":"def","line":28,"name":"String.Slice.Pattern.instInhabitedForwardSliceSearcher.default","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.instInhabitedForwardSliceSearcher\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">instInhabitedForwardSliceSearcher</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher\">ForwardSliceSearcher</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.instInhabitedForwardSliceSearcher","kind":"instance","line":28,"name":"String.Slice.Pattern.instInhabitedForwardSliceSearcher","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.atEnd\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">atEnd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher\">ForwardSliceSearcher</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.atEnd","kind":"ctor","line":27,"name":"String.Slice.Pattern.ForwardSliceSearcher.atEnd","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.proper\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">proper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">needle</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">table</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String.Pos.Raw\">Pos.Raw</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stackPos </span><span class=\"fn\">needlePos</span> : <a href=\"./Init/Prelude.html#String.Pos.Raw\">Pos.Raw</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher\">ForwardSliceSearcher</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.proper","kind":"ctor","line":26,"name":"String.Slice.Pattern.ForwardSliceSearcher.proper","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.empty\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span>.<span class=\"name\">empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Data/String/Basic.html#String.Slice.Pos\">Pos</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher\">ForwardSliceSearcher</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher.empty","kind":"ctor","line":25,"name":"String.Slice.Pattern.ForwardSliceSearcher.empty","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher\"><span class=\"name\">String</span>.<span class=\"name\">Slice</span>.<span class=\"name\">Pattern</span>.<span class=\"name\">ForwardSliceSearcher</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Data/String/Basic.html#String.Slice\">Slice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Init/Data/String/Pattern/String.html#String.Slice.Pattern.ForwardSliceSearcher","kind":"inductive","line":24,"name":"String.Slice.Pattern.ForwardSliceSearcher","sourceLink":"https://github.com/leanprover/lean4/blob/744f98064b056ee27fc8c97f524797c8cc96f436/src/Init/Data/String/Pattern/String.lean#L24-L28"}}],"imports":["Init.Data.String.Pattern.Basic","Init.Data.Iterators.Internal.Termination","Init.Data.Iterators.Consumers.Monadic.Loop"],"instances":[{"className":"Inhabited","name":"String.Slice.Pattern.instInhabitedForwardSliceSearcher","typeNames":["String.Slice.Pattern.ForwardSliceSearcher"]},{"className":"Std.Iterators.Iterator","name":"String.Slice.Pattern.ForwardSliceSearcher.instIteratorIdSearchStep","typeNames":["String.Slice.Pattern.ForwardSliceSearcher","Id","String.Slice.Pattern.SearchStep"]},{"className":"Std.Iterators.Finite","name":"String.Slice.Pattern.ForwardSliceSearcher.instFiniteIdSearchStep","typeNames":["String.Slice.Pattern.ForwardSliceSearcher","Id"]},{"className":"Std.Iterators.IteratorLoop","name":"String.Slice.Pattern.ForwardSliceSearcher.instIteratorLoopIdSearchStep","typeNames":["String.Slice.Pattern.ForwardSliceSearcher","Id","Id"]},{"className":"String.Slice.Pattern.ToForwardSearcher","name":"String.Slice.Pattern.ForwardSliceSearcher.instToForwardSearcher","typeNames":["String.Slice","String.Slice.Pattern.ForwardSliceSearcher"]},{"className":"String.Slice.Pattern.ForwardPattern","name":"String.Slice.Pattern.ForwardSliceSearcher.instForwardPattern","typeNames":["String.Slice"]},{"className":"String.Slice.Pattern.ToForwardSearcher","name":"String.Slice.Pattern.ForwardSliceSearcher.instToForwardSearcher_1","typeNames":["String","String.Slice.Pattern.ForwardSliceSearcher"]},{"className":"String.Slice.Pattern.ForwardPattern","name":"String.Slice.Pattern.ForwardSliceSearcher.instForwardPattern_1","typeNames":["String"]},{"className":"String.Slice.Pattern.BackwardPattern","name":"String.Slice.Pattern.BackwardSliceSearcher.instBackwardPattern","typeNames":["String.Slice"]},{"className":"String.Slice.Pattern.BackwardPattern","name":"String.Slice.Pattern.BackwardSliceSearcher.instBackwardPattern_1","typeNames":["String"]}],"name":"Init.Data.String.Pattern.String"}